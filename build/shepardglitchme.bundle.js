!function(t){function e(i){if(l[i])return l[i].exports;var c=l[i]={i:i,l:!1,exports:{}};return t[i].call(c.exports,c,c.exports,e),c.l=!0,c.exports}var l={};e.m=t,e.c=l,e.i=function(t){return t},e.d=function(t,l,i){e.o(t,l)||Object.defineProperty(t,l,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var l=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(l,"a",l),l},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=24)}([function(module,exports){eval('var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function("return this")() || (1,eval)("this");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === "object")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it\'s\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRDQUE0Qzs7QUFFNUMiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports,__webpack_require__){eval("__webpack_require__(14);\n__webpack_require__(9);\n__webpack_require__(11);\n__webpack_require__(13);\n__webpack_require__(12);\n__webpack_require__(10);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYWZyYW1lLmpzPzRjODgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiLi9saWIvYWZyYW1lL2FmcmFtZS1tYXN0ZXIubWluLmpzXCIpO1xucmVxdWlyZShcIi4vbGliL2FmcmFtZS9hZnJhbWUtYW5pbWF0aW9uLWNvbXBvbmVudC5taW4uanNcIik7XG5yZXF1aXJlKFwiLi9saWIvYWZyYW1lL2FmcmFtZS1ldmVudC1zZXQtY29tcG9uZW50Lm1pbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2xpYi9hZnJhbWUvYWZyYW1lLWxvb2stYXQtY29tcG9uZW50Lm1pbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2xpYi9hZnJhbWUvYWZyYW1lLWV4dHJhcy5jb250cm9scy5taW4uanNcIik7XG5yZXF1aXJlKFwiLi9saWIvYWZyYW1lL2FmcmFtZS1lZmZlY3RzLm1pbi5qc1wiKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2FmcmFtZS5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("\n__webpack_require__(16);\n__webpack_require__(15);\n\n__webpack_require__(22);\n\n__webpack_require__(8);\n__webpack_require__(5);\n__webpack_require__(6);\n__webpack_require__(7);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/MzdkZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5yZXF1aXJlKFwiLi9saWIvd2VicnRjLWFkYXB0ZXItbGF0ZXN0Lm1pbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2xpYi9jbHViYmVyLm1pbi5qc1wiKTtcblxucmVxdWlyZShcIi4vY3NzL3N0eWxlLmNzc1wiKTtcblxucmVxdWlyZShcIi4vYXBwL2N1cnZlZC1wbGFuZS5qc1wiKTtcbnJlcXVpcmUoXCIuL2FwcC9hZnJhbWUtZnVzZXJpbmctY29tcG9uZW50LmpzXCIpO1xucmVxdWlyZShcIi4vYXBwL2FmcmFtZS13ZWJjYW0tY29tcG9uZW50LmpzXCIpO1xucmVxdWlyZShcIi4vYXBwL2FmcmFtZS13ZWJjYW0tc2hhZGVyLmpzXCIpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(4)();\n// imports\n\n\n// module\nexports.push([module.i, "*{box-sizing:border-box}body,html{height:100%;overflow:hidden}body{background:#fff;padding:0;margin:0}.by{position:fixed;left:0;bottom:50%;display:block;padding:10px;z-index:666;font-family:sans-serif;text-transform:uppercase;font-size:11px;line-height:1.35}.by h2{margin:0;font-size:1.1em;font-weight:700;letter-spacing:2px}.by hr{border-color:#000;border-top:0;margin:2px}.by a{color:#000}.by p{margin:.45em 0;font-size:.7em;letter-spacing:1px;line-height:1.75}.a-enter-vr{bottom:auto;top:10px;left:10px;width:70%;right:0}.a-enter-vr-button{left:0;bottom:auto}button.webvr-ui-button{left:10px!important;transform:none!important;top:50%!important;bottom:auto!important;font-family:Karla,sans-serif;border:1px solid #000;border-radius:1px;box-sizing:border-box;background:#fff;padding:2px;line-height:45px;height:45px;min-width:175.99999999999997px;display:inline-block;position:relative;cursor:pointer}button.webvr-ui-button .webvr-ui-svg-error{fill:#000;display:none;margin-top:12px;margin-left:15px}button.webvr-ui-button .webvr-ui-title{color:#000;position:relative;top:-2px;font-size:14px;line-height:1em;padding:10px 20px 10px 60px}", ""]);\n\n// exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3N0eWxlLmNzcz84MmRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0EsMkJBQTRCLHNCQUFzQixVQUFVLFlBQVksZ0JBQWdCLEtBQUssZ0JBQWdCLFVBQVUsU0FBUyxJQUFJLGVBQWUsT0FBTyxXQUFXLGNBQWMsYUFBYSxZQUFZLHVCQUF1Qix5QkFBeUIsZUFBZSxpQkFBaUIsT0FBTyxTQUFTLGdCQUFnQixnQkFBZ0IsbUJBQW1CLE9BQU8sa0JBQWtCLGFBQWEsV0FBVyxNQUFNLFdBQVcsTUFBTSxlQUFlLGVBQWUsbUJBQW1CLGlCQUFpQixZQUFZLFlBQVksU0FBUyxVQUFVLFVBQVUsUUFBUSxtQkFBbUIsT0FBTyxZQUFZLHVCQUF1QixvQkFBb0IseUJBQXlCLGtCQUFrQixzQkFBc0IsNkJBQTZCLHNCQUFzQixrQkFBa0Isc0JBQXNCLGdCQUFnQixZQUFZLGlCQUFpQixZQUFZLCtCQUErQixxQkFBcUIsa0JBQWtCLGVBQWUsMkNBQTJDLFVBQVUsYUFBYSxnQkFBZ0IsaUJBQWlCLHVDQUF1QyxXQUFXLGtCQUFrQixTQUFTLGVBQWUsZ0JBQWdCLDRCQUE0Qjs7QUFFNW9DIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqe2JveC1zaXppbmc6Ym9yZGVyLWJveH1ib2R5LGh0bWx7aGVpZ2h0OjEwMCU7b3ZlcmZsb3c6aGlkZGVufWJvZHl7YmFja2dyb3VuZDojZmZmO3BhZGRpbmc6MDttYXJnaW46MH0uYnl7cG9zaXRpb246Zml4ZWQ7bGVmdDowO2JvdHRvbTo1MCU7ZGlzcGxheTpibG9jaztwYWRkaW5nOjEwcHg7ei1pbmRleDo2NjY7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7Zm9udC1zaXplOjExcHg7bGluZS1oZWlnaHQ6MS4zNX0uYnkgaDJ7bWFyZ2luOjA7Zm9udC1zaXplOjEuMWVtO2ZvbnQtd2VpZ2h0OjcwMDtsZXR0ZXItc3BhY2luZzoycHh9LmJ5IGhye2JvcmRlci1jb2xvcjojMDAwO2JvcmRlci10b3A6MDttYXJnaW46MnB4fS5ieSBhe2NvbG9yOiMwMDB9LmJ5IHB7bWFyZ2luOi40NWVtIDA7Zm9udC1zaXplOi43ZW07bGV0dGVyLXNwYWNpbmc6MXB4O2xpbmUtaGVpZ2h0OjEuNzV9LmEtZW50ZXItdnJ7Ym90dG9tOmF1dG87dG9wOjEwcHg7bGVmdDoxMHB4O3dpZHRoOjcwJTtyaWdodDowfS5hLWVudGVyLXZyLWJ1dHRvbntsZWZ0OjA7Ym90dG9tOmF1dG99YnV0dG9uLndlYnZyLXVpLWJ1dHRvbntsZWZ0OjEwcHghaW1wb3J0YW50O3RyYW5zZm9ybTpub25lIWltcG9ydGFudDt0b3A6NTAlIWltcG9ydGFudDtib3R0b206YXV0byFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6S2FybGEsc2Fucy1zZXJpZjtib3JkZXI6MXB4IHNvbGlkICMwMDA7Ym9yZGVyLXJhZGl1czoxcHg7Ym94LXNpemluZzpib3JkZXItYm94O2JhY2tncm91bmQ6I2ZmZjtwYWRkaW5nOjJweDtsaW5lLWhlaWdodDo0NXB4O2hlaWdodDo0NXB4O21pbi13aWR0aDoxNzUuOTk5OTk5OTk5OTk5OTdweDtkaXNwbGF5OmlubGluZS1ibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTtjdXJzb3I6cG9pbnRlcn1idXR0b24ud2VidnItdWktYnV0dG9uIC53ZWJ2ci11aS1zdmctZXJyb3J7ZmlsbDojMDAwO2Rpc3BsYXk6bm9uZTttYXJnaW4tdG9wOjEycHg7bWFyZ2luLWxlZnQ6MTVweH1idXR0b24ud2VidnItdWktYnV0dG9uIC53ZWJ2ci11aS10aXRsZXtjb2xvcjojMDAwO3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotMnB4O2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjFlbTtwYWRkaW5nOjEwcHggMjBweCAxMHB4IDYwcHh9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXIhLi9zcmMvY3NzL3N0eWxlLmNzc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push("@media " + item[2] + "{" + item[1] + "}");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzP2RhMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0Esd0NBQXdDLGdCQUFnQjtBQUN4RCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHZhciByZXN1bHQgPSBbXTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSB0aGlzW2ldO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXN1bHQucHVzaChcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGl0ZW1bMV0gKyBcIn1cIik7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('AFRAME.registerComponent(\'fuse-ring\', {\n\n\tschema: {\n    timeOut:{\n      type: "number"\n    }\n  },\n\n  dependencies:["geometry", "cursor"],\n\n  deg: 0,\n\n\tinit: function () {\n\n    var utils = AFRAME.utils;\n\n    this.data.timeOut = this.el.components["cursor"].data.fuseTimeout;\n\n    this.fusing = utils.bind(this.fusing, this);\n    this.click = utils.bind(this.click, this);\n    this.leave = utils.bind(this.leave, this);\n\n    this.el.addEventListener(\'fusing\', this.fusing);\n    this.el.addEventListener(\'click\', this.click);\n    this.el.addEventListener(\'mouseleave\', this.leave);\n\n    // console.info("cursor: ", this.el.components, typeof this.timeOut );\n\n\t},\n\n  fusing: function(e){\n    console.log("fuse-ring: fusing", e.target, this.data.timeOut)\n    this.deg= 0;\n  },\n\n  click: function(e){\n    console.log("fuse-ring: click", e.target)\n  },\n\n  leave: function(e){\n    this.deg= 360;\n    this.el.setAttribute("geometry", "thetaLength", this.deg);\n    console.log("fuse-ring: leave", e.target)\n  },\n\n  tick: function(time, delta){\n    if( cursor.is("cursor-fusing")){\n      this.deg += 360*(delta/this.data.timeOut);\n      //console.log(this.deg, typeof this.timeOut, delta)\n      this.el.setAttribute("geometry", "thetaLength", this.deg)\n    }\n    else\n    if( cursor.is("cursor-hovering") ){\n      if ( this.deg < 360){\n        // console.log("fuse-ring: hovering state", time)\n        this.deg= 360;\n        this.el.setAttribute("geometry", "thetaLength", this.deg);\n      }\n    }\n  }\n\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2FmcmFtZS1mdXNlcmluZy1jb21wb25lbnQuanM/ZDY1MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxDQUFDIiwiZmlsZSI6IjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJBRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ2Z1c2UtcmluZycsIHtcblxuXHRzY2hlbWE6IHtcbiAgICB0aW1lT3V0OntcbiAgICAgIHR5cGU6IFwibnVtYmVyXCJcbiAgICB9XG4gIH0sXG5cbiAgZGVwZW5kZW5jaWVzOltcImdlb21ldHJ5XCIsIFwiY3Vyc29yXCJdLFxuXG4gIGRlZzogMCxcblxuXHRpbml0OiBmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgdXRpbHMgPSBBRlJBTUUudXRpbHM7XG5cbiAgICB0aGlzLmRhdGEudGltZU91dCA9IHRoaXMuZWwuY29tcG9uZW50c1tcImN1cnNvclwiXS5kYXRhLmZ1c2VUaW1lb3V0O1xuXG4gICAgdGhpcy5mdXNpbmcgPSB1dGlscy5iaW5kKHRoaXMuZnVzaW5nLCB0aGlzKTtcbiAgICB0aGlzLmNsaWNrID0gdXRpbHMuYmluZCh0aGlzLmNsaWNrLCB0aGlzKTtcbiAgICB0aGlzLmxlYXZlID0gdXRpbHMuYmluZCh0aGlzLmxlYXZlLCB0aGlzKTtcblxuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignZnVzaW5nJywgdGhpcy5mdXNpbmcpO1xuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsaWNrKTtcbiAgICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCB0aGlzLmxlYXZlKTtcblxuICAgIC8vIGNvbnNvbGUuaW5mbyhcImN1cnNvcjogXCIsIHRoaXMuZWwuY29tcG9uZW50cywgdHlwZW9mIHRoaXMudGltZU91dCApO1xuXG5cdH0sXG5cbiAgZnVzaW5nOiBmdW5jdGlvbihlKXtcbiAgICBjb25zb2xlLmxvZyhcImZ1c2UtcmluZzogZnVzaW5nXCIsIGUudGFyZ2V0LCB0aGlzLmRhdGEudGltZU91dClcbiAgICB0aGlzLmRlZz0gMDtcbiAgfSxcblxuICBjbGljazogZnVuY3Rpb24oZSl7XG4gICAgY29uc29sZS5sb2coXCJmdXNlLXJpbmc6IGNsaWNrXCIsIGUudGFyZ2V0KVxuICB9LFxuXG4gIGxlYXZlOiBmdW5jdGlvbihlKXtcbiAgICB0aGlzLmRlZz0gMzYwO1xuICAgIHRoaXMuZWwuc2V0QXR0cmlidXRlKFwiZ2VvbWV0cnlcIiwgXCJ0aGV0YUxlbmd0aFwiLCB0aGlzLmRlZyk7XG4gICAgY29uc29sZS5sb2coXCJmdXNlLXJpbmc6IGxlYXZlXCIsIGUudGFyZ2V0KVxuICB9LFxuXG4gIHRpY2s6IGZ1bmN0aW9uKHRpbWUsIGRlbHRhKXtcbiAgICBpZiggY3Vyc29yLmlzKFwiY3Vyc29yLWZ1c2luZ1wiKSl7XG4gICAgICB0aGlzLmRlZyArPSAzNjAqKGRlbHRhL3RoaXMuZGF0YS50aW1lT3V0KTtcbiAgICAgIC8vY29uc29sZS5sb2codGhpcy5kZWcsIHR5cGVvZiB0aGlzLnRpbWVPdXQsIGRlbHRhKVxuICAgICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoXCJnZW9tZXRyeVwiLCBcInRoZXRhTGVuZ3RoXCIsIHRoaXMuZGVnKVxuICAgIH1cbiAgICBlbHNlXG4gICAgaWYoIGN1cnNvci5pcyhcImN1cnNvci1ob3ZlcmluZ1wiKSApe1xuICAgICAgaWYgKCB0aGlzLmRlZyA8IDM2MCl7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiZnVzZS1yaW5nOiBob3ZlcmluZyBzdGF0ZVwiLCB0aW1lKVxuICAgICAgICB0aGlzLmRlZz0gMzYwO1xuICAgICAgICB0aGlzLmVsLnNldEF0dHJpYnV0ZShcImdlb21ldHJ5XCIsIFwidGhldGFMZW5ndGhcIiwgdGhpcy5kZWcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG59KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2FwcC9hZnJhbWUtZnVzZXJpbmctY29tcG9uZW50LmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval("if (typeof AFRAME === 'undefined') {\n\t  throw new Error('Component attempted to register before AFRAME was available.');\n\t}\n\nAFRAME.registerComponent('a-webcam', {\n\n      schema: { },\n\n      constraints : {\n        audio: false,\n        video: { frameRate: { ideal: 40, max: 60 } }\n    \t},\n\n      video: null,\n\n      init: function( ){\n\n        var utils = AFRAME.utils;\n\n        this.done = utils.bind(this.done, this);\n        this.fail = utils.bind(this.fail, this);\n        this.ready = utils.bind(this.ready, this);\n        this.canplay = utils.bind(this.canplay, this);\n\n        navigator\n            .mediaDevices\n            .getUserMedia(this.constraints)\n            .then( this.done)\n            .catch(this.fail);\n      },\n\n      update: function (oldData) {\n\n        var data = this.data;\n        var el = this.el;\n\n        // `pattern property: <property> updated. Remove the previous event listener if it exists.\n        /*if (oldData.property && data.property!== oldData.property) {\n            el.removeEventListener(oldData.property, this.eventHandlerFn);\n        }\n        if (data.event) {\n            el.addEventListener(data.event, this.eventHandlerFn);\n        } else {\n            console.log(data.message);\n        }*/\n\n      },\n\n      tick: function (time, timeDelta) {\n        //poll conditions, updates\n      },\n\n      done: function( stream ){\n\n        var data = this.data,\n            self = this,\n            selector = this.el.components.material.attrValue.src;\n\n          this.video = document.querySelector(selector);\n\n          this.video.srcObject = stream;\n          this.video.addEventListener(\"canplay\",this.canplay);\n\n           this.el.addEventListener(\"materialvideoloadeddata\",this.ready);\n\n      },\n\n      canplay: function(e){\n        console.log(\"canplay\")\n      },\n\n      ready: function(e){\n        console.log(\"material loaded data\")\n      },\n\n      fail: function(err){\n        console.log('a-webcam: err', err.message)\n      }\n\n\t });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2FmcmFtZS13ZWJjYW0tY29tcG9uZW50LmpzPzI0YWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLGVBQWUsRUFBRTs7QUFFakI7QUFDQTtBQUNBLGdCQUFnQixhQUFhLHFCQUFxQjtBQUNsRCxNQUFNOztBQUVOOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUzs7QUFFVCxPQUFPOztBQUVQO0FBQ0E7QUFDQSxPQUFPOztBQUVQOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBOztBQUVBLEdBQUciLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImlmICh0eXBlb2YgQUZSQU1FID09PSAndW5kZWZpbmVkJykge1xuXHQgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IGF0dGVtcHRlZCB0byByZWdpc3RlciBiZWZvcmUgQUZSQU1FIHdhcyBhdmFpbGFibGUuJyk7XG5cdH1cblxuQUZSQU1FLnJlZ2lzdGVyQ29tcG9uZW50KCdhLXdlYmNhbScsIHtcblxuICAgICAgc2NoZW1hOiB7IH0sXG5cbiAgICAgIGNvbnN0cmFpbnRzIDoge1xuICAgICAgICBhdWRpbzogZmFsc2UsXG4gICAgICAgIHZpZGVvOiB7IGZyYW1lUmF0ZTogeyBpZGVhbDogNDAsIG1heDogNjAgfSB9XG4gICAgXHR9LFxuXG4gICAgICB2aWRlbzogbnVsbCxcblxuICAgICAgaW5pdDogZnVuY3Rpb24oICl7XG5cbiAgICAgICAgdmFyIHV0aWxzID0gQUZSQU1FLnV0aWxzO1xuXG4gICAgICAgIHRoaXMuZG9uZSA9IHV0aWxzLmJpbmQodGhpcy5kb25lLCB0aGlzKTtcbiAgICAgICAgdGhpcy5mYWlsID0gdXRpbHMuYmluZCh0aGlzLmZhaWwsIHRoaXMpO1xuICAgICAgICB0aGlzLnJlYWR5ID0gdXRpbHMuYmluZCh0aGlzLnJlYWR5LCB0aGlzKTtcbiAgICAgICAgdGhpcy5jYW5wbGF5ID0gdXRpbHMuYmluZCh0aGlzLmNhbnBsYXksIHRoaXMpO1xuXG4gICAgICAgIG5hdmlnYXRvclxuICAgICAgICAgICAgLm1lZGlhRGV2aWNlc1xuICAgICAgICAgICAgLmdldFVzZXJNZWRpYSh0aGlzLmNvbnN0cmFpbnRzKVxuICAgICAgICAgICAgLnRoZW4oIHRoaXMuZG9uZSlcbiAgICAgICAgICAgIC5jYXRjaCh0aGlzLmZhaWwpO1xuICAgICAgfSxcblxuICAgICAgdXBkYXRlOiBmdW5jdGlvbiAob2xkRGF0YSkge1xuXG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5kYXRhO1xuICAgICAgICB2YXIgZWwgPSB0aGlzLmVsO1xuXG4gICAgICAgIC8vIGBwYXR0ZXJuIHByb3BlcnR5OiA8cHJvcGVydHk+IHVwZGF0ZWQuIFJlbW92ZSB0aGUgcHJldmlvdXMgZXZlbnQgbGlzdGVuZXIgaWYgaXQgZXhpc3RzLlxuICAgICAgICAvKmlmIChvbGREYXRhLnByb3BlcnR5ICYmIGRhdGEucHJvcGVydHkhPT0gb2xkRGF0YS5wcm9wZXJ0eSkge1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihvbGREYXRhLnByb3BlcnR5LCB0aGlzLmV2ZW50SGFuZGxlckZuKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGF0YS5ldmVudCkge1xuICAgICAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihkYXRhLmV2ZW50LCB0aGlzLmV2ZW50SGFuZGxlckZuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEubWVzc2FnZSk7XG4gICAgICAgIH0qL1xuXG4gICAgICB9LFxuXG4gICAgICB0aWNrOiBmdW5jdGlvbiAodGltZSwgdGltZURlbHRhKSB7XG4gICAgICAgIC8vcG9sbCBjb25kaXRpb25zLCB1cGRhdGVzXG4gICAgICB9LFxuXG4gICAgICBkb25lOiBmdW5jdGlvbiggc3RyZWFtICl7XG5cbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLmRhdGEsXG4gICAgICAgICAgICBzZWxmID0gdGhpcyxcbiAgICAgICAgICAgIHNlbGVjdG9yID0gdGhpcy5lbC5jb21wb25lbnRzLm1hdGVyaWFsLmF0dHJWYWx1ZS5zcmM7XG5cbiAgICAgICAgICB0aGlzLnZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG5cbiAgICAgICAgICB0aGlzLnZpZGVvLnNyY09iamVjdCA9IHN0cmVhbTtcbiAgICAgICAgICB0aGlzLnZpZGVvLmFkZEV2ZW50TGlzdGVuZXIoXCJjYW5wbGF5XCIsdGhpcy5jYW5wbGF5KTtcblxuICAgICAgICAgICB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJtYXRlcmlhbHZpZGVvbG9hZGVkZGF0YVwiLHRoaXMucmVhZHkpO1xuXG4gICAgICB9LFxuXG4gICAgICBjYW5wbGF5OiBmdW5jdGlvbihlKXtcbiAgICAgICAgY29uc29sZS5sb2coXCJjYW5wbGF5XCIpXG4gICAgICB9LFxuXG4gICAgICByZWFkeTogZnVuY3Rpb24oZSl7XG4gICAgICAgIGNvbnNvbGUubG9nKFwibWF0ZXJpYWwgbG9hZGVkIGRhdGFcIilcbiAgICAgIH0sXG5cbiAgICAgIGZhaWw6IGZ1bmN0aW9uKGVycil7XG4gICAgICAgIGNvbnNvbGUubG9nKCdhLXdlYmNhbTogZXJyJywgZXJyLm1lc3NhZ2UpXG4gICAgICB9XG5cblx0IH0pO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYXBwL2FmcmFtZS13ZWJjYW0tY29tcG9uZW50LmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval('if (typeof AFRAME === \'undefined\') {\n\tthrow new Error(\'Shader attempted to register before AFRAME was available.\')\n}\n\nvar vs = __webpack_require__(20);\nvar fs = __webpack_require__(19);\n\nAFRAME.registerComponent(\'render-shader\', {\n\n\tclubber: null,\n\n\taudio: null,\n\n\tbands: {},\n\n\tinit: function (data) {\n\n\t\tthis.clubber = new Clubber({\n\t\t\tsize: 2048, // Samples for the fourier transform. The produced linear frequency bins will be 1/2 that.\n\t\t\tmute: false // whether the audio source should be connected to web audio context destination.\n\t\t});\n\n\t\tthis.bands = [\n\n              this.clubber.band({ // clubber here is the instantiated object from above\n\t\t\t\ttemplate: "4560", // alternately [0, 1, 2, 3]\n\t\t\t\tfrom: 1, // minimum midi note to watch\n\t\t\t\tto: 32, // maximum midi note, up to 160\n\t\t\t\tlow: 64, // Low velocity/power threshold\n\t\t\t\thigh: 127, // High velocity/power threshold\n\t\t\t\tsmooth: [0.1, 0.1, 0.1, 0.1], // Exponential smoothing factors for the values\n\t\t\t\tadapt: [1, 1, 1, 1], // Adaptive bounds setup\n\t\t\t\tsnap: 0.3\n\t\t\t}),\n\n              this.clubber.band({ // clubber here is the instantiated object from above\n\t\t\t\ttemplate: "4560", // alternately [0, 1, 2, 3]\n\t\t\t\tfrom: 32, // minimum midi note to watch\n\t\t\t\tto: 48, // maximum midi note, up to 160\n\t\t\t\tlow: 64, // Low velocity/power threshold\n\t\t\t\thigh: 127, // High velocity/power threshold\n\t\t\t\tsmooth: [0.2, 0.2, 0.2, 0.2], // Exponential smoothing factors for the values\n\t\t\t\tadapt: [1, 1, 1, 1], // Adaptive bounds setup\n\t\t\t\tsnap: 0.3\n\t\t\t}),\n\n              this.clubber.band({ // clubber here is the instantiated object from above\n\t\t\t\ttemplate: "0124", // alternately [0, 1, 2, 3]\n\t\t\t\tfrom: 48, // minimum midi note to watch\n\t\t\t\tto: 96, // maximum midi note, up to 160\n\t\t\t\tlow: 64, // Low velocity/power threshold\n\t\t\t\thigh: 127, // High velocity/power threshold\n\t\t\t\tsmooth: [0.1, 0.1, 0.1, 0.1], // Exponential smoothing factors for the values\n\t\t\t\tadapt: [1, 1, 1, 1], // Adaptive bounds setup\n\t\t\t\tsnap: 0.3\n\t\t\t})\n          ];\n\n\t\tthis.audio = document.getElementById("shepard");\n\t\tthis.audio.volume = 0.25;\n    this.clubber.listen(this.audio);\n    this.clubber.update();\n\n\t},\n\n  update: function(oldData){\n\n\n  },\n\n\ttick: function (time, delta) {\n\n\t\tvar uniforms = this.el.components.material.material.uniforms,\n\n\t\t\tiMusic1 = [],\n\n\t\t\tiMusic2 = [],\n\n\t\t\tiMusic3 = [];\n\n  \t\t// Clubber update is separate so we can have one parent and multiple modulator packs\n  \t\tthis.clubber.update(time);\n\n  \t\tthis.bands[0](iMusic1);\n  \t\tthis.bands[1](iMusic2);\n  \t\tthis.bands[2](iMusic3);\n\n  \t\tuniforms.iMusic1.value = new THREE.Vector4(iMusic1[0], iMusic1[1], iMusic1[2], iMusic1[3]);\n  \t\tuniforms.iMusic2.value = new THREE.Vector4(iMusic2[0], iMusic2[1], iMusic2[2], iMusic2[3]);\n  \t\tuniforms.iMusic3.value = new THREE.Vector4(iMusic3[0], iMusic3[1], iMusic3[2], iMusic3[3]);\n\n  \t\tuniforms.time.value += 0.10;\n\n  \t\t//console.log( iMusic3[2])\n\n\t}\n});\n\nAFRAME.registerShader(\'webcam-shader\', {\n\n\tschema: {\n\t\tsrc: {\n\t\t\ttype: \'map\'\n\t\t},\n\t\theight: {\n\t\t\tdefault: 640\n\t\t},\n\t\twidth: {\n\t\t\tdefault: 640\n\t\t}\n\t},\n\n  vertexShader:vs,\n\n\tfragmentShader: fs,\n\n\ttextureSrc: null,\n\n\tuniforms: {\n\t\tmap: {\n\t\t\ttype: \'t\',\n\t\t\tvalue: null\n\t\t},\n\t\ttime: {\n\t\t\ttype: \'float\',\n\t\t\tvalue: 0.0\n\t\t},\n\t\tiMusic1: {\n\t\t\ttype: "v4",\n\t\t\tvalue: new THREE.Vector4(0.0)\n\t\t},\n\t\tiMusic2: {\n\t\t\ttype: "v4",\n\t\t\tvalue: new THREE.Vector4(0.0)\n\t\t},\n\t\tiMusic3: {\n\t\t\ttype: "v4",\n\t\t\tvalue: new THREE.Vector4(0.0)\n\t\t},\n\t\tresolution: {\n\t\t\ttype: "v2",\n\t\t\tvalue: new THREE.Vector2(640.0, 640.0)\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialize material. Called once.\n\t */\n\tinit: function (data) {\n\n\t\tvar THREE = AFRAME.THREE,\n\t\t\tutils = AFRAME.utils;\n\n\t\tthis.material = new THREE.ShaderMaterial({\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: this.vertexShader,\n\t\t\tfragmentShader: this.fragmentShader,\n\t\t\tderivatives: true\n\t\t})\n\n\t\tutils.material.updateMap(this, data);\n\n\t\tthis.material.map.minFilter = THREE.LinearFilter;\n\t\tthis.material.map.magFilter = THREE.LinearFilter;\n\t\tthis.material.needsUpdate = true;\n\n\t\treturn this.material;\n\t},\n\n\t/**\n\t * Update or create material.\n\t * @param {object|null} oldData\n\t */\n\tupdate: function (data) {\n\n\t\tvar THREE = AFRAME.THREE,\n\t\t\tutils = AFRAME.utils;\n\n\t\tthis.updateMaterial(data);\n\n\t\tutils.material.updateMap(this, data);\n\t\tthis.material.map.minFilter = THREE.LinearFilter;\n\t\tthis.material.map.magFilter = THREE.LinearFilter;\n\t\tthis.material.needsUpdate = true;\n\n\t\treturn this.material;\n\t},\n\n\tupdateMaterial: function (data) {\n\n\t\tvar material = this.material;\n\n\t\tObject.keys(data).forEach(function (key) {\n\t\t\tmaterial[key] = data[key];\n\t\t});\n\n\t\tthis.uniforms.map.value = material.map;\n\n\t}\n})\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports){eval("/* http://stackoverflow.com/questions/16395690/curved-plane-surface-in-css3-or-three-js */\n    /* new THREE.SphereGeometry(75, 16, 8, 0, 2, 1, 1.2); */\n    AFRAME.registerGeometry('curved-plane', {\n\n      schema: {\n        depth: {default: 1, min: 0},\n\n        height: {default: 1, min: 0},\n        width: {default: 1, min: 0},\n\n        segmentsHeight: {default: 1, min: 1, max: 20, type: 'int'},\n        segmentsWidth: {default: 1, min: 1, max: 20, type: 'int'},\n        segmentsDepth: {default: 1, min: 1, max: 20, type: 'int'}\n\n      },\n\n      init: function (data) {\n        var  THREE = AFRAME.THREE,\n             width_segments = 1,\n             height_segments = 40,\n             surface = new THREE.PlaneGeometry(data.width, data.height, width_segments, height_segments);\n\n        for(var i=0; i< surface.vertices.length/2; i++) {\n            surface.vertices[2*i].z = Math.pow(2, i/20);\n            surface.vertices[2*i+1].z = Math.pow(2, i/20);\n\t\t\t\t}\n        this.geometry = surface;\n      }\n    });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYXBwL2N1cnZlZC1wbGFuZS5qcz84ZDcyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0EsZ0JBQWdCLG1CQUFtQjs7QUFFbkMsaUJBQWlCLG1CQUFtQjtBQUNwQyxnQkFBZ0IsbUJBQW1COztBQUVuQyx5QkFBeUIseUNBQXlDO0FBQ2xFLHdCQUF3Qix5Q0FBeUM7QUFDakUsd0JBQXdCOztBQUV4QixPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLDhCQUE4QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNjM5NTY5MC9jdXJ2ZWQtcGxhbmUtc3VyZmFjZS1pbi1jc3MzLW9yLXRocmVlLWpzICovXG4gICAgLyogbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KDc1LCAxNiwgOCwgMCwgMiwgMSwgMS4yKTsgKi9cbiAgICBBRlJBTUUucmVnaXN0ZXJHZW9tZXRyeSgnY3VydmVkLXBsYW5lJywge1xuXG4gICAgICBzY2hlbWE6IHtcbiAgICAgICAgZGVwdGg6IHtkZWZhdWx0OiAxLCBtaW46IDB9LFxuXG4gICAgICAgIGhlaWdodDoge2RlZmF1bHQ6IDEsIG1pbjogMH0sXG4gICAgICAgIHdpZHRoOiB7ZGVmYXVsdDogMSwgbWluOiAwfSxcblxuICAgICAgICBzZWdtZW50c0hlaWdodDoge2RlZmF1bHQ6IDEsIG1pbjogMSwgbWF4OiAyMCwgdHlwZTogJ2ludCd9LFxuICAgICAgICBzZWdtZW50c1dpZHRoOiB7ZGVmYXVsdDogMSwgbWluOiAxLCBtYXg6IDIwLCB0eXBlOiAnaW50J30sXG4gICAgICAgIHNlZ21lbnRzRGVwdGg6IHtkZWZhdWx0OiAxLCBtaW46IDEsIG1heDogMjAsIHR5cGU6ICdpbnQnfVxuXG4gICAgICB9LFxuXG4gICAgICBpbml0OiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB2YXIgIFRIUkVFID0gQUZSQU1FLlRIUkVFLFxuICAgICAgICAgICAgIHdpZHRoX3NlZ21lbnRzID0gMSxcbiAgICAgICAgICAgICBoZWlnaHRfc2VnbWVudHMgPSA0MCxcbiAgICAgICAgICAgICBzdXJmYWNlID0gbmV3IFRIUkVFLlBsYW5lR2VvbWV0cnkoZGF0YS53aWR0aCwgZGF0YS5oZWlnaHQsIHdpZHRoX3NlZ21lbnRzLCBoZWlnaHRfc2VnbWVudHMpO1xuXG4gICAgICAgIGZvcih2YXIgaT0wOyBpPCBzdXJmYWNlLnZlcnRpY2VzLmxlbmd0aC8yOyBpKyspIHtcbiAgICAgICAgICAgIHN1cmZhY2UudmVydGljZXNbMippXS56ID0gTWF0aC5wb3coMiwgaS8yMCk7XG4gICAgICAgICAgICBzdXJmYWNlLnZlcnRpY2VzWzIqaSsxXS56ID0gTWF0aC5wb3coMiwgaS8yMCk7XG5cdFx0XHRcdH1cbiAgICAgICAgdGhpcy5nZW9tZXRyeSA9IHN1cmZhY2U7XG4gICAgICB9XG4gICAgfSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9hcHAvY3VydmVkLXBsYW5lLmpzXG4vLyBtb2R1bGUgaWQgPSA4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports){eval('!function(t){function n(r){if(e[r])return e[r].exports;var a=e[r]={exports:{},id:r,loaded:!1};return t[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}var e={};return n.m=t,n.c=e,n.p="",n(0)}([function(t,n,e){function r(t,n,e){var r=n.from||s(t,n.property);return AFRAME.utils.extend({},e,{targets:[{aframeProperty:r}],aframeProperty:n.to,update:function(){c(t,n.property,this.targets[0].aframeProperty)}})}function a(t,n,e){var r=s(t,n.property);n.from&&(r=AFRAME.utils.coordinates.parse(n.from));var a=AFRAME.utils.coordinates.parse(n.to);return AFRAME.utils.extend({},e,{targets:[r],update:function(){c(t,n.property,this.targets[0])}},a)}function i(t,n){var e=n.split("."),r=e[0],a=e[1],i=t.components[r]||AFRAME.components[r];return i?a?i.schema[a].type:i.schema.type:null}var o=e(1);if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var u=AFRAME.utils,s=u.entity.getComponentProperty,c=u.entity.setComponentProperty;u.styleParser.parse;AFRAME.registerComponent("animation",{schema:{delay:{"default":0},dir:{"default":""},dur:{"default":1e3},easing:{"default":"easeInQuad"},elasticity:{"default":400},from:{"default":""},loop:{"default":!1},property:{"default":""},repeat:{"default":0},startEvents:{type:"array"},pauseEvents:{type:"array"},to:{"default":""}},multiple:!0,init:function(){this.animation=null,this.animationIsPlaying=!1,this.config=null,this.playAnimationBound=this.playAnimation.bind(this),this.pauseAnimationBound=this.pauseAnimation.bind(this),this.repeat=0},update:function(){var t=this.attrName,n=this.data,e=this.el,u=i(e,n.property),s=this;this.repeat=n.repeat;var c={autoplay:!1,begin:function(){e.emit("animation-begin"),e.emit(t+"-begin")},complete:function(){e.emit("animation-complete"),e.emit(t+"-complete"),--s.repeat>0&&s.animation.play()},direction:n.dir,duration:n.dur,easing:n.easing,elasticity:n.elasticity,loop:n.loop},f=r;"vec2"!==u&&"vec3"!==u&&"vec4"!==u||(f=a),this.pauseAnimation(),this.config=f(e,n,c),this.animation=o(this.config),this.data.startEvents.length||(this.animationIsPlaying=!0),this.removeEventListeners(),this.addEventListeners()},remove:function(){this.pauseAnimation(),this.removeEventListeners()},pause:function(){this.pauseAnimation(),this.removeEventListeners()},play:function(){this.animation&&this.animationIsPlaying&&(this.playAnimation(),this.addEventListeners())},addEventListeners:function(){var t=this,n=this.data,e=this.el;n.startEvents.map(function(n){e.addEventListener(n,t.playAnimationBound)}),n.pauseEvents.map(function(n){e.addEventListener(n,t.pauseAnimationBound)})},removeEventListeners:function(){var t=this,n=this.data,e=this.el;n.startEvents.map(function(n){e.removeEventListener(n,t.playAnimationBound)}),n.pauseEvents.map(function(n){e.removeEventListener(n,t.pauseAnimationBound)})},playAnimation:function(){this.animation&&(this.animation.restart(),this.animationIsPlaying=!0)},pauseAnimation:function(){this.animation&&(this.animation.pause(),this.animationIsPlaying=!1)}})},function(t,n,e){var r,a,i;!function(e,o){a=[],r=o,i="function"==typeof r?r.apply(n,a):r,!(void 0!==i&&(t.exports=i))}(this,function(){var t,n="1.1.0",e={duration:1e3,delay:0,loop:!1,autoplay:!0,direction:"normal",easing:"easeOutElastic",elasticity:400,round:!1,begin:void 0,update:void 0,complete:void 0},r=["translateX","translateY","translateZ","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skewX","skewY"],a="transform",i=function(){return{array:function(t){return Array.isArray(t)},object:function(t){return Object.prototype.toString.call(t).indexOf("Object")>-1},svg:function(t){return t instanceof SVGElement},dom:function(t){return t.nodeType||i.svg(t)},number:function(t){return!isNaN(parseInt(t))},string:function(t){return"string"==typeof t},func:function(t){return"function"==typeof t},undef:function(t){return"undefined"==typeof t},"null":function(t){return"null"==typeof t},hex:function(t){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(t)},rgb:function(t){return/^rgb/.test(t)},rgba:function(t){return/^rgba/.test(t)},hsl:function(t){return/^hsl/.test(t)},color:function(t){return i.hex(t)||i.rgb(t)||i.rgba(t)||i.hsl(t)}}}(),o=function(){var t={},n=["Quad","Cubic","Quart","Quint","Expo"],e={Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t,n){if(0===t||1===t)return t;var e=1-Math.min(n,998)/1e3,r=t/1,a=r-1,i=e/(2*Math.PI)*Math.asin(1);return-(Math.pow(2,10*a)*Math.sin((a-i)*(2*Math.PI)/e))},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var n,e=4;t<((n=Math.pow(2,--e))-1)/11;);return 1/Math.pow(4,3-e)-7.5625*Math.pow((3*n-2)/22-t,2)}};return n.forEach(function(t,n){e[t]=function(t){return Math.pow(t,n+2)}}),Object.keys(e).forEach(function(n){var r=e[n];t["easeIn"+n]=r,t["easeOut"+n]=function(t,n){return 1-r(1-t,n)},t["easeInOut"+n]=function(t,n){return t<.5?r(2*t,n)/2:1-r(t*-2+2,n)/2}}),t.linear=function(t){return t},t}(),u=function(t){return i.string(t)?t:t+""},s=function(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()},c=function(t){if(i.color(t))return!1;try{var n=document.querySelectorAll(t);return n}catch(e){return!1}},f=function(t,n){return Math.floor(Math.random()*(n-t+1))+t},l=function(t){return t.reduce(function(t,n){return t.concat(i.array(n)?l(n):n)},[])},p=function(t){return i.array(t)?t:(i.string(t)&&(t=c(t)||t),t instanceof NodeList||t instanceof HTMLCollection?[].slice.call(t):[t])},m=function(t,n){return t.some(function(t){return t===n})},d=function(t,n){var e={};return t.forEach(function(t){var r=JSON.stringify(n.map(function(n){return t[n]}));e[r]=e[r]||[],e[r].push(t)}),Object.keys(e).map(function(t){return e[t]})},h=function(t){return t.filter(function(t,n,e){return e.indexOf(t)===n})},v=function(t){var n={};for(var e in t)n[e]=t[e];return n},g=function(t,n){for(var e in n)t[e]=i.undef(t[e])?n[e]:t[e];return t},y=function(t){var n=/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,t=t.replace(n,function(t,n,e,r){return n+n+e+e+r+r}),e=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(t),r=parseInt(e[1],16),a=parseInt(e[2],16),i=parseInt(e[3],16);return"rgb("+r+","+a+","+i+")"},b=function(t){var n,e,r,t=/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(t),a=parseInt(t[1])/360,i=parseInt(t[2])/100,o=parseInt(t[3])/100,u=function(t,n,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?t+6*(n-t)*e:e<.5?n:e<2/3?t+(n-t)*(2/3-e)*6:t};if(0==i)n=e=r=o;else{var s=o<.5?o*(1+i):o+i-o*i,c=2*o-s;n=u(c,s,a+1/3),e=u(c,s,a),r=u(c,s,a-1/3)}return"rgb("+255*n+","+255*e+","+255*r+")"},A=function(t){return i.rgb(t)||i.rgba(t)?t:i.hex(t)?y(t):i.hsl(t)?b(t):void 0},E=function(t){return/([\\+\\-]?[0-9|auto\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|pc|vw|vh|deg)?/.exec(t)[2]},M=function(t,n,e){return E(n)?n:t.indexOf("translate")>-1?E(e)?n+E(e):n+"px":t.indexOf("rotate")>-1||t.indexOf("skew")>-1?n+"deg":n},x=function(t,n){if(n in t.style)return getComputedStyle(t).getPropertyValue(s(n))||"0"},w=function(t,n){var e=n.indexOf("scale")>-1?1:0,r=t.style.transform;if(!r)return e;for(var a=/(\\w+)\\((.+?)\\)/g,i=[],o=[],u=[];i=a.exec(r);)o.push(i[1]),u.push(i[2]);var s=u.filter(function(t,e){return o[e]===n});return s.length?s[0]:e},I=function(t,n){return i.dom(t)&&m(r,n)?"transform":i.dom(t)&&"transform"!==n&&x(t,n)?"css":i.dom(t)&&(t.getAttribute(n)||i.svg(t)&&t[n])?"attribute":i["null"](t[n])||i.undef(t[n])?void 0:"object"},P=function(t,n){switch(I(t,n)){case"transform":return w(t,n);case"css":return x(t,n);case"attribute":return t.getAttribute(n)}return t[n]||0},L=function(t,n,e){if(i.color(n))return A(n);if(E(n))return n;var r=E(E(t.to)?t.to:t.from);return!r&&e&&(r=E(e)),r?n+r:n},O=function(t){var n=/-?\\d*\\.?\\d+/g;return{original:t,numbers:u(t).match(n)?u(t).match(n).map(Number):[0],strings:u(t).split(n)}},k=function(t,n,e){return n.reduce(function(n,r,a){var r=r?r:e[a-1];return n+t[a-1]+r})},F=function(t){var t=t?l(i.array(t)?t.map(p):p(t)):[];return t.map(function(t,n){return{target:t,id:n}})},j=function(t,n){var r=[];for(var a in t)if(!e.hasOwnProperty(a)&&"targets"!==a){var o=i.object(t[a])?v(t[a]):{value:t[a]};o.name=a,r.push(g(o,n))}return r},C=function(t,n,e,r){var a=p(i.func(e)?e(t,r):e);return{from:a.length>1?a[0]:P(t,n),to:a.length>1?a[1]:a[0]}},R=function(t,n,e,r){var a={};if("transform"===e)a.from=t+"("+M(t,n.from,n.to)+")",a.to=t+"("+M(t,n.to)+")";else{var i="css"===e?x(r,t):void 0;a.from=L(n,n.from,i),a.to=L(n,n.to,i)}return{from:O(a.from),to:O(a.to)}},B=function(t,n){var e=[];return t.forEach(function(r,a){var o=r.target;return n.forEach(function(n){var u=I(o,n.name);if(u){var s=C(o,n.name,n.value,a),c=v(n);c.animatables=r,c.type=u,c.from=R(n.name,s,c.type,o).from,c.to=R(n.name,s,c.type,o).to,c.round=i.color(s.from)||c.round?1:0,c.delay=(i.func(c.delay)?c.delay(o,a,t.length):c.delay)/J.speed,c.duration=(i.func(c.duration)?c.duration(o,a,t.length):c.duration)/J.speed,e.push(c)}})}),e},N=function(t,n){var e=B(t,n),r=d(e,["name","from","to","delay","duration"]);return r.map(function(t){var n=v(t[0]);return n.animatables=t.map(function(t){return t.animatables}),n.totalDuration=n.delay+n.duration,n})},S=function(t,n){t.tweens.forEach(function(e){var r=e.to,a=e.from,i=t.duration-(e.delay+e.duration);e.from=r,e.to=a,n&&(e.delay=i)}),t.reversed=!t.reversed},T=function(t){if(t.length)return Math.max.apply(Math,t.map(function(t){return t.totalDuration}))},$=function(t){var n=[],e=[];return t.tweens.forEach(function(t){"css"!==t.type&&"transform"!==t.type||(n.push("css"===t.type?s(t.name):"transform"),t.animatables.forEach(function(t){e.push(t.target)}))}),{properties:h(n).join(", "),elements:h(e)}},V=function(t){var n=$(t);n.elements.forEach(function(t){t.style.willChange=n.properties})},X=function(t){var n=$(t);n.elements.forEach(function(t){t.style.removeProperty("will-change")})},Y=function(t){var n=i.string(t)?c(t)[0]:t;return{path:n,value:n.getTotalLength()}},Q=function(t,n){var e=t.path,r=t.value*n,a=function(a){var i=a||0,o=n>1?t.value+i:r+i;return e.getPointAtLength(o)},i=a(),o=a(-1),u=a(1);switch(t.name){case"translateX":return i.x;case"translateY":return i.y;case"rotate":return 180*Math.atan2(u.y-o.y,u.x-o.x)/Math.PI}},Z=function(t,n){var e=Math.min(Math.max(n-t.delay,0),t.duration),r=e/t.duration,a=t.to.numbers.map(function(n,e){var a=t.from.numbers[e],i=o[t.easing](r,t.elasticity),u=t.path?Q(t,i):a+i*(n-a);return u=t.round?Math.round(u*t.round)/t.round:u});return k(a,t.to.strings,t.from.strings)},q=function(n,e){var r;n.currentTime=e,n.progress=e/n.duration*100;for(var i=0;i<n.tweens.length;i++){var o=n.tweens[i];o.currentValue=Z(o,e);for(var u=o.currentValue,s=0;s<o.animatables.length;s++){var c=o.animatables[s],f=c.id,l=c.target,p=o.name;switch(o.type){case"css":l.style[p]=u;break;case"attribute":l.setAttribute(p,u);break;case"object":l[p]=u;break;case"transform":r||(r={}),r[f]||(r[f]=[]),r[f].push(u)}}}if(r){t||(t=(x(document.body,a)?"":"-webkit-")+a);for(var i in r)n.animatables[i].target.style[t]=r[i].join(" ")}n.settings.update&&n.settings.update(n)},D=function(t){var n={};return n.animatables=F(t.targets),n.settings=g(t,e),n.properties=j(t,n.settings),n.tweens=N(n.animatables,n.properties),n.duration=T(n.tweens)||t.duration,n.currentTime=0,n.progress=0,n.ended=!1,n},z=[],G=0,H=function(){var t=function(){G=requestAnimationFrame(n)},n=function(n){if(z.length){for(var e=0;e<z.length;e++)z[e].tick(n);t()}else cancelAnimationFrame(G),G=0};return t}(),J=function(t){var n=D(t),e={};return n.tick=function(t){n.ended=!1,e.start||(e.start=t),e.current=Math.min(Math.max(e.last+t-e.start,0),n.duration),q(n,e.current);var r=n.settings;r.begin&&e.current>=r.delay&&(r.begin(n),r.begin=void 0),e.current>=n.duration&&(r.loop?(e.start=t,"alternate"===r.direction&&S(n,!0),i.number(r.loop)&&r.loop--):(n.ended=!0,n.pause(),r.complete&&r.complete(n)),e.last=0)},n.seek=function(t){q(n,t/100*n.duration)},n.pause=function(){X(n);var t=z.indexOf(n);t>-1&&z.splice(t,1)},n.play=function(t){n.pause(),t&&(n=g(D(g(t,n.settings)),n)),e.start=0,e.last=n.ended?0:n.currentTime;var r=n.settings;"reverse"===r.direction&&S(n),"alternate"!==r.direction||r.loop||(r.loop=1),V(n),z.push(n),G||H()},n.restart=function(){n.reversed&&S(n),n.pause(),n.seek(0),n.play()},n.settings.autoplay&&n.play(),n},K=function(t){for(var n=l(i.array(t)?t.map(p):p(t)),e=z.length-1;e>=0;e--)for(var r=z[e],a=r.tweens,o=a.length-1;o>=0;o--)for(var u=a[o].animatables,s=u.length-1;s>=0;s--)m(n,u[s].target)&&(u.splice(s,1),u.length||a.splice(o,1),a.length||r.pause())};return J.version=n,J.speed=1,J.list=z,J.remove=K,J.easings=o,J.getValue=P,J.path=Y,J.random=f,J})}]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports){eval('(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)})([function(module,exports,__webpack_require__){__webpack_require__(1);__webpack_require__(2)},function(module,exports){AFRAME.registerSystem("effects",{schema:{type:"array",default:[]},init:function(){this.effects={};this.enabled={};this.passes=[];this._passes=[];this.cameras=[];this.setupPostState();this.needsOverride=true},update:function(){this.needsUpdate=true},setupPostState:function(){this.renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat});this.renderTarget.texture.generateMipmaps=false;this.renderTarget.depthBuffer=true;this.renderTarget.depthTexture=new THREE.DepthTexture;this.renderTarget.depthTexture.type=THREE.UnsignedShortType;this.renderTarget.depthTexture.minFilter=THREE.LinearFilter;this.renderTarget.stencilBuffer=false;this.scene=new THREE.Scene;this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad.frustumCulled=false;this.scene.add(this.quad);this.sceneLeft=new THREE.Scene;this.quadLeft=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quadLeft.geometry.attributes.uv.array.set([0,1,.5,1,0,0,.5,0]);this.quadLeft.frustumCulled=false;this.sceneLeft.add(this.quadLeft);this.sceneRight=new THREE.Scene;this.quadRight=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quadRight.geometry.attributes.uv.array.set([.5,1,1,1,.5,0,1,0]);this.quadRight.frustumCulled=false;this.sceneRight.add(this.quadRight);this.targets=[new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat})];this.tDiffuse={type:"t",value:null};this.tDepth={type:"t",value:this.renderTarget.depthTexture};this.cameraFar={type:"f",value:0};this.cameraNear={type:"f",value:0};this.time={type:"f",value:0};this.timeDelta={type:"f",value:0};this.uvClamp={type:"v2",value:this.uvBoth};this.resolution={type:"v4",value:new THREE.Vector4}},vertexShader:["#include <common>","varying vec2 vUv;","void main() {","   vUv = uv;","   gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\\n"),uvLeft:new THREE.Vector2(0,.5),uvRight:new THREE.Vector2(.5,1),uvBoth:new THREE.Vector2(0,1),renderPass:function(material,renderTarget,viewCb,forceClear){var renderer=this.sceneEl.renderer;this.quad.material=material;var isFn=typeof viewCb==="function";var s=renderTarget||renderer.getSize();this.resolution.value.set(s.width,s.height,1/s.width,1/s.height);var oldClear=renderer.autoClear;renderer.autoClear=false;if(viewCb){if(this.cameras.length>1){this.quadLeft.material=material;this.uvClamp.value=this.uvLeft;setView(0,0,Math.round(s.width*.5),s.height);if(isFn)viewCb(material,this.cameras[0],-1);renderer.render(this.sceneLeft,this.camera,renderTarget,oldClear||forceClear);this.quadRight.material=material;this.uvClamp.value=this.uvRight;setView(Math.round(s.width*.5),0,Math.round(s.width*.5),s.height);if(isFn)viewCb(material,this.cameras[1],1);renderer.render(this.sceneRight,this.camera,renderTarget);this.uvClamp.value=this.uvBoth;setView(0,0,s.width,s.height)}else{setView(0,0,s.width,s.height);if(isFn)viewCb(material,this.sceneEl.camera,0);renderer.render(this.scene,this.camera,renderTarget,oldClear||forceClear)}}else{setView(0,0,s.width,s.height);renderer.render(this.scene,this.camera,renderTarget,oldClear||forceClear)}renderer.autoClear=oldClear;function setView(x,y,w,h){if(renderTarget){renderTarget.viewport.set(x,y,w,h);renderTarget.scissor.set(x,y,w,h)}else{renderer.setViewport(x,y,w,h);renderer.setScissor(x,y,w,h)}}},materialize:function(s,uniforms,defines){return new THREE.ShaderMaterial({uniforms:uniforms,vertexShader:typeof s==="string"?this.vertexShader:s.vertexShader,fragmentShader:typeof s==="string"?s:s.fragmentShader,depthWrite:false,depthTest:false,blending:THREE.NoBlending,fog:false,extensions:{derivatives:true},defines:defines||{}})},fuse:function(temp,alpha){if(!temp.length)return;var chunks=["vec4 textureVR( sampler2D sampler, vec2 uv ) {"," return texture2D(sampler, vec2(clamp(uv.x, uvClamp.x, uvClamp.y), uv.y));","} "],head=[],main=[],includes={},needsDepth=false,needsDiffuse=false,k;var uniforms={time:this.time,resolution:this.resolution,uvClamp:this.uvClamp};temp.forEach(function(obj){if(typeof obj==="string"){main.push(obj);return}var prefix=obj.attrName+"_";if(obj.diffuse){needsDiffuse=true}if(obj.depth){needsDepth=true}if(obj.fragment){chunks.push(obj.fragment.replace(/\\$/g,prefix))}if(obj.uniforms){for(var u in obj.uniforms){uniforms[prefix+u]=obj.uniforms[u]}}if(obj.includes){obj.includes.forEach(function(inc){includes[inc]=true})}if(obj.__dontCallMain__){delete obj.__dontCallMain__}else{main.push("  "+obj.attrName+"_main(color, origColor, vUv, depth);")}});var t2u={i:"int",f:"float",t:"sampler2D",v2:"vec2",v3:"vec3",v4:"vec4",b:"bool"};for(k in includes){head.push("#include <"+k+">")}var premain=["void main () {"];uniforms["tDiffuse"]=this.tDiffuse;if(needsDiffuse){premain.push("  vec4 color = texture2D(tDiffuse, vUv);")}else{premain.push("  vec4 color = vec4(0.0);")}premain.push("  vec4 origColor = color;");uniforms["tDepth"]=this.tDepth;uniforms["cameraFar"]=this.cameraFar;uniforms["cameraNear"]=this.cameraNear;if(needsDepth){premain.push("  float depth = texture2D(tDepth, vUv).x;")}else{premain.push("  float depth = 0.0;")}for(k in uniforms){var u=uniforms[k];head.push(["uniform",t2u[u.type],k,";"].join(" "))}head.push("varying vec2 vUv;");var source=[head.join("\\n"),chunks.join("\\n"),"\\n",premain.join("\\n"),main.join("\\n"),alpha?"  gl_FragColor = color;":"  gl_FragColor = vec4(color.rgb, 1.0);","}"].join("\\n");var material=this.materialize(source,uniforms);console.log(source,material);return material},rebuild:function(){var self=this,passes=[],temp=[];this.passes.forEach(function(pass){if(pass.dispose)pass.dispose()});this.enabled={};this.data.forEach(function(k){var obj,name;if(k[0]==="#"){var el=document.querySelector(k);if(!el)return;obj={attrName:k.replace("#","script_"),fragment:el.textContent,depth:el.dataset.depth!==undefined,includes:el.dataset.includes?el.dataset.includes.split(" "):null}}else{name=k.replace("!","");obj=self.effects[name];if(!obj)return;self.enabled[name]=true}if(obj.pass){pickup();passes.push({pass:pass,behavior:obj})}else if(obj.material){pickup();passes.push({pass:makepass(obj.material,false,obj.vr),behavior:obj})}else{if(k[k.length-1]==="!")obj.__dontCallMain__=true;temp.push(obj)}});function pickup(){if(!temp.length)return;passes.push({pass:makepass(self.fuse(temp),true)});temp=[]}function makepass(material,dispose,viewCb){return{render:function(renderer,writeBuffer,readBuffer){self.renderPass(material,writeBuffer,viewCb)},dispose:function(){if(dispose)material.dispose()}}}pickup();this.needsUpdate=false;this.passes=passes},isActive:function(behavior,resize){var scene=this.sceneEl;var isEnabled=scene.renderTarget&&this.enabled[behavior.attrName]===true?true:false;if(!isEnabled)return false;if(resize&&(this.needsResize||behavior.needsResize)&&behavior.setSize){var size=scene.renderer.getSize();behavior.setSize(size.width,size.height);delete behavior.needsResize}return true},isEnabled:function(behavior){return this.enabled[behavior.attrName]===true?true:false},register:function(behavior){this.effects[behavior.attrName]=behavior;this.needsUpdate=true},unregister:function(behavior){delete this.effects[behavior.attrName];this.needsUpdate=true},tick:function(time,timeDelta){var self=this,sceneEl=this.sceneEl,renderer=sceneEl.renderer,effect=sceneEl.effect,rt=this.renderTarget,rts=this.targets;if(!rt||!renderer){return}if(this.needsOverride){var rendererRender=renderer.render;renderer.render=function(scene,camera,renderTarget,forceClear){if(renderTarget===rt){var size=renderer.getSize();if(size.width!==rt.width||size.height!==rt.height){rt.setSize(size.width,size.height);rts[0].setSize(size.width,size.height);rts[1].setSize(size.width,size.height);self.resolution.value.set(size.width,size.height,1/size.width,1/size.height);self.needsResize=true}self.cameras.push(camera)}rendererRender.call(renderer,scene,camera,renderTarget,forceClear)};this.needsOverride=false}this.cameras=[];this.time.value=time/1e3;this.timeDelta.value=timeDelta;if(this.needsUpdate===true){this.rebuild()}var arr=[];this.passes.forEach(function(p){if(p.behavior&&p.behavior.bypass===true)return;arr.push(p)});this.sceneEl.renderTarget=arr.length?rt:null;this._passes=arr;this.tDiffuse.value=this.renderTarget.texture;this.tDepth.value=this.renderTarget.depthTexture;var camera=this.sceneEl.camera;this.cameraFar.value=camera.far;this.cameraNear.value=camera.near},setState:function(){},tock:function(){var scene=this.sceneEl,renderer=scene.renderer,self=this;if(!scene.renderTarget){return}var rt=scene.renderTarget,rts=this.targets;this._passes.forEach(function(pass,i){var r=i?rts[i&1]:rt;self.tDiffuse.value=r.texture;if(pass.behavior&&pass.behavior.resize)self.isActive(pass.behavior,true);pass.pass.render(renderer,i<self._passes.length-1?rts[i+1&1]:null,r)});this.needsResize=false}})},function(module,exports,__webpack_require__){__webpack_require__(3);__webpack_require__(4);__webpack_require__(5);__webpack_require__(7);__webpack_require__(9);__webpack_require__(10)},function(module,exports){AFRAME.registerComponent("outline",{schema:{color:{type:"color",default:"#000000"},width:{type:"vec2",default:new THREE.Vector2(1,1)},range:{type:"vec2",default:new THREE.Vector2(0,1e3)},strength:{type:"number",default:1},ratio:{type:"number",default:.5},sobel:{default:false},smooth:{default:false}},init:function(){this.system=this.el.sceneEl.systems.effects;var pars={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTarget=new THREE.WebGLRenderTarget(1,1,pars);this.blurTarget=new THREE.WebGLRenderTarget(1,1,pars);this.needsResize=true;this.resolution={type:"v4",value:new THREE.Vector4};this.tockUniforms={resolution:this.resolution,color:{type:"v3",value:new THREE.Color},width:{type:"v2",value:null},range:{type:"v2",value:null},strength:{type:"f",value:1}};this.materialSobel=this.system.fuse([{fragment:this.sobel,uniforms:this.tockUniforms,includes:["packing"],depth:true}],true);this.materialFreichen=this.system.fuse([{fragment:this.freichen,uniforms:this.tockUniforms,includes:["packing"],depth:true}],true);this.blurDirection={type:"v2",value:new THREE.Vector2};this.blurMaterial=this.system.fuse([{fragment:this.blur,uniforms:{resolution:this.resolution,direction:this.blurDirection},diffuse:true}],true);this.uniforms={texture:{type:"t",value:this.renderTarget.texture}};this.system.register(this)},update:function(oldData){this.tockUniforms.color.value.set(this.data.color);this.tockUniforms.width.value=this.data.width;this.tockUniforms.range.value=this.data.range;this.tockUniforms.strength.value=1/this.data.strength;this.currentMaterial=this.data.sobel?this.materialSobel:this.materialFreichen},setSize:function(w,h){w=Math.round(w*this.data.ratio);h=Math.round(h*this.data.ratio);this.renderTarget.setSize(w,h);this.blurTarget.setSize(w,h);this.resolution.value.set(w,h,1/w,1/h)},tock:function(){if(!this.system.isActive(this,true))return;this.system.renderPass(this.currentMaterial,this.renderTarget);this.system.tDiffuse.value=this.renderTarget;if(!this.data.smooth)return;this.blurDirection.value.set(1,0);this.system.renderPass(this.blurMaterial,this.blurTarget);this.system.tDiffuse.value=this.blurTarget;this.blurDirection.value.set(0,1);this.system.renderPass(this.blurMaterial,this.renderTarget)},remove:function(){this.system.unregister(this)},diffuse:true,sobel:["mat3 G[2];","const mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );","const mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","mat3 I;","float cnv[2];","float d;","G[0] = g0;","G[1] = g1;","for (float i=0.0; i<3.0; i++)","for (float j=0.0; j<3.0; j++) {","           d = texture2D(tDepth, uv + resolution.zw * vec2(i-1.0,j-1.0) ).x;","           d = perspectiveDepthToViewZ(d, cameraNear, cameraFar); ","\\t\\t\\tI[int(i)][int(j)] = viewZToOrthographicDepth(d, cameraNear, cameraFar);","}","for (int i=0; i<2; i++) {","float dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);","cnv[i] = dp3 * dp3; ","}","color = vec4($color, sqrt(cnv[0]*cnv[0]+cnv[1]*cnv[1]));","} "].join("\\n"),freichen:["mat3 $G[9];","const mat3 $g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );","const mat3 $g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );","const mat3 $g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );","const mat3 $g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );","const mat3 $g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );","const mat3 $g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );","const mat3 $g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );","const mat3 $g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );","const mat3 $g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","\\t$G[0] = $g0,","\\t$G[1] = $g1,","\\t$G[2] = $g2,","\\t$G[3] = $g3,","\\t$G[4] = $g4,","\\t$G[5] = $g5,","\\t$G[6] = $g6,","\\t$G[7] = $g7,","\\t$G[8] = $g8;","\\tmat3 I;","\\tfloat cnv[9];","\\tfloat d = texture2D(tDepth, uv).x;","   d = perspectiveDepthToViewZ(d, cameraNear, cameraFar); ","\\tfloat att = mix($width.x, $width.y, smoothstep($range.x, $range.y, -d));","\\td = viewZToOrthographicDepth(d, cameraNear, cameraFar);","\\tI[1][1] = d;","\\tfor (float i=0.0; i<3.0; i++) {","\\t\\tfor (float j=0.0; j<3.0; j++) {","\\t\\t\\tif (j == 1.0 && i == 1.0) continue;","           d = texture2D(tDepth, uv + att * resolution.zw * vec2(i-1.0,j-1.0) ).x;","           d = perspectiveDepthToViewZ(d, cameraNear, cameraFar); ","\\t\\t\\tI[int(i)][int(j)] = viewZToOrthographicDepth(d, cameraNear, cameraFar);","\\t\\t}","\\t}","\\tfor (int i=0; i<9; i++) {","\\t\\tfloat dp3 = dot($G[i][0], I[0]) + dot($G[i][1], I[1]) + dot($G[i][2], I[2]);","\\t\\tcnv[i] = dp3 * dp3;","\\t}","\\tfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);","\\tfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);","   float v = smoothstep(0., $strength, sqrt(M/S));","\\tcolor = vec4($color, v);","}"].join("\\n"),blur:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","color.a *= 0.44198;","color.a += texture2D(tDiffuse, uv + ($direction * $resolution.zw )).a * 0.27901;","color.a += texture2D(tDiffuse, uv - ($direction * $resolution.zw )).a * 0.27901;","}"].join("\\n"),fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","\\tvec4 texel = texture2D($texture, uv);","   color.rgb = mix(color.rgb, texel.rgb, smoothstep(0.1,0.3,texel.a));","}"].join("\\n")})},function(module,exports){AFRAME.registerComponent("film",{schema:{speed:{default:1},nIntensity:{default:.5},sIntensity:{default:.05},sCount:{default:4096}},init:function(){this.uniforms={speed:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096}};this.system=this.el.sceneEl.systems.effects;this.system.register(this)},update:function(){var d=this.data,us=this.uniforms;for(var u in us){if(d[u])us[u].value=d[u]}},remove:function(){this.system.unregister(this)},includes:["common"],diffuse:true,fragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","   vec4 cTextureScreen = color;","   float dx = rand( uv + mod(time, 3.14) * $speed );","   vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx, 0.0, 1.0 );","   vec2 sc = vec2( sin( uv.y * $sCount ), cos( uv.y * $sCount ) );","   cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * $sIntensity;","   cResult = cTextureScreen.rgb + clamp( $nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","   color.rgb =  cResult; //cResult;","}"].join("\\n")})},function(module,exports,__webpack_require__){var FXAAShader=__webpack_require__(6);AFRAME.registerComponent("fxaa",{schema:{default:true},init:function(){this.system=this.el.sceneEl.systems.effects;this.material=this.system.materialize(FXAAShader,{tDiffuse:this.system.tDiffuse,resolution:{type:"v2",value:new THREE.Vector2}});this.system.register(this);this.needsResize=true},update:function(){this.bypass=!this.data},setSize:function(w,h){this.material.uniforms.resolution.value.set(w,h)},resize:true,remove:function(){this.material.dispose();this.system.unregister(this)}})},function(module,exports){module.exports={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2}},vertexShader:"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\nuniform vec2 resolution;\\n\\nvoid main() {\\n  vUv = uv;\\n  vec2 fragCoord = uv * resolution;\\n  vec2 inverseVP = 1.0 / resolution.xy;\\n  v_rgbNW = (fragCoord + vec2(-1.0, -1.0)) * inverseVP;\\n  v_rgbNE = (fragCoord + vec2(1.0, -1.0)) * inverseVP;\\n  v_rgbSW = (fragCoord + vec2(-1.0, 1.0)) * inverseVP;\\n  v_rgbSE = (fragCoord + vec2(1.0, 1.0)) * inverseVP;\\n  v_rgbM = vec2(fragCoord * inverseVP);\\n\\n  gl_Position = projectionMatrix *\\n              modelViewMatrix *\\n              vec4(position,1.0);\\n}\\n",fragmentShader:\'#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\n//texcoords computed in vertex step\\n//to avoid dependent texture reads\\nvarying vec2 v_rgbNW;\\nvarying vec2 v_rgbNE;\\nvarying vec2 v_rgbSW;\\nvarying vec2 v_rgbSE;\\nvarying vec2 v_rgbM;\\n\\n//make sure to have a resolution uniform set to the screen size\\nuniform vec2 resolution;\\nuniform sampler2D tDiffuse;\\n\\n/**\\nBasic FXAA implementation based on the code on geeks3d.com with the\\nmodification that the texture2DLod stuff was removed since it\\\'s\\nunsupported by WebGL.\\n\\n--\\n\\nFrom:\\nhttps://github.com/mitsuhiko/webgl-meincraft\\n\\nCopyright (c) 2011 by Armin Ronacher.\\n\\nSome rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are\\nmet:\\n\\n    * Redistributions of source code must retain the above copyright\\n      notice, this list of conditions and the following disclaimer.\\n\\n    * Redistributions in binary form must reproduce the above\\n      copyright notice, this list of conditions and the following\\n      disclaimer in the documentation and/or other materials provided\\n      with the distribution.\\n\\n    * The names of the contributors may not be used to endorse or\\n      promote products derived from this software without specific\\n      prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\\n"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n*/\\n\\n#ifndef FXAA_REDUCE_MIN\\n    #define FXAA_REDUCE_MIN   (1.0/ 128.0)\\n#endif\\n#ifndef FXAA_REDUCE_MUL\\n    #define FXAA_REDUCE_MUL   (1.0 / 8.0)\\n#endif\\n#ifndef FXAA_SPAN_MAX\\n    #define FXAA_SPAN_MAX     8.0\\n#endif\\n\\n//optimized version for mobile, where dependent \\n//texture reads can be a bottleneck\\nvec4 fxaa_1540259130(sampler2D tex, vec2 fragCoord, vec2 resolution,\\n            vec2 v_rgbNW, vec2 v_rgbNE, \\n            vec2 v_rgbSW, vec2 v_rgbSE, \\n            vec2 v_rgbM) {\\n    vec4 color;\\n    mediump vec2 inverseVP = vec2(1.0 / resolution.x, 1.0 / resolution.y);\\n    vec3 rgbNW = texture2D(tex, v_rgbNW).xyz;\\n    vec3 rgbNE = texture2D(tex, v_rgbNE).xyz;\\n    vec3 rgbSW = texture2D(tex, v_rgbSW).xyz;\\n    vec3 rgbSE = texture2D(tex, v_rgbSE).xyz;\\n    vec4 texColor = texture2D(tex, v_rgbM);\\n    vec3 rgbM  = texColor.xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n    \\n    mediump vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n    \\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                          (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n    \\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n              max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n              dir * rcpDirMin)) * inverseVP;\\n    \\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, texColor.a);\\n    else\\n        color = vec4(rgbB, texColor.a);\\n    return color;\\n}\\n\\nvoid main() {\\n  vec2 fragCoord = vUv * resolution;   \\n  gl_FragColor = fxaa_1540259130(tDiffuse, fragCoord, resolution, v_rgbNW, v_rgbNE, v_rgbSW, v_rgbSE, v_rgbM);\\n}\\n\'}},function(module,exports,__webpack_require__){var LuminosityHighPassShader=__webpack_require__(8);var BlurDirectionX=new THREE.Vector2(1,0);var BlurDirectionY=new THREE.Vector2(0,1);AFRAME.registerComponent("bloom",{schema:{strength:{default:1},radius:{default:.4},threshold:{default:.8},filter:{default:""}},init:function(){this.system=this.el.sceneEl.systems.effects;var pars={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[];this.renderTargetsVertical=[];this.nMips=5;this.renderTargetBright=new THREE.WebGLRenderTarget(1,1,pars);this.renderTargetBright.texture.name="UnrealBloomPass.bright";this.renderTargetBright.texture.generateMipmaps=false;for(var i=0;i<this.nMips;i++){var renderTarget=new THREE.WebGLRenderTarget(1,1,pars);renderTarget.texture.name="UnrealBloomPass.h"+i;renderTarget.texture.generateMipmaps=false;this.renderTargetsHorizontal.push(renderTarget);var renderTarget=new THREE.WebGLRenderTarget(1,1,pars);renderTarget.texture.name="UnrealBloomPass.v"+i;renderTarget.texture.generateMipmaps=false;this.renderTargetsVertical.push(renderTarget)}var highPassShader=LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(highPassShader.uniforms);this.highPassUniforms["smoothWidth"].value=.01;this._materialHighPassFilter=this.system.materialize(highPassShader,this.highPassUniforms);this.materialHighPassFilter=this._materialHighPassFilter;this.separableBlurMaterials=[];var kernelSizeArray=[3,5,7,9,11];for(var i=0;i<this.nMips;i++){this.separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]));this.separableBlurMaterials[i].uniforms["texSize"].value=new THREE.Vector2(1,1)}this.compositeMaterial=this.getCompositeMaterial(this.nMips);this.compositeMaterial.uniforms["blurTexture1"].value=this.renderTargetsVertical[0].texture;this.compositeMaterial.uniforms["blurTexture2"].value=this.renderTargetsVertical[1].texture;this.compositeMaterial.uniforms["blurTexture3"].value=this.renderTargetsVertical[2].texture;this.compositeMaterial.uniforms["blurTexture4"].value=this.renderTargetsVertical[3].texture;this.compositeMaterial.uniforms["blurTexture5"].value=this.renderTargetsVertical[4].texture;this.compositeMaterial.needsUpdate=true;var bloomFactors=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms["bloomFactors"].value=bloomFactors;this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)];this.compositeMaterial.uniforms["bloomTintColors"].value=this.bloomTintColors;this.oldClearColor=new THREE.Color;this.uniforms={texture:{type:"t",value:this.renderTargetsHorizontal[0]}};this.needsResize=true;this.system.register(this)},update:function(oldData){if(oldData.filter!==this.data.filter){if(this._materialHighPassFilter!==this.materialHighPassFilter){this.materialHighPassFilter.dispose()}this.materialHighPassFilter=this.data.filter?this.system.fuse([this.data.filter]):this._materialHighPassFilter}},tock:function(time){if(!this.system.isActive(this,true))return;var scene=this.el.sceneEl;var renderer=scene.renderer;var readBuffer=scene.renderTarget;this.oldClearColor.copy(renderer.getClearColor());this.oldClearAlpha=renderer.getClearAlpha();var oldAutoClear=renderer.autoClear;renderer.autoClear=false;renderer.setClearColor(new THREE.Color(0,0,0),0);this.highPassUniforms["tDiffuse"].value=readBuffer.texture;this.highPassUniforms["luminosityThreshold"].value=this.data.threshold;this.system.renderPass(this.materialHighPassFilter,this.renderTargetBright,null,true);var inputRenderTarget=this.renderTargetBright;for(var i=0;i<this.nMips;i++){this.separableBlurMaterials[i].uniforms["colorTexture"].value=inputRenderTarget.texture;this.separableBlurMaterials[i].uniforms["direction"].value=BlurDirectionX;this.system.renderPass(this.separableBlurMaterials[i],this.renderTargetsHorizontal[i],true);this.separableBlurMaterials[i].uniforms["colorTexture"].value=this.renderTargetsHorizontal[i].texture;this.separableBlurMaterials[i].uniforms["direction"].value=BlurDirectionY;this.system.renderPass(this.separableBlurMaterials[i],this.renderTargetsVertical[i],true);inputRenderTarget=this.renderTargetsVertical[i]}this.compositeMaterial.uniforms["bloomStrength"].value=this.data.strength;this.compositeMaterial.uniforms["bloomRadius"].value=this.data.radius;this.compositeMaterial.uniforms["bloomTintColors"].value=this.bloomTintColors;this.system.renderPass(this.compositeMaterial,this.renderTargetsHorizontal[0],null);renderer.setClearColor(this.oldClearColor,this.oldClearAlpha);renderer.autoClear=oldAutoClear},setSize:function(width,height){var resx=Math.round(width/2);var resy=Math.round(height/2);this.renderTargetBright.setSize(resx,resy);for(var i=0;i<this.nMips;i++){this.renderTargetsHorizontal[i].setSize(resx,resy);this.renderTargetsVertical[i].setSize(resx,resy);this.separableBlurMaterials[i].uniforms["texSize"].value=new THREE.Vector2(resx,resy);resx=Math.round(resx/2);resy=Math.round(resy/2)}},remove:function(){this.system.unregister(this);for(var i=0;i<this.renderTargetsHorizontal.length();i++){this.renderTargetsHorizontal[i].dispose()}for(var i=0;i<this.renderTargetsVertical.length();i++){this.renderTargetsVertical[i].dispose()}this.renderTargetBright.dispose()},getSeperableBlurMaterial:function(kernelRadius){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:kernelRadius,SIGMA:kernelRadius},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)},uvClamp:this.system.uvClamp},vertexShader:"varying vec2 vUv;\\n\\t\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\t\\tvUv = uv;\\n\\t\\t\\t\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\t\\t\\t\\t\\t}",fragmentShader:"#include <common>\\t\\t\\t\\t\\tvarying vec2 vUv;\\n\\t\\t\\t\\t\\tuniform sampler2D colorTexture;\\n\\t\\t\\t\\t\\tuniform vec2 texSize;\\t\\t\\t\\t\\tuniform vec2 direction;\\t\\t\\t\\t\\tuniform vec2 uvClamp;\\t\\t\\t\\t\\tvec4 textureVR( sampler2D sampler, vec2 uv ) {\\t\\t\\t\\t\\t\\treturn texture2D(sampler, vec2(clamp(uv.x, uvClamp.x, uvClamp.y), uv.y));\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\tfloat gaussianPdf(in float x, in float sigma) {\\t\\t\\t\\t\\t\\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\t\\tvec2 invSize = 1.0 / texSize;\\t\\t\\t\\t\\t\\tfloat fSigma = float(SIGMA);\\t\\t\\t\\t\\t\\tfloat weightSum = gaussianPdf(0.0, fSigma);\\t\\t\\t\\t\\t\\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\\t\\t\\t\\t\\t\\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\\t\\t\\t\\t\\t\\t\\tfloat x = float(i);\\t\\t\\t\\t\\t\\t\\tfloat w = gaussianPdf(x, fSigma);\\t\\t\\t\\t\\t\\t\\tvec2 uvOffset = direction * invSize * x;\\t\\t\\t\\t\\t\\t\\tvec3 sample1 = textureVR( colorTexture, vUv + uvOffset).rgb;\\t\\t\\t\\t\\t\\t\\tvec3 sample2 = textureVR( colorTexture, vUv - uvOffset).rgb;\\t\\t\\t\\t\\t\\t\\tdiffuseSum += (sample1 + sample2) * w;\\t\\t\\t\\t\\t\\t\\tweightSum += 2.0 * w;\\t\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\\n\\t\\t\\t\\t\\t}"})},getCompositeMaterial:function(nMips){return new THREE.ShaderMaterial({defines:{NUM_MIPS:nMips},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\\n\\t\\t\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t\\t\\tvUv = uv;\\n\\t\\t\\t\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\t\\t\\t\\t\\t}",fragmentShader:"varying vec2 vUv;\\t\\t\\t\\t\\tuniform sampler2D blurTexture1;\\t\\t\\t\\t\\tuniform sampler2D blurTexture2;\\t\\t\\t\\t\\tuniform sampler2D blurTexture3;\\t\\t\\t\\t\\tuniform sampler2D blurTexture4;\\t\\t\\t\\t\\tuniform sampler2D blurTexture5;\\t\\t\\t\\t\\tuniform float bloomStrength;\\t\\t\\t\\t\\tuniform float bloomRadius;\\t\\t\\t\\t\\tuniform float bloomFactors[NUM_MIPS];\\t\\t\\t\\t\\tuniform vec3 bloomTintColors[NUM_MIPS];\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfloat lerpBloomFactor(const in float factor) { \\t\\t\\t\\t\\t\\tfloat mirrorFactor = 1.2 - factor;\\t\\t\\t\\t\\t\\treturn mix(factor, mirrorFactor, bloomRadius);\\t\\t\\t\\t\\t}\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvoid main() {\\t\\t\\t\\t\\t\\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \\t\\t\\t\\t\\t\\t \\t\\t\\t\\t\\t\\t\\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\\t\\t\\t\\t\\t}"})},diffuse:true,\nfragment:["void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","   color.rgb += texture2D($texture, uv).rgb;","}"].join("\\n")})},function(module,exports){module.exports={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( texel.xyz, luma );","vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","gl_FragColor = mix( outputColor, texel, alpha );","}"].join("\\n")}},function(module,exports){AFRAME.registerComponent("colors",{schema:{mode:{default:"map"},lut:{type:"selector"},lutClamp:{default:false},lutFlip:{default:false},add:{type:"vec3",default:new THREE.Vector3(0,0,0)},mul:{type:"vec3",default:new THREE.Vector3(1,1,1)},pow:{type:"vec3",default:new THREE.Vector3(1,1,1)},left:{type:"vec3",default:new THREE.Vector3(0,0,0)},right:{type:"vec3",default:new THREE.Vector3(1,1,1)},min:{type:"vec3",default:new THREE.Vector3(0,0,0)},max:{type:"vec3",default:new THREE.Vector3(1,1,1)},quant:{type:"vec3",default:new THREE.Vector3(.2,.2,.2)},orig:{type:"vec3",default:new THREE.Vector3(1,1,1)}},init:function(){this.system=this.el.sceneEl.systems.effects;this.uniforms={add:{type:"v3",value:null},mul:{type:"v3",value:null},pow:{type:"v3",value:null},left:{type:"v3",value:null},right:{type:"v3",value:null},min:{type:"v3",value:null},max:{type:"v3",value:null},quant:{type:"v3",value:null},orig:{type:"v3",value:null},texture:{type:"t",value:null}};this.rebuild();this.system.register(this)},update:function(oldData){var d=this.data,us=this.uniforms,needsRebuild=false;for(var u in us){if(d[u]!==undefined)us[u].value=d[u]}[];if(this.data.lutFlip!==oldData.lutFlip||this.data.lutClamp!==oldData.lutClamp||this.data.mode!=oldData.mode){this.rebuild()}if(this.data.lut!==oldData.lut){if(this.uniforms.texture.value)this.uniforms.texture.value.dispose();this.uniforms.texture.value=new THREE.Texture(this.data.lut)}},remove:function(){this.system.unregister(this)},rebuild:function(){var arr=[],m=this.data.mode;for(var i=0;i<m.length;i++){var op=this.ops[m[i]];if(op)arr.push(op)}this.fragment=[this.data.lutClamp?"":"#define $LUT_NO_CLAMP 1",this.data.lutFlip?"#define $LUT_FLIP_Y 1":"",this.preFragment,arr.join("\\n"),"}"].join("\\n");if(this.system&&this.system.isEnabled(this))this.system.needsUpdate=true},ops:{m:"color.rgb *= $mul;",a:"color.rgb += $add;",p:"color.rgb = pow(color.rgb, $pow);",h:"color.rgb = $rgb2hsv(color.rgb);",r:"color.rgb = $hsv2rgb(color.rgb);",s:"color.rgb = smoothstep($left, $right, color.rgb);",l:"color.rgb = $lut(color).rgb;",q:"color.rgb = floor(color.rgb / $quant) * $quant;",c:"color.rgb = clamp(color.rgb, $min, $max);",g:"color.rgb = vec3(dot(color.rgb, vec3(0.299, 0.587, 0.114)));",o:"color.rgb = mix(color.rgb, orig.rgb, $orig);",t:"color.rgb = vec3(color.r, (color.g + color.b) * .5, (color.g + color.b) * .5);"},diffuse:true,preFragment:["vec4 $lut(vec4 textureColor) {","    #ifndef $LUT_NO_CLAMP","        textureColor = clamp(textureColor, 0.0, 1.0);","    #endif","    mediump float blueColor = textureColor.b * 63.0;","    mediump vec2 quad1;","    quad1.y = floor(floor(blueColor) / 8.0);","    quad1.x = floor(blueColor) - (quad1.y * 8.0);","    mediump vec2 quad2;","    quad2.y = floor(ceil(blueColor) / 8.0);","    quad2.x = ceil(blueColor) - (quad2.y * 8.0);","    highp vec2 texPos1;","    texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);","    texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);","    #ifdef $LUT_FLIP_Y","        texPos1.y = 1.0-texPos1.y;","    #endif","    highp vec2 texPos2;","    texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);","    texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);","    #ifdef $LUT_FLIP_Y","        texPos2.y = 1.0-texPos2.y;","    #endif","    lowp vec4 newColor1 = texture2D($texture, texPos1);","    lowp vec4 newColor2 = texture2D($texture, texPos2);","    lowp vec4 newColor = mix(newColor1, newColor2, fract(blueColor));","    return newColor;","}","vec3 $rgb2hsv(vec3 c){","    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);","    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));","    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));","    float d = q.x - min(q.w, q.y);","    float e = 1.0e-10;","    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);","}","vec3 $hsv2rgb(vec3 c)","{","    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth){","vec3 orig = color.rgb;"].join("\\n")})},function(module,exports){AFRAME.registerComponent("glitch",{schema:{default:true},init:function(){this.system=this.el.sceneEl.systems.effects;this.uniforms={tDisp:{type:"t",value:this.generateHeightmap(64)},amount:{type:"f",value:.08},angle:{type:"f",value:.02},seed:{type:"f",value:.02},seed_x:{type:"f",value:.02},seed_y:{type:"f",value:.02},distortion_x:{type:"f",value:.5},distortion_y:{type:"f",value:.6},col_s:{type:"f",value:.05}};this.material=this.system.fuse([{fragment:this.fragment,uniforms:this.uniforms}]);this.curF=0;this.generateTrigger();this.system.register(this)},vr:true,update:function(){this.bypass=!this.data;this.curF=0;this.generateTrigger()},remove:function(){this.system.unregister(this)},tock:function(){this.uniforms["seed"].value=Math.random();if(this.curF%this.randX==0){this.uniforms["amount"].value=Math.random()/30;this.uniforms["angle"].value=THREE.Math.randFloat(-Math.PI,Math.PI);this.uniforms["seed_x"].value=THREE.Math.randFloat(-1,1);this.uniforms["seed_y"].value=THREE.Math.randFloat(-1,1);this.uniforms["distortion_x"].value=THREE.Math.randFloat(0,1);this.uniforms["distortion_y"].value=THREE.Math.randFloat(0,1);this.curF=0;this.generateTrigger()}else if(this.curF%this.randX<this.randX/5){this.uniforms["amount"].value=Math.random()/90;this.uniforms["angle"].value=THREE.Math.randFloat(-Math.PI,Math.PI);this.uniforms["distortion_x"].value=THREE.Math.randFloat(0,1);this.uniforms["distortion_y"].value=THREE.Math.randFloat(0,1);this.uniforms["seed_x"].value=THREE.Math.randFloat(-.3,.3);this.uniforms["seed_y"].value=THREE.Math.randFloat(-.3,.3)}this.curF++},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(dt_size){var data_arr=new Float32Array(dt_size*dt_size*3);var length=dt_size*dt_size;for(var i=0;i<length;i++){var val=THREE.Math.randFloat(0,1);data_arr[i*3+0]=val;data_arr[i*3+1]=val;data_arr[i*3+2]=val}var texture=new THREE.DataTexture(data_arr,dt_size,dt_size,THREE.RGBFormat,THREE.FloatType);texture.needsUpdate=true;return texture},fragment:["float $rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void $main(inout vec4 color, vec4 origColor, vec2 uv, float depth) {","vec2 p = uv;","vec2 p2 = vec2( smoothstep(uvClamp.x, uvClamp.y, p.x),p.y);","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D ($tDisp, p2 * $seed * $seed);","if(p2.y < $distortion_x + $col_s && p2.y > $distortion_x - $col_s * $seed) {","if($seed_x>0.){","p.y = 1. - (p.y + $distortion_y);","}","else {","p.y = $distortion_y;","}","}","if(p2.x < $distortion_y + $col_s && p2.x > $distortion_y - $col_s * $seed) {","if( $seed_y > 0.){","p.x = $distortion_x;","}","else {","p.x = 1. - (p.x + $distortion_x);","}","}","p.x+=normal.x* $seed_x * ($seed/5.);","p.y+=normal.y* $seed_y * ($seed/5.);","vec2 offset = $amount * vec2( cos($angle), sin($angle));","vec4 cr = textureVR(tDiffuse, p + offset);","vec4 cga = textureVR(tDiffuse, p);","vec4 cb = textureVR(tDiffuse, p - offset);","color = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*$amount*vec4($rand(vec2(xs * $seed,ys * $seed*50.))*0.2);","color = color+ snow;","}"].join("\\n")})}]);\n//# sourceMappingURL=dist/afrane-effects.min.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports){eval('!function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){var n=AFRAME.utils.styleParser;if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("event-set",{schema:{"default":"",parse:function(e){var t=n.parse(e),r={};return Object.keys(t).forEach(function(e){var n=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();r[n]=t[e]}),r}},multiple:!0,init:function(){this.eventHandler=null,this.eventName=null},update:function(e){this.removeEventListener(),this.updateEventListener(),this.addEventListener()},remove:function(){this.removeEventListener()},pause:function(){this.removeEventListener()},play:function(){this.addEventListener()},updateEventListener:function(){var e=this.data,t=this.el,n=e._event,r=e._target;delete e._event,delete e._target;var i=r?t.sceneEl.querySelector(r):t;this.eventName=n,this.eventHandler=function(){Object.keys(e).forEach(function(t){AFRAME.utils.entity.setComponentProperty.call(this,i,t,e[t])})}},addEventListener:function(){this.el.addEventListener(this.eventName,this.eventHandler)},removeEventListener:function(){this.el.removeEventListener(this.eventName,this.eventHandler)}})}]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2FmcmFtZS9hZnJhbWUtZXZlbnQtc2V0LWNvbXBvbmVudC5taW4uanM/YmMyZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLGNBQWMsNEJBQTRCLFlBQVksVUFBVSxpQkFBaUIsZ0VBQWdFLFNBQVMsK0JBQStCLGdCQUFnQiwrQkFBK0IsOEdBQThHLHNDQUFzQyxRQUFRLCtCQUErQixzQkFBc0IsMENBQTBDLHlEQUF5RCxVQUFVLEtBQUssNkJBQTZCLDJDQUEyQyxvQkFBb0IsOEVBQThFLG1CQUFtQiwyQkFBMkIsa0JBQWtCLDJCQUEyQixpQkFBaUIsd0JBQXdCLGdDQUFnQyxpREFBaUQsaUNBQWlDLHFDQUFxQyw4Q0FBOEMsbUNBQW1DLDZEQUE2RCxHQUFHLDZCQUE2QiwyREFBMkQsZ0NBQWdDLCtEQUErRCxFQUFFIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQocil7aWYobltyXSlyZXR1cm4gbltyXS5leHBvcnRzO3ZhciBpPW5bcl09e2V4cG9ydHM6e30saWQ6cixsb2FkZWQ6ITF9O3JldHVybiBlW3JdLmNhbGwoaS5leHBvcnRzLGksaS5leHBvcnRzLHQpLGkubG9hZGVkPSEwLGkuZXhwb3J0c312YXIgbj17fTtyZXR1cm4gdC5tPWUsdC5jPW4sdC5wPVwiXCIsdCgwKX0oW2Z1bmN0aW9uKGUsdCl7dmFyIG49QUZSQU1FLnV0aWxzLnN0eWxlUGFyc2VyO2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBBRlJBTUUpdGhyb3cgbmV3IEVycm9yKFwiQ29tcG9uZW50IGF0dGVtcHRlZCB0byByZWdpc3RlciBiZWZvcmUgQUZSQU1FIHdhcyBhdmFpbGFibGUuXCIpO0FGUkFNRS5yZWdpc3RlckNvbXBvbmVudChcImV2ZW50LXNldFwiLHtzY2hlbWE6e1wiZGVmYXVsdFwiOlwiXCIscGFyc2U6ZnVuY3Rpb24oZSl7dmFyIHQ9bi5wYXJzZShlKSxyPXt9O3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWUucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZyxcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCk7cltuXT10W2VdfSkscn19LG11bHRpcGxlOiEwLGluaXQ6ZnVuY3Rpb24oKXt0aGlzLmV2ZW50SGFuZGxlcj1udWxsLHRoaXMuZXZlbnROYW1lPW51bGx9LHVwZGF0ZTpmdW5jdGlvbihlKXt0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoKSx0aGlzLnVwZGF0ZUV2ZW50TGlzdGVuZXIoKSx0aGlzLmFkZEV2ZW50TGlzdGVuZXIoKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCl9LHBhdXNlOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCl9LHBsYXk6ZnVuY3Rpb24oKXt0aGlzLmFkZEV2ZW50TGlzdGVuZXIoKX0sdXBkYXRlRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZGF0YSx0PXRoaXMuZWwsbj1lLl9ldmVudCxyPWUuX3RhcmdldDtkZWxldGUgZS5fZXZlbnQsZGVsZXRlIGUuX3RhcmdldDt2YXIgaT1yP3Quc2NlbmVFbC5xdWVyeVNlbGVjdG9yKHIpOnQ7dGhpcy5ldmVudE5hbWU9bix0aGlzLmV2ZW50SGFuZGxlcj1mdW5jdGlvbigpe09iamVjdC5rZXlzKGUpLmZvckVhY2goZnVuY3Rpb24odCl7QUZSQU1FLnV0aWxzLmVudGl0eS5zZXRDb21wb25lbnRQcm9wZXJ0eS5jYWxsKHRoaXMsaSx0LGVbdF0pfSl9fSxhZGRFdmVudExpc3RlbmVyOmZ1bmN0aW9uKCl7dGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKHRoaXMuZXZlbnROYW1lLHRoaXMuZXZlbnRIYW5kbGVyKX0scmVtb3ZlRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbigpe3RoaXMuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0aGlzLmV2ZW50TmFtZSx0aGlzLmV2ZW50SGFuZGxlcil9fSl9XSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbGliL2FmcmFtZS9hZnJhbWUtZXZlbnQtc2V0LWNvbXBvbmVudC5taW4uanNcbi8vIG1vZHVsZSBpZCA9IDExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports,__webpack_require__){eval('var require;var require;!function t(e,o,i){function n(r,a){if(!o[r]){if(!e[r]){var c="function"==typeof require&&require;if(!a&&c)return require(r,!0);if(s)return require(r,!0);var h=new Error("Cannot find module \'"+r+"\'");throw h.code="MODULE_NOT_FOUND",h}var l=o[r]={exports:{}};e[r][0].call(l.exports,function(t){var o=e[r][1][t];return n(o||t)},l,l.exports,t,e,o,i)}return o[r].exports}for(var s="function"==typeof require&&require,r=0;r<i.length;r++)n(i[r]);return n}({1:[function(t,e,o){t("./src/controls").registerAll()},{"./src/controls":78}],2:[function(t,e,o){e.exports=Object.assign(function(){},{FACE_1:0,FACE_2:1,FACE_3:2,FACE_4:3,L_SHOULDER_1:4,R_SHOULDER_1:5,L_SHOULDER_2:6,R_SHOULDER_2:7,SELECT:8,START:9,DPAD_UP:12,DPAD_DOWN:13,DPAD_LEFT:14,DPAD_RIGHT:15,VENDOR:16})},{}],3:[function(t,e,o){function i(t,e,o){this.type=t,this.index=e,this.pressed=o.pressed,this.value=o.value}e.exports=i},{}],4:[function(t,e,o){!function(t){function e(t,e){return-1!==String(t).indexOf(e)}function o(t,e,o){p!==e&&u!==e&&l!==e||Object.keys(o).forEach(function(e){t[e]=o[e]})}function i(t){var e="keyCode"in t?t.keyCode:"which"in t?t.which:0,o=function(){if(w||"keyLocation"in t){var o=w?t.location:t.keyLocation;if(o&&e in v[o])return v[o][e]}return"keyIdentifier"in t&&t.keyIdentifier in y?y[t.keyIdentifier]:e in d?d[e]:null}();if(!o)return null;var i=function(){var e=f[o.code];return e?t.shiftKey&&"shiftKey"in e?e.shiftKey:e.key:o.code}();return{code:o.code,key:i,location:o.location,keyCap:o.keyCap}}function n(t,e){if(t=String(t),!g.hasOwnProperty(t))return"Undefined";if(e&&"en-us"!==String(e).toLowerCase())throw Error("Unsupported locale");var o=g[t];return o.keyCap||o.code||"Undefined"}var s="KeyboardEvent"in t;s||(t.KeyboardEvent=function(){throw TypeError("Illegal constructor")}),t.KeyboardEvent.DOM_KEY_LOCATION_STANDARD=0,t.KeyboardEvent.DOM_KEY_LOCATION_LEFT=1,t.KeyboardEvent.DOM_KEY_LOCATION_RIGHT=2,t.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD=3;var r=window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,a=window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,c=window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,h=window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD,l=function(){return e(navigator.platform,"Win")?"win":e(navigator.platform,"Mac")?"mac":e(navigator.platform,"CrOS")?"cros":e(navigator.platform,"Linux")?"linux":e(navigator.userAgent,"iPad")||e(navigator.platform,"iPod")||e(navigator.platform,"iPhone")?"ios":""}(),u=function(){return e(navigator.userAgent,"Chrome/")?"chrome":e(navigator.vendor,"Apple")?"safari":e(navigator.userAgent,"MSIE")?"ie":e(navigator.userAgent,"Gecko/")?"moz":e(navigator.userAgent,"Opera/")?"opera":""}(),p=u+"-"+l,d={3:{code:"Cancel"},6:{code:"Help"},8:{code:"Backspace"},9:{code:"Tab"},12:{code:"Clear"},13:{code:"Enter"},16:{code:"Shift"},17:{code:"Control"},18:{code:"Alt"},19:{code:"Pause"},20:{code:"CapsLock"},21:{code:"KanaMode"},22:{code:"HangulMode"},23:{code:"JunjaMode"},24:{code:"FinalMode"},25:{code:"KanjiMode"},27:{code:"Escape"},28:{code:"Convert"},29:{code:"NonConvert"},30:{code:"Accept"},31:{code:"ModeChange"},32:{code:"Space"},33:{code:"PageUp"},34:{code:"PageDown"},35:{code:"End"},36:{code:"Home"},37:{code:"ArrowLeft"},38:{code:"ArrowUp"},39:{code:"ArrowRight"},40:{code:"ArrowDown"},41:{code:"Select"},42:{code:"Print"},43:{code:"Execute"},44:{code:"PrintScreen"},45:{code:"Insert"},46:{code:"Delete"},47:{code:"Help"},48:{code:"Digit0",keyCap:"0"},49:{code:"Digit1",keyCap:"1"},50:{code:"Digit2",keyCap:"2"},51:{code:"Digit3",keyCap:"3"},52:{code:"Digit4",keyCap:"4"},53:{code:"Digit5",keyCap:"5"},54:{code:"Digit6",keyCap:"6"},55:{code:"Digit7",keyCap:"7"},56:{code:"Digit8",keyCap:"8"},57:{code:"Digit9",keyCap:"9"},65:{code:"KeyA",keyCap:"a"},66:{code:"KeyB",keyCap:"b"},67:{code:"KeyC",keyCap:"c"},68:{code:"KeyD",keyCap:"d"},69:{code:"KeyE",keyCap:"e"},70:{code:"KeyF",keyCap:"f"},71:{code:"KeyG",keyCap:"g"},72:{code:"KeyH",keyCap:"h"},73:{code:"KeyI",keyCap:"i"},74:{code:"KeyJ",keyCap:"j"},75:{code:"KeyK",keyCap:"k"},76:{code:"KeyL",keyCap:"l"},77:{code:"KeyM",keyCap:"m"},78:{code:"KeyN",keyCap:"n"},79:{code:"KeyO",keyCap:"o"},80:{code:"KeyP",keyCap:"p"},81:{code:"KeyQ",keyCap:"q"},82:{code:"KeyR",keyCap:"r"},83:{code:"KeyS",keyCap:"s"},84:{code:"KeyT",keyCap:"t"},85:{code:"KeyU",keyCap:"u"},86:{code:"KeyV",keyCap:"v"},87:{code:"KeyW",keyCap:"w"},88:{code:"KeyX",keyCap:"x"},89:{code:"KeyY",keyCap:"y"},90:{code:"KeyZ",keyCap:"z"},91:{code:"OSLeft",location:a},92:{code:"OSRight",location:c},93:{code:"ContextMenu"},95:{code:"Standby"},96:{code:"Numpad0",keyCap:"0",location:h},97:{code:"Numpad1",keyCap:"1",location:h},98:{code:"Numpad2",keyCap:"2",location:h},99:{code:"Numpad3",keyCap:"3",location:h},100:{code:"Numpad4",keyCap:"4",location:h},101:{code:"Numpad5",keyCap:"5",location:h},102:{code:"Numpad6",keyCap:"6",location:h},103:{code:"Numpad7",keyCap:"7",location:h},104:{code:"Numpad8",keyCap:"8",location:h},105:{code:"Numpad9",keyCap:"9",location:h},106:{code:"NumpadMultiply",keyCap:"*",location:h},107:{code:"NumpadAdd",keyCap:"+",location:h},108:{code:"NumpadComma",keyCap:",",location:h},109:{code:"NumpadSubtract",keyCap:"-",location:h},110:{code:"NumpadDecimal",keyCap:".",location:h},111:{code:"NumpadDivide",keyCap:"/",location:h},112:{code:"F1"},113:{code:"F2"},114:{code:"F3"},115:{code:"F4"},116:{code:"F5"},117:{code:"F6"},118:{code:"F7"},119:{code:"F8"},120:{code:"F9"},121:{code:"F10"},122:{code:"F11"},123:{code:"F12"},124:{code:"F13"},125:{code:"F14"},126:{code:"F15"},127:{code:"F16"},128:{code:"F17"},129:{code:"F18"},130:{code:"F19"},131:{code:"F20"},132:{code:"F21"},133:{code:"F22"},134:{code:"F23"},135:{code:"F24"},144:{code:"NumLock",location:h},145:{code:"ScrollLock"},160:{code:"ShiftLeft",location:a},161:{code:"ShiftRight",location:c},162:{code:"ControlLeft",location:a},163:{code:"ControlRight",location:c},164:{code:"AltLeft",location:a},165:{code:"AltRight",location:c},166:{code:"BrowserBack"},167:{code:"BrowserForward"},168:{code:"BrowserRefresh"},169:{code:"BrowserStop"},170:{code:"BrowserSearch"},171:{code:"BrowserFavorites"},172:{code:"BrowserHome"},173:{code:"VolumeMute"},174:{code:"VolumeDown"},175:{code:"VolumeUp"},176:{code:"MediaTrackNext"},177:{code:"MediaTrackPrevious"},178:{code:"MediaStop"},179:{code:"MediaPlayPause"},180:{code:"LaunchMail"},181:{code:"MediaSelect"},182:{code:"LaunchApp1"},183:{code:"LaunchApp2"},186:{code:"Semicolon",keyCap:";"},187:{code:"Equal",keyCap:"="},188:{code:"Comma",keyCap:","},189:{code:"Minus",keyCap:"-"},190:{code:"Period",keyCap:"."},191:{code:"Slash",keyCap:"/"},192:{code:"Backquote",keyCap:"`"},219:{code:"BracketLeft",keyCap:"["},220:{code:"Backslash",keyCap:"\\\\"},221:{code:"BracketRight",keyCap:"]"},222:{code:"Quote",keyCap:"\'"},226:{code:"IntlBackslash",keyCap:"\\\\"},229:{code:"Process"},246:{code:"Attn"},247:{code:"CrSel"},248:{code:"ExSel"},249:{code:"EraseEof"},250:{code:"Play"},251:{code:"ZoomToggle"},254:{code:"Clear"}};o(d,"moz",{59:{code:"Semicolon",keyCap:";"},61:{code:"Equal",keyCap:"="},107:{code:"Equal",keyCap:"="},109:{code:"Minus",keyCap:"-"},187:{code:"NumpadAdd",keyCap:"+",location:h},189:{code:"NumpadSubtract",keyCap:"-",location:h}}),o(d,"moz-mac",{12:{code:"NumLock",location:h},173:{code:"Minus",keyCap:"-"}}),o(d,"moz-win",{173:{code:"Minus",keyCap:"-"}}),o(d,"chrome-mac",{93:{code:"OSRight",location:c}}),o(d,"safari",{3:{code:"Enter"},25:{code:"Tab"}}),o(d,"ios",{10:{code:"Enter",location:r}}),o(d,"safari-mac",{91:{code:"OSLeft",location:a},93:{code:"OSRight",location:c},229:{code:"KeyQ",keyCap:"Q"}});var y={};"cros"===l&&(y["U+00A0"]={code:"ShiftLeft",location:a},y["U+00A1"]={code:"ShiftRight",location:c},y["U+00A2"]={code:"ControlLeft",location:a},y["U+00A3"]={code:"ControlRight",location:c},y["U+00A4"]={code:"AltLeft",location:a},y["U+00A5"]={code:"AltRight",location:c}),"chrome-mac"===p&&(y["U+0010"]={code:"ContextMenu"}),"safari-mac"===p&&(y["U+0010"]={code:"ContextMenu"}),"ios"===l&&(y["U+0010"]={code:"Function"},y["U+001C"]={code:"ArrowLeft"},y["U+001D"]={code:"ArrowRight"},y["U+001E"]={code:"ArrowUp"},y["U+001F"]={code:"ArrowDown"},y["U+0001"]={code:"Home"},y["U+0004"]={code:"End"},y["U+000B"]={code:"PageUp"},y["U+000C"]={code:"PageDown"});var v=[];v[a]={16:{code:"ShiftLeft",location:a},17:{code:"ControlLeft",location:a},18:{code:"AltLeft",location:a}},v[c]={16:{code:"ShiftRight",location:c},17:{code:"ControlRight",location:c},18:{code:"AltRight",location:c}},v[h]={13:{code:"NumpadEnter",location:h}},o(v[h],"moz",{109:{code:"NumpadSubtract",location:h},107:{code:"NumpadAdd",location:h}}),o(v[a],"moz-mac",{224:{code:"OSLeft",location:a}}),o(v[c],"moz-mac",{224:{code:"OSRight",location:c}}),o(v[c],"moz-win",{91:{code:"OSRight",location:c}}),o(v[c],"mac",{93:{code:"OSRight",location:c}}),o(v[h],"chrome-mac",{12:{code:"NumLock",location:h}}),o(v[h],"safari-mac",{12:{code:"NumLock",location:h},187:{code:"NumpadAdd",location:h},189:{code:"NumpadSubtract",location:h},190:{code:"NumpadDecimal",location:h},191:{code:"NumpadDivide",location:h}});var f={ShiftLeft:{key:"Shift"},ShiftRight:{key:"Shift"},ControlLeft:{key:"Control"},ControlRight:{key:"Control"},AltLeft:{key:"Alt"},AltRight:{key:"Alt"},OSLeft:{key:"OS"},OSRight:{key:"OS"},NumpadEnter:{key:"Enter"},Space:{key:" "},Digit0:{key:"0",shiftKey:")"},Digit1:{key:"1",shiftKey:"!"},Digit2:{key:"2",shiftKey:"@"},Digit3:{key:"3",shiftKey:"#"},Digit4:{key:"4",shiftKey:"$"},Digit5:{key:"5",shiftKey:"%"},Digit6:{key:"6",shiftKey:"^"},Digit7:{key:"7",shiftKey:"&"},Digit8:{key:"8",shiftKey:"*"},Digit9:{key:"9",shiftKey:"("},KeyA:{key:"a",shiftKey:"A"},KeyB:{key:"b",shiftKey:"B"},KeyC:{key:"c",shiftKey:"C"},KeyD:{key:"d",shiftKey:"D"},KeyE:{key:"e",shiftKey:"E"},KeyF:{key:"f",shiftKey:"F"},KeyG:{key:"g",shiftKey:"G"},KeyH:{key:"h",shiftKey:"H"},KeyI:{key:"i",shiftKey:"I"},KeyJ:{key:"j",shiftKey:"J"},KeyK:{key:"k",shiftKey:"K"},KeyL:{key:"l",shiftKey:"L"},KeyM:{key:"m",shiftKey:"M"},KeyN:{key:"n",shiftKey:"N"},KeyO:{key:"o",shiftKey:"O"},KeyP:{key:"p",shiftKey:"P"},KeyQ:{key:"q",shiftKey:"Q"},KeyR:{key:"r",shiftKey:"R"},KeyS:{key:"s",shiftKey:"S"},KeyT:{key:"t",shiftKey:"T"},KeyU:{key:"u",shiftKey:"U"},KeyV:{key:"v",shiftKey:"V"},KeyW:{key:"w",shiftKey:"W"},KeyX:{key:"x",shiftKey:"X"},KeyY:{key:"y",shiftKey:"Y"},KeyZ:{key:"z",shiftKey:"Z"},Numpad0:{key:"0"},Numpad1:{key:"1"},Numpad2:{key:"2"},Numpad3:{key:"3"},Numpad4:{key:"4"},Numpad5:{key:"5"},Numpad6:{key:"6"},Numpad7:{key:"7"},Numpad8:{key:"8"},Numpad9:{key:"9"},NumpadMultiply:{key:"*"},NumpadAdd:{key:"+"},NumpadComma:{key:","},NumpadSubtract:{key:"-"},NumpadDecimal:{key:"."},NumpadDivide:{key:"/"},Semicolon:{key:";",shiftKey:":"},Equal:{key:"=",shiftKey:"+"},Comma:{key:",",shiftKey:"<"},Minus:{key:"-",shiftKey:"_"},Period:{key:".",shiftKey:">"},Slash:{key:"/",shiftKey:"?"},Backquote:{key:"`",shiftKey:"~"},BracketLeft:{key:"[",shiftKey:"{"},Backslash:{key:"\\\\",shiftKey:"|"},BracketRight:{key:"]",shiftKey:"}"},Quote:{key:"\'",shiftKey:\'"\'},IntlBackslash:{key:"\\\\",shiftKey:"|"}};o(f,"mac",{OSLeft:{key:"Meta"},OSRight:{key:"Meta"}});var m={Esc:"Escape",Nonconvert:"NonConvert",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Menu:"ContextMenu",MediaNextTrack:"MediaTrackNext",MediaPreviousTrack:"MediaTrackPrevious",SelectMedia:"MediaSelect",HalfWidth:"Hankaku",FullWidth:"Zenkaku",RomanCharacters:"Romaji",Crsel:"CrSel",Exsel:"ExSel",Zoom:"ZoomToggle"},g=function(t,e){var o={};return Object.keys(t).forEach(function(i){var n=t[i];e in n&&(o[n[e]]=n)}),o}(d,"code");try{var w=s&&"location"in new KeyboardEvent("")}catch(t){}"KeyboardEvent"in t&&"defineProperty"in Object&&function(){function t(t,e,o){e in t||Object.defineProperty(t,e,o)}if(t(KeyboardEvent.prototype,"code",{get:function(){var t=i(this);return t?t.code:""}}),"key"in KeyboardEvent.prototype){var e=Object.getOwnPropertyDescriptor(KeyboardEvent.prototype,"key");Object.defineProperty(KeyboardEvent.prototype,"key",{get:function(){var t=e.get.call(this);return m.hasOwnProperty(t)?m[t]:t}})}t(KeyboardEvent.prototype,"key",{get:function(){var t=i(this);return t&&"key"in t?t.key:"Unidentified"}}),t(KeyboardEvent.prototype,"location",{get:function(){var t=i(this);return t&&"location"in t?t.location:r}}),t(KeyboardEvent.prototype,"locale",{get:function(){return""}})}(),"queryKeyCap"in t.KeyboardEvent||(t.KeyboardEvent.queryKeyCap=n),t.identifyKey=function(t){if(!("code"in t)){var e=i(t);t.code=e?e.code:"",t.key=e&&"key"in e?e.key:"Unidentified",t.location="location"in t?t.location:"keyLocation"in t?t.keyLocation:e&&"location"in e?e.location:r,t.locale=""}}}(window)},{}],5:[function(t,e,o){var i=t("cannon"),n=t("./src/components/math");e.exports={"dynamic-body":t("./src/components/body/dynamic-body"),"static-body":t("./src/components/body/static-body"),constraint:t("./src/components/constraint"),system:t("./src/system/physics"),registerAll:function(t){this._registered||(t=t||window.AFRAME,n.registerAll(),t.systems.physics||t.registerSystem("physics",this.system),t.components["dynamic-body"]||t.registerComponent("dynamic-body",this["dynamic-body"]),t.components["static-body"]||t.registerComponent("static-body",this["static-body"]),t.components.constraint||t.registerComponent("constraint",this.constraint),this._registered=!0)}},window.CANNON=window.CANNON||i},{"./src/components/body/dynamic-body":8,"./src/components/body/static-body":9,"./src/components/constraint":10,"./src/components/math":11,"./src/system/physics":15,cannon:17}],6:[function(t,e,o){var i=t("cannon");i.shape2mesh=function(t){for(var e=new THREE.Object3D,o=0;o<t.shapes.length;o++){var n,s=t.shapes[o];switch(s.type){case i.Shape.types.SPHERE:var r=new THREE.SphereGeometry(s.radius,8,8);n=new THREE.Mesh(r,this.currentMaterial);break;case i.Shape.types.PARTICLE:n=new THREE.Mesh(this.particleGeo,this.particleMaterial);var a=this.settings;n.scale.set(a.particleSize,a.particleSize,a.particleSize);break;case i.Shape.types.PLANE:var c=new THREE.PlaneGeometry(10,10,4,4);n=new THREE.Object3D;var h=new THREE.Object3D,l=new THREE.Mesh(c,this.currentMaterial);l.scale.set(100,100,100),h.add(l),l.castShadow=!0,l.receiveShadow=!0,n.add(h);break;case i.Shape.types.BOX:var u=new THREE.BoxGeometry(2*s.halfExtents.x,2*s.halfExtents.y,2*s.halfExtents.z);n=new THREE.Mesh(u,this.currentMaterial);break;case i.Shape.types.CONVEXPOLYHEDRON:for(var p=new THREE.Geometry,d=0;d<s.vertices.length;d++){var y=s.vertices[d];p.vertices.push(new THREE.Vector3(y.x,y.y,y.z))}for(var d=0;d<s.faces.length;d++)for(var v=s.faces[d],f=v[0],m=1;m<v.length-1;m++){var g=v[m],w=v[m+1];p.faces.push(new THREE.Face3(f,g,w))}p.computeBoundingSphere(),p.computeFaceNormals(),n=new THREE.Mesh(p,this.currentMaterial);break;case i.Shape.types.HEIGHTFIELD:for(var c=new THREE.Geometry,x=new i.Vec3,b=new i.Vec3,E=new i.Vec3,A=0;A<s.data.length-1;A++)for(var B=0;B<s.data[A].length-1;B++)for(var C=0;C<2;C++){s.getConvexTrianglePillar(A,B,0===C),x.copy(s.pillarConvex.vertices[0]),b.copy(s.pillarConvex.vertices[1]),E.copy(s.pillarConvex.vertices[2]),x.vadd(s.pillarOffset,x),b.vadd(s.pillarOffset,b),E.vadd(s.pillarOffset,E),c.vertices.push(new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(b.x,b.y,b.z),new THREE.Vector3(E.x,E.y,E.z));var d=c.vertices.length-3;c.faces.push(new THREE.Face3(d,d+1,d+2))}c.computeBoundingSphere(),c.computeFaceNormals(),n=new THREE.Mesh(c,this.currentMaterial);break;case i.Shape.types.TRIMESH:for(var c=new THREE.Geometry,x=new i.Vec3,b=new i.Vec3,E=new i.Vec3,d=0;d<s.indices.length/3;d++){s.getTriangleVertices(d,x,b,E),c.vertices.push(new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(b.x,b.y,b.z),new THREE.Vector3(E.x,E.y,E.z));var m=c.vertices.length-3;c.faces.push(new THREE.Face3(m,m+1,m+2))}c.computeBoundingSphere(),c.computeFaceNormals(),n=new THREE.Mesh(c,this.currentMaterial);break;default:throw"Visual type not recognized: "+s.type}if(n.receiveShadow=!0,n.castShadow=!0,n.children)for(var d=0;d<n.children.length;d++)if(n.children[d].castShadow=!0,n.children[d].receiveShadow=!0,n.children[d])for(var m=0;m<n.children[d].length;m++)n.children[d].children[m].castShadow=!0,n.children[d].children[m].receiveShadow=!0;var S=t.shapeOffsets[o],R=t.shapeOrientations[o];n.position.set(S.x,S.y,S.z),n.quaternion.set(R.x,R.y,R.z,R.w),e.add(n)}return e},e.exports=i.shape2mesh},{cannon:17}],7:[function(t,e,o){var i=t("cannon"),n=t("three-to-cannon");t("../../../lib/CANNON-shape2mesh"),e.exports={schema:{shape:{default:"auto",oneOf:["auto","box","cylinder","sphere","hull","none"]},cylinderAxis:{default:"y",oneOf:["x","y","z"]},sphereRadius:{default:NaN}},init:function(){this.system=this.el.sceneEl.systems.physics,this.el.sceneEl.hasLoaded?this.initBody():this.el.sceneEl.addEventListener("loaded",this.initBody.bind(this))},initBody:function(){var t,e=this.el,o=this.data,s=e.getAttribute("position");if(this.body=new i.Body({mass:o.mass||0,material:this.system.material,position:new i.Vec3(s.x,s.y,s.z),linearDamping:o.linearDamping,angularDamping:o.angularDamping}),this.el.object3D.updateMatrixWorld(!0),"none"!==o.shape){var r="auto"===o.shape?void 0:AFRAME.utils.extend({},this.data,{type:n.Type[o.shape.toUpperCase()]});if(!(t=n(this.el.object3D,r)))return void this.el.addEventListener("model-loaded",this.initBody.bind(this));this.body.addShape(t,t.offset,t.orientation),this.system.debug&&this.createWireframe(this.body,t)}var a=e.getAttribute("rotation");this.body.quaternion.setFromEuler(THREE.Math.degToRad(a.x),THREE.Math.degToRad(a.y),THREE.Math.degToRad(a.z),"XYZ").normalize(),this.el.body=this.body,this.body.el=this.el,this.isLoaded=!0,this.isPlaying&&this._play(),this.el.emit("body-loaded",{body:this.el.body})},play:function(){this.isLoaded&&this._play()},_play:function(){this.system.addBehavior(this,this.system.Phase.SIMULATE),this.system.addBody(this.body),this.wireframe&&this.el.sceneEl.object3D.add(this.wireframe),this.syncToPhysics()},pause:function(){this.isLoaded&&(this.system.removeBehavior(this,this.system.Phase.SIMULATE),this.system.removeBody(this.body),this.wireframe&&this.el.sceneEl.object3D.remove(this.wireframe))},remove:function(){this.pause(),delete this.body.el,delete this.body,delete this.el.body,delete this.wireframe},createWireframe:function(t,e){var o=e.offset,n=e.orientation,s=i.shape2mesh(t).children[0];this.wireframe=new THREE.LineSegments(new THREE.EdgesGeometry(s.geometry),new THREE.LineBasicMaterial({color:16711680})),o&&(this.wireframe.offset=o.clone()),n&&(n.inverse(n),this.wireframe.orientation=new THREE.Quaternion(n.x,n.y,n.z,n.w)),this.syncWireframe()},syncWireframe:function(){var t,e=this.wireframe;this.wireframe&&(e.quaternion.copy(this.body.quaternion),e.orientation&&e.quaternion.multiply(e.orientation),e.position.copy(this.body.position),e.offset&&(t=e.offset.clone().applyQuaternion(e.quaternion),e.position.add(t)),e.updateMatrix())},syncToPhysics:function(){var t=new THREE.Quaternion,e=new THREE.Vector3;return function(){var o=this.el,i=o.parentEl,n=this.body;n&&(o.components.velocity&&n.velocity.copy(o.getAttribute("velocity")),i.isScene?(n.quaternion.copy(o.object3D.quaternion),n.position.copy(o.object3D.position)):(o.object3D.getWorldQuaternion(t),n.quaternion.copy(t),o.object3D.getWorldPosition(e),n.position.copy(e)),this.wireframe&&this.syncWireframe())}}(),syncFromPhysics:function(){var t=new THREE.Vector3,e=new THREE.Quaternion,o=new THREE.Quaternion;return function(){var i=this.el,n=i.parentEl,s=this.body;s&&(n.isScene?(i.setAttribute("quaternion",s.quaternion),i.setAttribute("position",s.position)):(e.copy(s.quaternion),n.object3D.getWorldQuaternion(o),e.multiply(o.inverse()),i.setAttribute("quaternion",{x:e.x,y:e.y,z:e.z,w:e.w}),t.copy(s.position),n.object3D.worldToLocal(t),i.setAttribute("position",{x:t.x,y:t.y,z:t.z})),this.wireframe&&this.syncWireframe())}}()}},{"../../../lib/CANNON-shape2mesh":6,cannon:17,"three-to-cannon":73}],8:[function(t,e,o){var i=t("./body");e.exports=AFRAME.utils.extend({},i,{dependencies:["quaternion","velocity"],schema:AFRAME.utils.extend({},i.schema,{mass:{default:5},linearDamping:{default:.01},angularDamping:{default:.01}}),step:function(){this.syncFromPhysics()}})},{"./body":7}],9:[function(t,e,o){var i=t("./body");e.exports=AFRAME.utils.extend({},i,{step:function(){this.syncToPhysics()}})},{"./body":7}],10:[function(t,e,o){var i=t("cannon");e.exports={dependencies:["dynamic-body"],multiple:!0,schema:{type:{default:"lock",oneOf:["coneTwist","distance","hinge","lock","pointToPoint"]},target:{type:"selector"},maxForce:{default:1e6,min:0},collideConnected:{default:!0},wakeUpBodies:{default:!0},distance:{default:0,min:0},pivot:{type:"vec3"},targetPivot:{type:"vec3"},axis:{type:"vec3",default:{x:0,y:0,z:1}},targetAxis:{type:"vec3",default:{x:0,y:0,z:1}}},init:function(){this.system=this.el.sceneEl.systems.physics,this.constraint=null},remove:function(){this.constraint&&(this.system.world.removeConstraint(this.constraint),this.constraint=null)},update:function(){var t=this.el,e=this.data;if(this.remove(),!t.body||!e.target.body)return void(t.body?e.target:t).addEventListener("body-loaded",this.update.bind(this,{}));this.constraint=this.createConstraint(),this.system.world.addConstraint(this.constraint)},createConstraint:function(){var t=this.data,e=new i.Vec3(t.pivot.x,t.pivot.y,t.pivot.z),o=new i.Vec3(t.targetPivot.x,t.targetPivot.y,t.targetPivot.z),n=new i.Vec3(t.axis.x,t.axis.y,t.axis.z),s=new i.Vec3(t.targetAxis.x,t.targetAxis.y,t.targetAxis.z);switch(t.type){case"lock":return new i.LockConstraint(this.el.body,t.target.body,{maxForce:t.maxForce});case"distance":return new i.DistanceConstraint(this.el.body,t.target.body,t.distance,t.maxForce);case"hinge":return new i.HingeConstraint(this.el.body,t.target.body,{pivotA:e,pivotB:o,axisA:n,axisB:s,maxForce:t.maxForce});case"coneTwist":return new i.ConeTwistConstraint(this.el.body,t.target.body,{pivotA:e,pivotB:o,axisA:n,axisB:s,maxForce:t.maxForce});case"pointToPoint":return new i.PointToPointConstraint(this.el.body,e,t.target.body,o,t.maxForce);default:throw new Error("[constraint] Unexpected type: "+t.type)}}}},{cannon:17}],11:[function(t,e,o){e.exports={velocity:t("./velocity"),quaternion:t("./quaternion"),registerAll:function(t){this._registered||(t=t||window.AFRAME,t.components.velocity||t.registerComponent("velocity",this.velocity),t.components.quaternion||t.registerComponent("quaternion",this.quaternion),this._registered=!0)}}},{"./quaternion":12,"./velocity":13}],12:[function(t,e,o){e.exports={schema:{type:"vec4"},play:function(){var t=this.el,e=t.object3D.quaternion;t.hasAttribute("rotation")&&(t.components.rotation.update(),t.setAttribute("quaternion",{x:e.x,y:e.y,z:e.z,w:e.w}),t.removeAttribute("rotation"),this.update())},update:function(){var t=this.data;this.el.object3D.quaternion.set(t.x,t.y,t.z,t.w)}}},{}],13:[function(t,e,o){e.exports={schema:{type:"vec3"},init:function(){this.system=this.el.sceneEl.systems.physics,this.system&&this.system.addBehavior(this,this.system.Phase.RENDER)},remove:function(){this.system&&this.system.removeBehavior(this,this.system.Phase.RENDER)},tick:function(t,e){e&&(this.system||this.step(t,e))},step:function(t,e){if(e){var o=this.el.sceneEl.systems.physics||{data:{maxInterval:1/60}},i=this.el.getAttribute("velocity")||{x:0,y:0,z:0},n=this.el.getAttribute("position")||{x:0,y:0,z:0};e=Math.min(e,1e3*o.data.maxInterval),this.el.setAttribute("position",{x:n.x+i.x*e/1e3,y:n.y+i.y*e/1e3,z:n.z+i.z*e/1e3})}}}},{}],14:[function(t,e,o){e.exports={GRAVITY:-9.8,MAX_INTERVAL:4/60,ITERATIONS:10,CONTACT_MATERIAL:{friction:.01,restitution:.3,contactEquationStiffness:1e8,contactEquationRelaxation:3,frictionEquationStiffness:1e8,frictionEquationRegularization:3}}},{}],15:[function(t,e,o){var i=t("cannon"),n=t("../constants"),s=n.GRAVITY,r=n.CONTACT_MATERIAL;e.exports={schema:{gravity:{default:s},iterations:{default:n.ITERATIONS},friction:{default:r.friction},restitution:{default:r.restitution},contactEquationStiffness:{default:r.contactEquationStiffness},contactEquationRelaxation:{default:r.contactEquationRelaxation},frictionEquationStiffness:{default:r.frictionEquationStiffness},frictionEquationRegularization:{default:r.frictionEquationRegularization},maxInterval:{default:4/60},debug:{default:!1}},Phase:{SIMULATE:"sim",RENDER:"render"},init:function(){var t=this.data;this.debug=t.debug,this.children={},this.children[this.Phase.SIMULATE]=[],this.children[this.Phase.RENDER]=[],this.listeners={},this.world=new i.World,this.world.quatNormalizeSkip=0,this.world.quatNormalizeFast=!1,this.world.solver.iterations=t.iterations,this.world.gravity.set(0,t.gravity,0),this.world.broadphase=new i.NaiveBroadphase,this.material=new i.Material({name:"defaultMaterial"}),this.contactMaterial=new i.ContactMaterial(this.material,this.material,{friction:t.friction,restitution:t.restitution,contactEquationStiffness:t.contactEquationStiffness,contactEquationRelaxation:t.contactEquationRelaxation,frictionEquationStiffness:t.frictionEquationStiffness,frictionEquationRegularization:t.frictionEquationRegularization}),this.world.addContactMaterial(this.contactMaterial)},tick:function(t,e){if(e){this.world.step(Math.min(e/1e3,this.data.maxInterval));var o;for(o=0;o<this.children[this.Phase.SIMULATE].length;o++)this.children[this.Phase.SIMULATE][o].step(t,e);for(o=0;o<this.children[this.Phase.RENDER].length;o++)this.children[this.Phase.RENDER][o].step(t,e)}},addBody:function(t){this.listeners[t.id]=function(e){t.el.emit("collide",e)},t.addEventListener("collide",this.listeners[t.id]),this.world.addBody(t)},removeBody:function(t){t.removeEventListener("collide",this.listeners[t.id]),delete this.listeners[t.id],this.world.removeBody(t)},addBehavior:function(t,e){this.children[e].push(t)},removeBehavior:function(t,e){this.children[e].splice(this.children[e].indexOf(t),1)},update:function(t){var e=this.data;e.debug!==t.debug&&console.warn("[physics] `debug` cannot be changed dynamically."),e.maxInterval,t.maxInterval,e.gravity!==t.gravity&&this.world.gravity.set(0,e.gravity,0),this.contactMaterial.friction=e.friction,this.contactMaterial.restitution=e.restitution,this.contactMaterial.contactEquationStiffness=e.contactEquationStiffness,this.contactMaterial.contactEquationRelaxation=e.contactEquationRelaxation,this.contactMaterial.frictionEquationStiffness=e.frictionEquationStiffness,this.contactMaterial.frictionEquationRegularization=e.frictionEquationRegularization}}},{"../constants":14,cannon:17}],16:[function(t,e,o){e.exports={_args:[[{hosted:{directUrl:"https://raw.githubusercontent.com/donmccurdy/cannon.js/v0.6.2-dev1/package.json",gitUrl:"git://github.com/donmccurdy/cannon.js.git#v0.6.2-dev1",httpsUrl:"git+https://github.com/donmccurdy/cannon.js.git#v0.6.2-dev1",shortcut:"github:donmccurdy/cannon.js#v0.6.2-dev1",ssh:"git@github.com:donmccurdy/cannon.js.git#v0.6.2-dev1",sshUrl:"git+ssh://git@github.com/donmccurdy/cannon.js.git#v0.6.2-dev1",type:"github"},name:"cannon",raw:"cannon@github:donmccurdy/cannon.js#v0.6.2-dev1",rawSpec:"github:donmccurdy/cannon.js#v0.6.2-dev1",scope:null,spec:"github:donmccurdy/cannon.js#v0.6.2-dev1",type:"hosted"},"/Users/donmccurdy/Documents/Projects/aframe-extras/node_modules/aframe-physics-system"]],_from:"donmccurdy/cannon.js#v0.6.2-dev1",_id:"cannon@0.6.2",_inCache:!0,_installable:!0,_location:"/cannon",_phantomChildren:{},_requested:{hosted:{directUrl:"https://raw.githubusercontent.com/donmccurdy/cannon.js/v0.6.2-dev1/package.json",gitUrl:"git://github.com/donmccurdy/cannon.js.git#v0.6.2-dev1",httpsUrl:"git+https://github.com/donmccurdy/cannon.js.git#v0.6.2-dev1",shortcut:"github:donmccurdy/cannon.js#v0.6.2-dev1",ssh:"git@github.com:donmccurdy/cannon.js.git#v0.6.2-dev1",sshUrl:"git+ssh://git@github.com/donmccurdy/cannon.js.git#v0.6.2-dev1",type:"github"},name:"cannon",raw:"cannon@github:donmccurdy/cannon.js#v0.6.2-dev1",rawSpec:"github:donmccurdy/cannon.js#v0.6.2-dev1",scope:null,spec:"github:donmccurdy/cannon.js#v0.6.2-dev1",type:"hosted"},_requiredBy:["/aframe-physics-system"],_resolved:"git://github.com/donmccurdy/cannon.js.git#022e8ba53fa83abf0ad8a0e4fd08623123838a17",_shasum:"57d93629128bb64d9fe23af26d2df82d68b09d7f",_shrinkwrap:null,_spec:"cannon@github:donmccurdy/cannon.js#v0.6.2-dev1",_where:"/Users/donmccurdy/Documents/Projects/aframe-extras/node_modules/aframe-physics-system",author:{email:"schteppe@gmail.com",name:"Stefan Hedman",url:"http://steffe.se"},bugs:{url:"https://github.com/schteppe/cannon.js/issues"},dependencies:{},description:"A lightweight 3D physics engine written in JavaScript.",devDependencies:{browserify:"*",grunt:"~0.4.0","grunt-browserify":"^2.1.4","grunt-contrib-concat":"~0.1.3","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-uglify":"^0.5.1","grunt-contrib-yuidoc":"^0.5.2",jshint:"latest",nodeunit:"^0.9.0","uglify-js":"latest"},engines:{node:"*"},gitHead:"022e8ba53fa83abf0ad8a0e4fd08623123838a17",homepage:"https://github.com/schteppe/cannon.js",keywords:["cannon.js","cannon","physics","engine","3d"],licenses:[{type:"MIT"}],main:"./src/Cannon.js",name:"cannon",optionalDependencies:{},\nreadme:\'# cannon.js\\n\\n### Lightweight 3D physics for the web\\nInspired by [three.js](https://github.com/mrdoob/three.js) and [ammo.js](https://github.com/kripken/ammo.js), and driven by the fact that the web lacks a physics engine, here comes cannon.js.\\nThe rigid body physics engine includes simple collision detection, various body shapes, contacts, friction and constraints.\\n\\n[Demos](http://schteppe.github.com/cannon.js) - [Documentation](http://schteppe.github.com/cannon.js/docs) - [Rendering hints](https://github.com/schteppe/cannon.js/tree/master/examples) - [NPM package](https://npmjs.org/package/cannon) - [CDN](https://cdnjs.com/libraries/cannon.js)\\n\\n### Browser install\\n\\nJust include [cannon.js](https://github.com/schteppe/cannon.js/releases/download/v0.6.2/cannon.js) or [cannon.min.js](https://github.com/schteppe/cannon.js/releases/download/v0.6.2/cannon.min.js) in your html and you\\\'re done:\\n\\n```html\\n<script src="cannon.min.js"><\\/script>\\n```\\n\\n### Node.js install\\n\\nInstall the cannon package via NPM:\\n\\n```bash\\nnpm install --save cannon\\n```\\n\\nAlternatively, point to the Github repo directly to get the very latest version:\\n\\n```bash\\nnpm install --save schteppe/cannon.js\\n```\\n\\n### Example\\n\\nThe sample code below creates a sphere on a plane, steps the simulation, and prints the sphere simulation to the console. Note that Cannon.js uses [SI units](http://en.wikipedia.org/wiki/International_System_of_Units) (metre, kilogram, second, etc.).\\n\\n```javascript\\n// Setup our world\\nvar world = new CANNON.World();\\nworld.gravity.set(0, 0, -9.82); // m/s²\\n\\n// Create a sphere\\nvar radius = 1; // m\\nvar sphereBody = new CANNON.Body({\\n   mass: 5, // kg\\n   position: new CANNON.Vec3(0, 0, 10), // m\\n   shape: new CANNON.Sphere(radius)\\n});\\nworld.addBody(sphereBody);\\n\\n// Create a plane\\nvar groundBody = new CANNON.Body({\\n    mass: 0 // mass == 0 makes the body static\\n});\\nvar groundShape = new CANNON.Plane();\\ngroundBody.addShape(groundShape);\\nworld.addBody(groundBody);\\n\\nvar fixedTimeStep = 1.0 / 60.0; // seconds\\nvar maxSubSteps = 3;\\n\\n// Start the simulation loop\\nvar lastTime;\\n(function simloop(time){\\n  requestAnimationFrame(simloop);\\n  if(lastTime !== undefined){\\n     var dt = (time - lastTime) / 1000;\\n     world.step(fixedTimeStep, dt, maxSubSteps);\\n  }\\n  console.log("Sphere z position: " + sphereBody.position.z);\\n  lastTime = time;\\n})();\\n```\\n\\nIf you want to know how to use cannon.js with a rendering engine, for example Three.js, see the [Examples](examples).\\n\\n### Features\\n* Rigid body dynamics\\n* Discrete collision detection\\n* Contacts, friction and restitution\\n* Constraints\\n   * PointToPoint (a.k.a. ball/socket joint)\\n   * Distance\\n   * Hinge (with optional motor)\\n   * Lock\\n   * ConeTwist\\n* Gauss-Seidel constraint solver and an island split algorithm\\n* Collision filters\\n* Body sleeping\\n* Experimental SPH / fluid support\\n* Various shapes and collision algorithms (see table below)\\n\\n|             | [Sphere](http://schteppe.github.io/cannon.js/docs/classes/Sphere.html) | [Plane](http://schteppe.github.io/cannon.js/docs/classes/Plane.html) | [Box](http://schteppe.github.io/cannon.js/docs/classes/Box.html) | [Convex](http://schteppe.github.io/cannon.js/docs/classes/ConvexPolyhedron.html) | [Particle](http://schteppe.github.io/cannon.js/docs/classes/Particle.html) | [Heightfield](http://schteppe.github.io/cannon.js/docs/classes/Heightfield.html) | [Trimesh](http://schteppe.github.io/cannon.js/docs/classes/Trimesh.html) |\\n| :-----------|:------:|:-----:|:---:|:------:|:--------:|:-----------:|:-------:|\\n| Sphere      | Yes    | Yes   | Yes | Yes    | Yes      | Yes         | Yes     |\\n| Plane       | -      | -     | Yes | Yes    | Yes      | -           | Yes     |\\n| Box         | -      | -     | Yes | Yes    | Yes      | Yes         | (todo)  |\\n| Cylinder    | -      | -     | Yes | Yes    | Yes      | Yes         | (todo)  |\\n| Convex      | -      | -     | -   | Yes    | Yes      | Yes         | (todo)  |\\n| Particle    | -      | -     | -   | -      | -        | (todo)      | (todo)  |\\n| Heightfield | -      | -     | -   | -      | -        | -           | (todo)  |\\n| Trimesh     | -      | -     | -   | -      | -        | -           | -       |\\n\\n### Todo\\nThe simpler todos are marked with ```@todo``` in the code. Github Issues can and should also be used for todos.\\n\\n### Help\\nCreate an [issue](https://github.com/schteppe/cannon.js/issues) if you need help.\\n\',readmeFilename:"README.markdown",repository:{type:"git",url:"git+https://github.com/schteppe/cannon.js.git"},version:"0.6.2"}},{}],17:[function(t,e,o){e.exports={version:t("../package.json").version,AABB:t("./collision/AABB"),ArrayCollisionMatrix:t("./collision/ArrayCollisionMatrix"),Body:t("./objects/Body"),Box:t("./shapes/Box"),Broadphase:t("./collision/Broadphase"),Constraint:t("./constraints/Constraint"),ContactEquation:t("./equations/ContactEquation"),Narrowphase:t("./world/Narrowphase"),ConeTwistConstraint:t("./constraints/ConeTwistConstraint"),ContactMaterial:t("./material/ContactMaterial"),ConvexPolyhedron:t("./shapes/ConvexPolyhedron"),Cylinder:t("./shapes/Cylinder"),DistanceConstraint:t("./constraints/DistanceConstraint"),Equation:t("./equations/Equation"),EventTarget:t("./utils/EventTarget"),FrictionEquation:t("./equations/FrictionEquation"),GSSolver:t("./solver/GSSolver"),GridBroadphase:t("./collision/GridBroadphase"),Heightfield:t("./shapes/Heightfield"),HingeConstraint:t("./constraints/HingeConstraint"),LockConstraint:t("./constraints/LockConstraint"),Mat3:t("./math/Mat3"),Material:t("./material/Material"),NaiveBroadphase:t("./collision/NaiveBroadphase"),ObjectCollisionMatrix:t("./collision/ObjectCollisionMatrix"),Pool:t("./utils/Pool"),Particle:t("./shapes/Particle"),Plane:t("./shapes/Plane"),PointToPointConstraint:t("./constraints/PointToPointConstraint"),Quaternion:t("./math/Quaternion"),Ray:t("./collision/Ray"),RaycastVehicle:t("./objects/RaycastVehicle"),RaycastResult:t("./collision/RaycastResult"),RigidVehicle:t("./objects/RigidVehicle"),RotationalEquation:t("./equations/RotationalEquation"),RotationalMotorEquation:t("./equations/RotationalMotorEquation"),SAPBroadphase:t("./collision/SAPBroadphase"),SPHSystem:t("./objects/SPHSystem"),Shape:t("./shapes/Shape"),Solver:t("./solver/Solver"),Sphere:t("./shapes/Sphere"),SplitSolver:t("./solver/SplitSolver"),Spring:t("./objects/Spring"),Transform:t("./math/Transform"),Trimesh:t("./shapes/Trimesh"),Vec3:t("./math/Vec3"),Vec3Pool:t("./utils/Vec3Pool"),World:t("./world/World")}},{"../package.json":16,"./collision/AABB":18,"./collision/ArrayCollisionMatrix":19,"./collision/Broadphase":20,"./collision/GridBroadphase":21,"./collision/NaiveBroadphase":22,"./collision/ObjectCollisionMatrix":23,"./collision/Ray":25,"./collision/RaycastResult":26,"./collision/SAPBroadphase":27,"./constraints/ConeTwistConstraint":28,"./constraints/Constraint":29,"./constraints/DistanceConstraint":30,"./constraints/HingeConstraint":31,"./constraints/LockConstraint":32,"./constraints/PointToPointConstraint":33,"./equations/ContactEquation":35,"./equations/Equation":36,"./equations/FrictionEquation":37,"./equations/RotationalEquation":38,"./equations/RotationalMotorEquation":39,"./material/ContactMaterial":40,"./material/Material":41,"./math/Mat3":43,"./math/Quaternion":44,"./math/Transform":45,"./math/Vec3":46,"./objects/Body":47,"./objects/RaycastVehicle":48,"./objects/RigidVehicle":49,"./objects/SPHSystem":50,"./objects/Spring":51,"./shapes/Box":53,"./shapes/ConvexPolyhedron":54,"./shapes/Cylinder":55,"./shapes/Heightfield":56,"./shapes/Particle":57,"./shapes/Plane":58,"./shapes/Shape":59,"./shapes/Sphere":60,"./shapes/Trimesh":61,"./solver/GSSolver":62,"./solver/Solver":63,"./solver/SplitSolver":64,"./utils/EventTarget":65,"./utils/Pool":67,"./utils/Vec3Pool":70,"./world/Narrowphase":71,"./world/World":72}],18:[function(t,e,o){function i(t){t=t||{},this.lowerBound=new n,t.lowerBound&&this.lowerBound.copy(t.lowerBound),this.upperBound=new n,t.upperBound&&this.upperBound.copy(t.upperBound)}var n=t("../math/Vec3");t("../utils/Utils");e.exports=i;var s=new n;i.prototype.setFromPoints=function(t,e,o,i){var n=this.lowerBound,r=this.upperBound,a=o;n.copy(t[0]),a&&a.vmult(n,n),r.copy(n);for(var c=1;c<t.length;c++){var h=t[c];a&&(a.vmult(h,s),h=s),h.x>r.x&&(r.x=h.x),h.x<n.x&&(n.x=h.x),h.y>r.y&&(r.y=h.y),h.y<n.y&&(n.y=h.y),h.z>r.z&&(r.z=h.z),h.z<n.z&&(n.z=h.z)}return e&&(e.vadd(n,n),e.vadd(r,r)),i&&(n.x-=i,n.y-=i,n.z-=i,r.x+=i,r.y+=i,r.z+=i),this},i.prototype.copy=function(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this},i.prototype.clone=function(){return(new i).copy(this)},i.prototype.extend=function(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)},i.prototype.overlaps=function(t){var e=this.lowerBound,o=this.upperBound,i=t.lowerBound,n=t.upperBound,s=i.x<=o.x&&o.x<=n.x||e.x<=n.x&&n.x<=o.x,r=i.y<=o.y&&o.y<=n.y||e.y<=n.y&&n.y<=o.y,a=i.z<=o.z&&o.z<=n.z||e.z<=n.z&&n.z<=o.z;return s&&r&&a},i.prototype.volume=function(){var t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)},i.prototype.contains=function(t){var e=this.lowerBound,o=this.upperBound,i=t.lowerBound,n=t.upperBound;return e.x<=i.x&&o.x>=n.x&&e.y<=i.y&&o.y>=n.y&&e.z<=i.z&&o.z>=n.z},i.prototype.getCorners=function(t,e,o,i,n,s,r,a){var c=this.lowerBound,h=this.upperBound;t.copy(c),e.set(h.x,c.y,c.z),o.set(h.x,h.y,c.z),i.set(c.x,h.y,h.z),n.set(h.x,c.y,c.z),s.set(c.x,h.y,c.z),r.set(c.x,c.y,h.z),a.copy(h)};var r=[new n,new n,new n,new n,new n,new n,new n,new n];i.prototype.toLocalFrame=function(t,e){var o=r,i=o[0],n=o[1],s=o[2],a=o[3],c=o[4],h=o[5],l=o[6],u=o[7];this.getCorners(i,n,s,a,c,h,l,u);for(var p=0;8!==p;p++){var d=o[p];t.pointToLocal(d,d)}return e.setFromPoints(o)},i.prototype.toWorldFrame=function(t,e){var o=r,i=o[0],n=o[1],s=o[2],a=o[3],c=o[4],h=o[5],l=o[6],u=o[7];this.getCorners(i,n,s,a,c,h,l,u);for(var p=0;8!==p;p++){var d=o[p];t.pointToWorld(d,d)}return e.setFromPoints(o)},i.prototype.overlapsRay=function(t){var e=1/t._direction.x,o=1/t._direction.y,i=1/t._direction.z,n=(this.lowerBound.x-t.from.x)*e,s=(this.upperBound.x-t.from.x)*e,r=(this.lowerBound.y-t.from.y)*o,a=(this.upperBound.y-t.from.y)*o,c=(this.lowerBound.z-t.from.z)*i,h=(this.upperBound.z-t.from.z)*i,l=Math.max(Math.max(Math.min(n,s),Math.min(r,a)),Math.min(c,h)),u=Math.min(Math.min(Math.max(n,s),Math.max(r,a)),Math.max(c,h));return!(u<0)&&!(l>u)}},{"../math/Vec3":46,"../utils/Utils":69}],19:[function(t,e,o){function i(){this.matrix=[]}e.exports=i,i.prototype.get=function(t,e){if(t=t.index,(e=e.index)>t){var o=e;e=t,t=o}return this.matrix[(t*(t+1)>>1)+e-1]},i.prototype.set=function(t,e,o){if(t=t.index,(e=e.index)>t){var i=e;e=t,t=i}this.matrix[(t*(t+1)>>1)+e-1]=o?1:0},i.prototype.reset=function(){for(var t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0},i.prototype.setNumObjects=function(t){this.matrix.length=t*(t-1)>>1}},{}],20:[function(t,e,o){function i(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}var n=t("../objects/Body"),s=t("../math/Vec3"),r=t("../math/Quaternion");t("../shapes/Shape"),t("../shapes/Plane");e.exports=i,i.prototype.collisionPairs=function(t,e,o){throw new Error("collisionPairs not implemented for this BroadPhase class!")},i.prototype.needBroadphaseCollision=function(t,e){return 0!=(t.collisionFilterGroup&e.collisionFilterMask)&&0!=(e.collisionFilterGroup&t.collisionFilterMask)&&(0==(t.type&n.STATIC)&&t.sleepState!==n.SLEEPING||0==(e.type&n.STATIC)&&e.sleepState!==n.SLEEPING)},i.prototype.intersectionTest=function(t,e,o,i){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,o,i):this.doBoundingSphereBroadphase(t,e,o,i)};var a=new s;new s,new r,new s;i.prototype.doBoundingSphereBroadphase=function(t,e,o,i){var n=a;e.position.vsub(t.position,n);var s=Math.pow(t.boundingRadius+e.boundingRadius,2);n.norm2()<s&&(o.push(t),i.push(e))},i.prototype.doBoundingBoxBroadphase=function(t,e,o,i){t.aabbNeedsUpdate&&t.computeAABB(),e.aabbNeedsUpdate&&e.computeAABB(),t.aabb.overlaps(e.aabb)&&(o.push(t),i.push(e))};var c={keys:[]},h=[],l=[];i.prototype.makePairsUnique=function(t,e){for(var o=c,i=h,n=l,s=t.length,r=0;r!==s;r++)i[r]=t[r],n[r]=e[r];t.length=0,e.length=0;for(var r=0;r!==s;r++){var a=i[r].id,u=n[r].id,p=a<u?a+","+u:u+","+a;o[p]=r,o.keys.push(p)}for(var r=0;r!==o.keys.length;r++){var p=o.keys.pop(),d=o[p];t.push(i[d]),e.push(n[d]),delete o[p]}},i.prototype.setWorld=function(t){};var u=new s;i.boundingSphereCheck=function(t,e){var o=u;return t.position.vsub(e.position,o),Math.pow(t.shape.boundingSphereRadius+e.shape.boundingSphereRadius,2)>o.norm2()},i.prototype.aabbQuery=function(t,e,o){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}},{"../math/Quaternion":44,"../math/Vec3":46,"../objects/Body":47,"../shapes/Plane":58,"../shapes/Shape":59}],21:[function(t,e,o){function i(t,e,o,i,r){n.apply(this),this.nx=o||10,this.ny=i||10,this.nz=r||10,this.aabbMin=t||new s(100,100,100),this.aabbMax=e||new s(-100,-100,-100);var a=this.nx*this.ny*this.nz;if(a<=0)throw"GridBroadphase: Each dimension\'s n must be >0";this.bins=[],this.binLengths=[],this.bins.length=a,this.binLengths.length=a;for(var c=0;c<a;c++)this.bins[c]=[],this.binLengths[c]=0}e.exports=i;var n=t("./Broadphase"),s=t("../math/Vec3"),r=t("../shapes/Shape");i.prototype=new n,i.prototype.constructor=i;var a=new s;new s;i.prototype.collisionPairs=function(t,e,o){function i(t,e,o,i,n,s,r){var a=(t-w)*E|0,c=(e-x)*A|0,h=(o-b)*B|0,f=F((i-w)*E),m=F((n-x)*A),g=F((s-b)*B);a<0?a=0:a>=l&&(a=l-1),c<0?c=0:c>=u&&(c=u-1),h<0?h=0:h>=p&&(h=p-1),f<0?f=0:f>=l&&(f=l-1),m<0?m=0:m>=u&&(m=u-1),g<0?g=0:g>=p&&(g=p-1),a*=d,c*=y,h*=v,f*=d,m*=y,g*=v;for(var C=a;C<=f;C+=d)for(var S=c;S<=m;S+=y)for(var R=h;R<=g;R+=v){var M=C+S+R;P[M][q[M]++]=r}}for(var n=t.numObjects(),s=t.bodies,c=this.aabbMax,h=this.aabbMin,l=this.nx,u=this.ny,p=this.nz,d=u*p,y=p,v=1,f=c.x,m=c.y,g=c.z,w=h.x,x=h.y,b=h.z,E=l/(f-w),A=u/(m-x),B=p/(g-b),C=(f-w)/l,S=(m-x)/u,R=(g-b)/p,M=.5*Math.sqrt(C*C+S*S+R*R),T=r.types,z=T.SPHERE,k=T.PLANE,P=(T.BOX,T.COMPOUND,T.CONVEXPOLYHEDRON,this.bins),q=this.binLengths,L=this.bins.length,V=0;V!==L;V++)q[V]=0;for(var F=Math.ceil,h=Math.min,c=Math.max,V=0;V!==n;V++){var N=s[V],I=N.shape;switch(I.type){case z:var j=N.position.x,O=N.position.y,D=N.position.z,W=I.radius;i(j-W,O-W,D-W,j+W,O+W,D+W,N);break;case k:I.worldNormalNeedsUpdate&&I.computeWorldNormal(N.quaternion);var H=I.worldNormal,K=w+.5*C-N.position.x,_=x+.5*S-N.position.y,U=b+.5*R-N.position.z,G=a;G.set(K,_,U);for(var Y=0,X=0;Y!==l;Y++,X+=d,G.y=_,G.x+=C)for(var Q=0,Z=0;Q!==u;Q++,Z+=y,G.z=U,G.y+=S)for(var J=0,$=0;J!==p;J++,$+=v,G.z+=R)if(G.dot(H)<M){var tt=X+Z+$;P[tt][q[tt]++]=N}break;default:N.aabbNeedsUpdate&&N.computeAABB(),i(N.aabb.lowerBound.x,N.aabb.lowerBound.y,N.aabb.lowerBound.z,N.aabb.upperBound.x,N.aabb.upperBound.y,N.aabb.upperBound.z,N)}}for(var V=0;V!==L;V++){var et=q[V];if(et>1)for(var ot=P[V],Y=0;Y!==et;Y++)for(var N=ot[Y],Q=0;Q!==Y;Q++){var it=ot[Q];this.needBroadphaseCollision(N,it)&&this.intersectionTest(N,it,e,o)}}this.makePairsUnique(e,o)}},{"../math/Vec3":46,"../shapes/Shape":59,"./Broadphase":20}],22:[function(t,e,o){function i(){n.apply(this)}e.exports=i;var n=t("./Broadphase"),s=t("./AABB");i.prototype=new n,i.prototype.constructor=i,i.prototype.collisionPairs=function(t,e,o){var i,n,s,r,a=t.bodies,c=a.length;for(i=0;i!==c;i++)for(n=0;n!==i;n++)s=a[i],r=a[n],this.needBroadphaseCollision(s,r)&&this.intersectionTest(s,r,e,o)};new s;i.prototype.aabbQuery=function(t,e,o){o=o||[];for(var i=0;i<t.bodies.length;i++){var n=t.bodies[i];n.aabbNeedsUpdate&&n.computeAABB(),n.aabb.overlaps(e)&&o.push(n)}return o}},{"./AABB":18,"./Broadphase":20}],23:[function(t,e,o){function i(){this.matrix={}}e.exports=i,i.prototype.get=function(t,e){if(t=t.id,(e=e.id)>t){var o=e;e=t,t=o}return t+"-"+e in this.matrix},i.prototype.set=function(t,e,o){if(t=t.id,(e=e.id)>t){var i=e;e=t,t=i}o?this.matrix[t+"-"+e]=!0:delete this.matrix[t+"-"+e]},i.prototype.reset=function(){this.matrix={}},i.prototype.setNumObjects=function(t){}},{}],24:[function(t,e,o){function i(){this.current=[],this.previous=[]}function n(t,e){t.push((4294901760&e)>>16,65535&e)}e.exports=i,i.prototype.getKey=function(t,e){if(e<t){var o=e;e=t,t=o}return t<<16|e},i.prototype.set=function(t,e){for(var o=this.getKey(t,e),i=this.current,n=0;o>i[n];)n++;if(o!==i[n]){for(var e=i.length-1;e>=n;e--)i[e+1]=i[e];i[n]=o}},i.prototype.tick=function(){var t=this.current;this.current=this.previous,this.previous=t,this.current.length=0},i.prototype.getDiff=function(t,e){for(var o=this.current,i=this.previous,s=o.length,r=i.length,a=0,c=0;c<s;c++){for(var h=!1,l=o[c];l>i[a];)a++;h=l===i[a],h||n(t,l)}a=0;for(var c=0;c<r;c++){for(var h=!1,u=i[c];u>o[a];)a++;h=o[a]===u,h||n(e,u)}}},{}],25:[function(t,e,o){function i(t,e){this.from=t?t.clone():new r,this.to=e?e.clone():new r,this._direction=new r,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=i.ANY,this.result=new h,this.hasHit=!1,this.callback=function(t){}}function n(t,e,o,i){i.vsub(e,I),o.vsub(e,y),t.vsub(e,v);var n,s,r=I.dot(I),a=I.dot(y),c=I.dot(v),h=y.dot(y),l=y.dot(v);return(n=h*c-a*l)>=0&&(s=r*l-a*c)>=0&&n+s<r*h-a*a}function s(t,e,o){o.vsub(t,I);var i=I.dot(e);return e.mult(i,j),j.vadd(t,j),o.distanceTo(j)}e.exports=i;var r=t("../math/Vec3"),a=t("../math/Quaternion"),c=t("../math/Transform"),h=(t("../shapes/ConvexPolyhedron"),t("../shapes/Box"),t("../collision/RaycastResult")),l=t("../shapes/Shape"),u=t("../collision/AABB");i.prototype.constructor=i,i.CLOSEST=1,i.ANY=2,i.ALL=4;var p=new u,d=[];i.prototype.intersectWorld=function(t,e){return this.mode=e.mode||i.ANY,this.result=e.result||new h,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=void 0!==e.collisionFilterMask?e.collisionFilterMask:-1,this.collisionFilterGroup=void 0!==e.collisionFilterGroup?e.collisionFilterGroup:-1,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||function(){},this.hasHit=!1,this.result.reset(),this._updateDirection(),this.getAABB(p),d.length=0,t.broadphase.aabbQuery(t,p,d),this.intersectBodies(d),this.hasHit};var y=new r,v=new r;i.pointInTriangle=n;var f=new r,m=new a;i.prototype.intersectBody=function(t,e){e&&(this.result=e,this._updateDirection());var o=this.checkCollisionResponse;if((!o||t.collisionResponse)&&0!=(this.collisionFilterGroup&t.collisionFilterMask)&&0!=(t.collisionFilterGroup&this.collisionFilterMask))for(var i=f,n=m,s=0,r=t.shapes.length;s<r;s++){var a=t.shapes[s];if((!o||a.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[s],n),t.quaternion.vmult(t.shapeOffsets[s],i),i.vadd(t.position,i),this.intersectShape(a,n,i,t),this.result._shouldStop))break}},i.prototype.intersectBodies=function(t,e){e&&(this.result=e,this._updateDirection());for(var o=0,i=t.length;!this.result._shouldStop&&o<i;o++)this.intersectBody(t[o])},i.prototype._updateDirection=function(){this.to.vsub(this.from,this._direction),this._direction.normalize()},i.prototype.intersectShape=function(t,e,o,i){if(!(s(this.from,this._direction,o)>t.boundingSphereRadius)){var n=this[t.type];n&&n.call(this,t,e,o,i,t)}};var g=(new r,new r,new r),w=new r,x=new r,b=new r;new r,new h;i.prototype.intersectBox=function(t,e,o,i,n){return this.intersectConvex(t.convexPolyhedronRepresentation,e,o,i,n)},i.prototype[l.types.BOX]=i.prototype.intersectBox,i.prototype.intersectPlane=function(t,e,o,i,n){var s=this.from,a=this.to,c=this._direction,h=new r(0,0,1);e.vmult(h,h);var l=new r;s.vsub(o,l);var u=l.dot(h);if(a.vsub(o,l),!(u*l.dot(h)>0||s.distanceTo(a)<u)){var p=h.dot(c);if(!(Math.abs(p)<this.precision)){var d=new r,y=new r,v=new r;s.vsub(o,d);var f=-h.dot(d)/p;c.scale(f,y),s.vadd(y,v),this.reportIntersection(h,v,n,i,-1)}}},i.prototype[l.types.PLANE]=i.prototype.intersectPlane,i.prototype.getAABB=function(t){var e=this.to,o=this.from;t.lowerBound.x=Math.min(e.x,o.x),t.lowerBound.y=Math.min(e.y,o.y),t.lowerBound.z=Math.min(e.z,o.z),t.upperBound.x=Math.max(e.x,o.x),t.upperBound.y=Math.max(e.y,o.y),t.upperBound.z=Math.max(e.z,o.z)};var E={faceList:[0]},A=new r,B=new i,C=[];i.prototype.intersectHeightfield=function(t,e,o,i,n){var s=(t.data,t.elementSize,B);s.from.copy(this.from),s.to.copy(this.to),c.pointToLocalFrame(o,e,s.from,s.from),c.pointToLocalFrame(o,e,s.to,s.to),s._updateDirection();var r,a,h,l,p=C;r=a=0,h=l=t.data.length-1;var d=new u;s.getAABB(d),t.getIndexOfPosition(d.lowerBound.x,d.lowerBound.y,p,!0),r=Math.max(r,p[0]),a=Math.max(a,p[1]),t.getIndexOfPosition(d.upperBound.x,d.upperBound.y,p,!0),h=Math.min(h,p[0]+1),l=Math.min(l,p[1]+1);for(var y=r;y<h;y++)for(var v=a;v<l;v++){if(this.result._shouldStop)return;if(t.getAabbAtIndex(y,v,d),d.overlapsRay(s)){if(t.getConvexTrianglePillar(y,v,!1),c.pointToWorldFrame(o,e,t.pillarOffset,A),this.intersectConvex(t.pillarConvex,e,A,i,n,E),this.result._shouldStop)return;t.getConvexTrianglePillar(y,v,!0),c.pointToWorldFrame(o,e,t.pillarOffset,A),this.intersectConvex(t.pillarConvex,e,A,i,n,E)}}},i.prototype[l.types.HEIGHTFIELD]=i.prototype.intersectHeightfield;var S=new r,R=new r;i.prototype.intersectSphere=function(t,e,o,i,n){var s=this.from,r=this.to,a=t.radius,c=Math.pow(r.x-s.x,2)+Math.pow(r.y-s.y,2)+Math.pow(r.z-s.z,2),h=2*((r.x-s.x)*(s.x-o.x)+(r.y-s.y)*(s.y-o.y)+(r.z-s.z)*(s.z-o.z)),l=Math.pow(s.x-o.x,2)+Math.pow(s.y-o.y,2)+Math.pow(s.z-o.z,2)-Math.pow(a,2),u=Math.pow(h,2)-4*c*l,p=S,d=R;if(!(u<0))if(0===u)s.lerp(r,u,p),p.vsub(o,d),d.normalize(),this.reportIntersection(d,p,n,i,-1);else{var y=(-h-Math.sqrt(u))/(2*c),v=(-h+Math.sqrt(u))/(2*c);if(y>=0&&y<=1&&(s.lerp(r,y,p),p.vsub(o,d),d.normalize(),this.reportIntersection(d,p,n,i,-1)),this.result._shouldStop)return;v>=0&&v<=1&&(s.lerp(r,v,p),p.vsub(o,d),d.normalize(),this.reportIntersection(d,p,n,i,-1))}},i.prototype[l.types.SPHERE]=i.prototype.intersectSphere;var M=new r,T=(new r,new r,new r);i.prototype.intersectConvex=function(t,e,o,i,s,r){for(var a=M,c=T,h=r&&r.faceList||null,l=t.faces,u=t.vertices,p=t.faceNormals,d=this._direction,y=this.from,v=this.to,f=y.distanceTo(v),m=h?h.length:l.length,E=this.result,A=0;!E._shouldStop&&A<m;A++){var B=h?h[A]:A,C=l[B],S=p[B],R=e,z=o;c.copy(u[C[0]]),R.vmult(c,c),c.vadd(z,c),c.vsub(y,c),R.vmult(S,a);var k=d.dot(a);if(!(Math.abs(k)<this.precision)){var P=a.dot(c)/k;if(!(P<0)){d.mult(P,g),g.vadd(y,g),w.copy(u[C[0]]),R.vmult(w,w),z.vadd(w,w);for(var q=1;!E._shouldStop&&q<C.length-1;q++){x.copy(u[C[q]]),b.copy(u[C[q+1]]),R.vmult(x,x),R.vmult(b,b),z.vadd(x,x),z.vadd(b,b);var L=g.distanceTo(y);!n(g,w,x,b)&&!n(g,x,w,b)||L>f||this.reportIntersection(a,g,s,i,B)}}}}},i.prototype[l.types.CONVEXPOLYHEDRON]=i.prototype.intersectConvex;var z=new r,k=new r,P=new r,q=new r,L=new r,V=new r,F=(new u,[]),N=new c;i.prototype.intersectTrimesh=function(t,e,o,i,s,r){var a=z,h=F,l=N,u=T,p=k,d=P,y=q,v=V,f=L,m=(r&&r.faceList,t.indices),E=(t.vertices,t.faceNormals,this.from),A=this.to,B=this._direction;l.position.copy(o),l.quaternion.copy(e),c.vectorToLocalFrame(o,e,B,p),c.pointToLocalFrame(o,e,E,d),c.pointToLocalFrame(o,e,A,y),y.x*=t.scale.x,y.y*=t.scale.y,y.z*=t.scale.z,d.x*=t.scale.x,d.y*=t.scale.y,d.z*=t.scale.z,y.vsub(d,p),p.normalize();var C=d.distanceSquared(y);t.tree.rayQuery(this,l,h);for(var S=0,R=h.length;!this.result._shouldStop&&S!==R;S++){var M=h[S];t.getNormal(M,a),t.getVertex(m[3*M],w),w.vsub(d,u);var I=p.dot(a),j=a.dot(u)/I;if(!(j<0)){p.scale(j,g),g.vadd(d,g),t.getVertex(m[3*M+1],x),t.getVertex(m[3*M+2],b);var O=g.distanceSquared(d);!n(g,x,w,b)&&!n(g,w,x,b)||O>C||(c.vectorToWorldFrame(e,a,f),c.pointToWorldFrame(o,e,g,v),this.reportIntersection(f,v,s,i,M))}}h.length=0},i.prototype[l.types.TRIMESH]=i.prototype.intersectTrimesh,i.prototype.reportIntersection=function(t,e,o,n,s){var r=this.from,a=this.to,c=r.distanceTo(e),h=this.result;if(!(this.skipBackfaces&&t.dot(this._direction)>0))switch(h.hitFaceIndex=void 0!==s?s:-1,this.mode){case i.ALL:this.hasHit=!0,h.set(r,a,t,e,o,n,c),h.hasHit=!0,this.callback(h);break;case i.CLOSEST:(c<h.distance||!h.hasHit)&&(this.hasHit=!0,h.hasHit=!0,h.set(r,a,t,e,o,n,c));break;case i.ANY:this.hasHit=!0,h.hasHit=!0,h.set(r,a,t,e,o,n,c),h._shouldStop=!0}};var I=new r,j=new r},{"../collision/AABB":18,"../collision/RaycastResult":26,"../math/Quaternion":44,"../math/Transform":45,"../math/Vec3":46,"../shapes/Box":53,"../shapes/ConvexPolyhedron":54,"../shapes/Shape":59}],26:[function(t,e,o){function i(){this.rayFromWorld=new n,this.rayToWorld=new n,this.hitNormalWorld=new n,this.hitPointWorld=new n,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1}var n=t("../math/Vec3");e.exports=i,i.prototype.reset=function(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this._shouldStop=!1},i.prototype.abort=function(){this._shouldStop=!0},i.prototype.set=function(t,e,o,i,n,s,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(o),this.hitPointWorld.copy(i),this.shape=n,this.body=s,this.distance=r}},{"../math/Vec3":46}],27:[function(t,e,o){function i(t){n.apply(this),this.axisList=[],this.world=null,this.axisIndex=0;var e=this.axisList;this._addBodyHandler=function(t){e.push(t.body)},this._removeBodyHandler=function(t){var o=e.indexOf(t.body);-1!==o&&e.splice(o,1)},t&&this.setWorld(t)}var n=(t("../shapes/Shape"),t("../collision/Broadphase"));e.exports=i,i.prototype=new n,i.prototype.setWorld=function(t){this.axisList.length=0;for(var e=0;e<t.bodies.length;e++)this.axisList.push(t.bodies[e]);t.removeEventListener("addBody",this._addBodyHandler),t.removeEventListener("removeBody",this._removeBodyHandler),t.addEventListener("addBody",this._addBodyHandler),t.addEventListener("removeBody",this._removeBodyHandler),this.world=t,this.dirty=!0},i.insertionSortX=function(t){for(var e=1,o=t.length;e<o;e++){for(var i=t[e],n=e-1;n>=0&&!(t[n].aabb.lowerBound.x<=i.aabb.lowerBound.x);n--)t[n+1]=t[n];t[n+1]=i}return t},i.insertionSortY=function(t){for(var e=1,o=t.length;e<o;e++){for(var i=t[e],n=e-1;n>=0&&!(t[n].aabb.lowerBound.y<=i.aabb.lowerBound.y);n--)t[n+1]=t[n];t[n+1]=i}return t},i.insertionSortZ=function(t){for(var e=1,o=t.length;e<o;e++){for(var i=t[e],n=e-1;n>=0&&!(t[n].aabb.lowerBound.z<=i.aabb.lowerBound.z);n--)t[n+1]=t[n];t[n+1]=i}return t},i.prototype.collisionPairs=function(t,e,o){var n,s,r=this.axisList,a=r.length,c=this.axisIndex;for(this.dirty&&(this.sortList(),this.dirty=!1),n=0;n!==a;n++){var h=r[n];for(s=n+1;s<a;s++){var l=r[s];if(this.needBroadphaseCollision(h,l)){if(!i.checkBounds(h,l,c))break;this.intersectionTest(h,l,e,o)}}}},i.prototype.sortList=function(){for(var t=this.axisList,e=this.axisIndex,o=t.length,n=0;n!==o;n++){var s=t[n];s.aabbNeedsUpdate&&s.computeAABB()}0===e?i.insertionSortX(t):1===e?i.insertionSortY(t):2===e&&i.insertionSortZ(t)},i.checkBounds=function(t,e,o){var i,n;0===o?(i=t.position.x,n=e.position.x):1===o?(i=t.position.y,n=e.position.y):2===o&&(i=t.position.z,n=e.position.z);var s=t.boundingRadius,r=e.boundingRadius,a=i+s,c=n-r;return c<a},i.prototype.autoDetectAxis=function(){for(var t=0,e=0,o=0,i=0,n=0,s=0,r=this.axisList,a=r.length,c=1/a,h=0;h!==a;h++){var l=r[h],u=l.position.x;t+=u,e+=u*u;var p=l.position.y;o+=p,i+=p*p;var d=l.position.z;n+=d,s+=d*d}var y=e-t*t*c,v=i-o*o*c,f=s-n*n*c;this.axisIndex=y>v?y>f?0:2:v>f?1:2},i.prototype.aabbQuery=function(t,e,o){o=o||[],this.dirty&&(this.sortList(),this.dirty=!1);var i=this.axisIndex,n="x";1===i&&(n="y"),2===i&&(n="z");for(var s=this.axisList,r=(e.lowerBound[n],e.upperBound[n],0);r<s.length;r++){var a=s[r];a.aabbNeedsUpdate&&a.computeAABB(),a.aabb.overlaps(e)&&o.push(a)}return o}},{"../collision/Broadphase":20,"../shapes/Shape":59}],28:[function(t,e,o){function i(t,e,o){o=o||{};var i=void 0!==o.maxForce?o.maxForce:1e6,c=o.pivotA?o.pivotA.clone():new a,h=o.pivotB?o.pivotB.clone():new a;this.axisA=o.axisA?o.axisA.clone():new a,this.axisB=o.axisB?o.axisB.clone():new a,n.call(this,t,c,e,h,i),this.collideConnected=!!o.collideConnected,this.angle=void 0!==o.angle?o.angle:0;var l=this.coneEquation=new s(t,e,o),u=this.twistEquation=new r(t,e,o);this.twistAngle=void 0!==o.twistAngle?o.twistAngle:0,l.maxForce=0,l.minForce=-i,u.maxForce=0,u.minForce=-i,this.equations.push(l,u)}e.exports=i;var n=(t("./Constraint"),t("./PointToPointConstraint")),s=t("../equations/ConeEquation"),r=t("../equations/RotationalEquation"),a=(t("../equations/ContactEquation"),t("../math/Vec3"));i.prototype=new n,i.constructor=i;new a,new a;i.prototype.update=function(){var t=this.bodyA,e=this.bodyB,o=this.coneEquation,i=this.twistEquation;n.prototype.update.call(this),t.vectorToWorldFrame(this.axisA,o.axisA),e.vectorToWorldFrame(this.axisB,o.axisB),this.axisA.tangents(i.axisA,i.axisA),t.vectorToWorldFrame(i.axisA,i.axisA),this.axisB.tangents(i.axisB,i.axisB),e.vectorToWorldFrame(i.axisB,i.axisB),o.angle=this.angle,i.maxAngle=this.twistAngle}},{"../equations/ConeEquation":34,"../equations/ContactEquation":35,"../equations/RotationalEquation":38,"../math/Vec3":46,"./Constraint":29,"./PointToPointConstraint":33}],29:[function(t,e,o){function i(t,e,o){o=n.defaults(o,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=i.idCounter++,this.collideConnected=o.collideConnected,o.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}e.exports=i;var n=t("../utils/Utils");i.prototype.update=function(){throw new Error("method update() not implmemented in this Constraint subclass!")},i.prototype.enable=function(){for(var t=this.equations,e=0;e<t.length;e++)t[e].enabled=!0},i.prototype.disable=function(){for(var t=this.equations,e=0;e<t.length;e++)t[e].enabled=!1},i.idCounter=0},{"../utils/Utils":69}],30:[function(t,e,o){function i(t,e,o,i){n.call(this,t,e),void 0===o&&(o=t.position.distanceTo(e.position)),void 0===i&&(i=1e6),this.distance=o;var r=this.distanceEquation=new s(t,e);this.equations.push(r),r.minForce=-i,r.maxForce=i}e.exports=i;var n=t("./Constraint"),s=t("../equations/ContactEquation");i.prototype=new n,i.prototype.update=function(){var t=this.bodyA,e=this.bodyB,o=this.distanceEquation,i=.5*this.distance,n=o.ni;e.position.vsub(t.position,n),n.normalize(),n.mult(i,o.ri),n.mult(-i,o.rj)}},{"../equations/ContactEquation":35,"./Constraint":29}],31:[function(t,e,o){function i(t,e,o){o=o||{};var i=void 0!==o.maxForce?o.maxForce:1e6,c=o.pivotA?o.pivotA.clone():new a,h=o.pivotB?o.pivotB.clone():new a;n.call(this,t,c,e,h,i),(this.axisA=o.axisA?o.axisA.clone():new a(1,0,0)).normalize(),(this.axisB=o.axisB?o.axisB.clone():new a(1,0,0)).normalize();var l=this.rotationalEquation1=new s(t,e,o),u=this.rotationalEquation2=new s(t,e,o),p=this.motorEquation=new r(t,e,i);p.enabled=!1,this.equations.push(l,u,p)}e.exports=i;var n=(t("./Constraint"),t("./PointToPointConstraint")),s=t("../equations/RotationalEquation"),r=t("../equations/RotationalMotorEquation"),a=(t("../equations/ContactEquation"),t("../math/Vec3"));i.prototype=new n,i.constructor=i,i.prototype.enableMotor=function(){this.motorEquation.enabled=!0},i.prototype.disableMotor=function(){this.motorEquation.enabled=!1},i.prototype.setMotorSpeed=function(t){this.motorEquation.targetVelocity=t},i.prototype.setMotorMaxForce=function(t){this.motorEquation.maxForce=t,this.motorEquation.minForce=-t};var c=new a,h=new a;i.prototype.update=function(){var t=this.bodyA,e=this.bodyB,o=this.motorEquation,i=this.rotationalEquation1,s=this.rotationalEquation2,r=c,a=h,l=this.axisA,u=this.axisB;n.prototype.update.call(this),\nt.quaternion.vmult(l,r),e.quaternion.vmult(u,a),r.tangents(i.axisA,s.axisA),i.axisB.copy(a),s.axisB.copy(a),this.motorEquation.enabled&&(t.quaternion.vmult(this.axisA,o.axisA),e.quaternion.vmult(this.axisB,o.axisB))}},{"../equations/ContactEquation":35,"../equations/RotationalEquation":38,"../equations/RotationalMotorEquation":39,"../math/Vec3":46,"./Constraint":29,"./PointToPointConstraint":33}],32:[function(t,e,o){function i(t,e,o){o=o||{};var i=void 0!==o.maxForce?o.maxForce:1e6,a=new r,c=new r,h=new r;t.position.vadd(e.position,h),h.scale(.5,h),e.pointToLocalFrame(h,c),t.pointToLocalFrame(h,a),n.call(this,t,a,e,c,i),this.xA=t.vectorToLocalFrame(r.UNIT_X),this.xB=e.vectorToLocalFrame(r.UNIT_X),this.yA=t.vectorToLocalFrame(r.UNIT_Y),this.yB=e.vectorToLocalFrame(r.UNIT_Y),this.zA=t.vectorToLocalFrame(r.UNIT_Z),this.zB=e.vectorToLocalFrame(r.UNIT_Z);var l=this.rotationalEquation1=new s(t,e,o),u=this.rotationalEquation2=new s(t,e,o),p=this.rotationalEquation3=new s(t,e,o);this.equations.push(l,u,p)}e.exports=i;var n=(t("./Constraint"),t("./PointToPointConstraint")),s=t("../equations/RotationalEquation"),r=(t("../equations/RotationalMotorEquation"),t("../equations/ContactEquation"),t("../math/Vec3"));i.prototype=new n,i.constructor=i;new r,new r;i.prototype.update=function(){var t=this.bodyA,e=this.bodyB,o=(this.motorEquation,this.rotationalEquation1),i=this.rotationalEquation2,s=this.rotationalEquation3;n.prototype.update.call(this),t.vectorToWorldFrame(this.xA,o.axisA),e.vectorToWorldFrame(this.yB,o.axisB),t.vectorToWorldFrame(this.yA,i.axisA),e.vectorToWorldFrame(this.zB,i.axisB),t.vectorToWorldFrame(this.zA,s.axisA),e.vectorToWorldFrame(this.xB,s.axisB)}},{"../equations/ContactEquation":35,"../equations/RotationalEquation":38,"../equations/RotationalMotorEquation":39,"../math/Vec3":46,"./Constraint":29,"./PointToPointConstraint":33}],33:[function(t,e,o){function i(t,e,o,i,a){n.call(this,t,o),a=void 0!==a?a:1e6,this.pivotA=e?e.clone():new r,this.pivotB=i?i.clone():new r;var c=this.equationX=new s(t,o),h=this.equationY=new s(t,o),l=this.equationZ=new s(t,o);this.equations.push(c,h,l),c.minForce=h.minForce=l.minForce=-a,c.maxForce=h.maxForce=l.maxForce=a,c.ni.set(1,0,0),h.ni.set(0,1,0),l.ni.set(0,0,1)}e.exports=i;var n=t("./Constraint"),s=t("../equations/ContactEquation"),r=t("../math/Vec3");i.prototype=new n,i.prototype.update=function(){var t=this.bodyA,e=this.bodyB,o=this.equationX,i=this.equationY,n=this.equationZ;t.quaternion.vmult(this.pivotA,o.ri),e.quaternion.vmult(this.pivotB,o.rj),i.ri.copy(o.ri),i.rj.copy(o.rj),n.ri.copy(o.ri),n.rj.copy(o.rj)}},{"../equations/ContactEquation":35,"../math/Vec3":46,"./Constraint":29}],34:[function(t,e,o){function i(t,e,o){o=o||{};var i=void 0!==o.maxForce?o.maxForce:1e6;s.call(this,t,e,-i,i),this.axisA=o.axisA?o.axisA.clone():new n(1,0,0),this.axisB=o.axisB?o.axisB.clone():new n(0,1,0),this.angle=void 0!==o.angle?o.angle:0}e.exports=i;var n=t("../math/Vec3"),s=(t("../math/Mat3"),t("./Equation"));i.prototype=new s,i.prototype.constructor=i;var r=new n,a=new n;i.prototype.computeB=function(t){var e=this.a,o=this.b,i=this.axisA,n=this.axisB,s=r,c=a,h=this.jacobianElementA,l=this.jacobianElementB;return i.cross(n,s),n.cross(i,c),h.rotational.copy(c),l.rotational.copy(s),-(Math.cos(this.angle)-i.dot(n))*e-this.computeGW()*o-t*this.computeGiMf()}},{"../math/Mat3":43,"../math/Vec3":46,"./Equation":36}],35:[function(t,e,o){function i(t,e,o){o=void 0!==o?o:1e6,n.call(this,t,e,0,o),this.restitution=0,this.ri=new s,this.rj=new s,this.ni=new s}e.exports=i;var n=t("./Equation"),s=t("../math/Vec3");t("../math/Mat3");i.prototype=new n,i.prototype.constructor=i;var r=new s,a=new s,c=new s;i.prototype.computeB=function(t){var e=this.a,o=this.b,i=this.bi,n=this.bj,s=this.ri,h=this.rj,l=r,u=a,p=i.velocity,d=i.angularVelocity,y=(i.force,i.torque,n.velocity),v=n.angularVelocity,f=(n.force,n.torque,c),m=this.jacobianElementA,g=this.jacobianElementB,w=this.ni;s.cross(w,l),h.cross(w,u),w.negate(m.spatial),l.negate(m.rotational),g.spatial.copy(w),g.rotational.copy(u),f.copy(n.position),f.vadd(h,f),f.vsub(i.position,f),f.vsub(s,f);var x=w.dot(f),b=this.restitution+1;return-x*e-(b*y.dot(w)-b*p.dot(w)+v.dot(u)-d.dot(l))*o-t*this.computeGiMf()};var h=new s,l=new s,u=new s,p=new s,d=new s;i.prototype.getImpactVelocityAlongNormal=function(){var t=h,e=l,o=u,i=p,n=d;return this.bi.position.vadd(this.ri,o),this.bj.position.vadd(this.rj,i),this.bi.getVelocityAtWorldPoint(o,t),this.bj.getVelocityAtWorldPoint(i,e),t.vsub(e,n),this.ni.dot(n)}},{"../math/Mat3":43,"../math/Vec3":46,"./Equation":36}],36:[function(t,e,o){function i(t,e,o,s){this.id=i.id++,this.minForce=void 0===o?-1e6:o,this.maxForce=void 0===s?1e6:s,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new n,this.jacobianElementB=new n,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}e.exports=i;var n=t("../math/JacobianElement"),s=t("../math/Vec3");i.prototype.constructor=i,i.id=0,i.prototype.setSpookParams=function(t,e,o){var i=e,n=t,s=o;this.a=4/(s*(1+4*i)),this.b=4*i/(1+4*i),this.eps=4/(s*s*n*(1+4*i))},i.prototype.computeB=function(t,e,o){var i=this.computeGW();return-this.computeGq()*t-i*e-this.computeGiMf()*o},i.prototype.computeGq=function(){var t=this.jacobianElementA,e=this.jacobianElementB,o=this.bi,i=this.bj,n=o.position,s=i.position;return t.spatial.dot(n)+e.spatial.dot(s)};new s;i.prototype.computeGW=function(){var t=this.jacobianElementA,e=this.jacobianElementB,o=this.bi,i=this.bj,n=o.velocity,s=i.velocity,r=o.angularVelocity,a=i.angularVelocity;return t.multiplyVectors(n,r)+e.multiplyVectors(s,a)},i.prototype.computeGWlambda=function(){var t=this.jacobianElementA,e=this.jacobianElementB,o=this.bi,i=this.bj,n=o.vlambda,s=i.vlambda,r=o.wlambda,a=i.wlambda;return t.multiplyVectors(n,r)+e.multiplyVectors(s,a)};var r=new s,a=new s,c=new s,h=new s;i.prototype.computeGiMf=function(){var t=this.jacobianElementA,e=this.jacobianElementB,o=this.bi,i=this.bj,n=o.force,s=o.torque,l=i.force,u=i.torque,p=o.invMassSolve,d=i.invMassSolve;return n.scale(p,r),l.scale(d,a),o.invInertiaWorldSolve.vmult(s,c),i.invInertiaWorldSolve.vmult(u,h),t.multiplyVectors(r,c)+e.multiplyVectors(a,h)};var l=new s;i.prototype.computeGiMGt=function(){var t=this.jacobianElementA,e=this.jacobianElementB,o=this.bi,i=this.bj,n=o.invMassSolve,s=i.invMassSolve,r=o.invInertiaWorldSolve,a=i.invInertiaWorldSolve,c=n+s;return r.vmult(t.rotational,l),c+=l.dot(t.rotational),a.vmult(e.rotational,l),c+=l.dot(e.rotational)};var u=new s;new s,new s,new s,new s,new s;i.prototype.addToWlambda=function(t){var e=this.jacobianElementA,o=this.jacobianElementB,i=this.bi,n=this.bj,s=u;i.vlambda.addScaledVector(i.invMassSolve*t,e.spatial,i.vlambda),n.vlambda.addScaledVector(n.invMassSolve*t,o.spatial,n.vlambda),i.invInertiaWorldSolve.vmult(e.rotational,s),i.wlambda.addScaledVector(t,s,i.wlambda),n.invInertiaWorldSolve.vmult(o.rotational,s),n.wlambda.addScaledVector(t,s,n.wlambda)},i.prototype.computeC=function(){return this.computeGiMGt()+this.eps}},{"../math/JacobianElement":42,"../math/Vec3":46}],37:[function(t,e,o){function i(t,e,o){n.call(this,t,e,-o,o),this.ri=new s,this.rj=new s,this.t=new s}e.exports=i;var n=t("./Equation"),s=t("../math/Vec3");t("../math/Mat3");i.prototype=new n,i.prototype.constructor=i;var r=new s,a=new s;i.prototype.computeB=function(t){var e=(this.a,this.b),o=(this.bi,this.bj,this.ri),i=this.rj,n=r,s=a,c=this.t;o.cross(c,n),i.cross(c,s);var h=this.jacobianElementA,l=this.jacobianElementB;return c.negate(h.spatial),n.negate(h.rotational),l.spatial.copy(c),l.rotational.copy(s),-this.computeGW()*e-t*this.computeGiMf()}},{"../math/Mat3":43,"../math/Vec3":46,"./Equation":36}],38:[function(t,e,o){function i(t,e,o){o=o||{};var i=void 0!==o.maxForce?o.maxForce:1e6;s.call(this,t,e,-i,i),this.axisA=o.axisA?o.axisA.clone():new n(1,0,0),this.axisB=o.axisB?o.axisB.clone():new n(0,1,0),this.maxAngle=Math.PI/2}e.exports=i;var n=t("../math/Vec3"),s=(t("../math/Mat3"),t("./Equation"));i.prototype=new s,i.prototype.constructor=i;var r=new n,a=new n;i.prototype.computeB=function(t){var e=this.a,o=this.b,i=this.axisA,n=this.axisB,s=r,c=a,h=this.jacobianElementA,l=this.jacobianElementB;return i.cross(n,s),n.cross(i,c),h.rotational.copy(c),l.rotational.copy(s),-(Math.cos(this.maxAngle)-i.dot(n))*e-this.computeGW()*o-t*this.computeGiMf()}},{"../math/Mat3":43,"../math/Vec3":46,"./Equation":36}],39:[function(t,e,o){function i(t,e,o){o=void 0!==o?o:1e6,s.call(this,t,e,-o,o),this.axisA=new n,this.axisB=new n,this.targetVelocity=0}e.exports=i;var n=t("../math/Vec3"),s=(t("../math/Mat3"),t("./Equation"));i.prototype=new s,i.prototype.constructor=i,i.prototype.computeB=function(t){var e=(this.a,this.b),o=(this.bi,this.bj,this.axisA),i=this.axisB,n=this.jacobianElementA,s=this.jacobianElementB;return n.rotational.copy(o),i.negate(s.rotational),-(this.computeGW()-this.targetVelocity)*e-t*this.computeGiMf()}},{"../math/Mat3":43,"../math/Vec3":46,"./Equation":36}],40:[function(t,e,o){function i(t,e,o){o=n.defaults(o,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=i.idCounter++,this.materials=[t,e],this.friction=o.friction,this.restitution=o.restitution,this.contactEquationStiffness=o.contactEquationStiffness,this.contactEquationRelaxation=o.contactEquationRelaxation,this.frictionEquationStiffness=o.frictionEquationStiffness,this.frictionEquationRelaxation=o.frictionEquationRelaxation}var n=t("../utils/Utils");e.exports=i,i.idCounter=0},{"../utils/Utils":69}],41:[function(t,e,o){function i(t){var e="";t=t||{},"string"==typeof t?(e=t,t={}):"object"==typeof t&&(e=""),this.name=e,this.id=i.idCounter++,this.friction=void 0!==t.friction?t.friction:-1,this.restitution=void 0!==t.restitution?t.restitution:-1}e.exports=i,i.idCounter=0},{}],42:[function(t,e,o){function i(){this.spatial=new n,this.rotational=new n}e.exports=i;var n=t("./Vec3");i.prototype.multiplyElement=function(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)},i.prototype.multiplyVectors=function(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}},{"./Vec3":46}],43:[function(t,e,o){function i(t){this.elements=t||[0,0,0,0,0,0,0,0,0]}e.exports=i;var n=t("./Vec3");i.prototype.identity=function(){var t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1},i.prototype.setZero=function(){var t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0},i.prototype.setTrace=function(t){var e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z},i.prototype.getTrace=function(t){var t=t||new n,e=this.elements;t.x=e[0],t.y=e[4],t.z=e[8]},i.prototype.vmult=function(t,e){e=e||new n;var o=this.elements,i=t.x,s=t.y,r=t.z;return e.x=o[0]*i+o[1]*s+o[2]*r,e.y=o[3]*i+o[4]*s+o[5]*r,e.z=o[6]*i+o[7]*s+o[8]*r,e},i.prototype.smult=function(t){for(var e=0;e<this.elements.length;e++)this.elements[e]*=t},i.prototype.mmult=function(t,e){for(var o=e||new i,n=0;n<3;n++)for(var s=0;s<3;s++){for(var r=0,a=0;a<3;a++)r+=t.elements[n+3*a]*this.elements[a+3*s];o.elements[n+3*s]=r}return o},i.prototype.scale=function(t,e){e=e||new i;for(var o=this.elements,n=e.elements,s=0;3!==s;s++)n[3*s+0]=t.x*o[3*s+0],n[3*s+1]=t.y*o[3*s+1],n[3*s+2]=t.z*o[3*s+2];return e},i.prototype.solve=function(t,e){e=e||new n;for(var o=[],i=0;i<12;i++)o.push(0);var i,s;for(i=0;i<3;i++)for(s=0;s<3;s++)o[i+4*s]=this.elements[i+3*s];o[3]=t.x,o[7]=t.y,o[11]=t.z;var r,a,c=3,h=c;do{if(i=h-c,0===o[i+4*i])for(s=i+1;s<h;s++)if(0!==o[i+4*s]){r=4;do{a=4-r,o[a+4*i]+=o[a+4*s]}while(--r);break}if(0!==o[i+4*i])for(s=i+1;s<h;s++){var l=o[i+4*s]/o[i+4*i];r=4;do{a=4-r,o[a+4*s]=a<=i?0:o[a+4*s]-o[a+4*i]*l}while(--r)}}while(--c);if(e.z=o[11]/o[10],e.y=(o[7]-o[6]*e.z)/o[5],e.x=(o[3]-o[2]*e.z-o[1]*e.y)/o[0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw"Could not solve equation! Got x=["+e.toString()+"], b=["+t.toString()+"], A=["+this.toString()+"]";return e},i.prototype.e=function(t,e,o){if(void 0===o)return this.elements[e+3*t];this.elements[e+3*t]=o},i.prototype.copy=function(t){for(var e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this},i.prototype.toString=function(){for(var t="",e=0;e<9;e++)t+=this.elements[e]+",";return t},i.prototype.reverse=function(t){t=t||new i;for(var e=[],o=0;o<18;o++)e.push(0);var o,n;for(o=0;o<3;o++)for(n=0;n<3;n++)e[o+6*n]=this.elements[o+3*n];e[3]=1,e[9]=0,e[15]=0,e[4]=0,e[10]=1,e[16]=0,e[5]=0,e[11]=0,e[17]=1;var s,r,a=3,c=a;do{if(o=c-a,0===e[o+6*o])for(n=o+1;n<c;n++)if(0!==e[o+6*n]){s=6;do{r=6-s,e[r+6*o]+=e[r+6*n]}while(--s);break}if(0!==e[o+6*o])for(n=o+1;n<c;n++){var h=e[o+6*n]/e[o+6*o];s=6;do{r=6-s,e[r+6*n]=r<=o?0:e[r+6*n]-e[r+6*o]*h}while(--s)}}while(--a);o=2;do{n=o-1;do{var h=e[o+6*n]/e[o+6*o];s=6;do{r=6-s,e[r+6*n]=e[r+6*n]-e[r+6*o]*h}while(--s)}while(n--)}while(--o);o=2;do{var h=1/e[o+6*o];s=6;do{r=6-s,e[r+6*o]=e[r+6*o]*h}while(--s)}while(o--);o=2;do{n=2;do{if(r=e[3+n+6*o],isNaN(r)||r===1/0)throw"Could not reverse! A=["+this.toString()+"]";t.e(o,n,r)}while(n--)}while(o--);return t},i.prototype.setRotationFromQuaternion=function(t){var e=t.x,o=t.y,i=t.z,n=t.w,s=e+e,r=o+o,a=i+i,c=e*s,h=e*r,l=e*a,u=o*r,p=o*a,d=i*a,y=n*s,v=n*r,f=n*a,m=this.elements;return m[0]=1-(u+d),m[1]=h-f,m[2]=l+v,m[3]=h+f,m[4]=1-(c+d),m[5]=p-y,m[6]=l-v,m[7]=p+y,m[8]=1-(c+u),this},i.prototype.transpose=function(t){t=t||new i;for(var e=t.elements,o=this.elements,n=0;3!==n;n++)for(var s=0;3!==s;s++)e[3*n+s]=o[3*s+n];return t}},{"./Vec3":46}],44:[function(t,e,o){function i(t,e,o,i){this.x=void 0!==t?t:0,this.y=void 0!==e?e:0,this.z=void 0!==o?o:0,this.w=void 0!==i?i:1}e.exports=i;var n=t("./Vec3");i.prototype.set=function(t,e,o,i){return this.x=t,this.y=e,this.z=o,this.w=i,this},i.prototype.toString=function(){return this.x+","+this.y+","+this.z+","+this.w},i.prototype.toArray=function(){return[this.x,this.y,this.z,this.w]},i.prototype.setFromAxisAngle=function(t,e){var o=Math.sin(.5*e);return this.x=t.x*o,this.y=t.y*o,this.z=t.z*o,this.w=Math.cos(.5*e),this},i.prototype.toAxisAngle=function(t){t=t||new n,this.normalize();var e=2*Math.acos(this.w),o=Math.sqrt(1-this.w*this.w);return o<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/o,t.y=this.y/o,t.z=this.z/o),[t,e]};var s=new n,r=new n;i.prototype.setFromVectors=function(t,e){if(t.isAntiparallelTo(e)){var o=s,i=r;t.tangents(o,i),this.setFromAxisAngle(o,Math.PI)}else{var n=t.cross(e);this.x=n.x,this.y=n.y,this.z=n.z,this.w=Math.sqrt(Math.pow(t.norm(),2)*Math.pow(e.norm(),2))+t.dot(e),this.normalize()}return this};new n,new n,new n;i.prototype.mult=function(t,e){e=e||new i;var o=this.x,n=this.y,s=this.z,r=this.w,a=t.x,c=t.y,h=t.z,l=t.w;return e.x=o*l+r*a+n*h-s*c,e.y=n*l+r*c+s*a-o*h,e.z=s*l+r*h+o*c-n*a,e.w=r*l-o*a-n*c-s*h,e},i.prototype.inverse=function(t){var e=this.x,o=this.y,n=this.z,s=this.w;t=t||new i,this.conjugate(t);var r=1/(e*e+o*o+n*n+s*s);return t.x*=r,t.y*=r,t.z*=r,t.w*=r,t},i.prototype.conjugate=function(t){return t=t||new i,t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t},i.prototype.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this},i.prototype.normalizeFast=function(){var t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this},i.prototype.vmult=function(t,e){e=e||new n;var o=t.x,i=t.y,s=t.z,r=this.x,a=this.y,c=this.z,h=this.w,l=h*o+a*s-c*i,u=h*i+c*o-r*s,p=h*s+r*i-a*o,d=-r*o-a*i-c*s;return e.x=l*h+d*-r+u*-c-p*-a,e.y=u*h+d*-a+p*-r-l*-c,e.z=p*h+d*-c+l*-a-u*-r,e},i.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this},i.prototype.toEuler=function(t,e){e=e||"YZX";var o,i,n,s=this.x,r=this.y,a=this.z,c=this.w;switch(e){case"YZX":var h=s*r+a*c;if(h>.499&&(o=2*Math.atan2(s,c),i=Math.PI/2,n=0),h<-.499&&(o=-2*Math.atan2(s,c),i=-Math.PI/2,n=0),isNaN(o)){var l=s*s,u=r*r,p=a*a;o=Math.atan2(2*r*c-2*s*a,1-2*u-2*p),i=Math.asin(2*h),n=Math.atan2(2*s*c-2*r*a,1-2*l-2*p)}break;default:throw new Error("Euler order "+e+" not supported yet.")}t.y=o,t.z=i,t.x=n},i.prototype.setFromEuler=function(t,e,o,i){i=i||"XYZ";var n=Math.cos(t/2),s=Math.cos(e/2),r=Math.cos(o/2),a=Math.sin(t/2),c=Math.sin(e/2),h=Math.sin(o/2);return"XYZ"===i?(this.x=a*s*r+n*c*h,this.y=n*c*r-a*s*h,this.z=n*s*h+a*c*r,this.w=n*s*r-a*c*h):"YXZ"===i?(this.x=a*s*r+n*c*h,this.y=n*c*r-a*s*h,this.z=n*s*h-a*c*r,this.w=n*s*r+a*c*h):"ZXY"===i?(this.x=a*s*r-n*c*h,this.y=n*c*r+a*s*h,this.z=n*s*h+a*c*r,this.w=n*s*r-a*c*h):"ZYX"===i?(this.x=a*s*r-n*c*h,this.y=n*c*r+a*s*h,this.z=n*s*h-a*c*r,this.w=n*s*r+a*c*h):"YZX"===i?(this.x=a*s*r+n*c*h,this.y=n*c*r+a*s*h,this.z=n*s*h-a*c*r,this.w=n*s*r-a*c*h):"XZY"===i&&(this.x=a*s*r-n*c*h,this.y=n*c*r-a*s*h,this.z=n*s*h+a*c*r,this.w=n*s*r+a*c*h),this},i.prototype.clone=function(){return new i(this.x,this.y,this.z,this.w)},i.prototype.slerp=function(t,e,o){o=o||new i;var n,s,r,a,c,h=this.x,l=this.y,u=this.z,p=this.w,d=t.x,y=t.y,v=t.z,f=t.w;return s=h*d+l*y+u*v+p*f,s<0&&(s=-s,d=-d,y=-y,v=-v,f=-f),1-s>1e-6?(n=Math.acos(s),r=Math.sin(n),a=Math.sin((1-e)*n)/r,c=Math.sin(e*n)/r):(a=1-e,c=e),o.x=a*h+c*d,o.y=a*l+c*y,o.z=a*u+c*v,o.w=a*p+c*f,o},i.prototype.integrate=function(t,e,o,n){n=n||new i;var s=t.x*o.x,r=t.y*o.y,a=t.z*o.z,c=this.x,h=this.y,l=this.z,u=this.w,p=.5*e;return n.x+=p*(s*u+r*l-a*h),n.y+=p*(r*u+a*c-s*l),n.z+=p*(a*u+s*h-r*c),n.w+=p*(-s*c-r*h-a*l),n}},{"./Vec3":46}],45:[function(t,e,o){function i(t){t=t||{},this.position=new n,t.position&&this.position.copy(t.position),this.quaternion=new s,t.quaternion&&this.quaternion.copy(t.quaternion)}var n=t("./Vec3"),s=t("./Quaternion");e.exports=i;var r=new s;i.pointToLocalFrame=function(t,e,o,i){var i=i||new n;return o.vsub(t,i),e.conjugate(r),r.vmult(i,i),i},i.prototype.pointToLocal=function(t,e){return i.pointToLocalFrame(this.position,this.quaternion,t,e)},i.pointToWorldFrame=function(t,e,o,i){var i=i||new n;return e.vmult(o,i),i.vadd(t,i),i},i.prototype.pointToWorld=function(t,e){return i.pointToWorldFrame(this.position,this.quaternion,t,e)},i.prototype.vectorToWorldFrame=function(t,e){var e=e||new n;return this.quaternion.vmult(t,e),e},i.vectorToWorldFrame=function(t,e,o){return t.vmult(e,o),o},i.vectorToLocalFrame=function(t,e,o,i){var i=i||new n;return e.w*=-1,e.vmult(o,i),e.w*=-1,i}},{"./Quaternion":44,"./Vec3":46}],46:[function(t,e,o){function i(t,e,o){this.x=t||0,this.y=e||0,this.z=o||0}e.exports=i;var n=t("./Mat3");i.ZERO=new i(0,0,0),i.UNIT_X=new i(1,0,0),i.UNIT_Y=new i(0,1,0),i.UNIT_Z=new i(0,0,1),i.prototype.cross=function(t,e){var o=t.x,n=t.y,s=t.z,r=this.x,a=this.y,c=this.z;return e=e||new i,e.x=a*s-c*n,e.y=c*o-r*s,e.z=r*n-a*o,e},i.prototype.set=function(t,e,o){return this.x=t,this.y=e,this.z=o,this},i.prototype.setZero=function(){this.x=this.y=this.z=0},i.prototype.vadd=function(t,e){if(!e)return new i(this.x+t.x,this.y+t.y,this.z+t.z);e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z},i.prototype.vsub=function(t,e){if(!e)return new i(this.x-t.x,this.y-t.y,this.z-t.z);e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z},i.prototype.crossmat=function(){return new n([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])},i.prototype.normalize=function(){var t=this.x,e=this.y,o=this.z,i=Math.sqrt(t*t+e*e+o*o);if(i>0){var n=1/i;this.x*=n,this.y*=n,this.z*=n}else this.x=0,this.y=0,this.z=0;return i},i.prototype.unit=function(t){t=t||new i;var e=this.x,o=this.y,n=this.z,s=Math.sqrt(e*e+o*o+n*n);return s>0?(s=1/s,t.x=e*s,t.y=o*s,t.z=n*s):(t.x=1,t.y=0,t.z=0),t},i.prototype.norm=function(){var t=this.x,e=this.y,o=this.z;return Math.sqrt(t*t+e*e+o*o)},i.prototype.length=i.prototype.norm,i.prototype.norm2=function(){return this.dot(this)},i.prototype.lengthSquared=i.prototype.norm2,i.prototype.distanceTo=function(t){var e=this.x,o=this.y,i=this.z,n=t.x,s=t.y,r=t.z;return Math.sqrt((n-e)*(n-e)+(s-o)*(s-o)+(r-i)*(r-i))},i.prototype.distanceSquared=function(t){var e=this.x,o=this.y,i=this.z,n=t.x,s=t.y,r=t.z;return(n-e)*(n-e)+(s-o)*(s-o)+(r-i)*(r-i)},i.prototype.mult=function(t,e){e=e||new i;var o=this.x,n=this.y,s=this.z;return e.x=t*o,e.y=t*n,e.z=t*s,e},i.prototype.vmul=function(t,e){return e=e||new i,e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e},i.prototype.scale=i.prototype.mult,i.prototype.addScaledVector=function(t,e,o){return o=o||new i,o.x=this.x+t*e.x,o.y=this.y+t*e.y,o.z=this.z+t*e.z,o},i.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},i.prototype.isZero=function(){return 0===this.x&&0===this.y&&0===this.z},i.prototype.negate=function(t){return t=t||new i,t.x=-this.x,t.y=-this.y,t.z=-this.z,t};var s=new i,r=new i;i.prototype.tangents=function(t,e){var o=this.norm();if(o>0){var i=s,n=1/o;i.set(this.x*n,this.y*n,this.z*n);var a=r;Math.abs(i.x)<.9?(a.set(1,0,0),i.cross(a,t)):(a.set(0,1,0),i.cross(a,t)),i.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)},i.prototype.toString=function(){return this.x+","+this.y+","+this.z},i.prototype.toArray=function(){return[this.x,this.y,this.z]},i.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},i.prototype.lerp=function(t,e,o){var i=this.x,n=this.y,s=this.z;o.x=i+(t.x-i)*e,o.y=n+(t.y-n)*e,o.z=s+(t.z-s)*e},i.prototype.almostEquals=function(t,e){return void 0===e&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)},i.prototype.almostZero=function(t){return void 0===t&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)};var a=new i;i.prototype.isAntiparallelTo=function(t,e){return this.negate(a),a.almostEquals(t,e)},i.prototype.clone=function(){return new i(this.x,this.y,this.z)}},{"./Mat3":43}],47:[function(t,e,o){function i(t){t=t||{},n.apply(this),this.id=i.idCounter++,this.world=null,this.preStep=null,this.postStep=null,this.vlambda=new s,this.collisionFilterGroup="number"==typeof t.collisionFilterGroup?t.collisionFilterGroup:1,this.collisionFilterMask="number"==typeof t.collisionFilterMask?t.collisionFilterMask:1,this.collisionResponse=!0,this.position=new s,this.previousPosition=new s,this.interpolatedPosition=new s,this.initPosition=new s,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new s,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new s,this.force=new s;var e="number"==typeof t.mass?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping="number"==typeof t.linearDamping?t.linearDamping:.01,this.type=e<=0?i.STATIC:i.DYNAMIC,typeof t.type==typeof i.STATIC&&(this.type=t.type),this.allowSleep=void 0===t.allowSleep||t.allowSleep,this.sleepState=0,this.sleepSpeedLimit=void 0!==t.sleepSpeedLimit?t.sleepSpeedLimit:.1,this.sleepTimeLimit=void 0!==t.sleepTimeLimit?t.sleepTimeLimit:1,this.timeLastSleepy=0,this._wakeUpAfterNarrowphase=!1,this.torque=new s,this.quaternion=new a,this.initQuaternion=new a,this.previousQuaternion=new a,this.interpolatedQuaternion=new a,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new s,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new s,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new s,this.invInertia=new s,this.invInertiaWorld=new r,this.invMassSolve=0,this.invInertiaSolve=new s,this.invInertiaWorldSolve=new r,this.fixedRotation=void 0!==t.fixedRotation&&t.fixedRotation,this.angularDamping=void 0!==t.angularDamping?t.angularDamping:.01,this.linearFactor=new s(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new s(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new c,this.aabbNeedsUpdate=!0,this.wlambda=new s,t.shape&&this.addShape(t.shape),this.updateMassProperties()}e.exports=i;var n=t("../utils/EventTarget"),s=(t("../shapes/Shape"),t("../math/Vec3")),r=t("../math/Mat3"),a=t("../math/Quaternion"),c=(t("../material/Material"),t("../collision/AABB")),h=t("../shapes/Box");i.prototype=new n,i.prototype.constructor=i,i.COLLIDE_EVENT_NAME="collide",i.DYNAMIC=1,i.STATIC=2,i.KINEMATIC=4,i.AWAKE=0,i.SLEEPY=1,i.SLEEPING=2,i.idCounter=0,i.wakeupEvent={type:"wakeup"},i.prototype.wakeUp=function(){var t=this.sleepState;this.sleepState=0,this._wakeUpAfterNarrowphase=!1,t===i.SLEEPING&&this.dispatchEvent(i.wakeupEvent)},i.prototype.sleep=function(){this.sleepState=i.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this._wakeUpAfterNarrowphase=!1},i.sleepyEvent={type:"sleepy"},i.sleepEvent={type:"sleep"},i.prototype.sleepTick=function(t){if(this.allowSleep){var e=this.sleepState,o=this.velocity.norm2()+this.angularVelocity.norm2(),n=Math.pow(this.sleepSpeedLimit,2);e===i.AWAKE&&o<n?(this.sleepState=i.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(i.sleepyEvent)):e===i.SLEEPY&&o>n?this.wakeUp():e===i.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(i.sleepEvent))}},i.prototype.updateSolveMassProperties=function(){this.sleepState===i.SLEEPING||this.type===i.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))},i.prototype.pointToLocalFrame=function(t,e){var e=e||new s;return t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e},i.prototype.vectorToLocalFrame=function(t,e){var e=e||new s;return this.quaternion.conjugate().vmult(t,e),e},i.prototype.pointToWorldFrame=function(t,e){var e=e||new s;return this.quaternion.vmult(t,e),e.vadd(this.position,e),e},i.prototype.vectorToWorldFrame=function(t,e){var e=e||new s;return this.quaternion.vmult(t,e),e};var l=new s,u=new a;i.prototype.addShape=function(t,e,o){var i=new s,n=new a;return e&&i.copy(e),o&&n.copy(o),this.shapes.push(t),this.shapeOffsets.push(i),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this},i.prototype.updateBoundingRadius=function(){for(var t=this.shapes,e=this.shapeOffsets,o=t.length,i=0,n=0;n!==o;n++){var s=t[n];s.updateBoundingSphereRadius();var r=e[n].norm(),a=s.boundingSphereRadius;r+a>i&&(i=r+a)}this.boundingRadius=i};var p=new c;i.prototype.computeAABB=function(){for(var t=this.shapes,e=this.shapeOffsets,o=this.shapeOrientations,i=t.length,n=l,s=u,r=this.quaternion,a=this.aabb,c=p,h=0;h!==i;h++){var d=t[h];r.vmult(e[h],n),n.vadd(this.position,n),o[h].mult(r,s),d.calculateWorldAABB(n,s,c.lowerBound,c.upperBound),0===h?a.copy(c):a.extend(c)}this.aabbNeedsUpdate=!1};var d=new r,y=new r;new r;i.prototype.updateInertiaWorld=function(t){var e=this.invInertia;if(e.x!==e.y||e.y!==e.z||t){var o=d,i=y;o.setRotationFromQuaternion(this.quaternion),o.transpose(i),o.scale(e,o),o.mmult(i,this.invInertiaWorld)}else;};var v=(new s,new s);i.prototype.applyForce=function(t,e){if(this.type===i.DYNAMIC){var o=v;e.cross(t,o),this.force.vadd(t,this.force),this.torque.vadd(o,this.torque)}};var f=new s,m=new s;i.prototype.applyLocalForce=function(t,e){if(this.type===i.DYNAMIC){var o=f,n=m;this.vectorToWorldFrame(t,o),this.vectorToWorldFrame(e,n),this.applyForce(o,n)}};var g=(new s,new s),w=new s;i.prototype.applyImpulse=function(t,e){if(this.type===i.DYNAMIC){var o=e,n=g;n.copy(t),n.mult(this.invMass,n),this.velocity.vadd(n,this.velocity);var s=w;o.cross(t,s),this.invInertiaWorld.vmult(s,s),this.angularVelocity.vadd(s,this.angularVelocity)}};var x=new s,b=new s;i.prototype.applyLocalImpulse=function(t,e){if(this.type===i.DYNAMIC){var o=x,n=b;this.vectorToWorldFrame(t,o),this.vectorToWorldFrame(e,n),this.applyImpulse(o,n)}};var E=new s;i.prototype.updateMassProperties=function(){var t=E;this.invMass=this.mass>0?1/this.mass:0;var e=this.inertia,o=this.fixedRotation;this.computeAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),h.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!o?1/e.x:0,e.y>0&&!o?1/e.y:0,e.z>0&&!o?1/e.z:0),this.updateInertiaWorld(!0)},i.prototype.getVelocityAtWorldPoint=function(t,e){var o=new s;return t.vsub(this.position,o),this.angularVelocity.cross(o,e),this.velocity.vadd(e,e),e};new s,new s,new a,new a;i.prototype.integrate=function(t,e,o){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),(this.type===i.DYNAMIC||this.type===i.KINEMATIC)&&this.sleepState!==i.SLEEPING){var n=this.velocity,s=this.angularVelocity,r=this.position,a=this.force,c=this.torque,h=this.quaternion,l=this.invMass,u=this.invInertiaWorld,p=this.linearFactor,d=l*t;n.x+=a.x*d*p.x,n.y+=a.y*d*p.y,n.z+=a.z*d*p.z;var y=u.elements,v=this.angularFactor,f=c.x*v.x,m=c.y*v.y,g=c.z*v.z;s.x+=t*(y[0]*f+y[1]*m+y[2]*g),s.y+=t*(y[3]*f+y[4]*m+y[5]*g),s.z+=t*(y[6]*f+y[7]*m+y[8]*g),r.x+=n.x*t,r.y+=n.y*t,r.z+=n.z*t,h.integrate(this.angularVelocity,t,this.angularFactor,h),e&&(o?h.normalizeFast():h.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}},{"../collision/AABB":18,"../material/Material":41,"../math/Mat3":43,"../math/Quaternion":44,"../math/Vec3":46,"../shapes/Box":53,"../shapes/Shape":59,"../utils/EventTarget":65}],48:[function(t,e,o){function i(t){this.chassisBody=t.chassisBody,this.wheelInfos=[],this.sliding=!1,this.world=null,this.indexRightAxis=void 0!==t.indexRightAxis?t.indexRightAxis:1,this.indexForwardAxis=void 0!==t.indexForwardAxis?t.indexForwardAxis:0,this.indexUpAxis=void 0!==t.indexUpAxis?t.indexUpAxis:2}function n(t,e,o,i,n){var r=0,a=o,c=x,h=b,l=E;t.getVelocityAtWorldPoint(a,c),e.getVelocityAtWorldPoint(a,h),c.vsub(h,l);return r=-i.dot(l)*(1/(s(t,o,i)+s(e,o,i))),n<r&&(r=n),r<-n&&(r=-n),r}function s(t,e,o){var i=A,n=B,s=C,r=S;return e.vsub(t.position,i),i.cross(o,n),t.invInertiaWorld.vmult(n,r),r.cross(i,s),t.invMass+o.dot(s)}function r(t,e,o,i,n,s){if(n.norm2()>1.1)return 0;var r=R,a=M,c=T;t.getVelocityAtWorldPoint(e,r),o.getVelocityAtWorldPoint(i,a),r.vsub(a,c);return-.2*n.dot(c)*(1/(t.invMass+o.invMass))}var a=(t("./Body"),t("../math/Vec3")),c=t("../math/Quaternion"),h=(t("../collision/RaycastResult"),t("../collision/Ray")),l=t("../objects/WheelInfo");e.exports=i;var u=(new a,new a,new a,new a),p=new a,d=new a;new h;i.prototype.addWheel=function(t){t=t||{};var e=new l(t),o=this.wheelInfos.length;return this.wheelInfos.push(e),o},i.prototype.setSteeringValue=function(t,e){this.wheelInfos[e].steering=t};new a;i.prototype.applyEngineForce=function(t,e){this.wheelInfos[e].engineForce=t},i.prototype.setBrake=function(t,e){this.wheelInfos[e].brake=t},i.prototype.addToWorld=function(t){this.constraints;t.addBody(this.chassisBody);var e=this;this.preStepCallback=function(){e.updateVehicle(t.dt)},t.addEventListener("preStep",this.preStepCallback),this.world=t},i.prototype.getVehicleAxisWorld=function(t,e){e.set(0===t?1:0,1===t?1:0,2===t?1:0),this.chassisBody.vectorToWorldFrame(e,e)},i.prototype.updateVehicle=function(t){for(var e=this.wheelInfos,o=e.length,i=this.chassisBody,n=0;n<o;n++)this.updateWheelTransform(n);this.currentVehicleSpeedKmHour=3.6*i.velocity.norm();var s=new a;this.getVehicleAxisWorld(this.indexForwardAxis,s),s.dot(i.velocity)<0&&(this.currentVehicleSpeedKmHour*=-1);for(var n=0;n<o;n++)this.castRay(e[n]);this.updateSuspension(t);for(var r=new a,c=new a,n=0;n<o;n++){var h=e[n],l=h.suspensionForce;l>h.maxSuspensionForce&&(l=h.maxSuspensionForce),h.raycastResult.hitNormalWorld.scale(l*t,r),h.raycastResult.hitPointWorld.vsub(i.position,c),i.applyImpulse(r,c)}this.updateFriction(t);var u=new a,p=new a,d=new a;for(n=0;n<o;n++){var h=e[n];i.getVelocityAtWorldPoint(h.chassisConnectionPointWorld,d);var y=1;switch(this.indexUpAxis){case 1:y=-1}if(h.isInContact){\nthis.getVehicleAxisWorld(this.indexForwardAxis,p);var v=p.dot(h.raycastResult.hitNormalWorld);h.raycastResult.hitNormalWorld.scale(v,u),p.vsub(u,p);var f=p.dot(d);h.deltaRotation=y*f*t/h.radius}!h.sliding&&h.isInContact||0===h.engineForce||!h.useCustomSlidingRotationalSpeed||(h.deltaRotation=(h.engineForce>0?1:-1)*h.customSlidingRotationalSpeed*t),Math.abs(h.brake)>Math.abs(h.engineForce)&&(h.deltaRotation=0),h.rotation+=h.deltaRotation,h.deltaRotation*=.99}},i.prototype.updateSuspension=function(t){for(var e=this.chassisBody,o=e.mass,i=this.wheelInfos,n=i.length,s=0;s<n;s++){var r=i[s];if(r.isInContact){var a,c=r.suspensionRestLength,h=r.suspensionLength,l=c-h;a=r.suspensionStiffness*l*r.clippedInvContactDotSuspension;var u,p=r.suspensionRelativeVelocity;u=p<0?r.dampingCompression:r.dampingRelaxation,a-=u*p,r.suspensionForce=a*o,r.suspensionForce<0&&(r.suspensionForce=0)}else r.suspensionForce=0}},i.prototype.removeFromWorld=function(t){this.constraints;t.remove(this.chassisBody),t.removeEventListener("preStep",this.preStepCallback),this.world=null};var y=new a,v=new a;i.prototype.castRay=function(t){var e=y,o=v;this.updateWheelTransformWorld(t);var i=this.chassisBody,n=-1,s=t.suspensionRestLength+t.radius;t.directionWorld.scale(s,e);var r=t.chassisConnectionPointWorld;r.vadd(e,o);var c=t.raycastResult;c.reset();var h=i.collisionResponse;i.collisionResponse=!1,this.world.rayTest(r,o,c),i.collisionResponse=h;var l=c.body;if(t.raycastResult.groundObject=0,l){n=c.distance,t.raycastResult.hitNormalWorld=c.hitNormalWorld,t.isInContact=!0;var u=c.distance;t.suspensionLength=u-t.radius;var p=t.suspensionRestLength-t.maxSuspensionTravel,d=t.suspensionRestLength+t.maxSuspensionTravel;t.suspensionLength<p&&(t.suspensionLength=p),t.suspensionLength>d&&(t.suspensionLength=d,t.raycastResult.reset());var f=t.raycastResult.hitNormalWorld.dot(t.directionWorld),m=new a;i.getVelocityAtWorldPoint(t.raycastResult.hitPointWorld,m);var g=t.raycastResult.hitNormalWorld.dot(m);if(f>=-.1)t.suspensionRelativeVelocity=0,t.clippedInvContactDotSuspension=10;else{var w=-1/f;t.suspensionRelativeVelocity=g*w,t.clippedInvContactDotSuspension=w}}else t.suspensionLength=t.suspensionRestLength+0*t.maxSuspensionTravel,t.suspensionRelativeVelocity=0,t.directionWorld.scale(-1,t.raycastResult.hitNormalWorld),t.clippedInvContactDotSuspension=1;return n},i.prototype.updateWheelTransformWorld=function(t){t.isInContact=!1;var e=this.chassisBody;e.pointToWorldFrame(t.chassisConnectionPointLocal,t.chassisConnectionPointWorld),e.vectorToWorldFrame(t.directionLocal,t.directionWorld),e.vectorToWorldFrame(t.axleLocal,t.axleWorld)},i.prototype.updateWheelTransform=function(t){var e=u,o=p,i=d,n=this.wheelInfos[t];this.updateWheelTransformWorld(n),n.directionLocal.scale(-1,e),o.copy(n.axleLocal),e.cross(o,i),i.normalize(),o.normalize();var s=n.steering,r=new c;r.setFromAxisAngle(e,s);var a=new c;a.setFromAxisAngle(o,n.rotation);var h=n.worldTransform.quaternion;this.chassisBody.quaternion.mult(r,h),h.mult(a,h),h.normalize();var l=n.worldTransform.position;l.copy(n.directionWorld),l.scale(n.suspensionLength,l),l.vadd(n.chassisConnectionPointWorld,l)};var f=[new a(1,0,0),new a(0,1,0),new a(0,0,1)];i.prototype.getWheelTransformWorld=function(t){return this.wheelInfos[t].worldTransform};var m=new a,g=[],w=[];i.prototype.updateFriction=function(t){for(var e=m,o=this.wheelInfos,i=o.length,s=this.chassisBody,c=w,h=g,l=0,u=0;u<i;u++){var p=o[u],d=p.raycastResult.body;d&&l++,p.sideImpulse=0,p.forwardImpulse=0,c[u]||(c[u]=new a),h[u]||(h[u]=new a)}for(var u=0;u<i;u++){var p=o[u],d=p.raycastResult.body;if(d){var y=h[u];this.getWheelTransformWorld(u).vectorToWorldFrame(f[this.indexRightAxis],y);var v=p.raycastResult.hitNormalWorld,x=y.dot(v);v.scale(x,e),y.vsub(e,y),y.normalize(),v.cross(y,c[u]),c[u].normalize(),p.sideImpulse=r(s,p.raycastResult.hitPointWorld,d,p.raycastResult.hitPointWorld,y),p.sideImpulse*=1}}this.sliding=!1;for(var u=0;u<i;u++){var p=o[u],d=p.raycastResult.body,b=0;if(p.slipInfo=1,d){var E=p.brake?p.brake:0;b=n(s,d,p.raycastResult.hitPointWorld,c[u],E),b+=p.engineForce*t;var A=E/b;p.slipInfo*=A}if(p.forwardImpulse=0,p.skidInfo=1,d){p.skidInfo=1;var B=p.suspensionForce*t*p.frictionSlip,C=B,S=B*C;p.forwardImpulse=b;var R=.5*p.forwardImpulse,M=1*p.sideImpulse,T=R*R+M*M;if(p.sliding=!1,T>S){this.sliding=!0,p.sliding=!0;var A=B/Math.sqrt(T);p.skidInfo*=A}}}if(this.sliding)for(var u=0;u<i;u++){var p=o[u];0!==p.sideImpulse&&p.skidInfo<1&&(p.forwardImpulse*=p.skidInfo,p.sideImpulse*=p.skidInfo)}for(var u=0;u<i;u++){var p=o[u],z=new a;if(p.raycastResult.hitPointWorld.vsub(s.position,z),0!==p.forwardImpulse){var k=new a;c[u].scale(p.forwardImpulse,k),s.applyImpulse(k,z)}if(0!==p.sideImpulse){var d=p.raycastResult.body,P=new a;p.raycastResult.hitPointWorld.vsub(d.position,P);var q=new a;h[u].scale(p.sideImpulse,q),s.vectorToLocalFrame(z,z),z["xyz"[this.indexUpAxis]]*=p.rollInfluence,s.vectorToWorldFrame(z,z),s.applyImpulse(q,z),q.scale(-1,q),d.applyImpulse(q,P)}}};var x=new a,b=new a,E=new a,A=new a,B=new a,C=new a,S=new a,R=new a,M=new a,T=new a},{"../collision/Ray":25,"../collision/RaycastResult":26,"../math/Quaternion":44,"../math/Vec3":46,"../objects/WheelInfo":52,"./Body":47}],49:[function(t,e,o){function i(t){if(this.wheelBodies=[],this.coordinateSystem=void 0===t.coordinateSystem?new a(1,2,3):t.coordinateSystem.clone(),this.chassisBody=t.chassisBody,!this.chassisBody){var e=new r(new a(5,2,.5));this.chassisBody=new n(1,e)}this.constraints=[],this.wheelAxes=[],this.wheelForces=[]}var n=t("./Body"),s=t("../shapes/Sphere"),r=t("../shapes/Box"),a=t("../math/Vec3"),c=t("../constraints/HingeConstraint");e.exports=i,i.prototype.addWheel=function(t){t=t||{};var e=t.body;e||(e=new n(1,new s(1.2))),this.wheelBodies.push(e),this.wheelForces.push(0);var o=(new a,void 0!==t.position?t.position.clone():new a),i=new a;this.chassisBody.pointToWorldFrame(o,i),e.position.set(i.x,i.y,i.z);var r=void 0!==t.axis?t.axis.clone():new a(0,1,0);this.wheelAxes.push(r);var h=new c(this.chassisBody,e,{pivotA:o,axisA:r,pivotB:a.ZERO,axisB:r,collideConnected:!1});return this.constraints.push(h),this.wheelBodies.length-1},i.prototype.setSteeringValue=function(t,e){var o=this.wheelAxes[e],i=Math.cos(t),n=Math.sin(t),s=o.x,r=o.y;this.constraints[e].axisA.set(i*s-n*r,n*s+i*r,0)},i.prototype.setMotorSpeed=function(t,e){var o=this.constraints[e];o.enableMotor(),o.motorTargetVelocity=t},i.prototype.disableMotor=function(t){this.constraints[t].disableMotor()};var h=new a;i.prototype.setWheelForce=function(t,e){this.wheelForces[e]=t},i.prototype.applyWheelForce=function(t,e){var o=this.wheelAxes[e],i=this.wheelBodies[e],n=i.torque;o.scale(t,h),i.vectorToWorldFrame(h,h),n.vadd(h,n)},i.prototype.addToWorld=function(t){for(var e=this.constraints,o=this.wheelBodies.concat([this.chassisBody]),i=0;i<o.length;i++)t.addBody(o[i]);for(var i=0;i<e.length;i++)t.addConstraint(e[i]);t.addEventListener("preStep",this._update.bind(this))},i.prototype._update=function(){for(var t=this.wheelForces,e=0;e<t.length;e++)this.applyWheelForce(t[e],e)},i.prototype.removeFromWorld=function(t){for(var e=this.constraints,o=this.wheelBodies.concat([this.chassisBody]),i=0;i<o.length;i++)t.remove(o[i]);for(var i=0;i<e.length;i++)t.removeConstraint(e[i])};var l=new a;i.prototype.getWheelSpeed=function(t){var e=this.wheelAxes[t],o=this.wheelBodies[t],i=o.angularVelocity;return this.chassisBody.vectorToWorldFrame(e,l),i.dot(l)}},{"../constraints/HingeConstraint":31,"../math/Vec3":46,"../shapes/Box":53,"../shapes/Sphere":60,"./Body":47}],50:[function(t,e,o){function i(){this.particles=[],this.density=1,this.smoothingRadius=1,this.speedOfSound=1,this.viscosity=.01,this.eps=1e-6,this.pressures=[],this.densities=[],this.neighbors=[]}e.exports=i;var n=(t("../shapes/Shape"),t("../math/Vec3"));t("../math/Quaternion"),t("../shapes/Particle"),t("../objects/Body"),t("../material/Material");i.prototype.add=function(t){this.particles.push(t),this.neighbors.length<this.particles.length&&this.neighbors.push([])},i.prototype.remove=function(t){var e=this.particles.indexOf(t);-1!==e&&(this.particles.splice(e,1),this.neighbors.length>this.particles.length&&this.neighbors.pop())};var s=new n;i.prototype.getNeighbors=function(t,e){for(var o=this.particles.length,i=t.id,n=this.smoothingRadius*this.smoothingRadius,r=s,a=0;a!==o;a++){var c=this.particles[a];c.position.vsub(t.position,r),i!==c.id&&r.norm2()<n&&e.push(c)}};var r=new n,a=new n,c=new n,h=new n,l=new n,u=new n;i.prototype.update=function(){for(var t=this.particles.length,e=r,o=this.speedOfSound,i=this.eps,n=0;n!==t;n++){var s=this.particles[n],p=this.neighbors[n];p.length=0,this.getNeighbors(s,p),p.push(this.particles[n]);for(var d=p.length,y=0,v=0;v!==d;v++){s.position.vsub(p[v].position,e);var f=e.norm(),m=this.w(f);y+=p[v].mass*m}this.densities[n]=y,this.pressures[n]=o*o*(this.densities[n]-this.density)}for(var g=a,w=c,x=h,b=l,E=u,n=0;n!==t;n++){var A=this.particles[n];g.set(0,0,0),w.set(0,0,0);for(var B,C,p=this.neighbors[n],d=p.length,v=0;v!==d;v++){var S=p[v];A.position.vsub(S.position,b);var R=b.norm();B=-S.mass*(this.pressures[n]/(this.densities[n]*this.densities[n]+i)+this.pressures[v]/(this.densities[v]*this.densities[v]+i)),this.gradw(b,x),x.mult(B,x),g.vadd(x,g),S.velocity.vsub(A.velocity,E),E.mult(1/(1e-4+this.densities[n]*this.densities[v])*this.viscosity*S.mass,E),C=this.nablaw(R),E.mult(C,E),w.vadd(E,w)}w.mult(A.mass,w),g.mult(A.mass,g),A.force.vadd(w,A.force),A.force.vadd(g,A.force)}},i.prototype.w=function(t){var e=this.smoothingRadius;return 315/(64*Math.PI*Math.pow(e,9))*Math.pow(e*e-t*t,3)},i.prototype.gradw=function(t,e){var o=t.norm(),i=this.smoothingRadius;t.mult(945/(32*Math.PI*Math.pow(i,9))*Math.pow(i*i-o*o,2),e)},i.prototype.nablaw=function(t){var e=this.smoothingRadius;return 945/(32*Math.PI*Math.pow(e,9))*(e*e-t*t)*(7*t*t-3*e*e)}},{"../material/Material":41,"../math/Quaternion":44,"../math/Vec3":46,"../objects/Body":47,"../shapes/Particle":57,"../shapes/Shape":59}],51:[function(t,e,o){function i(t,e,o){o=o||{},this.restLength="number"==typeof o.restLength?o.restLength:1,this.stiffness=o.stiffness||100,this.damping=o.damping||1,this.bodyA=t,this.bodyB=e,this.localAnchorA=new n,this.localAnchorB=new n,o.localAnchorA&&this.localAnchorA.copy(o.localAnchorA),o.localAnchorB&&this.localAnchorB.copy(o.localAnchorB),o.worldAnchorA&&this.setWorldAnchorA(o.worldAnchorA),o.worldAnchorB&&this.setWorldAnchorB(o.worldAnchorB)}var n=t("../math/Vec3");e.exports=i,i.prototype.setWorldAnchorA=function(t){this.bodyA.pointToLocalFrame(t,this.localAnchorA)},i.prototype.setWorldAnchorB=function(t){this.bodyB.pointToLocalFrame(t,this.localAnchorB)},i.prototype.getWorldAnchorA=function(t){this.bodyA.pointToWorldFrame(this.localAnchorA,t)},i.prototype.getWorldAnchorB=function(t){this.bodyB.pointToWorldFrame(this.localAnchorB,t)};var s=new n,r=new n,a=new n,c=new n,h=new n,l=new n,u=new n,p=new n,d=new n,y=new n,v=new n;i.prototype.applyForce=function(){var t=this.stiffness,e=this.damping,o=this.restLength,i=this.bodyA,n=this.bodyB,f=s,m=r,g=a,w=c,x=v,b=h,E=l,A=u,B=p,C=d,S=y;this.getWorldAnchorA(b),this.getWorldAnchorB(E),b.vsub(i.position,A),E.vsub(n.position,B),E.vsub(b,f);var R=f.norm();m.copy(f),m.normalize(),n.velocity.vsub(i.velocity,g),n.angularVelocity.cross(B,x),g.vadd(x,g),i.angularVelocity.cross(A,x),g.vsub(x,g),m.mult(-t*(R-o)-e*g.dot(m),w),i.force.vsub(w,i.force),n.force.vadd(w,n.force),A.cross(w,C),B.cross(w,S),i.torque.vsub(C,i.torque),n.torque.vadd(S,n.torque)}},{"../math/Vec3":46}],52:[function(t,e,o){function i(t){t=a.defaults(t,{chassisConnectionPointLocal:new n,chassisConnectionPointWorld:new n,directionLocal:new n,directionWorld:new n,axleLocal:new n,axleWorld:new n,suspensionRestLength:1,suspensionMaxLength:2,radius:1,suspensionStiffness:100,dampingCompression:10,dampingRelaxation:10,frictionSlip:1e4,steering:0,rotation:0,deltaRotation:0,rollInfluence:.01,maxSuspensionForce:Number.MAX_VALUE,isFrontWheel:!0,clippedInvContactDotSuspension:1,suspensionRelativeVelocity:0,suspensionForce:0,skidInfo:0,suspensionLength:0,maxSuspensionTravel:1,useCustomSlidingRotationalSpeed:!1,customSlidingRotationalSpeed:-.1}),this.maxSuspensionTravel=t.maxSuspensionTravel,this.customSlidingRotationalSpeed=t.customSlidingRotationalSpeed,this.useCustomSlidingRotationalSpeed=t.useCustomSlidingRotationalSpeed,this.sliding=!1,this.chassisConnectionPointLocal=t.chassisConnectionPointLocal.clone(),this.chassisConnectionPointWorld=t.chassisConnectionPointWorld.clone(),this.directionLocal=t.directionLocal.clone(),this.directionWorld=t.directionWorld.clone(),this.axleLocal=t.axleLocal.clone(),this.axleWorld=t.axleWorld.clone(),this.suspensionRestLength=t.suspensionRestLength,this.suspensionMaxLength=t.suspensionMaxLength,this.radius=t.radius,this.suspensionStiffness=t.suspensionStiffness,this.dampingCompression=t.dampingCompression,this.dampingRelaxation=t.dampingRelaxation,this.frictionSlip=t.frictionSlip,this.steering=0,this.rotation=0,this.deltaRotation=0,this.rollInfluence=t.rollInfluence,this.maxSuspensionForce=t.maxSuspensionForce,this.engineForce=0,this.brake=0,this.isFrontWheel=t.isFrontWheel,this.clippedInvContactDotSuspension=1,this.suspensionRelativeVelocity=0,this.suspensionForce=0,this.skidInfo=0,this.suspensionLength=0,this.sideImpulse=0,this.forwardImpulse=0,this.raycastResult=new r,this.worldTransform=new s,this.isInContact=!1}var n=t("../math/Vec3"),s=t("../math/Transform"),r=t("../collision/RaycastResult"),a=t("../utils/Utils");e.exports=i;var c=new n,h=new n,c=new n;i.prototype.updateWheel=function(t){var e=this.raycastResult;if(this.isInContact){var o=e.hitNormalWorld.dot(e.directionWorld);e.hitPointWorld.vsub(t.position,h),t.getVelocityAtWorldPoint(h,c);var i=e.hitNormalWorld.dot(c);if(o>=-.1)this.suspensionRelativeVelocity=0,this.clippedInvContactDotSuspension=10;else{var n=-1/o;this.suspensionRelativeVelocity=i*n,this.clippedInvContactDotSuspension=n}}else e.suspensionLength=this.suspensionRestLength,this.suspensionRelativeVelocity=0,e.directionWorld.scale(-1,e.hitNormalWorld),this.clippedInvContactDotSuspension=1}},{"../collision/RaycastResult":26,"../math/Transform":45,"../math/Vec3":46,"../utils/Utils":69}],53:[function(t,e,o){function i(t){n.call(this),this.type=n.types.BOX,this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3"),r=t("./ConvexPolyhedron");i.prototype=new n,i.prototype.constructor=i,i.prototype.updateConvexPolyhedronRepresentation=function(){var t=this.halfExtents.x,e=this.halfExtents.y,o=this.halfExtents.z,i=s,n=[new i(-t,-e,-o),new i(t,-e,-o),new i(t,e,-o),new i(-t,e,-o),new i(-t,-e,o),new i(t,-e,o),new i(t,e,o),new i(-t,e,o)],a=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],c=(new i(0,0,1),new i(0,1,0),new i(1,0,0),new r(n,a));this.convexPolyhedronRepresentation=c,c.material=this.material},i.prototype.calculateLocalInertia=function(t,e){return e=e||new s,i.calculateInertia(this.halfExtents,t,e),e},i.calculateInertia=function(t,e,o){var i=t;o.x=1/12*e*(2*i.y*2*i.y+2*i.z*2*i.z),o.y=1/12*e*(2*i.x*2*i.x+2*i.z*2*i.z),o.z=1/12*e*(2*i.y*2*i.y+2*i.x*2*i.x)},i.prototype.getSideNormals=function(t,e){var o=t,i=this.halfExtents;if(o[0].set(i.x,0,0),o[1].set(0,i.y,0),o[2].set(0,0,i.z),o[3].set(-i.x,0,0),o[4].set(0,-i.y,0),o[5].set(0,0,-i.z),void 0!==e)for(var n=0;n!==o.length;n++)e.vmult(o[n],o[n]);return o},i.prototype.volume=function(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z},i.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.halfExtents.norm()};var a=new s;new s;i.prototype.forEachWorldCorner=function(t,e,o){for(var i=this.halfExtents,n=[[i.x,i.y,i.z],[-i.x,i.y,i.z],[-i.x,-i.y,i.z],[-i.x,-i.y,-i.z],[i.x,-i.y,-i.z],[i.x,i.y,-i.z],[-i.x,i.y,-i.z],[i.x,-i.y,i.z]],s=0;s<n.length;s++)a.set(n[s][0],n[s][1],n[s][2]),e.vmult(a,a),t.vadd(a,a),o(a.x,a.y,a.z)};var c=[new s,new s,new s,new s,new s,new s,new s,new s];i.prototype.calculateWorldAABB=function(t,e,o,i){var n=this.halfExtents;c[0].set(n.x,n.y,n.z),c[1].set(-n.x,n.y,n.z),c[2].set(-n.x,-n.y,n.z),c[3].set(-n.x,-n.y,-n.z),c[4].set(n.x,-n.y,-n.z),c[5].set(n.x,n.y,-n.z),c[6].set(-n.x,n.y,-n.z),c[7].set(n.x,-n.y,n.z);var s=c[0];e.vmult(s,s),t.vadd(s,s),i.copy(s),o.copy(s);for(var r=1;r<8;r++){var s=c[r];e.vmult(s,s),t.vadd(s,s);var a=s.x,h=s.y,l=s.z;a>i.x&&(i.x=a),h>i.y&&(i.y=h),l>i.z&&(i.z=l),a<o.x&&(o.x=a),h<o.y&&(o.y=h),l<o.z&&(o.z=l)}}},{"../math/Vec3":46,"./ConvexPolyhedron":54,"./Shape":59}],54:[function(t,e,o){function i(t,e,o){n.call(this),this.type=n.types.CONVEXPOLYHEDRON,this.vertices=t||[],this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.faces=e||[],this.faceNormals=[],this.computeNormals(),this.worldFaceNormalsNeedsUpdate=!0,this.worldFaceNormals=[],this.uniqueEdges=[],this.uniqueAxes=o?o.slice():null,this.computeEdges(),this.updateBoundingSphereRadius()}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3"),r=(t("../math/Quaternion"),t("../math/Transform"));i.prototype=new n,i.prototype.constructor=i;var a=new s;i.prototype.computeEdges=function(){var t=this.faces,e=this.vertices,o=(e.length,this.uniqueEdges);o.length=0;for(var i=a,n=0;n!==t.length;n++)for(var s=t[n],r=s.length,c=0;c!==r;c++){var h=(c+1)%r;e[s[c]].vsub(e[s[h]],i),i.normalize();for(var l=!1,u=0;u!==o.length;u++)if(o[u].almostEquals(i)||o[u].almostEquals(i)){l=!0;break}l||o.push(i.clone())}},i.prototype.computeNormals=function(){this.faceNormals.length=this.faces.length;for(var t=0;t<this.faces.length;t++){for(var e=0;e<this.faces[t].length;e++)if(!this.vertices[this.faces[t][e]])throw new Error("Vertex "+this.faces[t][e]+" not found!");var o=this.faceNormals[t]||new s;this.getFaceNormal(t,o),o.negate(o),this.faceNormals[t]=o;var i=this.vertices[this.faces[t][0]];if(o.dot(i)<0){console.error(".faceNormals["+t+"] = Vec3("+o.toString()+") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.");for(var e=0;e<this.faces[t].length;e++)console.warn(".vertices["+this.faces[t][e]+"] = Vec3("+this.vertices[this.faces[t][e]].toString()+")")}}};var c=new s,h=new s;i.computeNormal=function(t,e,o,i){e.vsub(t,h),o.vsub(e,c),c.cross(h,i),i.isZero()||i.normalize()},i.prototype.getFaceNormal=function(t,e){var o=this.faces[t],n=this.vertices[o[0]],s=this.vertices[o[1]],r=this.vertices[o[2]];return i.computeNormal(n,s,r,e)};var l=new s;i.prototype.clipAgainstHull=function(t,e,o,i,n,r,a,c,h){for(var u=l,p=-1,d=-Number.MAX_VALUE,y=0;y<o.faces.length;y++){u.copy(o.faceNormals[y]),n.vmult(u,u);var v=u.dot(r);v>d&&(d=v,p=y)}for(var f=[],m=o.faces[p],g=m.length,w=0;w<g;w++){var x=o.vertices[m[w]],b=new s;b.copy(x),n.vmult(b,b),i.vadd(b,b),f.push(b)}p>=0&&this.clipFaceAgainstHull(r,t,e,f,a,c,h)};var u=new s,p=new s,d=new s,y=new s,v=new s,f=new s;i.prototype.findSeparatingAxis=function(t,e,o,i,n,s,r,a){var c=u,h=p,l=d,m=y,g=v,w=f,x=Number.MAX_VALUE,b=this,E=0;if(b.uniqueAxes)for(var A=0;A!==b.uniqueAxes.length;A++){o.vmult(b.uniqueAxes[A],c);var B=b.testSepAxis(c,t,e,o,i,n);if(!1===B)return!1;B<x&&(x=B,s.copy(c))}else for(var C=r?r.length:b.faces.length,A=0;A<C;A++){var S=r?r[A]:A;c.copy(b.faceNormals[S]),o.vmult(c,c);var B=b.testSepAxis(c,t,e,o,i,n);if(!1===B)return!1;B<x&&(x=B,s.copy(c))}if(t.uniqueAxes)for(var A=0;A!==t.uniqueAxes.length;A++){n.vmult(t.uniqueAxes[A],h),E++;var B=b.testSepAxis(h,t,e,o,i,n);if(!1===B)return!1;B<x&&(x=B,s.copy(h))}else for(var R=a?a.length:t.faces.length,A=0;A<R;A++){var S=a?a[A]:A;h.copy(t.faceNormals[S]),n.vmult(h,h),E++;var B=b.testSepAxis(h,t,e,o,i,n);if(!1===B)return!1;B<x&&(x=B,s.copy(h))}for(var M=0;M!==b.uniqueEdges.length;M++){o.vmult(b.uniqueEdges[M],m);for(var T=0;T!==t.uniqueEdges.length;T++)if(n.vmult(t.uniqueEdges[T],g),m.cross(g,w),!w.almostZero()){w.normalize();var z=b.testSepAxis(w,t,e,o,i,n);if(!1===z)return!1;z<x&&(x=z,s.copy(w))}}return i.vsub(e,l),l.dot(s)>0&&s.negate(s),!0};var m=[],g=[];i.prototype.testSepAxis=function(t,e,o,n,s,r){var a=this;i.project(a,t,o,n,m),i.project(e,t,s,r,g);var c=m[0],h=m[1],l=g[0],u=g[1];if(c<u||l<h)return!1;var p=c-u,d=l-h;return p<d?p:d};var w=new s,x=new s;i.prototype.calculateLocalInertia=function(t,e){this.computeLocalAABB(w,x);var o=x.x-w.x,i=x.y-w.y,n=x.z-w.z;e.x=1/12*t*(2*i*2*i+2*n*2*n),e.y=1/12*t*(2*o*2*o+2*n*2*n),e.z=1/12*t*(2*i*2*i+2*o*2*o)},i.prototype.getPlaneConstantOfFace=function(t){var e=this.faces[t],o=this.faceNormals[t],i=this.vertices[e[0]];return-o.dot(i)};var b=new s,E=new s,A=new s,B=new s,C=new s,S=new s,R=new s,M=new s;i.prototype.clipFaceAgainstHull=function(t,e,o,i,n,s,r){for(var a=b,c=E,h=A,l=B,u=C,p=S,d=R,y=M,v=this,f=[],m=i,g=f,w=-1,x=Number.MAX_VALUE,T=0;T<v.faces.length;T++){a.copy(v.faceNormals[T]),o.vmult(a,a);var z=a.dot(t);z<x&&(x=z,w=T)}if(!(w<0)){var k=v.faces[w];k.connectedFaces=[];for(var P=0;P<v.faces.length;P++)for(var q=0;q<v.faces[P].length;q++)-1!==k.indexOf(v.faces[P][q])&&P!==w&&-1===k.connectedFaces.indexOf(P)&&k.connectedFaces.push(P);for(var L=(m.length,k.length),V=0;V<L;V++){var F=v.vertices[k[V]],N=v.vertices[k[(V+1)%L]];F.vsub(N,c),h.copy(c),o.vmult(h,h),e.vadd(h,h),l.copy(this.faceNormals[w]),o.vmult(l,l),e.vadd(l,l),h.cross(l,u),u.negate(u),p.copy(F),o.vmult(p,p),e.vadd(p,p);var I,j=(p.dot(u),k.connectedFaces[V]);d.copy(this.faceNormals[j]);var O=this.getPlaneConstantOfFace(j);y.copy(d),o.vmult(y,y);var I=O-y.dot(e);for(this.clipFaceAgainstPlane(m,g,y,I);m.length;)m.shift();for(;g.length;)m.push(g.shift())}d.copy(this.faceNormals[w]);var O=this.getPlaneConstantOfFace(w);y.copy(d),o.vmult(y,y);for(var I=O-y.dot(e),P=0;P<m.length;P++){var D=y.dot(m[P])+I;if(D<=n&&(console.log("clamped: depth="+D+" to minDist="+n),D=n),D<=s){var W=m[P];if(D<=0){var H={point:W,normal:y,depth:D};r.push(H)}}}}},i.prototype.clipFaceAgainstPlane=function(t,e,o,i){var n,r,a=t.length;if(a<2)return e;var c=t[t.length-1],h=t[0];n=o.dot(c)+i;for(var l=0;l<a;l++){if(h=t[l],r=o.dot(h)+i,n<0)if(r<0){var u=new s;u.copy(h),e.push(u)}else{var u=new s;c.lerp(h,n/(n-r),u),e.push(u)}else if(r<0){var u=new s;c.lerp(h,n/(n-r),u),e.push(u),e.push(h)}c=h,n=r}return e},i.prototype.computeWorldVertices=function(t,e){for(var o=this.vertices.length;this.worldVertices.length<o;)this.worldVertices.push(new s);for(var i=this.vertices,n=this.worldVertices,r=0;r!==o;r++)e.vmult(i[r],n[r]),t.vadd(n[r],n[r]);this.worldVerticesNeedsUpdate=!1};new s;i.prototype.computeLocalAABB=function(t,e){var o=this.vertices.length,i=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(var n=0;n<o;n++){var s=i[n];s.x<t.x?t.x=s.x:s.x>e.x&&(e.x=s.x),s.y<t.y?t.y=s.y:s.y>e.y&&(e.y=s.y),s.z<t.z?t.z=s.z:s.z>e.z&&(e.z=s.z)}},i.prototype.computeWorldFaceNormals=function(t){for(var e=this.faceNormals.length;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new s);for(var o=this.faceNormals,i=this.worldFaceNormals,n=0;n!==e;n++)t.vmult(o[n],i[n]);this.worldFaceNormalsNeedsUpdate=!1},i.prototype.updateBoundingSphereRadius=function(){for(var t=0,e=this.vertices,o=0,i=e.length;o!==i;o++){var n=e[o].norm2();n>t&&(t=n)}this.boundingSphereRadius=Math.sqrt(t)};var T=new s;i.prototype.calculateWorldAABB=function(t,e,o,i){for(var n,s,r,a,c,h,l=this.vertices.length,u=this.vertices,p=0;p<l;p++){T.copy(u[p]),e.vmult(T,T),t.vadd(T,T);var d=T;d.x<n||void 0===n?n=d.x:(d.x>a||void 0===a)&&(a=d.x),d.y<s||void 0===s?s=d.y:(d.y>c||void 0===c)&&(c=d.y),d.z<r||void 0===r?r=d.z:(d.z>h||void 0===h)&&(h=d.z)}o.set(n,s,r),i.set(a,c,h)},i.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},i.prototype.getAveragePointLocal=function(t){t=t||new s;for(var e=this.vertices.length,o=this.vertices,i=0;i<e;i++)t.vadd(o[i],t);return t.mult(1/e,t),t},i.prototype.transformAllPoints=function(t,e){var o=this.vertices.length,i=this.vertices;if(e){for(var n=0;n<o;n++){var s=i[n];e.vmult(s,s)}for(var n=0;n<this.faceNormals.length;n++){var s=this.faceNormals[n];e.vmult(s,s)}}if(t)for(var n=0;n<o;n++){var s=i[n];s.vadd(t,s)}};var z=new s,k=new s,P=new s;i.prototype.pointIsInside=function(t){var e=this.vertices.length,o=this.vertices,i=this.faces,n=this.faceNormals,s=this.faces.length,r=z;this.getAveragePointLocal(r);for(var a=0;a<s;a++){var e=(this.faces[a].length,n[a]),c=o[i[a][0]],h=k;t.vsub(c,h);var l=e.dot(h),u=P;r.vsub(c,u);var p=e.dot(u);if(l<0&&p>0||l>0&&p<0)return!1}return-1};var q=(new s,new s),L=new s;i.project=function(t,e,o,i,n){var s=t.vertices.length,a=q,c=0,h=0,l=L,u=t.vertices;l.setZero(),r.vectorToLocalFrame(o,i,e,a),r.pointToLocalFrame(o,i,l,l);var p=l.dot(a);h=c=u[0].dot(a);for(var d=1;d<s;d++){var y=u[d].dot(a);y>c&&(c=y),y<h&&(h=y)}if(h-=p,c-=p,h>c){var v=h;h=c,c=v}n[0]=c,n[1]=h}},{"../math/Quaternion":44,"../math/Transform":45,"../math/Vec3":46,"./Shape":59}],55:[function(t,e,o){function i(t,e,o,i){var a=i,c=[],h=[],l=[],u=[],p=[],d=Math.cos,y=Math.sin;c.push(new s(e*d(0),e*y(0),.5*-o)),u.push(0),c.push(new s(t*d(0),t*y(0),.5*o)),p.push(1);for(var v=0;v<a;v++){var f=2*Math.PI/a*(v+1),m=2*Math.PI/a*(v+.5);v<a-1?(c.push(new s(e*d(f),e*y(f),.5*-o)),u.push(2*v+2),c.push(new s(t*d(f),t*y(f),.5*o)),p.push(2*v+3),l.push([2*v+2,2*v+3,2*v+1,2*v])):l.push([0,1,2*v+1,2*v]),(a%2==1||v<a/2)&&h.push(new s(d(m),y(m),0))}l.push(p),h.push(new s(0,0,1));for(var g=[],v=0;v<u.length;v++)g.push(u[u.length-v-1]);l.push(g),this.type=n.types.CONVEXPOLYHEDRON,r.call(this,c,l,h)}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3"),r=(t("../math/Quaternion"),t("./ConvexPolyhedron"));i.prototype=new r},{"../math/Quaternion":44,"../math/Vec3":46,"./ConvexPolyhedron":54,"./Shape":59}],56:[function(t,e,o){function i(t,e){e=c.defaults(e,{maxValue:null,minValue:null,elementSize:1}),this.data=t,this.maxValue=e.maxValue,this.minValue=e.minValue,this.elementSize=e.elementSize,null===e.minValue&&this.updateMinValue(),null===e.maxValue&&this.updateMaxValue(),this.cacheEnabled=!0,s.call(this),this.pillarConvex=new r,this.pillarOffset=new a,this.type=s.types.HEIGHTFIELD,this.updateBoundingSphereRadius(),this._cachedPillars={}}function n(t,e,o,i,n,s,r,a,c){c.x=((s-a)*(t-r)+(r-n)*(e-a))/((s-a)*(o-r)+(r-n)*(i-a)),c.y=((a-i)*(t-r)+(o-r)*(e-a))/((s-a)*(o-r)+(r-n)*(i-a)),c.z=1-c.x-c.y}var s=t("./Shape"),r=t("./ConvexPolyhedron"),a=t("../math/Vec3"),c=t("../utils/Utils");e.exports=i,i.prototype=new s,i.prototype.update=function(){this._cachedPillars={}},i.prototype.updateMinValue=function(){for(var t=this.data,e=t[0][0],o=0;o!==t.length;o++)for(var i=0;i!==t[o].length;i++){var n=t[o][i];n<e&&(e=n)}this.minValue=e},i.prototype.updateMaxValue=function(){for(var t=this.data,e=t[0][0],o=0;o!==t.length;o++)for(var i=0;i!==t[o].length;i++){var n=t[o][i];n>e&&(e=n)}this.maxValue=e},i.prototype.setHeightValueAtIndex=function(t,e,o){this.data[t][e]=o,this.clearCachedConvexTrianglePillar(t,e,!1),t>0&&(this.clearCachedConvexTrianglePillar(t-1,e,!0),this.clearCachedConvexTrianglePillar(t-1,e,!1)),e>0&&(this.clearCachedConvexTrianglePillar(t,e-1,!0),this.clearCachedConvexTrianglePillar(t,e-1,!1)),e>0&&t>0&&this.clearCachedConvexTrianglePillar(t-1,e-1,!0)},i.prototype.getRectMinMax=function(t,e,o,i,n){n=n||[];for(var s=this.data,r=this.minValue,a=t;a<=o;a++)for(var c=e;c<=i;c++){var h=s[a][c];h>r&&(r=h)}n[0]=this.minValue,n[1]=r},i.prototype.getIndexOfPosition=function(t,e,o,i){var n=this.elementSize,s=this.data,r=Math.floor(t/n),a=Math.floor(e/n);return o[0]=r,o[1]=a,i&&(r<0&&(r=0),a<0&&(a=0),r>=s.length-1&&(r=s.length-1),a>=s[0].length-1&&(a=s[0].length-1)),!(r<0||a<0||r>=s.length-1||a>=s[0].length-1)};var h=[],l=new a,u=new a,p=new a,d=new a;i.prototype.getTriangleAt=function(t,e,o,i,n,s){var r=h;this.getIndexOfPosition(t,e,r,o);var a=r[0],c=r[1],l=this.data;o&&(a=Math.min(l.length-2,Math.max(0,a)),c=Math.min(l[0].length-2,Math.max(0,c)));var u=this.elementSize,p=Math.pow(t/u-a,2)+Math.pow(e/u-c,2),d=Math.pow(t/u-(a+1),2)+Math.pow(e/u-(c+1),2),y=p>d;return this.getTriangle(a,c,y,i,n,s),y};var y=new a,v=new a,f=new a,m=new a,g=new a;i.prototype.getNormalAt=function(t,e,o,i){var n=y,s=v,r=f,a=m,c=g;this.getTriangleAt(t,e,o,n,s,r),s.vsub(n,a),r.vsub(n,c),a.cross(c,i),i.normalize()},i.prototype.getAabbAtIndex=function(t,e,o){var i=this.data,n=this.elementSize;o.lowerBound.set(t*n,e*n,i[t][e]),o.upperBound.set((t+1)*n,(e+1)*n,i[t+1][e+1])},i.prototype.getHeightAt=function(t,e,o){var i=this.data,s=u,r=p,a=d,c=h;this.getIndexOfPosition(t,e,c,o);var y=c[0],v=c[1];o&&(y=Math.min(i.length-2,Math.max(0,y)),v=Math.min(i[0].length-2,Math.max(0,v)));var f=this.getTriangleAt(t,e,o,s,r,a);n(t,e,s.x,s.y,r.x,r.y,a.x,a.y,l);var m=l;return f?i[y+1][v+1]*m.x+i[y][v+1]*m.y+i[y+1][v]*m.z:i[y][v]*m.x+i[y+1][v]*m.y+i[y][v+1]*m.z},i.prototype.getCacheConvexTrianglePillarKey=function(t,e,o){return t+"_"+e+"_"+(o?1:0)},i.prototype.getCachedConvexTrianglePillar=function(t,e,o){return this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,o)]},i.prototype.setCachedConvexTrianglePillar=function(t,e,o,i,n){this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,o)]={convex:i,offset:n}},i.prototype.clearCachedConvexTrianglePillar=function(t,e,o){delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(t,e,o)]},i.prototype.getTriangle=function(t,e,o,i,n,s){var r=this.data,a=this.elementSize;o?(i.set((t+1)*a,(e+1)*a,r[t+1][e+1]),n.set(t*a,(e+1)*a,r[t][e+1]),s.set((t+1)*a,e*a,r[t+1][e])):(i.set(t*a,e*a,r[t][e]),n.set((t+1)*a,e*a,r[t+1][e]),s.set(t*a,(e+1)*a,r[t][e+1]))},i.prototype.getConvexTrianglePillar=function(t,e,o){var i=this.pillarConvex,n=this.pillarOffset;if(this.cacheEnabled){var s=this.getCachedConvexTrianglePillar(t,e,o);if(s)return this.pillarConvex=s.convex,void(this.pillarOffset=s.offset);i=new r,n=new a,this.pillarConvex=i,this.pillarOffset=n}var s=this.data,c=this.elementSize,h=i.faces;i.vertices.length=6;for(var l=0;l<6;l++)i.vertices[l]||(i.vertices[l]=new a);h.length=5;for(var l=0;l<5;l++)h[l]||(h[l]=[]);var u=i.vertices,p=(Math.min(s[t][e],s[t+1][e],s[t][e+1],s[t+1][e+1])-this.minValue)/2+this.minValue;o?(n.set((t+.75)*c,(e+.75)*c,p),u[0].set(.25*c,.25*c,s[t+1][e+1]-p),u[1].set(-.75*c,.25*c,s[t][e+1]-p),u[2].set(.25*c,-.75*c,s[t+1][e]-p),u[3].set(.25*c,.25*c,-p-1),u[4].set(-.75*c,.25*c,-p-1),u[5].set(.25*c,-.75*c,-p-1),h[0][0]=0,h[0][1]=1,h[0][2]=2,h[1][0]=5,h[1][1]=4,h[1][2]=3,h[2][0]=2,h[2][1]=5,h[2][2]=3,h[2][3]=0,h[3][0]=3,h[3][1]=4,h[3][2]=1,h[3][3]=0,h[4][0]=1,h[4][1]=4,h[4][2]=5,h[4][3]=2):(n.set((t+.25)*c,(e+.25)*c,p),u[0].set(-.25*c,-.25*c,s[t][e]-p),u[1].set(.75*c,-.25*c,s[t+1][e]-p),u[2].set(-.25*c,.75*c,s[t][e+1]-p),u[3].set(-.25*c,-.25*c,-p-1),u[4].set(.75*c,-.25*c,-p-1),u[5].set(-.25*c,.75*c,-p-1),h[0][0]=0,h[0][1]=1,h[0][2]=2,h[1][0]=5,h[1][1]=4,h[1][2]=3,h[2][0]=0,h[2][1]=2,h[2][2]=5,h[2][3]=3,h[3][0]=1,h[3][1]=0,h[3][2]=3,h[3][3]=4,h[4][0]=4,h[4][1]=5,h[4][2]=2,h[4][3]=1),i.computeNormals(),i.computeEdges(),i.updateBoundingSphereRadius(),this.setCachedConvexTrianglePillar(t,e,o,i,n)},i.prototype.calculateLocalInertia=function(t,e){return e=e||new a,e.set(0,0,0),e},i.prototype.volume=function(){return Number.MAX_VALUE},i.prototype.calculateWorldAABB=function(t,e,o,i){o.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),i.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE)},i.prototype.updateBoundingSphereRadius=function(){var t=this.data,e=this.elementSize;this.boundingSphereRadius=new a(t.length*e,t[0].length*e,Math.max(Math.abs(this.maxValue),Math.abs(this.minValue))).norm()},i.prototype.setHeightsFromImage=function(t,e){var o=document.createElement("canvas");o.width=t.width,o.height=t.height;var i=o.getContext("2d");i.drawImage(t,0,0);var n=i.getImageData(0,0,t.width,t.height),s=this.data;s.length=0,this.elementSize=Math.abs(e.x)/n.width;for(var r=0;r<n.height;r++){for(var a=[],c=0;c<n.width;c++){var h=n.data[4*(r*n.height+c)],l=n.data[4*(r*n.height+c)+1],u=n.data[4*(r*n.height+c)+2],p=(h+l+u)/4/255*e.z\n;e.x<0?a.push(p):a.unshift(p)}e.y<0?s.unshift(a):s.push(a)}this.updateMaxValue(),this.updateMinValue(),this.update()}},{"../math/Vec3":46,"../utils/Utils":69,"./ConvexPolyhedron":54,"./Shape":59}],57:[function(t,e,o){function i(){n.call(this),this.type=n.types.PARTICLE}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3");i.prototype=new n,i.prototype.constructor=i,i.prototype.calculateLocalInertia=function(t,e){return e=e||new s,e.set(0,0,0),e},i.prototype.volume=function(){return 0},i.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=0},i.prototype.calculateWorldAABB=function(t,e,o,i){o.copy(t),i.copy(t)}},{"../math/Vec3":46,"./Shape":59}],58:[function(t,e,o){function i(){n.call(this),this.type=n.types.PLANE,this.worldNormal=new s,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3");i.prototype=new n,i.prototype.constructor=i,i.prototype.computeWorldNormal=function(t){var e=this.worldNormal;e.set(0,0,1),t.vmult(e,e),this.worldNormalNeedsUpdate=!1},i.prototype.calculateLocalInertia=function(t,e){return e=e||new s},i.prototype.volume=function(){return Number.MAX_VALUE};var r=new s;i.prototype.calculateWorldAABB=function(t,e,o,i){r.set(0,0,1),e.vmult(r,r);var n=Number.MAX_VALUE;o.set(-n,-n,-n),i.set(n,n,n),1===r.x&&(i.x=t.x),1===r.y&&(i.y=t.y),1===r.z&&(i.z=t.z),-1===r.x&&(o.x=t.x),-1===r.y&&(o.y=t.y),-1===r.z&&(o.z=t.z)},i.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=Number.MAX_VALUE}},{"../math/Vec3":46,"./Shape":59}],59:[function(t,e,o){function i(){this.id=i.idCounter++,this.type=0,this.boundingSphereRadius=0,this.collisionResponse=!0,this.material=null,this.body=null}e.exports=i;var i=t("./Shape");t("../math/Vec3"),t("../math/Quaternion"),t("../material/Material");i.prototype.constructor=i,i.prototype.updateBoundingSphereRadius=function(){throw"computeBoundingSphereRadius() not implemented for shape type "+this.type},i.prototype.volume=function(){throw"volume() not implemented for shape type "+this.type},i.prototype.calculateLocalInertia=function(t,e){throw"calculateLocalInertia() not implemented for shape type "+this.type},i.idCounter=0,i.types={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256}},{"../material/Material":41,"../math/Quaternion":44,"../math/Vec3":46,"./Shape":59}],60:[function(t,e,o){function i(t){if(n.call(this),this.radius=void 0!==t?Number(t):1,this.type=n.types.SPHERE,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3");i.prototype=new n,i.prototype.constructor=i,i.prototype.calculateLocalInertia=function(t,e){e=e||new s;var o=2*t*this.radius*this.radius/5;return e.x=o,e.y=o,e.z=o,e},i.prototype.volume=function(){return 4*Math.PI*this.radius/3},i.prototype.updateBoundingSphereRadius=function(){this.boundingSphereRadius=this.radius},i.prototype.calculateWorldAABB=function(t,e,o,i){for(var n=this.radius,s=["x","y","z"],r=0;r<s.length;r++){var a=s[r];o[a]=t[a]-n,i[a]=t[a]+n}}},{"../math/Vec3":46,"./Shape":59}],61:[function(t,e,o){function i(t,e){n.call(this),this.type=n.types.TRIMESH,this.vertices=new Float32Array(t),this.indices=new Int16Array(e),this.normals=new Float32Array(e.length),this.aabb=new a,this.edges=null,this.scale=new s(1,1,1),this.tree=new c,this.updateEdges(),this.updateNormals(),this.updateAABB(),this.updateBoundingSphereRadius(),this.updateTree()}e.exports=i;var n=t("./Shape"),s=t("../math/Vec3"),r=(t("../math/Quaternion"),t("../math/Transform")),a=t("../collision/AABB"),c=t("../utils/Octree");i.prototype=new n,i.prototype.constructor=i;var h=new s;i.prototype.updateTree=function(){var t=this.tree;t.reset(),t.aabb.copy(this.aabb);var e=this.scale;t.aabb.lowerBound.x*=1/e.x,t.aabb.lowerBound.y*=1/e.y,t.aabb.lowerBound.z*=1/e.z,t.aabb.upperBound.x*=1/e.x,t.aabb.upperBound.y*=1/e.y,t.aabb.upperBound.z*=1/e.z;for(var o=new a,i=new s,n=new s,r=new s,c=[i,n,r],h=0;h<this.indices.length/3;h++){var l=3*h;this._getUnscaledVertex(this.indices[l],i),this._getUnscaledVertex(this.indices[l+1],n),this._getUnscaledVertex(this.indices[l+2],r),o.setFromPoints(c),t.insert(o,h)}t.removeEmptyNodes()};var l=new a;i.prototype.getTrianglesInAABB=function(t,e){l.copy(t);var o=this.scale,i=o.x,n=o.y,s=o.z,r=l.lowerBound,a=l.upperBound;return r.x/=i,r.y/=n,r.z/=s,a.x/=i,a.y/=n,a.z/=s,this.tree.aabbQuery(l,e)},i.prototype.setScale=function(t){var e=this.scale.x===this.scale.y===this.scale.z,o=t.x===t.y===t.z;e&&o||this.updateNormals(),this.scale.copy(t),this.updateAABB(),this.updateBoundingSphereRadius()},i.prototype.updateNormals=function(){for(var t=h,e=this.normals,o=0;o<this.indices.length/3;o++){var n=3*o,s=this.indices[n],r=this.indices[n+1],a=this.indices[n+2];this.getVertex(s,v),this.getVertex(r,f),this.getVertex(a,m),i.computeNormal(f,v,m,t),e[n]=t.x,e[n+1]=t.y,e[n+2]=t.z}},i.prototype.updateEdges=function(){for(var t={},e=function(e,o){t[n<s?n+"_"+s:s+"_"+n]=!0},o=0;o<this.indices.length/3;o++){var i=3*o,n=this.indices[i],s=this.indices[i+1];this.indices[i+2];e(),e(),e()}var r=Object.keys(t);this.edges=new Int16Array(2*r.length);for(var o=0;o<r.length;o++){var a=r[o].split("_");this.edges[2*o]=parseInt(a[0],10),this.edges[2*o+1]=parseInt(a[1],10)}},i.prototype.getEdgeVertex=function(t,e,o){var i=this.edges[2*t+(e?1:0)];this.getVertex(i,o)};var u=new s,p=new s;i.prototype.getEdgeVector=function(t,e){var o=u,i=p;this.getEdgeVertex(t,0,o),this.getEdgeVertex(t,1,i),i.vsub(o,e)};var d=new s,y=new s;i.computeNormal=function(t,e,o,i){e.vsub(t,y),o.vsub(e,d),d.cross(y,i),i.isZero()||i.normalize()};var v=new s,f=new s,m=new s;i.prototype.getVertex=function(t,e){var o=this.scale;return this._getUnscaledVertex(t,e),e.x*=o.x,e.y*=o.y,e.z*=o.z,e},i.prototype._getUnscaledVertex=function(t,e){var o=3*t,i=this.vertices;return e.set(i[o],i[o+1],i[o+2])},i.prototype.getWorldVertex=function(t,e,o,i){return this.getVertex(t,i),r.pointToWorldFrame(e,o,i,i),i},i.prototype.getTriangleVertices=function(t,e,o,i){var n=3*t;this.getVertex(this.indices[n],e),this.getVertex(this.indices[n+1],o),this.getVertex(this.indices[n+2],i)},i.prototype.getNormal=function(t,e){var o=3*t;return e.set(this.normals[o],this.normals[o+1],this.normals[o+2])};var g=new a;i.prototype.calculateLocalInertia=function(t,e){this.computeLocalAABB(g);var o=g.upperBound.x-g.lowerBound.x,i=g.upperBound.y-g.lowerBound.y,n=g.upperBound.z-g.lowerBound.z;return e.set(1/12*t*(2*i*2*i+2*n*2*n),1/12*t*(2*o*2*o+2*n*2*n),1/12*t*(2*i*2*i+2*o*2*o))};var w=new s;i.prototype.computeLocalAABB=function(t){var e=t.lowerBound,o=t.upperBound,i=this.vertices.length,n=(this.vertices,w);this.getVertex(0,n),e.copy(n),o.copy(n);for(var s=0;s!==i;s++)this.getVertex(s,n),n.x<e.x?e.x=n.x:n.x>o.x&&(o.x=n.x),n.y<e.y?e.y=n.y:n.y>o.y&&(o.y=n.y),n.z<e.z?e.z=n.z:n.z>o.z&&(o.z=n.z)},i.prototype.updateAABB=function(){this.computeLocalAABB(this.aabb)},i.prototype.updateBoundingSphereRadius=function(){for(var t=0,e=this.vertices,o=new s,i=0,n=e.length/3;i!==n;i++){this.getVertex(i,o);var r=o.norm2();r>t&&(t=r)}this.boundingSphereRadius=Math.sqrt(t)};var x=(new s,new r),b=new a;i.prototype.calculateWorldAABB=function(t,e,o,i){var n=x,s=b;n.position=t,n.quaternion=e,this.aabb.toWorldFrame(n,s),o.copy(s.lowerBound),i.copy(s.upperBound)},i.prototype.volume=function(){return 4*Math.PI*this.boundingSphereRadius/3},i.createTorus=function(t,e,o,n,s){t=t||1,e=e||.5,o=o||8,n=n||6,s=s||2*Math.PI;for(var r=[],a=[],c=0;c<=o;c++)for(var h=0;h<=n;h++){var l=h/n*s,u=c/o*Math.PI*2,p=(t+e*Math.cos(u))*Math.cos(l),d=(t+e*Math.cos(u))*Math.sin(l),y=e*Math.sin(u);r.push(p,d,y)}for(var c=1;c<=o;c++)for(var h=1;h<=n;h++){var v=(n+1)*c+h-1,f=(n+1)*(c-1)+h-1,m=(n+1)*(c-1)+h,g=(n+1)*c+h;a.push(v,f,g),a.push(f,m,g)}return new i(r,a)}},{"../collision/AABB":18,"../math/Quaternion":44,"../math/Transform":45,"../math/Vec3":46,"../utils/Octree":66,"./Shape":59}],62:[function(t,e,o){function i(){n.call(this),this.iterations=10,this.tolerance=1e-7}e.exports=i;var n=(t("../math/Vec3"),t("../math/Quaternion"),t("./Solver"));i.prototype=new n;var s=[],r=[],a=[];i.prototype.solve=function(t,e){var o,i,n,c,h,l,u=0,p=this.iterations,d=this.tolerance*this.tolerance,y=this.equations,v=y.length,f=e.bodies,m=f.length,g=t;if(0!==v)for(var w=0;w!==m;w++)f[w].updateSolveMassProperties();var x=r,b=a,E=s;x.length=v,b.length=v,E.length=v;for(var w=0;w!==v;w++){var A=y[w];E[w]=0,b[w]=A.computeB(g),x[w]=1/A.computeC()}if(0!==v){for(var w=0;w!==m;w++){var B=f[w],C=B.vlambda,S=B.wlambda;C.set(0,0,0),S.set(0,0,0)}for(u=0;u!==p;u++){c=0;for(var R=0;R!==v;R++){var A=y[R];o=b[R],i=x[R],l=E[R],h=A.computeGWlambda(),n=i*(o-h-A.eps*l),l+n<A.minForce?n=A.minForce-l:l+n>A.maxForce&&(n=A.maxForce-l),E[R]+=n,c+=n>0?n:-n,A.addToWlambda(n)}if(c*c<d)break}for(var w=0;w!==m;w++){var B=f[w],M=B.velocity,T=B.angularVelocity;B.vlambda.vmul(B.linearFactor,B.vlambda),M.vadd(B.vlambda,M),B.wlambda.vmul(B.angularFactor,B.wlambda),T.vadd(B.wlambda,T)}for(var z=y.length,k=1/g;z--;)y[z].multiplier=E[z]*k}return u}},{"../math/Quaternion":44,"../math/Vec3":46,"./Solver":63}],63:[function(t,e,o){function i(){this.equations=[]}e.exports=i,i.prototype.solve=function(t,e){return 0},i.prototype.addEquation=function(t){t.enabled&&this.equations.push(t)},i.prototype.removeEquation=function(t){var e=this.equations,o=e.indexOf(t);-1!==o&&e.splice(o,1)},i.prototype.removeAllEquations=function(){this.equations.length=0}},{}],64:[function(t,e,o){function i(t){for(c.call(this),this.iterations=10,this.tolerance=1e-7,this.subsolver=t,this.nodes=[],this.nodePool=[];this.nodePool.length<128;)this.nodePool.push(this.createNode())}function n(t){for(var e=t.length,o=0;o!==e;o++){var i=t[o];if(!(i.visited||i.body.type&d))return i}return!1}function s(t,e,o,i){for(y.push(t),t.visited=!0,e(t,o,i);y.length;)for(var s,r=y.pop();s=n(r.children);)s.visited=!0,e(s,o,i),y.push(s)}function r(t,e,o){e.push(t.body);for(var i=t.eqs.length,n=0;n!==i;n++){var s=t.eqs[n];-1===o.indexOf(s)&&o.push(s)}}function a(t,e){return e.id-t.id}e.exports=i;var c=(t("../math/Vec3"),t("../math/Quaternion"),t("./Solver")),h=t("../objects/Body");i.prototype=new c;var l=[],u=[],p={bodies:[]},d=h.STATIC,y=[];i.prototype.createNode=function(){return{body:null,children:[],eqs:[],visited:!1}},i.prototype.solve=function(t,e){for(var o=l,i=this.nodePool,c=e.bodies,h=this.equations,d=h.length,y=c.length,v=this.subsolver;i.length<y;)i.push(this.createNode());o.length=y;for(var f=0;f<y;f++)o[f]=i[f];for(var f=0;f!==y;f++){var m=o[f];m.body=c[f],m.children.length=0,m.eqs.length=0,m.visited=!1}for(var g=0;g!==d;g++){var w=h[g],f=c.indexOf(w.bi),x=c.indexOf(w.bj),b=o[f],E=o[x];b.children.push(E),b.eqs.push(w),E.children.push(b),E.eqs.push(w)}var A,B=0,C=u;v.tolerance=this.tolerance,v.iterations=this.iterations;for(var S=p;A=n(o);){C.length=0,S.bodies.length=0,s(A,r,S.bodies,C);var R=C.length;C=C.sort(a);for(var f=0;f!==R;f++)v.addEquation(C[f]);v.solve(t,S);v.removeAllEquations(),B++}return B}},{"../math/Quaternion":44,"../math/Vec3":46,"../objects/Body":47,"./Solver":63}],65:[function(t,e,o){var i=function(){};e.exports=i,i.prototype={constructor:i,addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var o=this._listeners;return void 0===o[t]&&(o[t]=[]),-1===o[t].indexOf(e)&&o[t].push(e),this},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var o=this._listeners;return void 0!==o[t]&&-1!==o[t].indexOf(e)},hasAnyEventListener:function(t){return void 0!==this._listeners&&void 0!==this._listeners[t]},removeEventListener:function(t,e){if(void 0===this._listeners)return this;var o=this._listeners;if(void 0===o[t])return this;var i=o[t].indexOf(e);return-1!==i&&o[t].splice(i,1),this},dispatchEvent:function(t){if(void 0===this._listeners)return this;var e=this._listeners,o=e[t.type];if(void 0!==o){t.target=this;for(var i=0,n=o.length;i<n;i++)o[i].call(this,t)}return this}}},{}],66:[function(t,e,o){function i(t){t=t||{},this.root=t.root||null,this.aabb=t.aabb?t.aabb.clone():new s,this.data=[],this.children=[]}function n(t,e){e=e||{},e.root=null,e.aabb=t,i.call(this,e),this.maxDepth=void 0!==e.maxDepth?e.maxDepth:8}var s=t("../collision/AABB"),r=t("../math/Vec3");e.exports=n,n.prototype=new i,i.prototype.reset=function(t,e){this.children.length=this.data.length=0},i.prototype.insert=function(t,e,o){var i=this.data;if(o=o||0,!this.aabb.contains(t))return!1;var n=this.children;if(o<(this.maxDepth||this.root.maxDepth)){var s=!1;n.length||(this.subdivide(),s=!0);for(var r=0;8!==r;r++)if(n[r].insert(t,e,o+1))return!0;s&&(n.length=0)}return i.push(e),!0};var a=new r;i.prototype.subdivide=function(){var t=this.aabb,e=t.lowerBound,o=t.upperBound,n=this.children;n.push(new i({aabb:new s({lowerBound:new r(0,0,0)})}),new i({aabb:new s({lowerBound:new r(1,0,0)})}),new i({aabb:new s({lowerBound:new r(1,1,0)})}),new i({aabb:new s({lowerBound:new r(1,1,1)})}),new i({aabb:new s({lowerBound:new r(0,1,1)})}),new i({aabb:new s({lowerBound:new r(0,0,1)})}),new i({aabb:new s({lowerBound:new r(1,0,1)})}),new i({aabb:new s({lowerBound:new r(0,1,0)})})),o.vsub(e,a),a.scale(.5,a);for(var c=this.root||this,h=0;8!==h;h++){var l=n[h];l.root=c;var u=l.aabb.lowerBound;u.x*=a.x,u.y*=a.y,u.z*=a.z,u.vadd(e,u),u.vadd(a,l.aabb.upperBound)}},i.prototype.aabbQuery=function(t,e){for(var o=(this.data,this.children,[this]);o.length;){var i=o.pop();i.aabb.overlaps(t)&&Array.prototype.push.apply(e,i.data),Array.prototype.push.apply(o,i.children)}return e};var c=new s;i.prototype.rayQuery=function(t,e,o){return t.getAABB(c),c.toLocalFrame(e,c),this.aabbQuery(c,o),o},i.prototype.removeEmptyNodes=function(){for(var t=[this];t.length;){for(var e=t.pop(),o=e.children.length-1;o>=0;o--)e.children[o].data.length||e.children.splice(o,1);Array.prototype.push.apply(t,e.children)}}},{"../collision/AABB":18,"../math/Vec3":46}],67:[function(t,e,o){function i(){this.objects=[],this.type=Object}e.exports=i,i.prototype.release=function(){for(var t=arguments.length,e=0;e!==t;e++)this.objects.push(arguments[e]);return this},i.prototype.get=function(){return 0===this.objects.length?this.constructObject():this.objects.pop()},i.prototype.constructObject=function(){throw new Error("constructObject() not implemented in this Pool subclass yet!")},i.prototype.resize=function(t){for(var e=this.objects;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}},{}],68:[function(t,e,o){function i(){this.data={keys:[]}}e.exports=i,i.prototype.get=function(t,e){if(t>e){var o=e;e=t,t=o}return this.data[t+"-"+e]},i.prototype.set=function(t,e,o){if(t>e){var i=e;e=t,t=i}var n=t+"-"+e;this.get(t,e)||this.data.keys.push(n),this.data[n]=o},i.prototype.reset=function(){for(var t=this.data,e=t.keys;e.length>0;){delete t[e.pop()]}}},{}],69:[function(t,e,o){function i(){}e.exports=i,i.defaults=function(t,e){t=t||{};for(var o in e)o in t||(t[o]=e[o]);return t}},{}],70:[function(t,e,o){function i(){s.call(this),this.type=n}e.exports=i;var n=t("../math/Vec3"),s=t("./Pool");i.prototype=new s,i.prototype.constructObject=function(){return new n}},{"../math/Vec3":46,"./Pool":67}],71:[function(t,e,o){function i(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new p,this.world=t,this.currentContactMaterial=null,this.enableFrictionReduction=!1}function n(t,e,o){for(var i=null,n=t.length,s=0;s!==n;s++){var r=t[s],a=W;t[(s+1)%n].vsub(r,a);var c=H;a.cross(e,c);var h=K;o.vsub(r,h);var l=c.dot(h);if(!(null===i||l>0&&!0===i||l<=0&&!1===i))return!1;null===i&&(i=l>0)}return!0}e.exports=i;var s=t("../collision/AABB"),r=t("../objects/Body"),a=t("../shapes/Shape"),c=t("../collision/Ray"),h=t("../math/Vec3"),l=t("../math/Transform"),u=(t("../shapes/ConvexPolyhedron"),t("../math/Quaternion")),p=(t("../solver/Solver"),t("../utils/Vec3Pool")),d=t("../equations/ContactEquation"),y=t("../equations/FrictionEquation");i.prototype.createContactEquation=function(t,e,o,i,n,s){var r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new d(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&o.collisionResponse&&i.collisionResponse;var a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);var c=o.material||t.material,h=i.material||e.material;return c&&h&&c.restitution>=0&&h.restitution>=0&&(r.restitution=c.restitution*h.restitution),r.si=n||o,r.sj=s||i,r},i.prototype.createFrictionEquationsFromContact=function(t,e){var o=t.bi,i=t.bj,n=t.si,s=t.sj,r=this.world,a=this.currentContactMaterial,c=a.friction,h=n.material||o.material,l=s.material||i.material;if(h&&l&&h.friction>=0&&l.friction>=0&&(c=h.friction*l.friction),c>0){var u=c*r.gravity.length(),p=o.invMass+i.invMass;p>0&&(p=1/p);var d=this.frictionEquationPool,v=d.length?d.pop():new y(o,i,u*p),f=d.length?d.pop():new y(o,i,u*p);return v.bi=f.bi=o,v.bj=f.bj=i,v.minForce=f.minForce=-u*p,v.maxForce=f.maxForce=u*p,v.ri.copy(t.ri),v.rj.copy(t.rj),f.ri.copy(t.ri),f.rj.copy(t.rj),t.ni.tangents(v.t,f.t),v.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),f.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),v.enabled=f.enabled=t.enabled,e.push(v,f),!0}return!1};var v=new h,f=new h,m=new h;i.prototype.createFrictionFromAverage=function(t){var e=this.result[this.result.length-1];if(this.createFrictionEquationsFromContact(e,this.frictionResult)&&1!==t){var o=this.frictionResult[this.frictionResult.length-2],i=this.frictionResult[this.frictionResult.length-1];v.setZero(),f.setZero(),m.setZero();for(var n=e.bi,s=(e.bj,0);s!==t;s++)e=this.result[this.result.length-1-s],e.bodyA!==n?(v.vadd(e.ni,v),f.vadd(e.ri,f),m.vadd(e.rj,m)):(v.vsub(e.ni,v),f.vadd(e.rj,f),m.vadd(e.ri,m));var r=1/t;f.scale(r,o.ri),m.scale(r,o.rj),i.ri.copy(o.ri),i.rj.copy(o.rj),v.normalize(),v.tangents(o.t,i.t)}};var g=new h,w=new h,x=new u,b=new u;i.prototype.getContacts=function(t,e,o,i,n,s,a){this.contactPointPool=n,this.frictionEquationPool=a,this.result=i,this.frictionResult=s;for(var c=x,h=b,l=g,u=w,p=0,d=t.length;p!==d;p++){var y=t[p],v=e[p],f=null;y.material&&v.material&&(f=o.getContactMaterial(y.material,v.material)||null);for(var m=y.type&r.KINEMATIC&&v.type&r.STATIC||y.type&r.STATIC&&v.type&r.KINEMATIC||y.type&r.KINEMATIC&&v.type&r.KINEMATIC,E=0;E<y.shapes.length;E++){y.quaternion.mult(y.shapeOrientations[E],c),y.quaternion.vmult(y.shapeOffsets[E],l),l.vadd(y.position,l);for(var A=y.shapes[E],B=0;B<v.shapes.length;B++){v.quaternion.mult(v.shapeOrientations[B],h),v.quaternion.vmult(v.shapeOffsets[B],u),u.vadd(v.position,u);var C=v.shapes[B];if(!(l.distanceTo(u)>A.boundingSphereRadius+C.boundingSphereRadius)){var S=null;A.material&&C.material&&(S=o.getContactMaterial(A.material,C.material)||null),this.currentContactMaterial=S||f||o.defaultContactMaterial;var R=this[A.type|C.type];if(R){var M=!1;M=A.type<C.type?R.call(this,A,C,l,u,c,h,y,v,A,C,m):R.call(this,C,A,u,l,h,c,v,y,A,C,m),M&&m&&(o.shapeOverlapKeeper.set(A.id,C.id),o.bodyOverlapKeeper.set(y.id,v.id))}}}}}};i.prototype[a.types.BOX|a.types.BOX]=i.prototype.boxBox=function(t,e,o,i,n,s,r,a,c,h,l){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,o,i,n,s,r,a,t,e,l)},i.prototype[a.types.BOX|a.types.CONVEXPOLYHEDRON]=i.prototype.boxConvex=function(t,e,o,i,n,s,r,a,c,h,l){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,o,i,n,s,r,a,t,e,l)},i.prototype[a.types.BOX|a.types.PARTICLE]=i.prototype.boxParticle=function(t,e,o,i,n,s,r,a,c,h,l){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,o,i,n,s,r,a,t,e,l)},i.prototype[a.types.SPHERE]=i.prototype.sphereSphere=function(t,e,o,i,n,s,r,a,c,h,l){if(l)return o.distanceSquared(i)<Math.pow(t.radius+e.radius,2);var u=this.createContactEquation(r,a,t,e,c,h);i.vsub(o,u.ni),u.ni.normalize(),u.ri.copy(u.ni),u.rj.copy(u.ni),u.ri.mult(t.radius,u.ri),u.rj.mult(-e.radius,u.rj),u.ri.vadd(o,u.ri),u.ri.vsub(r.position,u.ri),u.rj.vadd(i,u.rj),u.rj.vsub(a.position,u.rj),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)};var E=new h,A=new h,B=new h;i.prototype[a.types.PLANE|a.types.TRIMESH]=i.prototype.planeTrimesh=function(t,e,o,i,n,s,r,a,c,u,p){var d=new h,y=E;y.set(0,0,1),n.vmult(y,y);for(var v=0;v<e.vertices.length/3;v++){e.getVertex(v,d);var f=new h;f.copy(d),l.pointToWorldFrame(i,s,f,d);var m=A;d.vsub(o,m);if(y.dot(m)<=0){if(p)return!0;var g=this.createContactEquation(r,a,t,e,c,u);g.ni.copy(y);var w=B;y.scale(m.dot(y),w),d.vsub(w,w),g.ri.copy(w),g.ri.vsub(r.position,g.ri),g.rj.copy(d),g.rj.vsub(a.position,g.rj),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}};var C=new h,S=new h,R=(new h,new h),M=new h,T=new h,z=new h,k=new h,P=new h,q=new h,L=new h,V=new h,F=new h,N=new h,I=new s,j=[];i.prototype[a.types.SPHERE|a.types.TRIMESH]=i.prototype.sphereTrimesh=function(t,e,o,i,n,s,r,a,h,u,p){var d=T,y=z,v=k,f=P,m=q,g=L,w=I,x=M,b=S,E=j;l.pointToLocalFrame(i,s,o,m);var A=t.radius;w.lowerBound.set(m.x-A,m.y-A,m.z-A),w.upperBound.set(m.x+A,m.y+A,m.z+A),e.getTrianglesInAABB(w,E);for(var B=R,O=t.radius*t.radius,D=0;D<E.length;D++)for(var W=0;W<3;W++)if(e.getVertex(e.indices[3*E[D]+W],B),B.vsub(m,b),b.norm2()<=O){if(x.copy(B),l.pointToWorldFrame(i,s,x,B),B.vsub(o,b),p)return!0;var H=this.createContactEquation(r,a,t,e,h,u);H.ni.copy(b),H.ni.normalize(),H.ri.copy(H.ni),H.ri.scale(t.radius,H.ri),H.ri.vadd(o,H.ri),H.ri.vsub(r.position,H.ri),H.rj.copy(B),H.rj.vsub(a.position,H.rj),this.result.push(H),this.createFrictionEquationsFromContact(H,this.frictionResult)}for(var D=0;D<E.length;D++)for(var W=0;W<3;W++){e.getVertex(e.indices[3*E[D]+W],d),e.getVertex(e.indices[3*E[D]+(W+1)%3],y),y.vsub(d,v),m.vsub(y,g);var K=g.dot(v);m.vsub(d,g);var _=g.dot(v);if(_>0&&K<0){m.vsub(d,g),f.copy(v),f.normalize(),_=g.dot(f),f.scale(_,g),g.vadd(d,g);var U=g.distanceTo(m);if(U<t.radius){if(p)return!0;var H=this.createContactEquation(r,a,t,e,h,u);g.vsub(m,H.ni),H.ni.normalize(),H.ni.scale(t.radius,H.ri),l.pointToWorldFrame(i,s,g,g),g.vsub(a.position,H.rj),l.vectorToWorldFrame(s,H.ni,H.ni),l.vectorToWorldFrame(s,H.ri,H.ri),this.result.push(H),this.createFrictionEquationsFromContact(H,this.frictionResult)}}}for(var G=V,Y=F,X=N,Q=C,D=0,Z=E.length;D!==Z;D++){e.getTriangleVertices(E[D],G,Y,X),e.getNormal(E[D],Q),m.vsub(G,g);var U=g.dot(Q);if(Q.scale(U,g),m.vsub(g,g),U=g.distanceTo(m),c.pointInTriangle(g,G,Y,X)&&U<t.radius){if(p)return!0;var H=this.createContactEquation(r,a,t,e,h,u);g.vsub(m,H.ni),H.ni.normalize(),H.ni.scale(t.radius,H.ri),l.pointToWorldFrame(i,s,g,g),g.vsub(a.position,H.rj),l.vectorToWorldFrame(s,H.ni,H.ni),l.vectorToWorldFrame(s,H.ri,H.ri),this.result.push(H),this.createFrictionEquationsFromContact(H,this.frictionResult)}}E.length=0};var O=new h,D=new h;i.prototype[a.types.SPHERE|a.types.PLANE]=i.prototype.spherePlane=function(t,e,o,i,n,s,r,a,c,h,l){var u=this.createContactEquation(r,a,t,e,c,h);if(u.ni.set(0,0,1),s.vmult(u.ni,u.ni),u.ni.negate(u.ni),u.ni.normalize(),u.ni.mult(t.radius,u.ri),o.vsub(i,O),u.ni.mult(u.ni.dot(O),D),O.vsub(D,u.rj),-O.dot(u.ni)<=t.radius){if(l)return!0;var p=u.ri,d=u.rj;p.vadd(o,p),p.vsub(r.position,p),d.vadd(i,d),d.vsub(a.position,d),this.result.push(u),this.createFrictionEquationsFromContact(u,this.frictionResult)}};var W=new h,H=new h,K=new h,_=new h,U=new h,G=new h,Y=new h,X=[new h,new h,new h,new h,new h,new h],Q=new h,Z=new h,J=new h,$=new h;i.prototype[a.types.SPHERE|a.types.BOX]=i.prototype.sphereBox=function(t,e,o,i,n,s,r,a,c,h,l){var u=this.v3pool,p=X;o.vsub(i,_),e.getSideNormals(p,s);for(var d=t.radius,y=!1,v=Z,f=J,m=$,g=null,w=0,x=0,b=0,E=null,A=0,B=p.length;A!==B&&!1===y;A++){var C=U;C.copy(p[A]);var S=C.norm();C.normalize();var R=_.dot(C);if(R<S+d&&R>0){var M=G,T=Y;M.copy(p[(A+1)%3]),T.copy(p[(A+2)%3]);var z=M.norm(),k=T.norm();M.normalize(),T.normalize();var P=_.dot(M),q=_.dot(T);if(P<z&&P>-z&&q<k&&q>-k){var L=Math.abs(R-S-d);if((null===E||L<E)&&(E=L,x=P,b=q,g=S,v.copy(C),f.copy(M),m.copy(T),w++,l))return!0}}}if(w){y=!0;var V=this.createContactEquation(r,a,t,e,c,h);v.mult(-d,V.ri),V.ni.copy(v),V.ni.negate(V.ni),v.mult(g,v),f.mult(x,f),v.vadd(f,v),m.mult(b,m),v.vadd(m,V.rj),V.ri.vadd(o,V.ri),V.ri.vsub(r.position,V.ri),V.rj.vadd(i,V.rj),V.rj.vsub(a.position,V.rj),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult)}for(var F=u.get(),N=Q,I=0;2!==I&&!y;I++)for(var j=0;2!==j&&!y;j++)for(var O=0;2!==O&&!y;O++)if(F.set(0,0,0),I?F.vadd(p[0],F):F.vsub(p[0],F),j?F.vadd(p[1],F):F.vsub(p[1],F),O?F.vadd(p[2],F):F.vsub(p[2],F),i.vadd(F,N),N.vsub(o,N),N.norm2()<d*d){if(l)return!0;y=!0;var V=this.createContactEquation(r,a,t,e,c,h);V.ri.copy(N),V.ri.normalize(),V.ni.copy(V.ri),V.ri.mult(d,V.ri),V.rj.copy(F),V.ri.vadd(o,V.ri),V.ri.vsub(r.position,V.ri),V.rj.vadd(i,V.rj),V.rj.vsub(a.position,V.rj),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult)}u.release(F),F=null;for(var D=u.get(),W=u.get(),V=u.get(),H=u.get(),L=u.get(),K=p.length,I=0;I!==K&&!y;I++)for(var j=0;j!==K&&!y;j++)if(I%3!=j%3){p[j].cross(p[I],D),D.normalize(),p[I].vadd(p[j],W),V.copy(o),V.vsub(W,V),V.vsub(i,V);var tt=V.dot(D);D.mult(tt,H);for(var O=0;O===I%3||O===j%3;)O++;L.copy(o),L.vsub(H,L),L.vsub(W,L),L.vsub(i,L);var et=Math.abs(tt),ot=L.norm();if(et<p[O].norm()&&ot<d){if(l)return!0;y=!0;var it=this.createContactEquation(r,a,t,e,c,h);W.vadd(H,it.rj),it.rj.copy(it.rj),L.negate(it.ni),it.ni.normalize(),it.ri.copy(it.rj),it.ri.vadd(i,it.ri),it.ri.vsub(o,it.ri),it.ri.normalize(),it.ri.mult(d,it.ri),it.ri.vadd(o,it.ri),it.ri.vsub(r.position,it.ri),it.rj.vadd(i,it.rj),it.rj.vsub(a.position,it.rj),this.result.push(it),this.createFrictionEquationsFromContact(it,this.frictionResult)}}u.release(D,W,V,H,L)};var tt=new h,et=new h,ot=new h,it=new h,nt=new h,st=new h,rt=new h,at=new h,ct=new h,ht=new h;i.prototype[a.types.SPHERE|a.types.CONVEXPOLYHEDRON]=i.prototype.sphereConvex=function(t,e,o,i,s,r,a,c,h,l,u){var p=this.v3pool;o.vsub(i,tt);for(var d=e.faceNormals,y=e.faces,v=e.vertices,f=t.radius,m=0;m!==v.length;m++){var g=v[m],w=nt;r.vmult(g,w),i.vadd(w,w);var x=it;if(w.vsub(o,x),x.norm2()<f*f){if(u)return!0;E=!0;var b=this.createContactEquation(a,c,t,e,h,l);return b.ri.copy(x),b.ri.normalize(),b.ni.copy(b.ri),b.ri.mult(f,b.ri),w.vsub(i,b.rj),b.ri.vadd(o,b.ri),b.ri.vsub(a.position,b.ri),b.rj.vadd(i,b.rj),b.rj.vsub(c.position,b.rj),this.result.push(b),void this.createFrictionEquationsFromContact(b,this.frictionResult)}}for(var E=!1,m=0,A=y.length;m!==A&&!1===E;m++){var B=d[m],C=y[m],S=st;r.vmult(B,S);var R=rt;r.vmult(v[C[0]],R),R.vadd(i,R);var M=at;S.mult(-f,M),o.vadd(M,M);var T=ct;M.vsub(R,T);var z=T.dot(S),k=ht;if(o.vsub(R,k),z<0&&k.dot(S)>0){for(var P=[],q=0,L=C.length;q!==L;q++){var V=p.get();r.vmult(v[C[q]],V),i.vadd(V,V),P.push(V)}if(n(P,S,o)){if(u)return!0;E=!0;var b=this.createContactEquation(a,c,t,e,h,l);S.mult(-f,b.ri),S.negate(b.ni);var F=p.get();S.mult(-z,F);var N=p.get();S.mult(-f,N),o.vsub(i,b.rj),b.rj.vadd(N,b.rj),b.rj.vadd(F,b.rj),b.rj.vadd(i,b.rj),b.rj.vsub(c.position,b.rj),b.ri.vadd(o,b.ri),b.ri.vsub(a.position,b.ri),p.release(F),p.release(N),this.result.push(b),this.createFrictionEquationsFromContact(b,this.frictionResult);for(var q=0,I=P.length;q!==I;q++)p.release(P[q]);return}for(var q=0;q!==C.length;q++){var j=p.get(),O=p.get();r.vmult(v[C[(q+1)%C.length]],j),r.vmult(v[C[(q+2)%C.length]],O),i.vadd(j,j),i.vadd(O,O);var D=et;O.vsub(j,D);var W=ot;D.unit(W);var H=p.get(),K=p.get();o.vsub(j,K);var _=K.dot(W);W.mult(_,H),H.vadd(j,H);var U=p.get();if(H.vsub(o,U),_>0&&_*_<D.norm2()&&U.norm2()<f*f){if(u)return!0;var b=this.createContactEquation(a,c,t,e,h,l);H.vsub(i,b.rj),H.vsub(o,b.ni),b.ni.normalize(),b.ni.mult(f,b.ri),b.rj.vadd(i,b.rj),b.rj.vsub(c.position,b.rj),b.ri.vadd(o,b.ri),b.ri.vsub(a.position,b.ri),this.result.push(b),this.createFrictionEquationsFromContact(b,this.frictionResult);for(var q=0,I=P.length;q!==I;q++)p.release(P[q]);return p.release(j),p.release(O),p.release(H),p.release(U),void p.release(K)}p.release(j),p.release(O),p.release(H),p.release(U),p.release(K)}for(var q=0,I=P.length;q!==I;q++)p.release(P[q])}}};new h,new h;i.prototype[a.types.PLANE|a.types.BOX]=i.prototype.planeBox=function(t,e,o,i,n,s,r,a,c,h,l){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,o,i,n,s,r,a,t,e,l)};var lt=new h,ut=new h,pt=new h,dt=new h;i.prototype[a.types.PLANE|a.types.CONVEXPOLYHEDRON]=i.prototype.planeConvex=function(t,e,o,i,n,s,r,a,c,h,l){var u=lt,p=ut;p.set(0,0,1),n.vmult(p,p);for(var d=0,y=pt,v=0;v!==e.vertices.length;v++){u.copy(e.vertices[v]),s.vmult(u,u),i.vadd(u,u),u.vsub(o,y);if(p.dot(y)<=0){if(l)return!0;var f=this.createContactEquation(r,a,t,e,c,h),m=dt;p.mult(p.dot(y),m),u.vsub(m,m),m.vsub(o,f.ri),f.ni.copy(p),u.vsub(i,f.rj),f.ri.vadd(o,f.ri),f.ri.vsub(r.position,f.ri),f.rj.vadd(i,f.rj),f.rj.vsub(a.position,f.rj),this.result.push(f),d++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(f,this.frictionResult)}}this.enableFrictionReduction&&d&&this.createFrictionFromAverage(d)};var yt=new h,vt=new h;i.prototype[a.types.CONVEXPOLYHEDRON]=i.prototype.convexConvex=function(t,e,o,i,n,s,r,a,c,h,l,u,p){var d=yt;if(!(o.distanceTo(i)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,o,n,i,s,d,u,p)){var y=[],v=vt;t.clipAgainstHull(o,n,e,i,s,d,-100,100,y);for(var f=0,m=0;m!==y.length;m++){if(l)return!0;var g=this.createContactEquation(r,a,t,e,c,h),w=g.ri,x=g.rj;d.negate(g.ni),y[m].normal.negate(v),v.mult(y[m].depth,v),y[m].point.vadd(v,w),x.copy(y[m].point),w.vsub(o,w),x.vsub(i,x),w.vadd(o,w),w.vsub(r.position,w),x.vadd(i,x),x.vsub(a.position,x),this.result.push(g),f++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(g,this.frictionResult)}this.enableFrictionReduction&&f&&this.createFrictionFromAverage(f)}};var ft=new h,mt=new h,gt=new h;i.prototype[a.types.PLANE|a.types.PARTICLE]=i.prototype.planeParticle=function(t,e,o,i,n,s,r,a,c,h,l){var u=ft;u.set(0,0,1),r.quaternion.vmult(u,u);var p=mt;if(i.vsub(r.position,p),u.dot(p)<=0){if(l)return!0;var d=this.createContactEquation(a,r,e,t,c,h);d.ni.copy(u),d.ni.negate(d.ni),d.ri.set(0,0,0);var y=gt;u.mult(u.dot(i),y),i.vsub(y,y),d.rj.copy(y),this.result.push(d),this.createFrictionEquationsFromContact(d,this.frictionResult)}};var wt=new h;i.prototype[a.types.PARTICLE|a.types.SPHERE]=i.prototype.sphereParticle=function(t,e,o,i,n,s,r,a,c,h,l){var u=wt;if(u.set(0,0,1),i.vsub(o,u),u.norm2()<=t.radius*t.radius){if(l)return!0;var p=this.createContactEquation(a,r,e,t,c,h);u.normalize(),p.rj.copy(u),p.rj.mult(t.radius,p.rj),p.ni.copy(u),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}};var xt=new u,bt=new h,Et=(new h,new h),At=new h,Bt=new h;i.prototype[a.types.PARTICLE|a.types.CONVEXPOLYHEDRON]=i.prototype.convexParticle=function(t,e,o,i,n,s,r,a,c,h,l){var u=-1,p=Et,d=Bt,y=null,v=0,f=bt;if(f.copy(i),f.vsub(o,f),n.conjugate(xt),xt.vmult(f,f),t.pointIsInside(f)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(o,n),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(n);for(var m=0,g=t.faces.length;m!==g;m++){\nvar w=[t.worldVertices[t.faces[m][0]]],x=t.worldFaceNormals[m];i.vsub(w[0],At);var b=-x.dot(At);if(null===y||Math.abs(b)<Math.abs(y)){if(l)return!0;y=b,u=m,p.copy(x),v++}}if(-1!==u){var E=this.createContactEquation(a,r,e,t,c,h);p.mult(y,d),d.vadd(i,d),d.vsub(o,d),E.rj.copy(d),p.negate(E.ni),E.ri.set(0,0,0);var A=E.ri,B=E.rj;A.vadd(i,A),A.vsub(a.position,A),B.vadd(o,B),B.vsub(r.position,B),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}},i.prototype[a.types.BOX|a.types.HEIGHTFIELD]=i.prototype.boxHeightfield=function(t,e,o,i,n,s,r,a,c,h,l){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,o,i,n,s,r,a,t,e,l)};var Ct=new h,St=new h,Rt=[0];i.prototype[a.types.CONVEXPOLYHEDRON|a.types.HEIGHTFIELD]=i.prototype.convexHeightfield=function(t,e,o,i,n,s,r,a,c,h,u){var p=e.data,d=e.elementSize,y=t.boundingSphereRadius,v=St,f=Rt,m=Ct;l.pointToLocalFrame(i,s,o,m);var g=Math.floor((m.x-y)/d)-1,w=Math.ceil((m.x+y)/d)+1,x=Math.floor((m.y-y)/d)-1,b=Math.ceil((m.y+y)/d)+1;if(!(w<0||b<0||g>p.length||x>p[0].length)){g<0&&(g=0),w<0&&(w=0),x<0&&(x=0),b<0&&(b=0),g>=p.length&&(g=p.length-1),w>=p.length&&(w=p.length-1),b>=p[0].length&&(b=p[0].length-1),x>=p[0].length&&(x=p[0].length-1);var E=[];e.getRectMinMax(g,x,w,b,E);var A=E[0],B=E[1];if(!(m.z-y>B||m.z+y<A))for(var C=g;C<w;C++)for(var S=x;S<b;S++){var R=!1;if(e.getConvexTrianglePillar(C,S,!1),l.pointToWorldFrame(i,s,e.pillarOffset,v),o.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(R=this.convexConvex(t,e.pillarConvex,o,v,n,s,r,a,null,null,u,f,null)),u&&R)return!0;if(e.getConvexTrianglePillar(C,S,!0),l.pointToWorldFrame(i,s,e.pillarOffset,v),o.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(R=this.convexConvex(t,e.pillarConvex,o,v,n,s,r,a,null,null,u,f,null)),u&&R)return!0}}};var Mt=new h,Tt=new h;i.prototype[a.types.SPHERE|a.types.HEIGHTFIELD]=i.prototype.sphereHeightfield=function(t,e,o,i,n,s,r,a,c,h,u){var p=e.data,d=t.radius,y=e.elementSize,v=Tt,f=Mt;l.pointToLocalFrame(i,s,o,f);var m=Math.floor((f.x-d)/y)-1,g=Math.ceil((f.x+d)/y)+1,w=Math.floor((f.y-d)/y)-1,x=Math.ceil((f.y+d)/y)+1;if(!(g<0||x<0||m>p.length||x>p[0].length)){m<0&&(m=0),g<0&&(g=0),w<0&&(w=0),x<0&&(x=0),m>=p.length&&(m=p.length-1),g>=p.length&&(g=p.length-1),x>=p[0].length&&(x=p[0].length-1),w>=p[0].length&&(w=p[0].length-1);var b=[];e.getRectMinMax(m,w,g,x,b);var E=b[0],A=b[1];if(!(f.z-d>A||f.z+d<E))for(var B=this.result,C=m;C<g;C++)for(var S=w;S<x;S++){var R=B.length,M=!1;if(e.getConvexTrianglePillar(C,S,!1),l.pointToWorldFrame(i,s,e.pillarOffset,v),o.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.sphereConvex(t,e.pillarConvex,o,v,n,s,r,a,t,e,u)),u&&M)return!0;if(e.getConvexTrianglePillar(C,S,!0),l.pointToWorldFrame(i,s,e.pillarOffset,v),o.distanceTo(v)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(M=this.sphereConvex(t,e.pillarConvex,o,v,n,s,r,a,t,e,u)),u&&M)return!0;var T=B.length-R;if(T>2)return}}}},{"../collision/AABB":18,"../collision/Ray":25,"../equations/ContactEquation":35,"../equations/FrictionEquation":37,"../math/Quaternion":44,"../math/Transform":45,"../math/Vec3":46,"../objects/Body":47,"../shapes/ConvexPolyhedron":54,"../shapes/Shape":59,"../solver/Solver":63,"../utils/Vec3Pool":70}],72:[function(t,e,o){function i(t){t=t||{},c.apply(this),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=void 0!==t.quatNormalizeSkip?t.quatNormalizeSkip:0,this.quatNormalizeFast=void 0!==t.quatNormalizeFast&&t.quatNormalizeFast,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new n,t.gravity&&this.gravity.copy(t.gravity),this.broadphase=void 0!==t.broadphase?t.broadphase:new g,this.bodies=[],this.solver=void 0!==t.solver?t.solver:new r,this.constraints=[],this.narrowphase=new a(this),this.collisionMatrix=new h,this.collisionMatrixPrevious=new h,this.bodyOverlapKeeper=new l,this.shapeOverlapKeeper=new l,this.materials=[],this.contactmaterials=[],this.contactMaterialTable=new y,this.defaultMaterial=new u("default"),this.defaultContactMaterial=new p(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}e.exports=i;var n=(t("../shapes/Shape"),t("../math/Vec3")),s=t("../math/Quaternion"),r=t("../solver/GSSolver"),a=(t("../equations/ContactEquation"),t("../equations/FrictionEquation"),t("./Narrowphase")),c=t("../utils/EventTarget"),h=t("../collision/ArrayCollisionMatrix"),l=t("../collision/OverlapKeeper"),u=t("../material/Material"),p=t("../material/ContactMaterial"),d=t("../objects/Body"),y=t("../utils/TupleDictionary"),v=t("../collision/RaycastResult"),f=t("../collision/AABB"),m=t("../collision/Ray"),g=t("../collision/NaiveBroadphase");i.prototype=new c;var w=(new f,new m);if(i.prototype.getContactMaterial=function(t,e){return this.contactMaterialTable.get(t.id,e.id)},i.prototype.numObjects=function(){return this.bodies.length},i.prototype.collisionMatrixTick=function(){var t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()},i.prototype.add=i.prototype.addBody=function(t){-1===this.bodies.indexOf(t)&&(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof d&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))},i.prototype.addConstraint=function(t){this.constraints.push(t)},i.prototype.removeConstraint=function(t){var e=this.constraints.indexOf(t);-1!==e&&this.constraints.splice(e,1)},i.prototype.rayTest=function(t,e,o){o instanceof v?this.raycastClosest(t,e,{skipBackfaces:!0},o):this.raycastAll(t,e,{skipBackfaces:!0},o)},i.prototype.raycastAll=function(t,e,o,i){return o.mode=m.ALL,o.from=t,o.to=e,o.callback=i,w.intersectWorld(this,o)},i.prototype.raycastAny=function(t,e,o,i){return o.mode=m.ANY,o.from=t,o.to=e,o.result=i,w.intersectWorld(this,o)},i.prototype.raycastClosest=function(t,e,o,i){return o.mode=m.CLOSEST,o.from=t,o.to=e,o.result=i,w.intersectWorld(this,o)},i.prototype.remove=function(t){t.world=null;var e=this.bodies.length-1,o=this.bodies,i=o.indexOf(t);if(-1!==i){o.splice(i,1);for(var n=0;n!==o.length;n++)o[n].index=n;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}},i.prototype.removeBody=i.prototype.remove,i.prototype.getBodyById=function(t){return this.idToBodyMap[t]},i.prototype.getShapeById=function(t){for(var e=this.bodies,o=0,i=e.length;o<i;o++)for(var n=e[o].shapes,s=0,r=n.length;s<r;s++){var a=n[s];if(a.id===t)return a}},i.prototype.addMaterial=function(t){this.materials.push(t)},i.prototype.addContactMaterial=function(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)},"undefined"==typeof performance&&(performance={}),!performance.now){var x=Date.now();performance.timing&&performance.timing.navigationStart&&(x=performance.timing.navigationStart),performance.now=function(){return Date.now()-x}}new n;i.prototype.step=function(t,e,o){if(o=o||10,0===(e=e||0))this.internalStep(t),this.time+=t;else{this.accumulator+=e;for(var i=0;this.accumulator>=t&&i<o;)this.internalStep(t),this.accumulator-=t,i++;for(var n=this.accumulator%t/t,s=0;s!==this.bodies.length;s++){var r=this.bodies[s];r.previousPosition.lerp(r.position,n,r.interpolatedPosition),r.previousQuaternion.slerp(r.quaternion,n,r.interpolatedQuaternion),r.previousQuaternion.normalize()}this.time+=e}};var b={type:"postStep"},E={type:"preStep"},A={type:d.COLLIDE_EVENT_NAME,body:null,contact:null},B=[],C=[],S=[],R=[];new n,new n,new n,new n,new n,new n,new n,new n,new n,new s,new s,new s,new n;i.prototype.internalStep=function(t){this.dt=t;var e,o=this.contacts,i=S,n=R,s=this.numObjects(),r=this.bodies,a=this.solver,c=this.gravity,h=this.doProfiling,l=this.profile,u=d.DYNAMIC,p=this.constraints,y=C,v=(c.norm(),c.x),f=c.y,m=c.z,g=0;for(h&&(e=performance.now()),g=0;g!==s;g++){var w=r[g];if(w.type===u){var x=w.force,M=w.mass;x.x+=M*v,x.y+=M*f,x.z+=M*m}}for(var g=0,T=this.subsystems.length;g!==T;g++)this.subsystems[g].update();h&&(e=performance.now()),i.length=0,n.length=0,this.broadphase.collisionPairs(this,i,n),h&&(l.broadphase=performance.now()-e);var z=p.length;for(g=0;g!==z;g++){var k=p[g];if(!k.collideConnected)for(var P=i.length-1;P>=0;P-=1)(k.bodyA===i[P]&&k.bodyB===n[P]||k.bodyB===i[P]&&k.bodyA===n[P])&&(i.splice(P,1),n.splice(P,1))}this.collisionMatrixTick(),h&&(e=performance.now());var q=B,L=o.length;for(g=0;g!==L;g++)q.push(o[g]);o.length=0;var V=this.frictionEquations.length;for(g=0;g!==V;g++)y.push(this.frictionEquations[g]);this.frictionEquations.length=0,this.narrowphase.getContacts(i,n,this,o,q,this.frictionEquations,y),h&&(l.narrowphase=performance.now()-e),h&&(e=performance.now());for(var g=0;g<this.frictionEquations.length;g++)a.addEquation(this.frictionEquations[g]);for(var F=o.length,N=0;N!==F;N++){var I,k=o[N],w=k.bi,j=k.bj,O=k.si,D=k.sj;I=w.material&&j.material?this.getContactMaterial(w.material,j.material)||this.defaultContactMaterial:this.defaultContactMaterial;I.friction;if(w.material&&j.material&&(w.material.friction>=0&&j.material.friction>=0&&w.material.friction*j.material.friction,w.material.restitution>=0&&j.material.restitution>=0&&(k.restitution=w.material.restitution*j.material.restitution)),a.addEquation(k),w.allowSleep&&w.type===d.DYNAMIC&&w.sleepState===d.SLEEPING&&j.sleepState===d.AWAKE&&j.type!==d.STATIC){j.velocity.norm2()+j.angularVelocity.norm2()>=2*Math.pow(j.sleepSpeedLimit,2)&&(w._wakeUpAfterNarrowphase=!0)}if(j.allowSleep&&j.type===d.DYNAMIC&&j.sleepState===d.SLEEPING&&w.sleepState===d.AWAKE&&w.type!==d.STATIC){w.velocity.norm2()+w.angularVelocity.norm2()>=2*Math.pow(w.sleepSpeedLimit,2)&&(j._wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(w,j,!0),this.collisionMatrixPrevious.get(w,j)||(A.body=j,A.contact=k,w.dispatchEvent(A),A.body=w,j.dispatchEvent(A)),this.bodyOverlapKeeper.set(w.id,j.id),this.shapeOverlapKeeper.set(O.id,D.id)}for(this.emitContactEvents(),h&&(l.makeContactConstraints=performance.now()-e,e=performance.now()),g=0;g!==s;g++){var w=r[g];w._wakeUpAfterNarrowphase&&(w.wakeUp(),w._wakeUpAfterNarrowphase=!1)}var z=p.length;for(g=0;g!==z;g++){var k=p[g];k.update();for(var P=0,W=k.equations.length;P!==W;P++){var H=k.equations[P];a.addEquation(H)}}a.solve(t,this),h&&(l.solve=performance.now()-e),a.removeAllEquations();var K=Math.pow;for(g=0;g!==s;g++){var w=r[g];if(w.type&u){var _=K(1-w.linearDamping,t),U=w.velocity;U.mult(_,U);var G=w.angularVelocity;if(G){var Y=K(1-w.angularDamping,t);G.mult(Y,G)}}}for(this.dispatchEvent(E),g=0;g!==s;g++){var w=r[g];w.preStep&&w.preStep.call(w)}h&&(e=performance.now());var X=this.stepnumber,Q=X%(this.quatNormalizeSkip+1)==0,Z=this.quatNormalizeFast;for(g=0;g!==s;g++)r[g].integrate(t,Q,Z);for(this.clearForces(),this.broadphase.dirty=!0,h&&(l.integrate=performance.now()-e),this.time+=t,this.stepnumber+=1,this.dispatchEvent(b),g=0;g!==s;g++){var w=r[g],J=w.postStep;J&&J.call(w)}if(this.allowSleep)for(g=0;g!==s;g++)r[g].sleepTick(this.time)},i.prototype.emitContactEvents=function(){var t=[],e=[],o={type:"beginContact",bodyA:null,bodyB:null},i={type:"endContact",bodyA:null,bodyB:null},n={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},s={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};return function(){var r=this.hasAnyEventListener("beginContact"),a=this.hasAnyEventListener("endContact");if((r||a)&&this.bodyOverlapKeeper.getDiff(t,e),r){for(var c=0,h=t.length;c<h;c+=2)o.bodyA=this.getBodyById(t[c]),o.bodyB=this.getBodyById(t[c+1]),this.dispatchEvent(o);o.bodyA=o.bodyB=null}if(a){for(var c=0,h=e.length;c<h;c+=2)i.bodyA=this.getBodyById(e[c]),i.bodyB=this.getBodyById(e[c+1]),this.dispatchEvent(i);i.bodyA=i.bodyB=null}t.length=e.length=0;var l=this.hasAnyEventListener("beginShapeContact"),u=this.hasAnyEventListener("endShapeContact");if((l||u)&&this.shapeOverlapKeeper.getDiff(t,e),l){for(var c=0,h=t.length;c<h;c+=2){var p=this.getShapeById(t[c]),d=this.getShapeById(t[c+1]);n.shapeA=p,n.shapeB=d,n.bodyA=p.body,n.bodyB=d.body,this.dispatchEvent(n)}n.bodyA=n.bodyB=n.shapeA=n.shapeB=null}if(u){for(var c=0,h=e.length;c<h;c+=2){var p=this.getShapeById(e[c]),d=this.getShapeById(e[c+1]);s.shapeA=p,s.shapeB=d,s.bodyA=p.body,s.bodyB=d.body,this.dispatchEvent(s)}s.bodyA=s.bodyB=s.shapeA=s.shapeB=null}}}(),i.prototype.clearForces=function(){for(var t=this.bodies,e=t.length,o=0;o!==e;o++){var i=t[o];i.force,i.torque;i.force.set(0,0,0),i.torque.set(0,0,0)}}},{"../collision/AABB":18,"../collision/ArrayCollisionMatrix":19,"../collision/NaiveBroadphase":22,"../collision/OverlapKeeper":24,"../collision/Ray":25,"../collision/RaycastResult":26,"../equations/ContactEquation":35,"../equations/FrictionEquation":37,"../material/ContactMaterial":40,"../material/Material":41,"../math/Quaternion":44,"../math/Vec3":46,"../objects/Body":47,"../shapes/Shape":59,"../solver/GSSolver":62,"../utils/EventTarget":65,"../utils/TupleDictionary":68,"./Narrowphase":71}],73:[function(t,e,o){function i(t){if(!y(t).length)return null;t.computeBoundingBox();var e=t.boundingBox;return new f.Box(new f.Vec3((e.max.x-e.min.x)/2,(e.max.y-e.min.y)/2,(e.max.z-e.min.z)/2))}function n(t){var e,o,i,n=new THREE.Box3;return n.setFromObject(t),isFinite(n.min.lengthSq())?(e=new f.Box(new f.Vec3((n.max.x-n.min.x)/2,(n.max.y-n.min.y)/2,(n.max.z-n.min.z)/2)),t.updateMatrixWorld(),i=new THREE.Vector3,i.setFromMatrixPosition(t.matrixWorld),o=n.translate(i.negate()).getCenter(),o.lengthSq()&&(e.offset=o),e):null}function s(t){var e,o,i,n,s=d(t);if(!s||!s.vertices.length)return null;for(e=0;e<s.vertices.length;e++)s.vertices[e].x+=1e-4*(Math.random()-.5),s.vertices[e].y+=1e-4*(Math.random()-.5),s.vertices[e].z+=1e-4*(Math.random()-.5);for(n=m(s),o=new Array(n.vertices.length),e=0;e<n.vertices.length;e++)o[e]=new f.Vec3(n.vertices[e].x,n.vertices[e].y,n.vertices[e].z);for(i=new Array(n.faces.length),e=0;e<n.faces.length;e++)i[e]=[n.faces[e].a,n.faces[e].b,n.faces[e].c];return new f.ConvexPolyhedron(o,i)}function r(t){var e,o=t.metadata?t.metadata.parameters:t.parameters;return e=new f.Cylinder(o.radiusTop,o.radiusBottom,o.height,o.radialSegments),e._type=f.Shape.types.CYLINDER,e.radiusTop=o.radiusTop,e.radiusBottom=o.radiusBottom,e.height=o.height,e.numSegments=o.radialSegments,e.orientation=new f.Quaternion,e.orientation.setFromEuler(THREE.Math.degToRad(-90),0,0,"XYZ").normalize(),e}function a(t,e){var o,i,n,s=d(t),r=["x","y","z"],a=e.cylinderAxis||"y",c=r.splice(r.indexOf(a),1)&&r;return s.computeBoundingBox(),s.computeBoundingSphere(),i=s.boundingBox.max[a]-s.boundingBox.min[a],n=.5*Math.max(s.boundingBox.max[c[0]]-s.boundingBox.min[c[0]],s.boundingBox.max[c[1]]-s.boundingBox.min[c[1]]),o=new f.Cylinder(n,n,i,12),o._type=f.Shape.types.CYLINDER,o.radiusTop=n,o.radiusBottom=n,o.height=i,o.numSegments=12,o.orientation=new f.Quaternion,o.orientation.setFromEuler("y"===a?g:0,"z"===a?g:0,0,"XYZ").normalize(),o}function c(t){t.computeBoundingBox();var e=t.boundingBox;return new f.Box(new f.Vec3((e.max.x-e.min.x)/2||.1,(e.max.y-e.min.y)/2||.1,(e.max.z-e.min.z)/2||.1))}function h(t){var e=t.metadata?t.metadata.parameters:t.parameters;return new f.Sphere(e.radius)}function l(t,e){if(e.sphereRadius)return new f.Sphere(e.sphereRadius);var o=d(t);return o?(o.computeBoundingSphere(),new f.Sphere(o.boundingSphere.radius)):null}function u(t){var e=new THREE.BufferGeometry;return e.fromGeometry(t),p(e)}function p(t){var e,o=y(t);return o.length?(e=Object.keys(o).map(Number),new f.Trimesh(o,e)):null}function d(t){var e,o,i=v(t),n=new THREE.Geometry,s=new THREE.Geometry;if(0===i.length)return null;if(1===i.length){var r=new THREE.Vector3,a=new THREE.Quaternion,c=new THREE.Vector3;return n=i[0].geometry.clone(),n.metadata=i[0].geometry.metadata,i[0].updateMatrixWorld(),i[0].matrixWorld.decompose(r,a,c),n.scale(c.x,c.y,c.z)}for(;o=i.pop();)o.updateMatrixWorld(),o.geometry instanceof THREE.BufferGeometry?(n.fromBufferGeometry(o.geometry),s.merge(n,o.matrixWorld)):s.merge(o.geometry,o.matrixWorld);return e=new THREE.Matrix4,e.scale(t.scale),s.applyMatrix(e),s}function y(t){return t.attributes||(t=(new THREE.BufferGeometry).fromGeometry(t)),(t.attributes.position||{}).array||[]}function v(t){var e=[];return t.traverse(function(t){"Mesh"===t.type&&e.push(t)}),e}var f=t("cannon"),m=t("./lib/THREE.quickhull"),g=Math.PI/2,w={BOX:"Box",CYLINDER:"Cylinder",SPHERE:"Sphere",HULL:"ConvexPolyhedron"};e.exports=f.mesh2shape=function(t,e){if(e=e||{},e.type===w.BOX)return n(t);if(e.type===w.CYLINDER)return a(t,e);if(e.type===w.SPHERE)return l(t,e);if(e.type===w.HULL)return s(t);if(e.type)throw new Error(\'[CANNON.mesh2shape] Invalid type "%s".\',e.type);var o=d(t);if(!o)return null;switch(o.metadata?o.metadata.type:o.type){case"BoxGeometry":case"BoxBufferGeometry":return i(o);case"CylinderGeometry":case"CylinderBufferGeometry":return r(o);case"PlaneGeometry":case"PlaneBufferGeometry":return c(o);case"SphereGeometry":case"SphereBufferGeometry":return h(o);case"TubeGeometry":return u(o);case"Geometry":case"BufferGeometry":return p(o);default:return console.warn(\'Unrecognized geometry: "%s". Using bounding box as shape.\',o.type),i(o)}},f.mesh2shape.Type=w},{"./lib/THREE.quickhull":74,cannon:17}],74:[function(t,e,o){e.exports=function(){function t(){v=new THREE.Vector3,f=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3,w=new THREE.Vector3,x=new THREE.Vector3,b=new THREE.Vector3,E=new THREE.Vector3,A=new THREE.Vector3,B=new THREE.Vector3}function e(t){for(;S.length>0;)n(S.shift(),t)}function o(t,e){if(void 0!==t.normal)return t.normal;var o=e[t[0]],i=e[t[1]],n=e[t[2]];return v.subVectors(i,o),f.subVectors(n,o),x.crossVectors(f,v),x.normalize(),t.normal=x.clone()}function i(t,e,i){var n=i[t[0]],s=[],r=o(t,i);e.sort(function(t,e){return s[t.x/3]=void 0!==s[t.x/3]?s[t.x/3]:r.dot(g.subVectors(t,n)),s[e.x/3]=void 0!==s[e.x/3]?s[e.x/3]:r.dot(w.subVectors(e,n)),s[t.x/3]-s[e.x/3]});var a=e.length;for(1===a&&(s[e[0].x/3]=r.dot(g.subVectors(e[0],n)));a-- >0&&s[e[a].x/3]>0;);a+1<e.length&&s[e[a+1].x/3]>0&&(t.visiblePoints=e.splice(a+1))}function n(t,e){for(var n,s=C.length,r=[t],a=e.indexOf(t.visiblePoints.pop());s-- >0;)(n=C[s])!==t&&o(n,e).dot(b.subVectors(e[a],e[n[0]]))>0&&r.push(n);var c,h,l,u,p=s=r.length,d=1===s,y=[],v=0,f=[];r[0][0],r[0][1],r[0][1],r[0][2],r[0][2],r[0][0];if(1===r.length)n=r[0],y=[n[0],n[1],n[1],n[2],n[2],n[0]],S.indexOf(n)>-1&&S.splice(S.indexOf(n),1),n.visiblePoints&&(f=f.concat(n.visiblePoints)),C.splice(C.indexOf(n),1);else for(;s-- >0;){n=r[s],S.indexOf(n)>-1&&S.splice(S.indexOf(n),1),n.visiblePoints&&(f=f.concat(n.visiblePoints)),C.splice(C.indexOf(n),1);var m;for(cEdgeIndex=0;cEdgeIndex<3;){for(m=!1,p=r.length,l=n[cEdgeIndex],u=n[(cEdgeIndex+1)%3];p-- >0&&!m;)if(c=r[p],v=0,c!==n)for(;v<3&&!m;)h=v+1,m=c[v]===l&&c[h%3]===u||c[v]===u&&c[h%3]===l,v++;m&&!d||(y.push(l),y.push(u)),cEdgeIndex++}}s=0;for(var g,w=y.length/2;s<w;)g=[y[2*s+1],a,y[2*s]],i(g,f,e),C.push(g),void 0!==g.visiblePoints&&S.push(g),s++}var s,r,a,c,h,l,u,p,d,y,v,f,m,g,w,x,b,E,A,B,C=[],S=[],R=0,M=function(){var t=new THREE.Vector3,e=new THREE.Vector3,o=new THREE.Vector3;return function(i,n,s){return t.subVectors(s,i),e.subVectors(n,i),o.crossVectors(t,e),o.normalize()}}(),T=function(){var t=new THREE.Vector3,e=new THREE.Vector3,o=new THREE.Vector3;return function(i,n,s){t.subVectors(n,i),e.subVectors(s,i),o.subVectors(s,n);var r=e.dot(t);if(r<0)return e.dot(e);var a=t.dot(t);return r>=a?o.dot(o):e.dot(e)-r*r/a}}();return function(o){for(t(),points=o.vertices,C=[],S=[],x=s=points.length,r=points.slice(0,6),R=0;x-- >0;)points[x].x<r[0].x&&(r[0]=points[x]),points[x].x>r[1].x&&(r[1]=points[x]),points[x].y<r[2].y&&(r[2]=points[x]),points[x].y<r[3].y&&(r[3]=points[x]),points[x].z<r[4].z&&(r[4]=points[x]),points[x].z<r[5].z&&(r[5]=points[x]);for(c=x=6;x-- >0;)for(c=x-1;c-- >0;)R<(a=r[x].distanceToSquared(r[c]))&&(R=a,h=r[x],l=r[c]);for(x=6,R=0;x-- >0;)a=T(h,l,r[x]),R<a&&(R=a,u=r[x]);for(d=M(h,l,u),y=d.dot(h),R=0,x=s;x-- >0;)a=Math.abs(points[x].dot(d)-y),R<a&&(R=a,p=points[x]);var n=points.indexOf(h),v=points.indexOf(l),f=points.indexOf(u),m=points.indexOf(p),g=[[f,v,n],[v,m,n],[f,m,v],[n,m,f]];E.subVectors(l,h).normalize(),A.subVectors(u,h).normalize(),B.subVectors(p,h).normalize(),B.dot((new THREE.Vector3).crossVectors(A,E))<0&&(g[0].reverse(),g[1].reverse(),g[2].reverse(),g[3].reverse());var w=points.slice();w.splice(w.indexOf(h),1),w.splice(w.indexOf(l),1),w.splice(w.indexOf(u),1),w.splice(w.indexOf(p),1);for(var x=g.length;x-- >0;)i(g[x],w,points),void 0!==g[x].visiblePoints&&S.push(g[x]),C.push(g[x]);e(points);for(var b=C.length;b-- >0;)o.faces[b]=new THREE.Face3(C[b][2],C[b][1],C[b][0],C[b].normal);return o.normalsNeedUpdate=!0,o}}()},{}],75:[function(t,e,o){e.exports={schema:{enabled:{default:!0},mode:{default:"teleport",oneOf:["teleport","animate"]},animateSpeed:{default:3}},init:function(){this.active=!0,this.checkpoint=null,this.offset=new THREE.Vector3,this.position=new THREE.Vector3,this.targetPosition=new THREE.Vector3},play:function(){this.active=!0},pause:function(){this.active=!1},setCheckpoint:function(t){this.active&&(this.checkpoint=t,"teleport"===this.data.mode&&(this.sync(),this.el.setAttribute("position",this.targetPosition)))},isVelocityActive:function(){return!(!this.active||!this.checkpoint)},getVelocity:function(){if(this.active){var t=this.data,e=this.offset,o=this.position,i=this.targetPosition;return this.sync(),o.distanceTo(i)<.1?(this.checkpoint=null,e.set(0,0,0)):(e.setLength(t.animateSpeed),e)}},sync:function(){var t=this.offset,e=this.position,o=this.targetPosition;e.copy(this.el.getAttribute("position")),o.copy(this.checkpoint.object3D.getWorldPosition()),o.add(this.checkpoint.components.checkpoint.getOffset()),t.copy(o).sub(e)}}},{}],76:[function(t,e,o){var i=t("../../lib/GamepadButton"),n=t("../../lib/GamepadButtonEvent");e.exports={GamepadButton:i,schema:{controller:{default:0,oneOf:[0,1,2,3]},enabled:{default:!0},debug:{default:!1}},init:function(){var t=this.el.sceneEl;this.prevTime=window.performance.now(),this.buttons={},t.addBehavior(this)},update:function(){this.tick()},tick:function(){this.updateButtonState()},remove:function(){},isVelocityActive:function(){if(!this.data.enabled||!this.isConnected())return!1;var t=this.getDpad(),e=this.getJoystick(0),o=t.x||e.x,i=t.y||e.y;return Math.abs(o)>.2||Math.abs(i)>.2},getVelocityDelta:function(){var t=this.getDpad(),e=this.getJoystick(0),o=t.x||e.x,i=t.y||e.y,n=new THREE.Vector3;return Math.abs(o)>.2&&(n.x+=o),Math.abs(i)>.2&&(n.z+=i),n},isRotationActive:function(){if(!this.data.enabled||!this.isConnected())return!1;var t=this.getJoystick(1);return Math.abs(t.x)>.2||Math.abs(t.y)>.2},getRotationDelta:function(){var t=this.getJoystick(1);return Math.abs(t.x)<=.2&&(t.x=0),Math.abs(t.y)<=.2&&(t.y=0),t},updateButtonState:function(){var t=this.getGamepad();if(this.data.enabled&&t)for(var e=0;e<t.buttons.length;e++)t.buttons[e].pressed&&!this.buttons[e]?this.emit(new n("gamepadbuttondown",e,t.buttons[e])):!t.buttons[e].pressed&&this.buttons[e]&&this.emit(new n("gamepadbuttonup",e,t.buttons[e])),this.buttons[e]=t.buttons[e].pressed;else Object.keys(this.buttons)&&(this.buttons={})},emit:function(t){this.el.emit(t.type,t),this.el.emit(t.type+":"+t.index,new n(t.type,t.index,t))},getGamepad:function(){var t=navigator.getGamepads&&navigator.getGamepads()[this.data.controller],e=this.el.sceneEl.components["proxy-controls"];return e&&e.isConnected()&&e.getGamepad(this.data.controller)||t},getButton:function(t){return this.getGamepad().buttons[t]},getAxis:function(t){return this.getGamepad().axes[t]},getJoystick:function(t){var e=this.getGamepad();switch(t){case 0:return new THREE.Vector2(e.axes[0],e.axes[1]);case 1:return new THREE.Vector2(e.axes[2],e.axes[3]);default:throw new Error(\'Unexpected joystick index "%d".\',t)}},getDpad:function(){var t=this.getGamepad();return t.buttons[i.DPAD_RIGHT]?new THREE.Vector2((t.buttons[i.DPAD_RIGHT].pressed?1:0)+(t.buttons[i.DPAD_LEFT].pressed?-1:0),(t.buttons[i.DPAD_UP].pressed?-1:0)+(t.buttons[i.DPAD_DOWN].pressed?1:0)):new THREE.Vector2},isConnected:function(){var t=this.getGamepad();return!(!t||!t.connected)},getID:function(){return this.getGamepad().id}}},{"../../lib/GamepadButton":2,"../../lib/GamepadButtonEvent":3}],77:[function(t,e,o){function i(t){return 0===t.x&&0===t.y&&0===t.z}var n=THREE.Math.radToDeg,s=AFRAME.utils.device.isMobile();e.exports={schema:{enabled:{default:!0},standing:{default:!0}},init:function(){this.isPositionCalibrated=!1,this.dolly=new THREE.Object3D,this.hmdEuler=new THREE.Euler,this.previousHMDPosition=new THREE.Vector3,this.deltaHMDPosition=new THREE.Vector3,this.vrControls=new THREE.VRControls(this.dolly),this.rotation=new THREE.Vector3},update:function(){var t=this.data,e=this.vrControls;e.standing=t.standing,e.update()},tick:function(){this.vrControls.update()},remove:function(){this.vrControls.dispose()},isRotationActive:function(){var t=this.hmdEuler;return!(!this.data.enabled||!this.el.sceneEl.is("vr-mode")&&!s)&&(t.setFromQuaternion(this.dolly.quaternion,"YXZ"),!i(t))},getRotation:function(){var t=this.hmdEuler;return this.rotation.set(n(t.x),n(t.y),n(t.z))},isVelocityActive:function(){var t=this.deltaHMDPosition,e=this.previousHMDPosition,o=this.calculateHMDPosition();return this.isPositionCalibrated=this.isPositionCalibrated||!i(e),!(!this.data.enabled||!this.el.sceneEl.is("vr-mode")||s)&&(t.copy(o).sub(e),e.copy(o),this.isPositionCalibrated&&!i(t))},getPositionDelta:function(){return this.deltaHMDPosition},calculateHMDPosition:function(){var t=this.dolly,e=new THREE.Vector3;return t.updateMatrix(),e.setFromMatrixPosition(t.matrix),e}}},{}],78:[function(t,e,o){var i=t("aframe-physics-system");e.exports={"checkpoint-controls":t("./checkpoint-controls"),"gamepad-controls":t("./gamepad-controls"),"hmd-controls":t("./hmd-controls"),"keyboard-controls":t("./keyboard-controls"),"mouse-controls":t("./mouse-controls"),"touch-controls":t("./touch-controls"),"universal-controls":t("./universal-controls"),registerAll:function(t){this._registered||(t=t||window.AFRAME,i.registerAll(),t.components["checkpoint-controls"]||t.registerComponent("checkpoint-controls",this["checkpoint-controls"]),t.components["gamepad-controls"]||t.registerComponent("gamepad-controls",this["gamepad-controls"]),t.components["hmd-controls"]||t.registerComponent("hmd-controls",this["hmd-controls"]),t.components["keyboard-controls"]||t.registerComponent("keyboard-controls",this["keyboard-controls"]),t.components["mouse-controls"]||t.registerComponent("mouse-controls",this["mouse-controls"]),t.components["touch-controls"]||t.registerComponent("touch-controls",this["touch-controls"]),t.components["universal-controls"]||t.registerComponent("universal-controls",this["universal-controls"]),this._registered=!0)}}},{"./checkpoint-controls":75,"./gamepad-controls":76,"./hmd-controls":77,"./keyboard-controls":79,"./mouse-controls":80,"./touch-controls":81,"./universal-controls":82,"aframe-physics-system":5}],79:[function(t,e,o){t("../../lib/keyboard.polyfill");var i=window.KeyboardEvent;e.exports={schema:{enabled:{default:!0},debug:{default:!1}},init:function(){this.dVelocity=new THREE.Vector3,this.localKeys={},this.listeners={keydown:this.onKeyDown.bind(this),keyup:this.onKeyUp.bind(this),blur:this.onBlur.bind(this)},this.attachEventListeners()},isVelocityActive:function(){return this.data.enabled&&!!Object.keys(this.getKeys()).length},getVelocityDelta:function(){var t=this.data,e=this.getKeys();return this.dVelocity.set(0,0,0),t.enabled&&((e.KeyW||e.ArrowUp)&&(this.dVelocity.z-=1),(e.KeyA||e.ArrowLeft)&&(this.dVelocity.x-=1),(e.KeyS||e.ArrowDown)&&(this.dVelocity.z+=1),(e.KeyD||e.ArrowRight)&&(this.dVelocity.x+=1)),this.dVelocity.clone()},play:function(){this.attachEventListeners()},pause:function(){this.removeEventListeners()},remove:function(){this.pause()},attachEventListeners:function(){window.addEventListener("keydown",this.listeners.keydown,!1),window.addEventListener("keyup",this.listeners.keyup,!1),window.addEventListener("blur",this.listeners.blur,!1)},removeEventListeners:function(){window.removeEventListener("keydown",this.listeners.keydown),window.removeEventListener("keyup",this.listeners.keyup),window.removeEventListener("blur",this.listeners.blur)},onKeyDown:function(t){AFRAME.utils.shouldCaptureKeyEvent(t)&&(this.localKeys[t.code]=!0,this.emit(t))},onKeyUp:function(t){AFRAME.utils.shouldCaptureKeyEvent(t)&&(delete this.localKeys[t.code],this.emit(t))},onBlur:function(){for(var t in this.localKeys)this.localKeys.hasOwnProperty(t)&&delete this.localKeys[t]},emit:function(t){"__keyboard-controls-proxy"in t&&this.el.emit(t.type,t),this.el.emit(t.type+":"+t.code,new i(t.type,t)),this.data.debug&&console.log(t.type+":"+t.code)},isPressed:function(t){return t in this.getKeys()},getKeys:function(){return this.isProxied()?this.el.sceneEl.components["proxy-controls"].getKeyboard():this.localKeys},isProxied:function(){var t=this.el.sceneEl.components["proxy-controls"];return t&&t.isConnected()}}},{"../../lib/keyboard.polyfill":4}],80:[function(t,e,o){document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock,e.exports={schema:{enabled:{default:!0},pointerlockEnabled:{default:!0},sensitivity:{default:.04}},init:function(){this.mouseDown=!1,this.pointerLocked=!1,this.lookVector=new THREE.Vector2,this.bindMethods()},update:function(t){var e=this.data;t.pointerlockEnabled&&!e.pointerlockEnabled&&this.pointerLocked&&document.exitPointerLock()},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.lookVector.set(0,0)},remove:function(){this.pause()},bindMethods:function(){this.onMouseDown=this.onMouseDown.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onPointerLockChange=this.onPointerLockChange.bind(this),this.onPointerLockChange=this.onPointerLockChange.bind(this),this.onPointerLockChange=this.onPointerLockChange.bind(this)},addEventListeners:function(){var t=this.el.sceneEl,e=t.canvas,o=this.data;if(!e)return void t.addEventListener("render-target-loaded",this.addEventListeners.bind(this));e.addEventListener("mousedown",this.onMouseDown,!1),e.addEventListener("mousemove",this.onMouseMove,!1),e.addEventListener("mouseup",this.onMouseUp,!1),e.addEventListener("mouseout",this.onMouseUp,!1),o.pointerlockEnabled&&(document.addEventListener("pointerlockchange",this.onPointerLockChange,!1),document.addEventListener("mozpointerlockchange",this.onPointerLockChange,!1),document.addEventListener("pointerlockerror",this.onPointerLockError,!1))},removeEventListeners:function(){var t=this.el.sceneEl&&this.el.sceneEl.canvas;t&&(t.removeEventListener("mousedown",this.onMouseDown,!1),t.removeEventListener("mousemove",this.onMouseMove,!1),t.removeEventListener("mouseup",this.onMouseUp,!1),t.removeEventListener("mouseout",this.onMouseUp,!1)),document.removeEventListener("pointerlockchange",this.onPointerLockChange,!1),\ndocument.removeEventListener("mozpointerlockchange",this.onPointerLockChange,!1),document.removeEventListener("pointerlockerror",this.onPointerLockError,!1)},isRotationActive:function(){return this.data.enabled&&(this.mouseDown||this.pointerLocked)},getRotationDelta:function(){var t=this.lookVector.clone().multiplyScalar(this.data.sensitivity);return this.lookVector.set(0,0),t},onMouseMove:function(t){var e=this.previousMouseEvent;if(this.data.enabled&&(this.mouseDown||this.pointerLocked)){var o=t.movementX||t.mozMovementX||0,i=t.movementY||t.mozMovementY||0;this.pointerLocked||(o=t.screenX-e.screenX,i=t.screenY-e.screenY),this.lookVector.x+=o,this.lookVector.y+=i,this.previousMouseEvent=t}},onMouseDown:function(t){var e=this.el.sceneEl.canvas,o=(AFRAME.INSPECTOR||{}).opened;this.mouseDown=!0,this.previousMouseEvent=t,!this.data.pointerlockEnabled||this.pointerLocked||o||(e.requestPointerLock?e.requestPointerLock():e.mozRequestPointerLock&&e.mozRequestPointerLock())},onMouseUp:function(){this.mouseDown=!1},onPointerLockChange:function(){this.pointerLocked=!(!document.pointerLockElement&&!document.mozPointerLockElement)},onPointerLockError:function(){this.pointerLocked=!1}}},{}],81:[function(t,e,o){e.exports={schema:{enabled:{default:!0}},init:function(){this.dVelocity=new THREE.Vector3,this.bindMethods()},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners(),this.dVelocity.set(0,0,0)},remove:function(){this.pause()},addEventListeners:function(){var t=this.el.sceneEl,e=t.canvas;if(!e)return void t.addEventListener("render-target-loaded",this.addEventListeners.bind(this));e.addEventListener("touchstart",this.onTouchStart),e.addEventListener("touchend",this.onTouchEnd)},removeEventListeners:function(){var t=this.el.sceneEl&&this.el.sceneEl.canvas;t&&(t.removeEventListener("touchstart",this.onTouchStart),t.removeEventListener("touchend",this.onTouchEnd))},isVelocityActive:function(){return this.data.enabled&&this.isMoving},getVelocityDelta:function(){return this.dVelocity.z=this.isMoving?-1:0,this.dVelocity.clone()},bindMethods:function(){this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this)},onTouchStart:function(t){this.isMoving=!0,t.preventDefault()},onTouchEnd:function(t){this.isMoving=!1,t.preventDefault()}}},{}],82:[function(t,e,o){var i=Math.PI/2;e.exports={dependencies:["velocity","rotation"],schema:{enabled:{default:!0},movementEnabled:{default:!0},movementControls:{default:["gamepad","keyboard","touch","hmd"]},rotationEnabled:{default:!0},rotationControls:{default:["hmd","gamepad","mouse"]},movementSpeed:{default:5},movementEasing:{default:15},movementEasingY:{default:0},movementAcceleration:{default:80},rotationSensitivity:{default:.05},fly:{default:!1}},init:function(){var t=this.el.getAttribute("rotation");this.el.hasAttribute("look-controls")&&this.data.rotationEnabled&&console.error("[universal-controls] The `universal-controls` component is a replacement for `look-controls`, and cannot be used in combination with it."),this.velocity=new THREE.Vector3,this.pitch=new THREE.Object3D,this.pitch.rotation.x=THREE.Math.degToRad(t.x),this.yaw=new THREE.Object3D,this.yaw.position.y=10,this.yaw.rotation.y=THREE.Math.degToRad(t.y),this.yaw.add(this.pitch),this.heading=new THREE.Euler(0,0,0,"YXZ"),this.el.sceneEl.hasLoaded?this.injectControls():this.el.sceneEl.addEventListener("loaded",this.injectControls.bind(this))},update:function(){this.el.sceneEl.hasLoaded&&this.injectControls()},injectControls:function(){var t,e,o=this.data;for(t=0;t<o.movementControls.length;t++)e=o.movementControls[t]+"-controls",this.el.components[e]||this.el.setAttribute(e,"");for(t=0;t<o.rotationControls.length;t++)e=o.rotationControls[t]+"-controls",this.el.components[e]||this.el.setAttribute(e,"")},tick:function(t,e){e&&(this.data.rotationEnabled&&this.updateRotation(e),this.data.movementEnabled&&e/1e3>.2?(this.velocity.set(0,0,0),this.el.setAttribute("velocity",this.velocity)):this.updateVelocity(e))},updateRotation:function(t){for(var e,o,n=this.data,s=0,r=n.rotationControls.length;s<r;s++)if((e=this.el.components[n.rotationControls[s]+"-controls"])&&e.isRotationActive()){if(e.getRotationDelta)o=e.getRotationDelta(t),o.multiplyScalar(n.rotationSensitivity),this.yaw.rotation.y-=o.x,this.pitch.rotation.x-=o.y,this.pitch.rotation.x=Math.max(-i,Math.min(i,this.pitch.rotation.x)),this.el.setAttribute("rotation",{x:THREE.Math.radToDeg(this.pitch.rotation.x),y:THREE.Math.radToDeg(this.yaw.rotation.y),z:0});else{if(!e.getRotation)throw new Error("Incompatible rotation controls: %s",n.rotationControls[s]);this.el.setAttribute("rotation",e.getRotation())}break}},updateVelocity:function(t){var e,o,i=this.velocity,n=this.data;if(n.movementEnabled)for(var s=0,r=n.movementControls.length;s<r;s++)if((e=this.el.components[n.movementControls[s]+"-controls"])&&e.isVelocityActive()){if(!e.getVelocityDelta){if(e.getVelocity)return void this.el.setAttribute("velocity",e.getVelocity());if(e.getPositionDelta)return i.copy(e.getPositionDelta(t).multiplyScalar(1e3/t)),void this.el.setAttribute("velocity",i);throw new Error("Incompatible movement controls: ",n.movementControls[s])}o=e.getVelocityDelta(t);break}if(i.copy(this.el.getAttribute("velocity")),i.x-=i.x*n.movementEasing*t/1e3,i.y-=i.y*n.movementEasingY*t/1e3,i.z-=i.z*n.movementEasing*t/1e3,o&&n.movementEnabled){o.length()>1?o.setLength(this.data.movementAcceleration*t/1e3):o.multiplyScalar(this.data.movementAcceleration*t/1e3);var a=this.el.getAttribute("rotation");a&&(this.heading.set(n.fly?THREE.Math.degToRad(a.x):0,THREE.Math.degToRad(a.y),0),o.applyEuler(this.heading)),i.add(o)}this.el.setAttribute("velocity",i)}}},{}]},{},[1]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2FmcmFtZS9hZnJhbWUtZXh0cmFzLmNvbnRyb2xzLm1pbi5qcz9iMTNhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJZQUFBLCtCQUFtQixnQkFBZ0IsVUFBVSxVQUFVLDBDQUEwQyw4QkFBd0IsMEJBQW9CLDhDQUE4QyxrQ0FBa0MsWUFBWSxZQUFZLG1DQUFtQyxpQkFBaUIsZUFBZSxzQkFBc0Isb0JBQW9CLGtEQUFrRCxXQUFXLFlBQVksU0FBUyxFQUFFLG1CQUFtQixrQ0FBa0MsRUFBRSxvQkFBb0IscUJBQXFCLG9DQUFvQyxFQUFFLDhLQUE4SyxFQUFFLEdBQUcscUJBQXFCLGtCQUFrQixtRUFBbUUsWUFBWSxHQUFHLHFCQUFxQixhQUFhLGdCQUFnQixnQ0FBZ0Msa0JBQWtCLHdEQUF3RCxVQUFVLEVBQUUsY0FBYyxpRUFBaUUseUJBQXlCLGlDQUFpQywrQkFBK0Isb0ZBQW9GLEdBQUcsa0JBQWtCLGlCQUFpQixnQkFBZ0IsNERBQTRELEdBQUcsT0FBTyx1REFBdUQsZ0JBQWdCLHNEQUFzRCwwRUFBMEUsV0FBVyxxQ0FBcUMsMEJBQTBCLCtCQUErQix1Q0FBdUMseUtBQXlLLDRNQUE0TSwwUEFBMFAsZ0JBQWdCLDBNQUEwTSxnQkFBZ0IsR0FBRyxjQUFjLElBQUksWUFBWSxJQUFJLGlCQUFpQixJQUFJLFdBQVcsS0FBSyxhQUFhLEtBQUssYUFBYSxLQUFLLGFBQWEsS0FBSyxlQUFlLEtBQUssV0FBVyxLQUFLLGFBQWEsS0FBSyxnQkFBZ0IsS0FBSyxnQkFBZ0IsS0FBSyxrQkFBa0IsS0FBSyxpQkFBaUIsS0FBSyxpQkFBaUIsS0FBSyxpQkFBaUIsS0FBSyxjQUFjLEtBQUssZUFBZSxLQUFLLGtCQUFrQixLQUFLLGNBQWMsS0FBSyxrQkFBa0IsS0FBSyxhQUFhLEtBQUssY0FBYyxLQUFLLGdCQUFnQixLQUFLLFdBQVcsS0FBSyxZQUFZLEtBQUssaUJBQWlCLEtBQUssZUFBZSxLQUFLLGtCQUFrQixLQUFLLGlCQUFpQixLQUFLLGNBQWMsS0FBSyxhQUFhLEtBQUssZUFBZSxLQUFLLG1CQUFtQixLQUFLLGNBQWMsS0FBSyxjQUFjLEtBQUssWUFBWSxLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHlCQUF5QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHVCQUF1QixLQUFLLHlCQUF5QixLQUFLLDBCQUEwQixLQUFLLG1CQUFtQixLQUFLLGVBQWUsS0FBSyxxQ0FBcUMsS0FBSyxxQ0FBcUMsS0FBSyxxQ0FBcUMsS0FBSyxxQ0FBcUMsTUFBTSxxQ0FBcUMsTUFBTSxxQ0FBcUMsTUFBTSxxQ0FBcUMsTUFBTSxxQ0FBcUMsTUFBTSxxQ0FBcUMsTUFBTSxxQ0FBcUMsTUFBTSw0Q0FBNEMsTUFBTSx1Q0FBdUMsTUFBTSx5Q0FBeUMsTUFBTSw0Q0FBNEMsTUFBTSwyQ0FBMkMsTUFBTSwwQ0FBMEMsTUFBTSxVQUFVLE1BQU0sVUFBVSxNQUFNLFVBQVUsTUFBTSxVQUFVLE1BQU0sVUFBVSxNQUFNLFVBQVUsTUFBTSxVQUFVLE1BQU0sVUFBVSxNQUFNLFVBQVUsTUFBTSxXQUFXLE1BQU0sV0FBVyxNQUFNLFdBQVcsTUFBTSxXQUFXLE1BQU0sV0FBVyxNQUFNLFdBQVcsTUFBTSxXQUFXLE1BQU0sV0FBVyxNQUFNLFdBQVcsTUFBTSxXQUFXLE1BQU0sV0FBVyxNQUFNLFdBQVcsTUFBTSxXQUFXLE1BQU0sV0FBVyxNQUFNLFdBQVcsTUFBTSwwQkFBMEIsTUFBTSxrQkFBa0IsTUFBTSw0QkFBNEIsTUFBTSw2QkFBNkIsTUFBTSw4QkFBOEIsTUFBTSwrQkFBK0IsTUFBTSwwQkFBMEIsTUFBTSwyQkFBMkIsTUFBTSxtQkFBbUIsTUFBTSxzQkFBc0IsTUFBTSxzQkFBc0IsTUFBTSxtQkFBbUIsTUFBTSxxQkFBcUIsTUFBTSx3QkFBd0IsTUFBTSxtQkFBbUIsTUFBTSxrQkFBa0IsTUFBTSxrQkFBa0IsTUFBTSxnQkFBZ0IsTUFBTSxzQkFBc0IsTUFBTSwwQkFBMEIsTUFBTSxpQkFBaUIsTUFBTSxzQkFBc0IsTUFBTSxrQkFBa0IsTUFBTSxtQkFBbUIsTUFBTSxrQkFBa0IsTUFBTSxrQkFBa0IsTUFBTSwwQkFBMEIsRUFBRSxNQUFNLHdCQUF3QixNQUFNLHdCQUF3QixNQUFNLHdCQUF3QixNQUFNLHlCQUF5QixNQUFNLHdCQUF3QixNQUFNLDRCQUE0QixNQUFNLDhCQUE4QixNQUFNLDZCQUE2QixNQUFNLCtCQUErQixNQUFNLHdCQUF3QixNQUFNLGlDQUFpQyxNQUFNLGVBQWUsTUFBTSxZQUFZLE1BQU0sYUFBYSxNQUFNLGFBQWEsTUFBTSxnQkFBZ0IsTUFBTSxZQUFZLE1BQU0sa0JBQWtCLE1BQU0sZUFBZSxXQUFXLElBQUksMEJBQTBCLEVBQUUsS0FBSyx3QkFBd0IsTUFBTSx3QkFBd0IsTUFBTSx3QkFBd0IsTUFBTSx1Q0FBdUMsTUFBTSw2Q0FBNkMsaUJBQWlCLElBQUksMEJBQTBCLE1BQU0seUJBQXlCLGlCQUFpQixLQUFLLHlCQUF5QixvQkFBb0IsSUFBSSwyQkFBMkIsZ0JBQWdCLEdBQUcsYUFBYSxLQUFLLFlBQVksYUFBYSxJQUFJLHlCQUF5QixvQkFBb0IsSUFBSSx5QkFBeUIsS0FBSywwQkFBMEIsTUFBTSx3QkFBd0IsRUFBRSxTQUFTLDBCQUEwQiw0QkFBNEIsY0FBYyw2QkFBNkIsY0FBYyw4QkFBOEIsY0FBYywrQkFBK0IsY0FBYywwQkFBMEIsY0FBYywyQkFBMkIsa0NBQWtDLG1CQUFtQixrQ0FBa0MsbUJBQW1CLDJCQUEyQixnQkFBZ0IsY0FBYyxpQkFBaUIsY0FBYyxrQkFBa0IsY0FBYyxlQUFlLGNBQWMsaUJBQWlCLGNBQWMsWUFBWSxjQUFjLFdBQVcsY0FBYyxjQUFjLGNBQWMsZ0JBQWdCLEVBQUUsU0FBUyxNQUFNLElBQUksNEJBQTRCLEtBQUssOEJBQThCLEtBQUssMkJBQTJCLE9BQU8sSUFBSSw2QkFBNkIsS0FBSywrQkFBK0IsS0FBSyw0QkFBNEIsT0FBTyxJQUFJLCtCQUErQixlQUFlLEtBQUssaUNBQWlDLE1BQU0sNkJBQTZCLG9CQUFvQixLQUFLLDBCQUEwQixvQkFBb0IsS0FBSywyQkFBMkIsb0JBQW9CLElBQUksMkJBQTJCLGdCQUFnQixJQUFJLDJCQUEyQix1QkFBdUIsSUFBSSwyQkFBMkIsdUJBQXVCLElBQUksMEJBQTBCLE1BQU0sNEJBQTRCLE1BQU0saUNBQWlDLE1BQU0sZ0NBQWdDLE1BQU0sZ0NBQWdDLEVBQUUsT0FBTyxXQUFXLFlBQVksYUFBYSxZQUFZLGNBQWMsY0FBYyxlQUFlLGNBQWMsVUFBVSxVQUFVLFdBQVcsVUFBVSxTQUFTLFNBQVMsVUFBVSxTQUFTLGNBQWMsWUFBWSxRQUFRLFFBQVEsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsU0FBUyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsT0FBTyxxQkFBcUIsVUFBVSxRQUFRLFVBQVUsUUFBUSxVQUFVLFFBQVEsVUFBVSxRQUFRLFVBQVUsUUFBUSxVQUFVLFFBQVEsVUFBVSxRQUFRLFVBQVUsUUFBUSxVQUFVLFFBQVEsVUFBVSxRQUFRLGlCQUFpQixRQUFRLFlBQVksUUFBUSxjQUFjLFFBQVEsaUJBQWlCLFFBQVEsZ0JBQWdCLFFBQVEsZUFBZSxRQUFRLFlBQVksTUFBTSxlQUFlLFFBQVEscUJBQXFCLFFBQVEscUJBQXFCLFFBQVEscUJBQXFCLFNBQVMscUJBQXFCLFFBQVEscUJBQXFCLFlBQVkscUJBQXFCLGNBQWMsbUJBQW1CLEVBQUUsWUFBWSxzQkFBc0IsZUFBZSxtQkFBbUIsRUFBRSxRQUFRLHFCQUFxQixnQkFBZ0Isd0JBQXdCLFdBQVcsUUFBUSxXQUFXLFVBQVUsWUFBWSxFQUFFLE9BQU8sd1ZBQXdWLGlCQUFpQixTQUFTLDBDQUEwQyxXQUFXLG9CQUFvQixJQUFJLFdBQVcsSUFBSSw0Q0FBNEMsVUFBVSwyREFBMkQsa0JBQWtCLHFDQUFxQyxxQ0FBcUMsZUFBZSxjQUFjLG9CQUFvQixtQ0FBbUMscUVBQXFFLHFEQUFxRCxlQUFlLHVCQUF1QixtQ0FBbUMsRUFBRSxpQ0FBaUMsZUFBZSxjQUFjLDBDQUEwQyx3Q0FBd0MsZUFBZSxjQUFjLHVDQUF1QyxzQ0FBc0MsZUFBZSxVQUFVLEVBQUUsOEZBQThGLGtCQUFrQixXQUFXLDZLQUE2SyxTQUFTLEdBQUcscUJBQXFCLCtDQUErQyxXQUFXLGlOQUFpTiw2WEFBNlgsZ0NBQWdDLEVBQUUsNktBQTZLLHFCQUFxQixrQkFBa0IseUJBQXlCLGlDQUFpQyxrQkFBa0IsS0FBSyxvQkFBb0IsZUFBZSx1RUFBdUUseUNBQXlDLE1BQU0scUZBQXFGLG9CQUFvQiwwREFBMEQsTUFBTSxrRUFBa0UscUJBQXFCLGtFQUFrRSw4RUFBOEUsTUFBTSwwR0FBMEcseUNBQXlDLE1BQU0scUVBQXFFLG9CQUFvQixLQUFLLG9CQUFvQixnREFBZ0QsWUFBWSxpQkFBaUIsb0NBQW9DLGFBQWEsS0FBSyxvQkFBb0IscUNBQXFDLDBGQUEwRixNQUFNLHVHQUF1RyxrQkFBa0IsZ0JBQWdCLHFCQUFxQixnQkFBZ0IsSUFBSSxLQUFLLHVVQUF1VSwwQkFBMEIseUNBQXlDLDBGQUEwRixNQUFNLG1HQUFtRyxxQkFBcUIsS0FBSyw2SUFBNkksMEJBQTBCLHlDQUF5QywwRkFBMEYsTUFBTSxtREFBbUQsNkRBQTZELG9CQUFvQiw0RkFBNEYsdUJBQXVCLHVGQUF1RixpREFBaUQsdUVBQXVFLFNBQVMsd0JBQXdCLEVBQUUsVUFBVSxxQkFBcUIseUNBQXlDLCtDQUErQyxRQUFRLE9BQU8sc0VBQXNFLGVBQWUsZ0NBQWdDLGVBQWUsYUFBYSxpQkFBaUIsMEpBQTBKLHFCQUFxQix5REFBeUQseUJBQXlCLDRJQUE0SSwyREFBMkQsb0RBQW9ELFlBQVksbUNBQW1DLEVBQUUsNEdBQTRHLGtHQUFrRyxpQ0FBaUMsc1BBQXNQLGtCQUFrQixFQUFFLGlCQUFpQiw0QkFBNEIsa0JBQWtCLDBLQUEwSyxrQkFBa0IsK0tBQStLLG1CQUFtQiw0RkFBNEYsK0JBQStCLDZEQUE2RCx1R0FBdUcsZUFBZSxnSkFBZ0osMEJBQTBCLHVCQUF1QixrUEFBa1AsMEJBQTBCLCtDQUErQyxrQkFBa0IsdUNBQXVDLGtUQUFrVCw4QkFBOEIsc0VBQXNFLGtCQUFrQix1Q0FBdUMsNE1BQTRNLHdCQUF3QiwyRUFBMkUsa0JBQWtCLDBDQUEwQyxJQUFJLEVBQUUsa0VBQWtFLHFCQUFxQixrQkFBa0IsZ0NBQWdDLElBQUksb0VBQW9FLFdBQVcsTUFBTSxVQUFVLGdCQUFnQixZQUFZLGlCQUFpQixhQUFhLGtCQUFrQix3QkFBd0IsRUFBRSxFQUFFLFdBQVcscUJBQXFCLGtCQUFrQixnQ0FBZ0MsSUFBSSxnQkFBZ0Isc0JBQXNCLEVBQUUsRUFBRSxXQUFXLHNCQUFzQixrQkFBa0IsV0FBVyxrREFBa0QsTUFBTSw0RUFBNEUsU0FBUyxnQkFBZ0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcsZUFBZSxXQUFXLFdBQVcsZ0JBQWdCLFFBQVEsWUFBWSxjQUFjLFlBQVksT0FBTyxxQkFBcUIsYUFBYSxhQUFhLHFCQUFxQixjQUFjLGlCQUFpQixpRUFBaUUsbUJBQW1CLDRGQUE0RixtQkFBbUIsMEJBQTBCLCtIQUErSCxHQUFHLHlGQUF5Riw2QkFBNkIsOE5BQThOLGVBQWUsbUVBQW1FLG9CQUFvQixFQUFFLGlHQUFpRyxxRUFBcUUsc0RBQXNELEVBQUUsNkVBQTZFLHNEQUFzRCxFQUFFLGtHQUFrRyxvRUFBb0UsRUFBRSxVQUFVLHNCQUFzQixXQUFXLDhFQUE4RSw2TUFBNk0sRUFBRSxrQ0FBa0Msc0JBQXNCLFdBQVcsUUFBUSxZQUFZLGlCQUFpQixzQ0FBc0MseUZBQXlGLHdCQUF3QiwrQ0FBK0MsbUJBQW1CLGdCQUFnQixtREFBbUQsR0FBRyxzQkFBc0IsV0FBVyxRQUFRLFlBQVksaUJBQWlCLGdIQUFnSCxtQkFBbUIsdUVBQXVFLG9CQUFvQixpQ0FBaUMsb0JBQW9CLE1BQU0sd0NBQXdDLE1BQU0sa0JBQWtCLHNDQUFzQyxZQUFZLHNDQUFzQyxhQUFhLHNFQUFzRSxnREFBZ0QsS0FBSyxHQUFHLHNCQUFzQixXQUFXLCtEQUErRCxzSkFBc0osR0FBRyxzQkFBc0IsdUVBQXVFLFdBQVcsUUFBUSxTQUFTLFVBQVUsYUFBYSxxQkFBcUIsV0FBVyxtQkFBbUIsY0FBYyxzQkFBc0IsMkJBQTJCLG1DQUFtQyw0QkFBNEIsb0NBQW9DLDRCQUE0QixvQ0FBb0MsaUNBQWlDLHlDQUF5QyxjQUFjLGFBQWEsUUFBUSxZQUFZLFFBQVEsK0JBQStCLGlCQUFpQixnQkFBZ0IsbUNBQW1DLDRGQUE0RixpUEFBaVAsdUJBQXVCLDBFQUEwRSw4UUFBOFEsc0RBQXNELG9CQUFvQixNQUFNLHVEQUF1RCxNQUFNLFFBQVEsNENBQTRDLG9EQUFvRCxRQUFRLDBDQUEwQyxtREFBbUQscUJBQXFCLGlDQUFpQyx1QkFBdUIsMEVBQTBFLHdCQUF3QiwyR0FBMkcsMkJBQTJCLHlCQUF5Qiw4QkFBOEIsdURBQXVELG9CQUFvQixnQkFBZ0IsMmpCQUEyakIsRUFBRSw0QkFBNEIsc0JBQXNCLFdBQVcsU0FBUyxRQUFRLG9hQUFvYSw4TEFBOEwsME5BQTBOLGFBQWEsUUFBUSxvYUFBb2EsOExBQThMLHlXQUF5Vyx1RUFBdUUsT0FBTyxtREFBbUQsZ0JBQWdCLHVGQUF1RixtUkFBbVIsVUFBVSxTQUFTLHdLQUF3SyxXQUFXLDhEQUE4RDtBQUNuejRCLHNoREFBc2hELGlDQUFpQywrQ0FBK0MseUNBQXlDLHlHQUF5RyxFQUFFLDRCQUE0Qix5REFBeUQsbURBQW1ELEVBQUUsdUNBQXVDLG1DQUFtQyw0QkFBNEIsbUNBQW1DLGlDQUFpQywrQ0FBK0MsMEJBQTBCLG1DQUFtQywrQkFBK0IseUNBQXlDLGtEQUFrRCxLQUFLLCtEQUErRCxvQkFBb0IsR0FBRyxJQUFJLGdtRUFBZ21FLCtEQUErRCxrQkFBa0IsR0FBRyxzQkFBc0IsV0FBVyx3M0RBQXczRCxFQUFFLGd6Q0FBZ3pDLHNCQUFzQixjQUFjLE9BQU8sK0lBQStJLHdCQUF3QixvQkFBb0IsWUFBWSxZQUFZLDRDQUE0Qyw0Q0FBNEMsdUNBQXVDLFlBQVksV0FBVyxLQUFLLFdBQVcsd0lBQXdJLHdGQUF3Riw4QkFBOEIsa0ZBQWtGLDhCQUE4Qix5QkFBeUIsZ0NBQWdDLDhXQUE4VyxrQ0FBa0MsaU1BQWlNLGVBQWUsK0JBQStCLHdDQUF3QyxvQ0FBb0Msa0NBQWtDLHNFQUFzRSxrRUFBa0Usa0RBQWtELHdDQUF3Qyx1SUFBdUksd0RBQXdELHVDQUF1QyxnRUFBZ0UsaUNBQWlDLFlBQVksTUFBTSxLQUFLLFdBQVcsb0JBQW9CLDBCQUEwQix3Q0FBd0MsZ0VBQWdFLGlDQUFpQyxZQUFZLE1BQU0sS0FBSyxXQUFXLG9CQUFvQiwwQkFBMEIscUNBQXFDLG1ZQUFtWSxzQkFBc0IsRUFBRSxzQ0FBc0Msc0JBQXNCLGFBQWEsZUFBZSwwQ0FBMEMsNEJBQTRCLFFBQVEsUUFBUSxxQ0FBcUMsaUNBQWlDLDRCQUE0QixRQUFRLFFBQVEsb0NBQW9DLDhCQUE4QixpQ0FBaUMsTUFBTSxxQkFBcUIsdUNBQXVDLCtCQUErQixHQUFHLHNCQUFzQixhQUFhLHVEQUF1RCx5RUFBeUUsMENBQTBDLHVEQUF1RCw2RUFBNkUsbURBQW1ELGdOQUFnTixnREFBZ0Qsc0dBQXNHLFlBQVksa0JBQWtCLHlEQUF5RCxRQUFRLDhCQUE4QixvREFBb0QsbUNBQW1DLHVEQUF1RCxzSEFBc0gsT0FBTyxRQUFRLFdBQVcsMENBQTBDLG1DQUFtQyxNQUFNLHdCQUF3QixzQkFBc0IsWUFBWSxNQUFNLEtBQUssOENBQThDLHNCQUFzQixZQUFZLGtCQUFrQixLQUFLLDBCQUEwQix1Q0FBdUMsb0NBQW9DLFlBQVksb0NBQW9DLFFBQVEscUhBQXFILHVDQUF1QyxzRkFBc0YsRUFBRSx5R0FBeUcsc0JBQXNCLHNCQUFzQixpSUFBaUksOEJBQThCLDZEQUE2RCw0RUFBNEUsWUFBWSxJQUFJLHlDQUF5QyxZQUFZLG1FQUFtRSw0Q0FBNEMsWUFBWSxNQUFNLDJDQUEyQywwQkFBMEIsK0VBQStFLGtLQUFrSyxZQUFZLEtBQUssaUJBQWlCLEtBQUssaUJBQWlCLEtBQUssTUFBTSxZQUFZLGdCQUFnQixvV0FBb1csTUFBTSxXQUFXLDhDQUE4QyxNQUFNLEtBQUsscUJBQXFCLGVBQWUsbUVBQW1FLDZCQUE2QixNQUFNLG9FQUFvRSwwRkFBMEYsYUFBYSxnQkFBZ0IsTUFBTSxzQ0FBc0MsTUFBTSxzQ0FBc0MsTUFBTSwrQkFBK0IsYUFBYSxpQkFBaUIsTUFBTSx5S0FBeUssWUFBWSxNQUFNLEtBQUssWUFBWSw0QkFBNEIsT0FBTyx3QkFBd0IsTUFBTSxLQUFLLGFBQWEscUVBQXFFLDJCQUEyQixFQUFFLHlEQUF5RCxzQkFBc0IsYUFBYSxjQUFjLFlBQVksc0NBQXNDLHVGQUF1RixrQ0FBa0MsUUFBUSxNQUFNLFlBQVksTUFBTSxxRkFBcUYsTUFBTSxzQ0FBc0MsUUFBUSxZQUFZLGtCQUFrQixLQUFLLGtCQUFrQixpRUFBaUUsVUFBVSxFQUFFLDhCQUE4QixzQkFBc0IsYUFBYSxlQUFlLDBDQUEwQyxzQkFBc0IsUUFBUSxRQUFRLDhCQUE4QixpQ0FBaUMsc0JBQXNCLFFBQVEsUUFBUSxzREFBc0QsOEJBQThCLGVBQWUseUNBQXlDLEdBQUcsc0JBQXNCLGFBQWEsaUNBQWlDLGdCQUFnQixtQ0FBbUMsNkNBQTZDLFFBQVEsUUFBUSxRQUFRLGVBQWUsK0JBQStCLDhDQUE4QyxPQUFPLEtBQUssYUFBYSxxQkFBcUIsS0FBSyxnQkFBZ0IsUUFBUSw2QkFBNkIsbUJBQW1CLGlFQUFpRSxtQ0FBbUMscUVBQXFFLElBQUksS0FBSyxvQkFBb0IsT0FBTyxLQUFLLHFCQUFxQixJQUFJLFlBQVksSUFBSSxLQUFLLG9CQUFvQixPQUFPLEtBQUssdUJBQXVCLEdBQUcsc0JBQXNCLGdCQUFnQiwyUkFBMlIsb0JBQW9CLG9DQUFvQywrREFBK0Qsa0RBQWtELGtCQUFrQixZQUFZLGVBQWUsK0NBQStDLFlBQVksa05BQWtOLHNEQUFzRCxpQkFBaUIseUNBQXlDLG1XQUFtVywwSkFBMEosb0JBQW9CLG9CQUFvQixvQkFBb0Isd0NBQXdDLDJDQUEyQyxrQ0FBa0MsK0tBQStLLElBQUksS0FBSyxrQkFBa0IscU1BQXFNLDJDQUEyQywyQ0FBMkMsdUJBQXVCLDhCQUE4Qiw2QkFBNkIseUNBQXlDLG9FQUFvRSw4Q0FBOEMsNkRBQTZELG1CQUFtQiw0QkFBNEIsa0RBQWtELFlBQVksNkNBQTZDLHNFQUFzRSxrR0FBa0csMkRBQTJELGFBQWEsWUFBWSxZQUFZLGVBQWUsbURBQW1ELGVBQWUsa0NBQWtDLDRCQUE0QixZQUFZLGtCQUFrQiwrREFBK0QsdUZBQXVGLDBCQUEwQix1TUFBdU0sT0FBTyxhQUFhLHNCQUFzQixxREFBcUQsK0JBQStCLHlJQUF5SSxnQkFBZ0IsMEJBQTBCLFlBQVksK01BQStNLFlBQVksSUFBSSxnQkFBZ0IsSUFBSSxLQUFLLGtDQUFrQyw2Q0FBNkMsNkpBQTZKLDZIQUE2SCxtRUFBbUUsb0JBQW9CLGdEQUFnRCwrUUFBK1EsK0ZBQStGLEtBQUssd0RBQXdELDRIQUE0SCwyRkFBMkYseURBQXlELGtDQUFrQyxrREFBa0QsK0tBQStLLG9CQUFvQixLQUFLLHFDQUFxQyxrRUFBa0UsZUFBZSxrQ0FBa0MsaUJBQWlCLFdBQVcsaUVBQWlFLFlBQVksNkJBQTZCLEtBQUssb0ZBQW9GLHNCQUFzQixzRUFBc0UsbUVBQW1FLHlFQUF5RSxtREFBbUQsdUlBQXVJLG9QQUFvUCwyQkFBMkIsMEJBQTBCLHVCQUF1QixnQ0FBZ0MsS0FBSyxXQUFXLG1EQUFtRCw0QkFBNEIsV0FBVyx5RUFBeUUsMkJBQTJCLDhIQUE4SCxXQUFXLDhHQUE4RywwREFBMEQsb0dBQW9HLDRFQUE0RSxNQUFNLDRGQUE0RixNQUFNLDhFQUE4RSxvQkFBb0IsRUFBRSxnTUFBZ00sc0JBQXNCLGFBQWEseU1BQXlNLHdCQUF3Qix5Q0FBeUMseU5BQXlOLDhCQUE4QixvQkFBb0IseUNBQXlDLG1KQUFtSixFQUFFLGtCQUFrQixzQkFBc0IsY0FBYyxnRUFBZ0Usb0JBQW9CLGlDQUFpQyxlQUFlLHFDQUFxQyx3QkFBd0Isc0JBQXNCLHFCQUFxQiwwREFBMEQsK0RBQStELHVCQUF1QixZQUFZLGtCQUFrQixvQ0FBb0MseVBBQXlQLDhCQUE4Qix1QkFBdUIsSUFBSSxLQUFLLHFCQUFxQixxREFBcUQsZ0JBQWdCLFNBQVMsU0FBUyw4QkFBOEIsdUJBQXVCLElBQUksS0FBSyxxQkFBcUIscURBQXFELGdCQUFnQixTQUFTLFNBQVMsOEJBQThCLHVCQUF1QixJQUFJLEtBQUsscUJBQXFCLHFEQUFxRCxnQkFBZ0IsU0FBUyxTQUFTLDRDQUE0QyxvREFBb0Qsb0RBQW9ELE1BQU0sS0FBSyxXQUFXLFVBQVUsSUFBSSxLQUFLLFdBQVcsc0NBQXNDLCtCQUErQixrQ0FBa0MsaUNBQWlDLHdEQUF3RCxNQUFNLEtBQUssV0FBVyxtQ0FBbUMsK0VBQStFLCtCQUErQixRQUFRLG1IQUFtSCxzREFBc0QsV0FBVyx1Q0FBdUMscUVBQXFFLE1BQU0sS0FBSywwQkFBMEIsWUFBWSxtQkFBbUIsWUFBWSxtQkFBbUIsWUFBWSxrQ0FBa0MsbUNBQW1DLHVDQUF1QyxvREFBb0QsMkJBQTJCLDhCQUE4Qiw4REFBOEQsV0FBVyxLQUFLLFdBQVcsaUVBQWlFLFVBQVUsRUFBRSxrREFBa0Qsc0JBQXNCLGtCQUFrQixRQUFRLDZHQUE2RywwTEFBMEwsdUVBQXVFLG9JQUFvSSxZQUFZLHdMQUF3TCxrQ0FBa0MsWUFBWSw4QkFBOEIsdUVBQXVFLHFUQUFxVCxFQUFFLHdLQUF3SyxzQkFBc0Isa0JBQWtCLGdCQUFnQixvQ0FBb0MsMkpBQTJKLFlBQVksMEJBQTBCLDhCQUE4QixpRkFBaUYsK0JBQStCLDZCQUE2QixXQUFXLG9CQUFvQixnQ0FBZ0MsNkJBQTZCLFdBQVcsb0JBQW9CLGVBQWUsRUFBRSxvQkFBb0Isc0JBQXNCLG9CQUFvQix1R0FBdUcsdUNBQXVDLGtEQUFrRCxZQUFZLDREQUE0RCxnREFBZ0QsZ0ZBQWdGLDRFQUE0RSxFQUFFLG9EQUFvRCxzQkFBc0Isa0JBQWtCLFFBQVEsNkdBQTZHLG1KQUFtSixzSEFBc0gsd0NBQXdDLFlBQVksbU1BQW1NLHFFQUFxRSw4QkFBOEIscUNBQXFDLDhCQUE4Qix1Q0FBdUMsb0NBQW9DLDBDQUEwQyw4REFBOEQsb0JBQW9CLDhCQUE4QiwySUFBMkk7QUFDNXMrQix5TkFBeU4sRUFBRSxtTEFBbUwsc0JBQXNCLGtCQUFrQixRQUFRLGlFQUFpRSwrVkFBK1YsNEhBQTRILDJCQUEyQixZQUFZLGlNQUFpTSxrQ0FBa0MsWUFBWSw4QkFBOEIsb0lBQW9JLG1RQUFtUSxFQUFFLG1MQUFtTCxzQkFBc0Isc0JBQXNCLGdHQUFnRyx3RkFBd0Ysa0pBQWtKLFlBQVksZ0ZBQWdGLGdEQUFnRCxpRkFBaUYsMklBQTJJLEVBQUUsc0VBQXNFLHNCQUFzQixrQkFBa0IsUUFBUSx5Q0FBeUMsNEpBQTRKLFlBQVksOERBQThELDRDQUE0QyxvQkFBb0IsaUNBQWlDLHdHQUF3Ryx1SkFBdUosRUFBRSxvREFBb0Qsc0JBQXNCLGtCQUFrQixxR0FBcUcsWUFBWSwwQ0FBMEMsa0JBQWtCLDRDQUE0Qyw0QkFBNEIsaUNBQWlDLDRPQUE0Tyw0S0FBNEssb0NBQW9DLDZFQUE2RSw0Q0FBNEMsb0RBQW9ELHdCQUF3QiwrS0FBK0ssRUFBRSxvREFBb0Qsc0JBQXNCLG9CQUFvQix5UEFBeVAsWUFBWSx1REFBdUQsNEVBQTRFLGdCQUFnQixtRUFBbUUsc0NBQXNDLHVCQUF1QixtREFBbUQsa0NBQWtDLGtHQUFrRywwQ0FBMEMsTUFBTSxpQ0FBaUMsMElBQTBJLHFEQUFxRCx3Q0FBd0Msd0hBQXdILHNEQUFzRCxvQ0FBb0MsbUNBQW1DLG9KQUFvSixvSkFBb0osWUFBWSxvQ0FBb0Msa0tBQWtLLHNHQUFzRyxZQUFZLDhCQUE4QixxQ0FBcUMsNEVBQTRFLDRTQUE0UyxpQ0FBaUMscUNBQXFDLEVBQUUsK0NBQStDLHNCQUFzQixrQkFBa0IsK0RBQStELFlBQVksMENBQTBDLGtCQUFrQiw0Q0FBNEMsb0JBQW9CLGlDQUFpQyw2RUFBNkUsMEJBQTBCLG9EQUFvRCxtSUFBbUksRUFBRSxvREFBb0Qsc0JBQXNCLGtCQUFrQixRQUFRLHlDQUF5Qyw4SUFBOEksWUFBWSw4REFBOEQsNENBQTRDLG9CQUFvQixpQ0FBaUMsd0dBQXdHLDBKQUEwSixFQUFFLG9EQUFvRCxzQkFBc0Isa0JBQWtCLGlHQUFpRyxZQUFZLDhEQUE4RCw2RUFBNkUsa0hBQWtILG1IQUFtSCxFQUFFLG9EQUFvRCxzQkFBc0Isa0JBQWtCLGdCQUFnQiwrSUFBK0ksaVZBQWlWLDBCQUEwQiwwQkFBMEIsRUFBRSxvQkFBb0Isc0JBQXNCLGNBQWMsU0FBUyxPQUFPLDZCQUE2Qix3S0FBd0ssMEJBQTBCLEdBQUcsc0JBQXNCLGFBQWEseUNBQXlDLFlBQVksa0JBQWtCLHdDQUF3QyxxRUFBcUUsMkNBQTJDLG1EQUFtRCxFQUFFLFlBQVksc0JBQXNCLGNBQWMscUNBQXFDLFlBQVksa0JBQWtCLGdDQUFnQyxvQkFBb0IsK0RBQStELGdDQUFnQyxvQkFBb0IsK0RBQStELGtDQUFrQyxvQkFBb0IsMkJBQTJCLGtDQUFrQywrQkFBK0IsMkJBQTJCLGlDQUFpQyxXQUFXLHNDQUFzQyxvRkFBb0YsK0JBQStCLFlBQVksdUJBQXVCLHdCQUF3QixpQ0FBaUMsdUJBQXVCLElBQUksZ0JBQWdCLElBQUksS0FBSyxnQkFBZ0IsSUFBSSw4Q0FBOEMsb0JBQW9CLFNBQVMsaUNBQWlDLFdBQVcseUNBQXlDLE1BQU0sc0VBQXNFLFNBQVMsaUNBQWlDLFdBQVcsaUJBQWlCLEtBQUssY0FBYyxRQUFRLFFBQVEsSUFBSSxZQUFZLElBQUksa0NBQWtDLDRCQUE0QixnQkFBZ0IsR0FBRyxnQ0FBZ0MsSUFBSSxxQkFBcUIsSUFBSSxHQUFHLHlCQUF5QixXQUFXLE1BQU0sMEJBQTBCLElBQUksS0FBSyx3QkFBd0IsSUFBSSxHQUFHLDBDQUEwQyxZQUFZLFdBQVcsMlBBQTJQLFNBQVMsK0JBQStCLDBDQUEwQyx1QkFBdUIsOEJBQThCLFlBQVksb0JBQW9CLG1DQUFtQyxZQUFZLGlDQUFpQyxpQkFBaUIsSUFBSSw0QkFBNEIsU0FBUyxpQ0FBaUMsV0FBVyxpQkFBaUIsS0FBSyxjQUFjLFFBQVEsUUFBUSxJQUFJLFlBQVksSUFBSSxrQ0FBa0Msb0VBQW9FLGdCQUFnQixHQUFHLGdDQUFnQyxJQUFJLHFCQUFxQixJQUFJLEdBQUcseUJBQXlCLFdBQVcsTUFBTSwwQkFBMEIsSUFBSSxLQUFLLHdCQUF3QixJQUFJLEdBQUcsMENBQTBDLFlBQVksV0FBVyxJQUFJLEdBQUcsTUFBTSxHQUFHLHdCQUF3QixJQUFJLEdBQUcsbUNBQW1DLFdBQVcsV0FBVyxXQUFXLElBQUksR0FBRyxpQkFBaUIsSUFBSSxHQUFHLDBCQUEwQixXQUFXLFdBQVcsSUFBSSxHQUFHLElBQUksR0FBRyxvRkFBb0YsV0FBVyxXQUFXLFdBQVcsU0FBUyxtREFBbUQsb0hBQW9ILHlHQUF5RyxtQ0FBbUMsV0FBVyx5Q0FBeUMsTUFBTSxnQkFBZ0IsTUFBTSxzQkFBc0IsVUFBVSxFQUFFLFlBQVksc0JBQXNCLG9CQUFvQix3RkFBd0YsWUFBWSxrQkFBa0Isa0NBQWtDLGdEQUFnRCxpQ0FBaUMsK0NBQStDLGdDQUFnQyxvQ0FBb0MsNENBQTRDLHFCQUFxQix5RUFBeUUscUNBQXFDLDRCQUE0Qix1REFBdUQsaUdBQWlHLG9CQUFvQix5Q0FBeUMsMEJBQTBCLFlBQVksaURBQWlELEtBQUssaUJBQWlCLHVIQUF1SCxhQUFhLGtCQUFrQiwrQkFBK0IsV0FBVyxnRUFBZ0UseUZBQXlGLGlDQUFpQyx3Q0FBd0MsNkJBQTZCLDBCQUEwQixxQ0FBcUMsbUNBQW1DLG1FQUFtRSxrQ0FBa0MseUVBQXlFLHdHQUF3RyxzQ0FBc0Msc0VBQXNFLGtHQUFrRyxpQ0FBaUMsV0FBVyxtSEFBbUgsOEVBQThFLDhCQUE4Qix3REFBd0QsbUNBQW1DLFdBQVcsOENBQThDLFVBQVUsd0JBQXdCLDRHQUE0RyxzQkFBc0IseUZBQXlGLE1BQU0sZ0VBQWdFLGtCQUFrQiw0Q0FBNEMsV0FBVyxvR0FBb0csNGhCQUE0aEIsOEJBQThCLDBDQUEwQyxtQ0FBbUMsV0FBVywwRUFBMEUsdU1BQXVNLHlDQUF5QyxXQUFXLDZFQUE2RSwrRkFBK0YsRUFBRSxZQUFZLHNCQUFzQixjQUFjLE9BQU8sdUlBQXVJLHNDQUFzQyxZQUFZLFlBQVksc0NBQXNDLGVBQWUsaURBQWlELHdDQUF3Qyw4REFBOEQsdUNBQXVDLGVBQWUsa0NBQWtDLHdDQUF3Qyw4REFBOEQsOENBQThDLGVBQWUsb0NBQW9DLHNDQUFzQyxzQkFBc0Isd0NBQXdDLGVBQWUsdUNBQXVDLEVBQUUsOEJBQThCLHNCQUFzQixrQkFBa0Isb0NBQW9DLFlBQVksa0JBQWtCLHNIQUFzSCxpREFBaUQsd0RBQXdELGlDQUFpQyx1Q0FBdUMsZ0NBQWdDLHVCQUF1QixnQ0FBZ0MscURBQXFELDZDQUE2QyxnQ0FBZ0MscURBQXFELDZDQUE2QyxpQ0FBaUMsbUVBQW1FLGtDQUFrQyx3REFBd0QsUUFBUSxVQUFVLDhCQUE4QixnQ0FBZ0MsU0FBUyw4QkFBOEIsV0FBVyx3REFBd0QsaUVBQWlFLDZCQUE2QiwrQkFBK0IsOEJBQThCLGtFQUFrRSxzQkFBc0IsZ0ZBQWdGLGlEQUFpRCxzREFBc0QseUNBQXlDLGlEQUFpRCwwQ0FBMEMsZ0NBQWdDLFdBQVcsK0JBQStCLGlDQUFpQyxnQ0FBZ0MsaUVBQWlFLGdGQUFnRix1RUFBdUUsNkJBQTZCLHdDQUF3QywrQkFBK0IsMENBQTBDLGdDQUFnQyx5REFBeUQsb0JBQW9CLG1DQUFtQyxrQkFBa0IsUUFBUSxjQUFjLGtDQUFrQyxRQUFRLHNGQUFzRiwrQkFBK0IsaUNBQWlDLG9DQUFvQyxnQ0FBZ0MsNkJBQTZCLDhCQUE4Qiw2Q0FBNkMsa0NBQWtDLCtCQUErQixnREFBZ0Qsd0NBQXdDLHNHQUFzRyxvQ0FBb0MsMkZBQTJGLFlBQVksMkNBQTJDLDBDQUEwQyw4QkFBOEIsb0NBQW9DLEVBQUUsWUFBWSxzQkFBc0IsY0FBYyxPQUFPLDRxQkFBNHFCLHVDQUF1Qyx5Z0RBQXlnRCxZQUFZLG1NQUFtTSwrS0FBK0ssY0FBYywrQkFBK0Isc0JBQXNCLG9HQUFvRyw4QkFBOEIsb0hBQW9ILGdCQUFnQixjQUFjLGVBQWUsYUFBYSxtQ0FBbUMsb0JBQW9CLDhHQUE4Ryw4T0FBOE8sa0RBQWtELGdSQUFnUiw2Q0FBNkMsZUFBZSx3RUFBd0UsOENBQThDLGVBQWUsZ0RBQWdELDZDQUE2QyxlQUFlLDREQUE0RCw4Q0FBOEMsZUFBZSxxQ0FBcUMsb0JBQW9CLHFDQUFxQyxvQkFBb0IsK01BQStNLDZDQUE2Qyw2REFBNkQsTUFBTSxLQUFLLFdBQVcsK0JBQStCLDJDQUEyQyxlQUFlLHVCQUF1QixZQUFZLG1DQUFtQyw0SEFBNEgsTUFBTSxLQUFLLFdBQVcsdUlBQXVJLHlCQUF5QixvQkFBb0IsTUFBTSwyQ0FBMkMsc0JBQXNCLDRCQUE0QixZQUFZLHlHQUF5RyxPQUFPLG9CQUFvQixxQ0FBcUMsMEJBQTBCLFFBQVEsNkVBQTZFLG9CQUFvQiwwQ0FBMEMsMEJBQTBCLFlBQVksaUZBQWlGLDRCQUE0Qix1Q0FBdUMsMEJBQTBCLFlBQVkscUVBQXFFLFFBQVEsaUdBQWlHLG9CQUFvQiw0Q0FBNEMsMEJBQTBCLFlBQVksbUZBQW1GLFlBQVksNENBQTRDLFFBQVEsdUNBQXVDLHdDQUF3Qyx5VEFBeVQsbURBQW1ELFlBQVksMEZBQTBGLHdCQUF3QixzQ0FBc0MsMktBQTJLLHdLQUF3Syw2Q0FBNkMsb0VBQW9FLCtRQUErUSxFQUFFLCtLQUErSyxzQkFBc0IsY0FBYyxrUkFBa1Isc0JBQXNCLHdCQUF3QiwwRUFBMEUscUVBQXFFLGtCQUFrQixvQkFBb0Isc0dBQXNHLHdCQUF3QiwwQkFBMEIsZ0JBQWdCLDBFQUEwRSw2Q0FBNkMsc0pBQXNKLFlBQVksZ0RBQWdELE1BQU0saUNBQWlDLFFBQVEsd0NBQXdDLGlDQUFpQyw0Q0FBNEMsK0JBQStCLE1BQU0sMkNBQTJDLGlDQUFpQyxvQ0FBb0MsMkJBQTJCLG9DQUFvQyxpQkFBaUIsNEJBQTRCLFdBQVcsZ0NBQWdDLHNCQUFzQixpRUFBaUUsK0NBQStDLDhFQUE4RSx1Q0FBdUMsNERBQTRELElBQUksaUNBQWlDLHFEQUFxRCxZQUFZLDRHQUE0RyxZQUFZLElBQUksdUJBQXVCLHlCQUF5Qiw0QkFBNEIsSUFBSSxLQUFLLCtCQUErQixrS0FBa0ssdUJBQXVCLDRCQUE0QixRQUFRLElBQUksS0FBSyxXQUFXLDJEQUEyRCxRQUFRLHlCQUF5QixZQUFZO0FBQzN1K0Isa0RBQWtELDRDQUE0QyxzREFBc0QsZUFBZSwrQkFBK0IsNlFBQTZRLDBDQUEwQyxxRUFBcUUsSUFBSSxLQUFLLFdBQVcsa0JBQWtCLDBEQUEwRCwyREFBMkQscUNBQXFDLHVIQUF1SCwwQkFBMEIseUNBQXlDLGlCQUFpQixrR0FBa0csb0JBQW9CLGdDQUFnQyxZQUFZLGtDQUFrQyw4REFBOEQsNEJBQTRCLG9DQUFvQyxZQUFZLHNCQUFzQixVQUFVLDBCQUEwQix1RUFBdUUsYUFBYSxxQ0FBcUMsOEVBQThFLGlCQUFpQiw4QkFBOEIsa0dBQWtHLGtIQUFrSCxtRUFBbUUsMkRBQTJELDRDQUE0Qyw2RUFBNkUsS0FBSyxXQUFXLHFFQUFxRSxtTUFBbU0sU0FBUyxtREFBbUQsaUJBQWlCLHVCQUF1Qix1TEFBdUwsOENBQThDLHFDQUFxQyw0SEFBNEgseUJBQXlCLHdCQUF3QixZQUFZLGlDQUFpQyxrQ0FBa0MsZ0VBQWdFLGdDQUFnQyxnR0FBZ0csK0NBQStDLCtDQUErQywwQ0FBMEMsc0JBQXNCLHVDQUF1Qyw0RUFBNEUsSUFBSSxLQUFLLGtDQUFrQyxnRkFBZ0YsWUFBWSxJQUFJLEtBQUssa0NBQWtDLE1BQU0sV0FBVyw0RUFBNEUsZ0RBQWdELDZLQUE2SyxnQkFBZ0IsWUFBWSxJQUFJLEtBQUssc0NBQXNDLG1CQUFtQix3QkFBd0IsaUVBQWlFLFVBQVUsY0FBYyxzQ0FBc0MsYUFBYSxtREFBbUQsbUJBQW1CLHNEQUFzRCxxQkFBcUIsNkJBQTZCLHFCQUFxQixnQkFBZ0IsNEJBQTRCLElBQUksS0FBSyxXQUFXLDBGQUEwRixZQUFZLElBQUksS0FBSyxtQkFBbUIsMEVBQTBFLFlBQVksbURBQW1ELHNCQUFzQixtQ0FBbUMsaURBQWlELFlBQVkscUxBQXFMLG9GQUFvRixFQUFFLHNJQUFzSSxzQkFBc0IsY0FBYyxtS0FBbUssMkJBQTJCLDRCQUE0QiwwREFBMEQseUhBQXlILDZDQUE2QyxRQUFRLGFBQWEsNkVBQTZFLG1FQUFtRSxvRUFBb0Usa0RBQWtELHVCQUF1QixnQ0FBZ0MsMkRBQTJELEVBQUUsMERBQTBELDRDQUE0QyxnRUFBZ0UsaURBQWlELHlDQUF5QywwQkFBMEIsd0NBQXdDLHNDQUFzQyxvQ0FBb0MsWUFBWSx3Q0FBd0Msc0JBQXNCLDJDQUEyQyx5REFBeUQsbURBQW1ELG9DQUFvQyw2RUFBNkUsV0FBVyxvQkFBb0IsWUFBWSxXQUFXLDBCQUEwQixzREFBc0QsZ0NBQWdDLCtCQUErQixXQUFXLGlDQUFpQyx5Q0FBeUMsNkVBQTZFLFdBQVcsbUJBQW1CLFlBQVksV0FBVyw4QkFBOEIsWUFBWSxzQ0FBc0Msa0VBQWtFLDBEQUEwRCxFQUFFLDJHQUEyRyxzQkFBc0IsYUFBYSxtS0FBbUssWUFBWSwrQ0FBK0MsK0ZBQStGLDRCQUE0Qiw0RkFBNEYsZ0NBQWdDLGdDQUFnQyx3R0FBd0csWUFBWSx1Q0FBdUMsMkZBQTJGLE1BQU0sS0FBSyx3QkFBd0IsaUVBQWlFLG9EQUFvRCw4QkFBOEIsdUVBQXVFLE1BQU0sS0FBSyw0Q0FBNEMsNERBQTRELDJCQUEyQixNQUFNLEtBQUssaUNBQWlDLDJCQUEyQixlQUFlLDJFQUEyRSxnQ0FBZ0MsTUFBTSxLQUFLLHdCQUF3QiwwQkFBMEIsK0NBQStDLE1BQU0sS0FBSyxXQUFXLDhCQUE4QixlQUFlLDRUQUE0VCxtRkFBbUYsMkJBQTJCLDJCQUEyQiwwREFBMEQsaUNBQWlDLHNDQUFzQyw2REFBNkQsZ0NBQWdDLDJCQUEyQiwrREFBK0QsRUFBRSxzSUFBc0ksc0JBQXNCLGtCQUFrQixPQUFPLDBaQUEwWix3QkFBd0Isb0RBQW9ELGtEQUFrRCx5Q0FBeUMsa0RBQWtELHlDQUF5QyxrREFBa0QseUNBQXlDLG1EQUFtRCw0RkFBNEYsa0NBQWtDLDRIQUE0SCxzR0FBc0csZUFBZSxxU0FBcVMsRUFBRSxrQkFBa0Isc0JBQXNCLGNBQWMsZ0JBQWdCLDRrQkFBNGtCLGl0Q0FBaXRDLHlHQUF5RyxZQUFZLDRCQUE0QixvQ0FBb0MseUJBQXlCLHFCQUFxQiw2Q0FBNkMsa0VBQWtFLDhCQUE4QixtRkFBbUYsS0FBSyxXQUFXLDJFQUEyRSx1S0FBdUssRUFBRSw2RkFBNkYsc0JBQXNCLGNBQWMsNktBQTZLLFlBQVksaUVBQWlFLHdHQUF3RyxxVEFBcVQsK0RBQStELGlEQUFpRCw2REFBNkQsb0NBQW9DLFFBQVEsK0dBQStHLDBDQUEwQywyQkFBMkIseUlBQXlJLGFBQWEsdUJBQXVCLFNBQVMsK0JBQStCLGtFQUFrRSxtREFBbUQsbURBQW1ELFlBQVksTUFBTSwrQ0FBK0MsK0pBQStKLFdBQVcsNEVBQTRFLHdEQUF3RCxpREFBaUQsdUJBQXVCLDRMQUE0TCxXQUFXLDZDQUE2QyxZQUFZLElBQUksS0FBSyxXQUFXLHlCQUF5QixzQkFBc0IsNEZBQTRGLEVBQUUsdURBQXVELHNCQUFzQixrQkFBa0IsOFZBQThWLFlBQVksMEZBQTBGLDRDQUE0QyxZQUFZLG9DQUFvQywrREFBK0QsV0FBVyxnQkFBZ0IsYUFBYSxrQ0FBa0MsTUFBTSxLQUFLLGNBQWMsc0NBQXNDLGlCQUFpQixhQUFhLG1EQUFtRCxLQUFLLE1BQU0sc0JBQXNCLHVDQUF1QywwQ0FBMEMsWUFBWSxvQkFBb0IsS0FBSyxZQUFZLHVCQUF1QixrR0FBa0csaUNBQWlDLDBEQUEwRCxzQ0FBc0MsZUFBZSxxTUFBcU0sWUFBWSx1QkFBdUIsOEdBQThHLG9CQUFvQixrQ0FBa0MsK0RBQStELHlDQUF5QyxzRkFBc0YsaUNBQWlDLFlBQVksd0RBQXdELHlDQUF5QyxpQkFBaUIsS0FBSyxzQ0FBc0MsZUFBZSxlQUFlLHlDQUF5QyxJQUFJLEtBQUssK0JBQStCLDZDQUE2QywrQ0FBK0Msb0RBQW9ELHlEQUF5RCwwREFBMEQsNEJBQTRCLHdCQUF3QixLQUFLLDJCQUEyQixpQ0FBaUMsbUJBQW1CLHFCQUFxQiw2Q0FBNkMsSUFBSSxLQUFLLGVBQWUsc0NBQXNDLGlDQUFpQyxtQkFBbUIscUJBQXFCLDRCQUE0Qix3QkFBd0IsS0FBSywrQkFBK0IsaUNBQWlDLG1CQUFtQixxQkFBcUIsNkNBQTZDLElBQUksS0FBSyxlQUFlLDBDQUEwQyxpQ0FBaUMsbUJBQW1CLHFCQUFxQixZQUFZLHlCQUF5QixLQUFLLDRCQUE0QixZQUFZLHlCQUF5QixpRUFBaUUsY0FBYyxpQ0FBaUMsbUJBQW1CLHNCQUFzQiwrQ0FBK0MsY0FBYyw4Q0FBOEMsV0FBVywwQ0FBMEMsZ0NBQWdDLHFCQUFxQixnQkFBZ0IsZ0JBQWdCLG9CQUFvQixnREFBZ0QsMkJBQTJCLGtDQUFrQyx1RkFBdUYsZ0RBQWdELGdFQUFnRSxpQkFBaUIsb0VBQW9FLHdEQUF3RCx3RkFBd0YsaUJBQWlCLEtBQUssc0NBQXNDLGVBQWUsZUFBZSxXQUFXLGlCQUFpQixvQkFBb0IsWUFBWSxpQkFBaUIsZ0JBQWdCLG9CQUFvQixxR0FBcUcsa0NBQWtDLElBQUksS0FBSyxnREFBZ0QsZ0tBQWdLLHVDQUF1Qyw0QkFBNEIscUNBQXFDLHVCQUF1QixpQkFBaUIsdUNBQXVDLFNBQVMsV0FBVyxLQUFLLFNBQVMsbUJBQW1CLDRCQUE0QixxQ0FBcUMsdUJBQXVCLHlCQUF5QixXQUFXLEtBQUssb0JBQW9CLHVFQUF1RSxXQUFXLFNBQVMsT0FBTywwQkFBMEIsY0FBYyxvREFBb0QsbUJBQW1CLGdCQUFnQiwyQkFBMkIsYUFBYSxZQUFZLElBQUksS0FBSyxtQ0FBbUMsWUFBWSxvQkFBb0IsS0FBSyxZQUFZLDhCQUE4QixhQUFhLFlBQVksd0NBQXdDLFFBQVEsU0FBUyxnREFBZ0QsK0JBQStCLDRCQUE0QixnQ0FBZ0MsaURBQWlELE1BQU0seUNBQXlDLGtDQUFrQyxNQUFNLDJDQUEyQywyQ0FBMkMsdUhBQXVILFlBQVksSUFBSSxLQUFLLFdBQVcsMEdBQTBHLGlEQUFpRCxrQ0FBa0MsK0JBQStCLG1DQUFtQyx1REFBdUQsTUFBTSx1QkFBdUIsb0NBQW9DLG1EQUFtRCwyQ0FBMkMsTUFBTSxLQUFLLG1CQUFtQixXQUFXLHdDQUF3QyxZQUFZLGlEQUFpRCwrREFBK0QsSUFBSSxLQUFLLHNDQUFzQyxRQUFRLCtKQUErSiwwQkFBMEIsK0JBQStCLDZDQUE2Qyw4Q0FBOEMsV0FBVyxtREFBbUQsSUFBSSxtQkFBbUIsdUJBQXVCLDhDQUE4QywyQ0FBMkMsTUFBTSxZQUFZLElBQUksS0FBSyxXQUFXLGFBQWEsWUFBWSwwQkFBMEIsS0FBSywwQkFBMEIsY0FBYyxpQkFBaUIsSUFBSSxLQUFLLFdBQVcsY0FBYyw0QkFBNEIsc0NBQXNDLG1HQUFtRyw2QkFBNkIsWUFBWSxJQUFJLEtBQUssbURBQW1ELFlBQVksbUJBQW1CLFlBQVksZUFBZSwrQkFBK0IsVUFBVSw0QkFBNEIsOEJBQThCLHFEQUFxRCx1RUFBdUUsZUFBZSxnQkFBZ0IsWUFBWSxJQUFJLEtBQUssa0JBQWtCLHNCQUFzQixrQkFBa0IsUUFBUSxRQUFRLGVBQWUsRUFBRSw4RUFBOEUsc0JBQXNCLG9CQUFvQix1REFBdUQseUZBQXlGLFlBQVksSUFBSSxLQUFLLDZDQUE2Qyw2TUFBNk0sK0JBQStCLGlCQUFpQixXQUFXLDRCQUE0QixnRUFBZ0UsWUFBWSwyRkFBMkYsa0JBQWtCLEVBQUUsK0VBQStFLHNCQUFzQixnQkFBZ0IsZ0JBQWdCLDBDQUEwQywwVkFBMFYsOEJBQThCLDhIQUE4SCx1RkFBdUYsNERBQTRELHVCQUF1Qix1Q0FBdUMsa0NBQWtDLGFBQWEsZ0JBQWdCLGdCQUFnQixLQUFLLGNBQWMsV0FBVyxnQkFBZ0IsdUNBQXVDLGtDQUFrQyxhQUFhLGdCQUFnQixnQkFBZ0IsS0FBSyxjQUFjLFdBQVcsZ0JBQWdCLG1EQUFtRCxvVUFBb1UsK0NBQStDLFFBQVEsd0NBQXdDLEtBQUssZ0JBQWdCLEtBQUssS0FBSyxjQUFjLFdBQVcsMEJBQTBCLGtEQUFrRCx1RUFBdUUsZ0tBQWdLLHlDQUF5QyxnREFBZ0QsUUFBUSxpQ0FBaUMsOEJBQThCLGtGQUFrRixpSEFBaUgsd0NBQXdDLDRDQUE0QywwQ0FBMEMsd0JBQXdCLG1GQUFtRiw0Q0FBNEMsbUNBQW1DLGdGQUFnRix5Q0FBeUMsZ0NBQWdDLGlDQUFpQyxrQkFBa0Isa0ZBQWtGLHNDQUFzQyxpQ0FBaUMsUUFBUSw2RkFBNkYsNkRBQTZELDJCQUEyQiwyREFBMkQsd0VBQXdFLCtEQUErRCxrRUFBa0UsbUJBQW1CLDZEQUE2RCx3RUFBd0UsK0NBQStDLG1DQUFtQyxvTEFBb0wscURBQXFELDRDQUE0QyxzQkFBc0IsZ0RBQWdELHdFQUF3RSx3REFBd0QsNkNBQTZDLG9CQUFvQixZQUFZLElBQUkseUNBQXlDLFdBQVcsWUFBWSxJQUFJLG9CQUFvQixxR0FBcUcsbTVCQUFtNUIsaURBQWlELGlDQUFpQywrQkFBK0Isd0JBQXdCLGtEQUFrRCx1SEFBdUgsbURBQW1ELG1DQUFtQywySEFBMkgsK0NBQStDLHVDQUF1QyxrQ0FBa0MseUJBQXlCLG1CQUFtQix1REFBdUQsa0RBQWtELFlBQVksV0FBVyxLQUFLLGlCQUFpQixVQUFVLEtBQUs7QUFDam8rQixDQUFDLDZCQUE2Qiw2QkFBNkIsMkRBQTJELEVBQUUsMkVBQTJFLHNCQUFzQixhQUFhLHdDQUF3QyxZQUFZLHVDQUF1Qyw0RkFBNEYsaUNBQWlDLCtCQUErQixTQUFTLG1EQUFtRCw0QkFBNEIsa0RBQWtELHFCQUFxQixFQUFFLCtCQUErQixzQkFBc0IsYUFBYSxzSUFBc0ksWUFBWSx1Q0FBdUMsdUZBQXVGLHVCQUF1Qix5REFBeUQsaURBQWlELGtCQUFrQiwrQkFBK0IseUJBQXlCLFlBQVksaURBQWlELDBCQUEwQix1QkFBdUIsa0pBQWtKLG1EQUFtRCw0Q0FBNEMsRUFBRSwrQkFBK0Isc0JBQXNCLGFBQWEsMEhBQTBILFlBQVksbUJBQW1CLG9FQUFvRSw0RUFBNEUsK0VBQStFLCtCQUErQiwwREFBMEQsaURBQWlELHlFQUF5RSx3QkFBd0IsMkdBQTJHLEVBQUUsaUZBQWlGLHNCQUFzQixjQUFjLG1KQUFtSixrQ0FBa0MsWUFBWSx1Q0FBdUMsNEZBQTRGLFdBQVcsb0NBQW9DLDJCQUEyQiwrQkFBK0IsK0JBQStCLG1EQUFtRCxzQ0FBc0Msa0RBQWtELDBDQUEwQyxXQUFXLEtBQUssV0FBVywwQkFBMEIsRUFBRSwrQkFBK0Isc0JBQXNCLGdCQUFnQixzVUFBc1UsWUFBWSwwSUFBMEksNENBQTRDLFlBQVksa0NBQWtDLGdCQUFnQixpQ0FBaUMsaUJBQWlCLGtLQUFrSyxzREFBc0Qsd0JBQXdCLEtBQUssVUFBVSxzS0FBc0ssc0JBQXNCLFlBQVksNkNBQTZDLFVBQVUsaUVBQWlFLDBFQUEwRSxrQ0FBa0MsbUVBQW1FLGtHQUFrRyxzQ0FBc0MsK0JBQStCLHdCQUF3QixLQUFLLG9FQUFvRSxxSEFBcUgsb0NBQW9DLFlBQVksaUJBQWlCLDBCQUEwQixLQUFLLHdCQUF3QixLQUFLLGdEQUFnRCxrQkFBa0IsWUFBWSxxQkFBcUIsc0NBQXNDLFlBQVksV0FBVyxLQUFLLHNCQUFzQix1RUFBdUUsMkNBQTJDLDhCQUE4QixxQkFBcUIsb0JBQW9CLHdDQUF3QyxZQUFZLGlFQUFpRSxvQkFBb0Isa0NBQWtDLGdFQUFnRSw0QkFBNEIsb0NBQW9DLGlCQUFpQixpRUFBaUUsOENBQThDLDBCQUEwQixpQ0FBaUMsOENBQThDLDBEQUEwRCxtREFBbUQsVUFBVSwwR0FBMEcscUNBQXFDLFVBQVUsbUVBQW1FLFlBQVksZ0RBQWdELHlCQUF5QixvR0FBb0csMEZBQTBGLFlBQVkseUNBQXlDLDZFQUE2RSx3Q0FBd0MsWUFBWSxNQUFNLGlJQUFpSSxtQ0FBbUMsaUNBQWlDLG1EQUFtRCxxREFBcUQsTUFBTSxLQUFLLG9CQUFvQixnQkFBZ0IsV0FBVyx3Q0FBd0MsNEJBQTRCLGlEQUFpRCxZQUFZLGtHQUFrRywrQkFBK0IsNkNBQTZDLG1DQUFtQyw0Q0FBNEMsc0JBQXNCLEtBQUssZ0JBQWdCLEtBQUssS0FBSyw0R0FBNEcsY0FBYyxZQUFZLEtBQUssZ0JBQWdCLEtBQUssS0FBSyxnRUFBZ0UsNEJBQTRCLG1CQUFtQixFQUFFLDBIQUEwSCxzQkFBc0IsYUFBYSxvREFBb0QsWUFBWSxnRUFBZ0Usa0JBQWtCLG1CQUFtQixnQ0FBZ0MsNEhBQTRILHFCQUFxQixNQUFNLHFDQUFxQyxnQkFBZ0IsaUNBQWlDLFlBQVksTUFBTSxLQUFLLFdBQVcsOENBQThDLFVBQVUsWUFBWSxNQUFNLEtBQUssbUNBQW1DLDBCQUEwQixRQUFRLE1BQU0sS0FBSyxJQUFJLFlBQVksTUFBTSxLQUFLLFdBQVcsa0tBQWtLLGVBQWUsWUFBWSxNQUFNLEtBQUssNENBQTRDLDJIQUEySCx5QkFBeUIsSUFBSSx3QkFBd0IsVUFBVSxFQUFFLHdEQUF3RCxzQkFBc0IsYUFBYSxrQkFBa0IsNENBQTRDLFNBQVMscUNBQXFDLGtDQUFrQyx3Q0FBd0Msb0NBQW9DLHNCQUFzQiwyQ0FBMkMseUJBQXlCLEdBQUcsc0JBQXNCLGNBQWMsd0dBQXdHLHlCQUF5Qix1Q0FBdUMsY0FBYyx1QkFBdUIsTUFBTSxLQUFLLFdBQVcsd0NBQXdDLFNBQVMsb0JBQW9CLG9DQUFvQyxTQUFTLHFCQUFxQixnQkFBZ0IsaUNBQWlDLGtCQUFrQixlQUFlLDJCQUEyQixNQUFNLEtBQUssZUFBZSw4QkFBOEIsZ0JBQWdCLGlCQUFpQixZQUFZLHVGQUF1RixrQkFBa0IsaUJBQWlCLFVBQVUsaUJBQWlCLGtDQUFrQyxPQUFPLHlDQUF5QyxpQ0FBaUMsK0ZBQStGLFdBQVcsMkJBQTJCLFdBQVcsWUFBWSxJQUFJLGNBQWMsWUFBWSxNQUFNLEtBQUssV0FBVyw0REFBNEQsWUFBWSxNQUFNLEtBQUssNkRBQTZELGtFQUFrRSxjQUFjLHdEQUF3RCxZQUFZLE9BQU8sRUFBRSwrQ0FBK0MsZUFBZSxZQUFZLFlBQVksTUFBTSx3QkFBd0IsYUFBYSwyQkFBMkIsVUFBVSxFQUFFLDZFQUE2RSxzQkFBc0IsbUJBQW1CLHlCQUF5Qiw2Q0FBNkMsNkNBQTZDLEVBQUUsc0JBQXNCLHdFQUF3RSxnQ0FBZ0MscUNBQXFDLHNCQUFzQiwyQ0FBMkMsaUNBQWlDLDZEQUE2RCxtQ0FBbUMsd0NBQXdDLHNCQUFzQiw2QkFBNkIsc0JBQXNCLG9DQUFvQywyQkFBMkIsd0NBQXdDLGtDQUFrQyxlQUFlLGNBQWMsdUJBQXVCLElBQUksc0JBQXNCLGNBQWMsR0FBRyxzQkFBc0IsY0FBYyxPQUFPLDRGQUE0RixnQkFBZ0IsT0FBTyxvRkFBb0YsaURBQWlELDhEQUE4RCx3Q0FBd0Msb0NBQW9DLGdCQUFnQiwwQ0FBMEMsb0JBQW9CLDBDQUEwQyxTQUFTLGtDQUFrQyxZQUFZLE1BQU0scUNBQXFDLGdCQUFnQixxQkFBcUIsWUFBWSxpQ0FBaUMsOERBQThELGNBQWMsWUFBWSx3QkFBd0IsRUFBRSxTQUFTLFlBQVksd0JBQXdCLEVBQUUsU0FBUyxZQUFZLHdCQUF3QixFQUFFLFNBQVMsWUFBWSx3QkFBd0IsRUFBRSxTQUFTLFlBQVksd0JBQXdCLEVBQUUsU0FBUyxZQUFZLHdCQUF3QixFQUFFLFNBQVMsWUFBWSx3QkFBd0IsRUFBRSxTQUFTLFlBQVksd0JBQXdCLEVBQUUsNkJBQTZCLDhCQUE4QixNQUFNLEtBQUssV0FBVyxTQUFTLHdCQUF3QixvRUFBb0UscUNBQXFDLDJDQUEyQyxTQUFTLEVBQUUsY0FBYyxrR0FBa0csVUFBVSxZQUFZLHFDQUFxQyw4REFBOEQseUNBQXlDLGlCQUFpQixTQUFTLEVBQUUsd0NBQXdDLEtBQUssc0RBQXNELDJDQUEyQyxFQUFFLHlDQUF5QyxzQkFBc0IsYUFBYSxpQ0FBaUMsMkNBQTJDLCtCQUErQixNQUFNLG9DQUFvQyxZQUFZLDRCQUE0Qix5RUFBeUUsd0NBQXdDLGdGQUFnRixnQ0FBZ0MsdUJBQXVCLFdBQVcsU0FBUyxLQUFLLFdBQVcsZ0NBQWdDLGFBQWEsR0FBRyxzQkFBc0IsYUFBYSxXQUFXLFNBQVMsMENBQTBDLFFBQVEsUUFBUSxRQUFRLDBCQUEwQixpQ0FBaUMsUUFBUSxRQUFRLFFBQVEsY0FBYyxxREFBcUQsOEJBQThCLDZCQUE2QixXQUFXLEVBQUUsb0JBQW9CLEdBQUcsc0JBQXNCLGNBQWMscUNBQXFDLFFBQVEsbUNBQW1DLFVBQVUsR0FBRyxzQkFBc0IsYUFBYSx5QkFBeUIsWUFBWSxzQ0FBc0MseURBQXlELGNBQWMsRUFBRSw4QkFBOEIsc0JBQXNCLGNBQWMsNExBQTRMLGtCQUFrQiw4QkFBOEIsTUFBTSxLQUFLLGVBQWUscUJBQXFCLFFBQVEsYUFBYSxRQUFRLFlBQVksZUFBZSxtREFBbUQsa0JBQWtCLFNBQVMsWUFBWSxzVUFBc1Usd0RBQXdELE1BQU0scUxBQXFMLGtDQUFrQyxtSEFBbUgsc0RBQXNELG1IQUFtSCw4REFBOEQsMElBQTBJLHNFQUFzRSxpREFBaUQsYUFBYSxvR0FBb0csd1hBQXdYLFVBQVUsNEJBQTRCLGtEQUFrRCx3Q0FBd0MsMEVBQTBFLDRHQUE0RyxvQ0FBb0MsMEJBQTBCLE1BQU0sb0pBQW9KLFVBQVUsb0dBQW9HLG9DQUFvQyxnREFBZ0Qsd0ZBQXdGLHVDQUF1QyxNQUFNLEtBQUsseUJBQXlCLDhFQUE4RSwrSEFBK0gsa0JBQWtCLEtBQUsseUdBQXlHLDBCQUEwQixrQkFBa0IsS0FBSyx5R0FBeUcsa0JBQWtCLHFFQUFxRSxXQUFXLHlJQUF5SSwwQkFBMEIsTUFBTSxTQUFTLDJLQUEySyx3RkFBd0Ysc1dBQXNXLHlHQUF5RywyTUFBMk0sbUdBQW1HLDZNQUE2TSxzRkFBc0YsK0RBQStELDhDQUE4QyxpU0FBaVMsNEJBQTRCLG9HQUFvRyxnQkFBZ0IsMEJBQTBCLFlBQVksc0JBQXNCLEtBQUssaUJBQWlCLFlBQVksdUNBQXVDLFFBQVEsWUFBWSxnQkFBZ0IsY0FBYyw4Q0FBOEMsYUFBYSxRQUFRLHNNQUFzTSxpSUFBaUksc0dBQXNHLDRDQUE0Qyw2QkFBNkIsZUFBZSxrR0FBa0csb0NBQW9DLFdBQVcsZ0JBQWdCLElBQUksb0VBQW9FLGlFQUFpRSw4Q0FBOEMsZ1BBQWdQLFlBQVksV0FBVyxnQkFBZ0IsSUFBSSxLQUFLLG9HQUFvRyxlQUFlLFlBQVksZUFBZSxhQUFhLHdFQUF3RSxzQkFBc0IsZUFBZSxjQUFjLDhDQUE4Qyx3UUFBd1EsdUNBQXVDLE1BQU0sS0FBSyxrRUFBa0UsZUFBZSxzRkFBc0YsY0FBYyw4Q0FBOEMsdVFBQXVRLFlBQVksb0JBQW9CLGtHQUFrRyw4Q0FBOEMsOEtBQThLLGNBQWMsa0JBQWtCLHVKQUF1SixvSUFBb0ksOEZBQThGLHNCQUFzQixrQ0FBa0MsNkVBQTZFLGNBQWMsS0FBSyxRQUFRLGFBQWEsZUFBZSxjQUFjLGVBQWUsZUFBZSxZQUFZLHNDQUFzQywwQkFBMEIsNEJBQTRCLDBCQUEwQix5QkFBeUIsc0JBQXNCLHFGQUFxRixNQUFNLEtBQUssOENBQThDLDJSQUEyUiwwQkFBMEIsVUFBVSxnQkFBZ0IsVUFBVSxnQkFBZ0IsVUFBVSwySkFBMkosY0FBYyxLQUFLLDhDQUE4QywwUEFBMFAsb0JBQW9CLHlFQUF5RSxVQUFVLGdCQUFnQixVQUFVLGlCQUFpQixxRkFBcUYsZ0JBQWdCLGFBQWEsWUFBWSxpQkFBaUIsS0FBSyw4Q0FBOEMsZ0NBQWdDLHlCQUF5QixjQUFjLEtBQUssK0NBQStDLDRWQUE0VixzQkFBc0IsOEZBQThGLDhHQUE4RyxrQkFBa0IsYUFBYSw4REFBOEQsYUFBYSxLQUFLLGdCQUFnQix5QkFBeUIsU0FBUyw4QkFBOEIsY0FBYyxLQUFLLDhDQUE4Qyx5UUFBeVEsNEJBQTRCLGNBQWMsS0FBSyx1QkFBdUIsYUFBYSxTQUFTLCtCQUErQixTQUFTLHlCQUF5QixTQUFTLFlBQVksb0JBQW9CLGdDQUFnQyw0QkFBNEIsTUFBTSxLQUFLLGNBQWMseUNBQXlDLGFBQWEsY0FBYyxLQUFLLDhDQUE4QywrQkFBK0IsY0FBYyxhQUFhLGNBQWMsdVFBQXVRLHVCQUF1QixNQUFNLG9CQUFvQixPQUFPLFlBQVksYUFBYSxLQUFLLHdCQUF3Qix3RkFBd0YsU0FBUyxZQUFZLFNBQVMsVUFBVSx3QkFBd0IsWUFBWSxlQUFlLHdCQUF3QixjQUFjLGtEQUFrRCxjQUFjLDhDQUE4Qyw4T0FBOE8sdUJBQXVCLE1BQU0sb0JBQW9CLDZFQUE2RSxpRUFBaUUsdUJBQXVCLE1BQU0sdUJBQXVCLFlBQVksNEZBQTRGLG9QQUFvUCx3Q0FBd0MsNEdBQTRHLGNBQWMsMEJBQTBCLHFCQUFxQixzQkFBc0IsS0FBSywyREFBMkQsZ0JBQWdCLGNBQWMsbURBQW1ELDBSQUEwUixvRUFBb0Usc0JBQXNCLG1HQUFtRyxTQUFTLDRHQUE0RyxjQUFjLDBDQUEwQyxnQkFBZ0IsYUFBYSxLQUFLLGNBQWMsNERBQTRELGlUQUFpVCxxRUFBcUUsK0JBQStCLHNHQUFzRyxTQUFTLHFDQUFxQyxTQUFTLHFDQUFxQyxjQUFjLDhDQUE4QywrQ0FBK0MsU0FBUyxpSUFBaUksYUFBYSx3R0FBd0csU0FBUywwREFBMEQsY0FBYyw4Q0FBOEMsd0xBQXdMLHlEQUF5RCxrSEFBa0gsbUNBQW1DLDJFQUEyRSxvSEFBb0gsNkJBQTZCLE1BQU07QUFDbHMrQiwrREFBK0QsZ0JBQWdCLGlCQUFpQixzQ0FBc0MsY0FBYyx1QkFBdUIsV0FBVyw4Q0FBOEMsZ0ZBQWdGLGtCQUFrQixxSkFBcUosb0ZBQW9GLHlHQUF5RyxpTkFBaU4sNkJBQTZCLHdIQUF3SCxxRUFBcUUsNkJBQTZCLDBHQUEwRywyQ0FBMkMsd0tBQXdLLFNBQVMsMkJBQTJCLGtCQUFrQixtQ0FBbUMsSUFBSSxnQkFBZ0IsSUFBSSxLQUFLLFNBQVMsZ1BBQWdQLG1QQUFtUCxzQkFBc0IsOEdBQThHLGtEQUFrRCw2QkFBNkIsMEdBQTBHLDJDQUEyQyx3S0FBd0ssU0FBUywyQkFBMkIsa0JBQWtCLGlEQUFpRCxJQUFJLGdCQUFnQixJQUFJLEtBQUssb0JBQW9CLG1PQUFtTyxtT0FBbU8saUJBQWlCLGlCQUFpQixFQUFFLDBTQUEwUyxzQkFBc0IsY0FBYyxPQUFPLGcxQkFBZzFCLDBCQUEwQixvQ0FBb0Msd0VBQXdFLDBEQUEwRCx5QkFBeUIsdUJBQXVCLDRCQUE0QixvQkFBb0IsZ0NBQWdDLFlBQVksbWhCQUFtaEIsa0JBQWtCLG9CQUFvQixnREFBZ0QsZ0RBQWdELG1DQUFtQywwQkFBMEIsNENBQTRDLG1DQUFtQyxtS0FBbUssaURBQWlELHlhQUF5YSx1Q0FBdUMseUJBQXlCLDBDQUEwQyxrQ0FBa0MscUNBQXFDLHFDQUFxQyx3Q0FBd0MsaUJBQWlCLHlCQUF5QixpQkFBaUIsSUFBSSwwQ0FBMEMsMEVBQTBFLDBDQUEwQyx3RUFBd0UsOENBQThDLDRFQUE0RSxnQ0FBZ0MsYUFBYSx3REFBd0QsV0FBVyxjQUFjLFlBQVksYUFBYSxpQkFBaUIsMElBQTBJLCtFQUErRSwyQkFBMkIsc0NBQXNDLHFDQUFxQyxJQUFJLHlDQUF5QyxJQUFJLEtBQUssV0FBVyxzQkFBc0IscUNBQXFDLHVCQUF1Qiw0Q0FBNEMsbUdBQW1HLGlEQUFpRCxvQkFBb0IsaUJBQWlCLDBIQUEwSCxxQkFBcUIsTUFBTSxpQ0FBaUMsMERBQTBELEtBQUssb0JBQW9CLFlBQVkseUJBQXlCLDhDQUE4QyxtQ0FBbUMsdUJBQXVCLEtBQUsscUJBQXFCLGtLQUFrSyxlQUFlLE9BQU8sZ0JBQWdCLElBQUksZUFBZSxJQUFJLGlEQUFpRCxxQkFBcUIsOEVBQThFLHFDQUFxQyxVQUFVLG1NQUFtTSxpQ0FBaUMsTUFBTSxLQUFLLFdBQVcsZUFBZSx1QkFBdUIsNEJBQTRCLHFDQUFxQyxNQUFNLGdDQUFnQyw4SEFBOEgsZUFBZSxRQUFRLE1BQU0sS0FBSyxXQUFXLDRDQUE0QyxLQUFLLHFHQUFxRyxvREFBb0QsbUJBQW1CLFFBQVEsTUFBTSxpQkFBaUIsV0FBVyxvQ0FBb0MsUUFBUSxNQUFNLHNDQUFzQyxvS0FBb0ssWUFBWSxnQ0FBZ0MsNkNBQTZDLHVCQUF1QixNQUFNLEtBQUsseUNBQXlDLGlJQUFpSSxXQUFXLGtXQUFrVyw4R0FBOEcsMkdBQTJHLDhHQUE4RywyTkFBMk4sdUdBQXVHLE1BQU0sS0FBSyxXQUFXLHFFQUFxRSxlQUFlLFFBQVEsTUFBTSxLQUFLLFdBQVcsV0FBVyxpQ0FBaUMsTUFBTSxLQUFLLHFCQUFxQixrQkFBa0Isd0VBQXdFLGVBQWUsUUFBUSxNQUFNLEtBQUssV0FBVyxhQUFhLDBDQUEwQyxZQUFZLHdCQUF3QixNQUFNLDhCQUE4QixjQUFjLDhCQUE4QixNQUFNLEtBQUssV0FBVyw2QkFBNkIseUJBQXlCLGlGQUFpRixRQUFRLE1BQU0sMEJBQTBCLCtJQUErSSxNQUFNLEtBQUssd0JBQXdCLGFBQWEsMkJBQTJCLE1BQU0sOEJBQThCLDBDQUEwQyxpQkFBaUIsMENBQTBDLElBQUksd0NBQXdDLElBQUksdUVBQXVFLElBQUksc0VBQXNFLGtCQUFrQix3RkFBd0Ysa0RBQWtELHVCQUF1QixJQUFJLDJGQUEyRixxQkFBcUIsTUFBTSx1QkFBdUIsSUFBSSwyRkFBMkYscUJBQXFCLG9CQUFvQixrR0FBa0csbURBQW1ELHVCQUF1QixJQUFJLE1BQU0sMERBQTBELDBFQUEwRSx1Q0FBdUMsTUFBTSx1QkFBdUIsSUFBSSxNQUFNLDBEQUEwRCwwRUFBMEUseUNBQXlDLHNDQUFzQyxxQ0FBcUMsTUFBTSxLQUFLLFdBQVcsaUJBQWlCLHlDQUF5QyxFQUFFLDZlQUE2ZSxzQkFBc0IsY0FBYyw0QkFBNEIsdUJBQXVCLG9CQUFvQiwwRkFBMEYsY0FBYywyQkFBMkIscVNBQXFTLGNBQWMsbUJBQW1CLHNDQUFzQyxRQUFRLG9CQUFvQiwrSEFBK0gsOENBQThDLG9CQUFvQixxRUFBcUUsb0NBQW9DLGlCQUFpQixrREFBa0QsbUNBQW1DLGNBQWMsc0RBQXNELGdVQUFnVSxnQkFBZ0IscUZBQXFGLGliQUFpYixjQUFjLHVCQUF1QixvQkFBb0Isc0dBQXNHLGNBQWMsb0RBQW9ELDhCQUE4QixnQkFBZ0Isc0RBQXNELFdBQVcsZ0ZBQWdGLGNBQWMsK0JBQStCLDhCQUE4QixjQUFjLGFBQWEsdUVBQXVFLGNBQWMseURBQXlELDRCQUE0QixpQkFBaUIsbUVBQW1FLGlKQUFpSixLQUFLLFVBQVUsZ0tBQWdLLCtEQUErRCxjQUFjLDhGQUE4RixZQUFZLGNBQWMsU0FBUyw4QkFBOEIsMkJBQTJCLElBQUksOERBQThELHVFQUF1RSxxQ0FBcUMsVUFBVSw0QkFBNEIscUNBQXFDLG1DQUFtQywrQkFBK0IsMkVBQTJFLFdBQVcsa0JBQWtCLDBDQUEwQyxzREFBc0QsZ0VBQWdFLDBEQUEwRCw0REFBNEQsK0JBQStCLGdEQUFnRCxzR0FBc0cscUJBQXFCLEVBQUUscUNBQXFDLHNCQUFzQixxQkFBcUIsYUFBYSx3TUFBd00sY0FBYyxLQUFLLFdBQVcsZ0JBQWdCLGdCQUFnQixxQ0FBcUMsa0NBQWtDLGdHQUFnRyxrQkFBa0IsNEJBQTRCLHFCQUFxQixtSkFBbUosRUFBRSxlQUFlLHFEQUFxRCxzQkFBc0IsRUFBRSwrREFBK0QsZ0JBQWdCLDhEQUE4RCxPQUFPLG1FQUFtRSwrQ0FBK0MsZ0RBQWdELDJLQUEySyxVQUFVLE9BQU8sRUFBRSx5SEFBeUgsTUFBTSxpQkFBaUIsYUFBYSxFQUFFLDBEQUEwRCxXQUFXLDBCQUEwQixRQUFRLHdEQUF3RCwyQ0FBMkMsSUFBSSx1QkFBdUIsSUFBSSxrRkFBa0YsdUVBQXVFLGdFQUFnRSx1QkFBdUIsOEVBQThFLGdCQUFnQixnRUFBZ0UsdUJBQXVCLHNEQUFzRCxlQUFlLHVCQUF1QixlQUFlLHFDQUFxQyxHQUFHLG1CQUFtQiw4RUFBOEUsT0FBTywrTkFBK04sVUFBVSxPQUFPLFdBQVcsT0FBTyx5REFBeUQsWUFBWSxPQUFPLGlDQUFpQyxrQ0FBa0MsT0FBTyx1REFBdUQsd0hBQXdILHdNQUF3TSxxQkFBcUIsb0dBQW9HLG1CQUFtQixPQUFPLHlFQUF5RSxVQUFVLG1CQUFtQixPQUFPLGlFQUFpRSxpQ0FBaUMsR0FBRyxHQUFHLHNCQUFzQixXQUFXLFFBQVEsU0FBUyxXQUFXLE9BQU8sZ0RBQWdELGVBQWUsV0FBVyxpQkFBaUIsd0lBQXdJLGlCQUFpQixlQUFlLGtCQUFrQixlQUFlLDJCQUEyQixpSUFBaUksNkJBQTZCLHdDQUF3Qyx3QkFBd0IsZ0JBQWdCLG9FQUFvRSwyR0FBMkcsaUJBQWlCLHdEQUF3RCx5S0FBeUssR0FBRyxzQkFBc0IsdUVBQXVFLFdBQVcsd0JBQXdCLFlBQVksMEJBQTBCLFVBQVUsV0FBVyxRQUFRLFlBQVksaUJBQWlCLHNCQUFzQixzREFBc0QscUJBQXFCLG1CQUFtQixZQUFZLGlCQUFpQix5QkFBeUIsb0JBQW9CLDZCQUE2QixvREFBb0QsaUVBQWlFLHNDQUFzQyw2QkFBNkIscUZBQXFGLDJEQUEyRCw2QkFBNkIsb0RBQW9ELDBCQUEwQiwwQ0FBMEMsNkJBQTZCLDBCQUEwQiwrREFBK0QsOEJBQThCLHdCQUF3QixvQ0FBb0MsbUJBQW1CLGdPQUFnTyxnREFBZ0QsRUFBRSxrQkFBa0IsZ0ZBQWdGLHVCQUF1QiwwSEFBMEgsaUVBQWlFLHVCQUF1QixvQ0FBb0MscUJBQXFCLGlDQUFpQyx5QkFBeUIsd0JBQXdCLFVBQVUscURBQXFELHFEQUFxRCw4REFBOEQsb0JBQW9CLHdCQUF3Qix5TkFBeU4sd0JBQXdCLHdCQUF3QiwwQkFBMEIsa0JBQWtCLDhCQUE4QixFQUFFLDZEQUE2RCxzQkFBc0IsY0FBYyxpQ0FBaUMsMkRBQTJELFdBQVcsUUFBUSxTQUFTLFdBQVcsV0FBVyxZQUFZLGlCQUFpQiw2UEFBNlAsbUJBQW1CLGtDQUFrQyxpQ0FBaUMsaUJBQWlCLHlCQUF5QixtQkFBbUIsMEJBQTBCLDZCQUE2QixvQkFBb0IsMEhBQTBILHdCQUF3QixvQkFBb0IsK0NBQStDLDZCQUE2QixxRkFBcUYsMExBQTBMLDZCQUE2Qiw2QkFBNkIsaUNBQWlDLHFDQUFxQyw4REFBOEQsR0FBRyxzQkFBc0IsaUNBQWlDLFdBQVcsaVVBQWlVLDR2QkFBNHZCLEVBQUUsZ01BQWdNLHNCQUFzQixpQ0FBaUMsMkJBQTJCLFdBQVcsUUFBUSxTQUFTLFdBQVcsUUFBUSxZQUFZLGlCQUFpQixrREFBa0QsaUJBQWlCLDRGQUE0Riw2QkFBNkIsNkJBQTZCLCtEQUErRCw2QkFBNkIsaUNBQWlDLHdQQUF3UCxpQkFBaUIsNEJBQTRCLGtCQUFrQiw0QkFBNEIsbUJBQW1CLGFBQWEsaUNBQWlDLDZLQUE2SyxpQ0FBaUMsNktBQTZLLHVCQUF1QixnRkFBZ0YscUJBQXFCLG9GQUFvRixtQkFBbUIsdUZBQXVGLGtCQUFrQix3SkFBd0osdUJBQXVCLDJCQUEyQixvQkFBb0Isa0dBQWtHLHNCQUFzQixtREFBbUQsNEJBQTRCLEVBQUUsZ0NBQWdDLHNCQUFzQiwwRkFBMEYsUUFBUSxTQUFTLFdBQVcscUJBQXFCLFdBQVcsY0FBYyxhQUFhLGlCQUFpQiw2RkFBNkYsb0JBQW9CLGdCQUFnQiw0RkFBNEYsaUJBQWlCLHlCQUF5QixrQkFBa0IscURBQXFELG1CQUFtQixhQUFhLHdCQUF3QixtV0FBbVcsOEJBQThCLDZDQUE2QywrRkFBK0YsbWNBQW1jLGlDQUFpQyw4Q0FBOEM7QUFDcjY5Qiw2SkFBNkosNkJBQTZCLCtEQUErRCw2QkFBNkIsb0VBQW9FLGtDQUFrQyx5QkFBeUIsOEJBQThCLDREQUE0RCxzRUFBc0UsdUlBQXVJLHlCQUF5QixvREFBb0QsU0FBUyxtTUFBbU0sc0JBQXNCLGtCQUFrQixnQ0FBZ0Msb0ZBQW9GLCtCQUErQix3QkFBd0IsR0FBRyxzQkFBc0IsV0FBVyxRQUFRLFNBQVMsWUFBWSxpQkFBaUIsb0RBQW9ELGlCQUFpQix5QkFBeUIsa0JBQWtCLHNEQUFzRCxtQkFBbUIsYUFBYSw4QkFBOEIsaUNBQWlDLCtGQUErRixrR0FBa0csaUNBQWlDLDhDQUE4Qyw2R0FBNkcsNkJBQTZCLHdDQUF3Qyw2QkFBNkIsa0VBQWtFLHdCQUF3QiwwRkFBMEYsMEJBQTBCLG9DQUFvQyx3QkFBd0Isc0NBQXNDLEdBQUcsc0JBQXNCLGdCQUFnQixXQUFXLDZDQUE2QyxTQUFTLFdBQVcsa0JBQWtCLFdBQVcsbUJBQW1CLDZDQUE2QyxrQkFBa0IsV0FBVyxtQkFBbUIsa0NBQWtDLGdCQUFnQixVQUFVLGlCQUFpQixXQUFXLGtCQUFrQixVQUFVLHVCQUF1QixXQUFXLHNCQUFzQixZQUFZLE1BQU0sWUFBWSxpQkFBaUIsdUNBQXVDLHNtQkFBc21CLG1CQUFtQixpREFBaUQsMkJBQTJCLG9CQUFvQixRQUFRLDRCQUE0QiwwRkFBMEYsUUFBUSw0QkFBNEIsMEZBQTBGLG9CQUFvQiw0TEFBNEwsNEJBQTRCLHdEQUF3RCxJQUFJLHdGQUF3RixnUEFBZ1AsNEZBQTRGLEVBQUUsS0FBSyw4RkFBOEYsaURBQWlELE9BQU8sNEJBQTRCLG9DQUFvQyw2REFBNkQsSUFBSSx3RkFBd0Ysd0JBQXdCLDhFQUE4RSx5SEFBeUgsMEVBQTBFLHdCQUF3QixNQUFNLG1LQUFtSyxzSEFBc0gsdUNBQXVDLHVIQUF1SCxxQ0FBcUMsR0FBRyxFQUFFLEdBQUciLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIhZnVuY3Rpb24gdChlLG8saSl7ZnVuY3Rpb24gbihyLGEpe2lmKCFvW3JdKXtpZighZVtyXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighYSYmYylyZXR1cm4gYyhyLCEwKTtpZihzKXJldHVybiBzKHIsITApO3ZhciBoPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrcitcIidcIik7dGhyb3cgaC5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGh9dmFyIGw9b1tyXT17ZXhwb3J0czp7fX07ZVtyXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbih0KXt2YXIgbz1lW3JdWzFdW3RdO3JldHVybiBuKG98fHQpfSxsLGwuZXhwb3J0cyx0LGUsbyxpKX1yZXR1cm4gb1tyXS5leHBvcnRzfWZvcih2YXIgcz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLHI9MDtyPGkubGVuZ3RoO3IrKyluKGlbcl0pO3JldHVybiBufSh7MTpbZnVuY3Rpb24odCxlLG8pe3QoXCIuL3NyYy9jb250cm9sc1wiKS5yZWdpc3RlckFsbCgpfSx7XCIuL3NyYy9jb250cm9sc1wiOjc4fV0sMjpbZnVuY3Rpb24odCxlLG8pe2UuZXhwb3J0cz1PYmplY3QuYXNzaWduKGZ1bmN0aW9uKCl7fSx7RkFDRV8xOjAsRkFDRV8yOjEsRkFDRV8zOjIsRkFDRV80OjMsTF9TSE9VTERFUl8xOjQsUl9TSE9VTERFUl8xOjUsTF9TSE9VTERFUl8yOjYsUl9TSE9VTERFUl8yOjcsU0VMRUNUOjgsU1RBUlQ6OSxEUEFEX1VQOjEyLERQQURfRE9XTjoxMyxEUEFEX0xFRlQ6MTQsRFBBRF9SSUdIVDoxNSxWRU5ET1I6MTZ9KX0se31dLDM6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQsZSxvKXt0aGlzLnR5cGU9dCx0aGlzLmluZGV4PWUsdGhpcy5wcmVzc2VkPW8ucHJlc3NlZCx0aGlzLnZhbHVlPW8udmFsdWV9ZS5leHBvcnRzPWl9LHt9XSw0OltmdW5jdGlvbih0LGUsbyl7IWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCxlKXtyZXR1cm4tMSE9PVN0cmluZyh0KS5pbmRleE9mKGUpfWZ1bmN0aW9uIG8odCxlLG8pe3AhPT1lJiZ1IT09ZSYmbCE9PWV8fE9iamVjdC5rZXlzKG8pLmZvckVhY2goZnVuY3Rpb24oZSl7dFtlXT1vW2VdfSl9ZnVuY3Rpb24gaSh0KXt2YXIgZT1cImtleUNvZGVcImluIHQ/dC5rZXlDb2RlOlwid2hpY2hcImluIHQ/dC53aGljaDowLG89ZnVuY3Rpb24oKXtpZih3fHxcImtleUxvY2F0aW9uXCJpbiB0KXt2YXIgbz13P3QubG9jYXRpb246dC5rZXlMb2NhdGlvbjtpZihvJiZlIGluIHZbb10pcmV0dXJuIHZbb11bZV19cmV0dXJuXCJrZXlJZGVudGlmaWVyXCJpbiB0JiZ0LmtleUlkZW50aWZpZXIgaW4geT95W3Qua2V5SWRlbnRpZmllcl06ZSBpbiBkP2RbZV06bnVsbH0oKTtpZighbylyZXR1cm4gbnVsbDt2YXIgaT1mdW5jdGlvbigpe3ZhciBlPWZbby5jb2RlXTtyZXR1cm4gZT90LnNoaWZ0S2V5JiZcInNoaWZ0S2V5XCJpbiBlP2Uuc2hpZnRLZXk6ZS5rZXk6by5jb2RlfSgpO3JldHVybntjb2RlOm8uY29kZSxrZXk6aSxsb2NhdGlvbjpvLmxvY2F0aW9uLGtleUNhcDpvLmtleUNhcH19ZnVuY3Rpb24gbih0LGUpe2lmKHQ9U3RyaW5nKHQpLCFnLmhhc093blByb3BlcnR5KHQpKXJldHVyblwiVW5kZWZpbmVkXCI7aWYoZSYmXCJlbi11c1wiIT09U3RyaW5nKGUpLnRvTG93ZXJDYXNlKCkpdGhyb3cgRXJyb3IoXCJVbnN1cHBvcnRlZCBsb2NhbGVcIik7dmFyIG89Z1t0XTtyZXR1cm4gby5rZXlDYXB8fG8uY29kZXx8XCJVbmRlZmluZWRcIn12YXIgcz1cIktleWJvYXJkRXZlbnRcImluIHQ7c3x8KHQuS2V5Ym9hcmRFdmVudD1mdW5jdGlvbigpe3Rocm93IFR5cGVFcnJvcihcIklsbGVnYWwgY29uc3RydWN0b3JcIil9KSx0LktleWJvYXJkRXZlbnQuRE9NX0tFWV9MT0NBVElPTl9TVEFOREFSRD0wLHQuS2V5Ym9hcmRFdmVudC5ET01fS0VZX0xPQ0FUSU9OX0xFRlQ9MSx0LktleWJvYXJkRXZlbnQuRE9NX0tFWV9MT0NBVElPTl9SSUdIVD0yLHQuS2V5Ym9hcmRFdmVudC5ET01fS0VZX0xPQ0FUSU9OX05VTVBBRD0zO3ZhciByPXdpbmRvdy5LZXlib2FyZEV2ZW50LkRPTV9LRVlfTE9DQVRJT05fU1RBTkRBUkQsYT13aW5kb3cuS2V5Ym9hcmRFdmVudC5ET01fS0VZX0xPQ0FUSU9OX0xFRlQsYz13aW5kb3cuS2V5Ym9hcmRFdmVudC5ET01fS0VZX0xPQ0FUSU9OX1JJR0hULGg9d2luZG93LktleWJvYXJkRXZlbnQuRE9NX0tFWV9MT0NBVElPTl9OVU1QQUQsbD1mdW5jdGlvbigpe3JldHVybiBlKG5hdmlnYXRvci5wbGF0Zm9ybSxcIldpblwiKT9cIndpblwiOmUobmF2aWdhdG9yLnBsYXRmb3JtLFwiTWFjXCIpP1wibWFjXCI6ZShuYXZpZ2F0b3IucGxhdGZvcm0sXCJDck9TXCIpP1wiY3Jvc1wiOmUobmF2aWdhdG9yLnBsYXRmb3JtLFwiTGludXhcIik/XCJsaW51eFwiOmUobmF2aWdhdG9yLnVzZXJBZ2VudCxcImlQYWRcIil8fGUobmF2aWdhdG9yLnBsYXRmb3JtLFwiaVBvZFwiKXx8ZShuYXZpZ2F0b3IucGxhdGZvcm0sXCJpUGhvbmVcIik/XCJpb3NcIjpcIlwifSgpLHU9ZnVuY3Rpb24oKXtyZXR1cm4gZShuYXZpZ2F0b3IudXNlckFnZW50LFwiQ2hyb21lL1wiKT9cImNocm9tZVwiOmUobmF2aWdhdG9yLnZlbmRvcixcIkFwcGxlXCIpP1wic2FmYXJpXCI6ZShuYXZpZ2F0b3IudXNlckFnZW50LFwiTVNJRVwiKT9cImllXCI6ZShuYXZpZ2F0b3IudXNlckFnZW50LFwiR2Vja28vXCIpP1wibW96XCI6ZShuYXZpZ2F0b3IudXNlckFnZW50LFwiT3BlcmEvXCIpP1wib3BlcmFcIjpcIlwifSgpLHA9dStcIi1cIitsLGQ9ezM6e2NvZGU6XCJDYW5jZWxcIn0sNjp7Y29kZTpcIkhlbHBcIn0sODp7Y29kZTpcIkJhY2tzcGFjZVwifSw5Ontjb2RlOlwiVGFiXCJ9LDEyOntjb2RlOlwiQ2xlYXJcIn0sMTM6e2NvZGU6XCJFbnRlclwifSwxNjp7Y29kZTpcIlNoaWZ0XCJ9LDE3Ontjb2RlOlwiQ29udHJvbFwifSwxODp7Y29kZTpcIkFsdFwifSwxOTp7Y29kZTpcIlBhdXNlXCJ9LDIwOntjb2RlOlwiQ2Fwc0xvY2tcIn0sMjE6e2NvZGU6XCJLYW5hTW9kZVwifSwyMjp7Y29kZTpcIkhhbmd1bE1vZGVcIn0sMjM6e2NvZGU6XCJKdW5qYU1vZGVcIn0sMjQ6e2NvZGU6XCJGaW5hbE1vZGVcIn0sMjU6e2NvZGU6XCJLYW5qaU1vZGVcIn0sMjc6e2NvZGU6XCJFc2NhcGVcIn0sMjg6e2NvZGU6XCJDb252ZXJ0XCJ9LDI5Ontjb2RlOlwiTm9uQ29udmVydFwifSwzMDp7Y29kZTpcIkFjY2VwdFwifSwzMTp7Y29kZTpcIk1vZGVDaGFuZ2VcIn0sMzI6e2NvZGU6XCJTcGFjZVwifSwzMzp7Y29kZTpcIlBhZ2VVcFwifSwzNDp7Y29kZTpcIlBhZ2VEb3duXCJ9LDM1Ontjb2RlOlwiRW5kXCJ9LDM2Ontjb2RlOlwiSG9tZVwifSwzNzp7Y29kZTpcIkFycm93TGVmdFwifSwzODp7Y29kZTpcIkFycm93VXBcIn0sMzk6e2NvZGU6XCJBcnJvd1JpZ2h0XCJ9LDQwOntjb2RlOlwiQXJyb3dEb3duXCJ9LDQxOntjb2RlOlwiU2VsZWN0XCJ9LDQyOntjb2RlOlwiUHJpbnRcIn0sNDM6e2NvZGU6XCJFeGVjdXRlXCJ9LDQ0Ontjb2RlOlwiUHJpbnRTY3JlZW5cIn0sNDU6e2NvZGU6XCJJbnNlcnRcIn0sNDY6e2NvZGU6XCJEZWxldGVcIn0sNDc6e2NvZGU6XCJIZWxwXCJ9LDQ4Ontjb2RlOlwiRGlnaXQwXCIsa2V5Q2FwOlwiMFwifSw0OTp7Y29kZTpcIkRpZ2l0MVwiLGtleUNhcDpcIjFcIn0sNTA6e2NvZGU6XCJEaWdpdDJcIixrZXlDYXA6XCIyXCJ9LDUxOntjb2RlOlwiRGlnaXQzXCIsa2V5Q2FwOlwiM1wifSw1Mjp7Y29kZTpcIkRpZ2l0NFwiLGtleUNhcDpcIjRcIn0sNTM6e2NvZGU6XCJEaWdpdDVcIixrZXlDYXA6XCI1XCJ9LDU0Ontjb2RlOlwiRGlnaXQ2XCIsa2V5Q2FwOlwiNlwifSw1NTp7Y29kZTpcIkRpZ2l0N1wiLGtleUNhcDpcIjdcIn0sNTY6e2NvZGU6XCJEaWdpdDhcIixrZXlDYXA6XCI4XCJ9LDU3Ontjb2RlOlwiRGlnaXQ5XCIsa2V5Q2FwOlwiOVwifSw2NTp7Y29kZTpcIktleUFcIixrZXlDYXA6XCJhXCJ9LDY2Ontjb2RlOlwiS2V5QlwiLGtleUNhcDpcImJcIn0sNjc6e2NvZGU6XCJLZXlDXCIsa2V5Q2FwOlwiY1wifSw2ODp7Y29kZTpcIktleURcIixrZXlDYXA6XCJkXCJ9LDY5Ontjb2RlOlwiS2V5RVwiLGtleUNhcDpcImVcIn0sNzA6e2NvZGU6XCJLZXlGXCIsa2V5Q2FwOlwiZlwifSw3MTp7Y29kZTpcIktleUdcIixrZXlDYXA6XCJnXCJ9LDcyOntjb2RlOlwiS2V5SFwiLGtleUNhcDpcImhcIn0sNzM6e2NvZGU6XCJLZXlJXCIsa2V5Q2FwOlwiaVwifSw3NDp7Y29kZTpcIktleUpcIixrZXlDYXA6XCJqXCJ9LDc1Ontjb2RlOlwiS2V5S1wiLGtleUNhcDpcImtcIn0sNzY6e2NvZGU6XCJLZXlMXCIsa2V5Q2FwOlwibFwifSw3Nzp7Y29kZTpcIktleU1cIixrZXlDYXA6XCJtXCJ9LDc4Ontjb2RlOlwiS2V5TlwiLGtleUNhcDpcIm5cIn0sNzk6e2NvZGU6XCJLZXlPXCIsa2V5Q2FwOlwib1wifSw4MDp7Y29kZTpcIktleVBcIixrZXlDYXA6XCJwXCJ9LDgxOntjb2RlOlwiS2V5UVwiLGtleUNhcDpcInFcIn0sODI6e2NvZGU6XCJLZXlSXCIsa2V5Q2FwOlwiclwifSw4Mzp7Y29kZTpcIktleVNcIixrZXlDYXA6XCJzXCJ9LDg0Ontjb2RlOlwiS2V5VFwiLGtleUNhcDpcInRcIn0sODU6e2NvZGU6XCJLZXlVXCIsa2V5Q2FwOlwidVwifSw4Njp7Y29kZTpcIktleVZcIixrZXlDYXA6XCJ2XCJ9LDg3Ontjb2RlOlwiS2V5V1wiLGtleUNhcDpcIndcIn0sODg6e2NvZGU6XCJLZXlYXCIsa2V5Q2FwOlwieFwifSw4OTp7Y29kZTpcIktleVlcIixrZXlDYXA6XCJ5XCJ9LDkwOntjb2RlOlwiS2V5WlwiLGtleUNhcDpcInpcIn0sOTE6e2NvZGU6XCJPU0xlZnRcIixsb2NhdGlvbjphfSw5Mjp7Y29kZTpcIk9TUmlnaHRcIixsb2NhdGlvbjpjfSw5Mzp7Y29kZTpcIkNvbnRleHRNZW51XCJ9LDk1Ontjb2RlOlwiU3RhbmRieVwifSw5Njp7Y29kZTpcIk51bXBhZDBcIixrZXlDYXA6XCIwXCIsbG9jYXRpb246aH0sOTc6e2NvZGU6XCJOdW1wYWQxXCIsa2V5Q2FwOlwiMVwiLGxvY2F0aW9uOmh9LDk4Ontjb2RlOlwiTnVtcGFkMlwiLGtleUNhcDpcIjJcIixsb2NhdGlvbjpofSw5OTp7Y29kZTpcIk51bXBhZDNcIixrZXlDYXA6XCIzXCIsbG9jYXRpb246aH0sMTAwOntjb2RlOlwiTnVtcGFkNFwiLGtleUNhcDpcIjRcIixsb2NhdGlvbjpofSwxMDE6e2NvZGU6XCJOdW1wYWQ1XCIsa2V5Q2FwOlwiNVwiLGxvY2F0aW9uOmh9LDEwMjp7Y29kZTpcIk51bXBhZDZcIixrZXlDYXA6XCI2XCIsbG9jYXRpb246aH0sMTAzOntjb2RlOlwiTnVtcGFkN1wiLGtleUNhcDpcIjdcIixsb2NhdGlvbjpofSwxMDQ6e2NvZGU6XCJOdW1wYWQ4XCIsa2V5Q2FwOlwiOFwiLGxvY2F0aW9uOmh9LDEwNTp7Y29kZTpcIk51bXBhZDlcIixrZXlDYXA6XCI5XCIsbG9jYXRpb246aH0sMTA2Ontjb2RlOlwiTnVtcGFkTXVsdGlwbHlcIixrZXlDYXA6XCIqXCIsbG9jYXRpb246aH0sMTA3Ontjb2RlOlwiTnVtcGFkQWRkXCIsa2V5Q2FwOlwiK1wiLGxvY2F0aW9uOmh9LDEwODp7Y29kZTpcIk51bXBhZENvbW1hXCIsa2V5Q2FwOlwiLFwiLGxvY2F0aW9uOmh9LDEwOTp7Y29kZTpcIk51bXBhZFN1YnRyYWN0XCIsa2V5Q2FwOlwiLVwiLGxvY2F0aW9uOmh9LDExMDp7Y29kZTpcIk51bXBhZERlY2ltYWxcIixrZXlDYXA6XCIuXCIsbG9jYXRpb246aH0sMTExOntjb2RlOlwiTnVtcGFkRGl2aWRlXCIsa2V5Q2FwOlwiL1wiLGxvY2F0aW9uOmh9LDExMjp7Y29kZTpcIkYxXCJ9LDExMzp7Y29kZTpcIkYyXCJ9LDExNDp7Y29kZTpcIkYzXCJ9LDExNTp7Y29kZTpcIkY0XCJ9LDExNjp7Y29kZTpcIkY1XCJ9LDExNzp7Y29kZTpcIkY2XCJ9LDExODp7Y29kZTpcIkY3XCJ9LDExOTp7Y29kZTpcIkY4XCJ9LDEyMDp7Y29kZTpcIkY5XCJ9LDEyMTp7Y29kZTpcIkYxMFwifSwxMjI6e2NvZGU6XCJGMTFcIn0sMTIzOntjb2RlOlwiRjEyXCJ9LDEyNDp7Y29kZTpcIkYxM1wifSwxMjU6e2NvZGU6XCJGMTRcIn0sMTI2Ontjb2RlOlwiRjE1XCJ9LDEyNzp7Y29kZTpcIkYxNlwifSwxMjg6e2NvZGU6XCJGMTdcIn0sMTI5Ontjb2RlOlwiRjE4XCJ9LDEzMDp7Y29kZTpcIkYxOVwifSwxMzE6e2NvZGU6XCJGMjBcIn0sMTMyOntjb2RlOlwiRjIxXCJ9LDEzMzp7Y29kZTpcIkYyMlwifSwxMzQ6e2NvZGU6XCJGMjNcIn0sMTM1Ontjb2RlOlwiRjI0XCJ9LDE0NDp7Y29kZTpcIk51bUxvY2tcIixsb2NhdGlvbjpofSwxNDU6e2NvZGU6XCJTY3JvbGxMb2NrXCJ9LDE2MDp7Y29kZTpcIlNoaWZ0TGVmdFwiLGxvY2F0aW9uOmF9LDE2MTp7Y29kZTpcIlNoaWZ0UmlnaHRcIixsb2NhdGlvbjpjfSwxNjI6e2NvZGU6XCJDb250cm9sTGVmdFwiLGxvY2F0aW9uOmF9LDE2Mzp7Y29kZTpcIkNvbnRyb2xSaWdodFwiLGxvY2F0aW9uOmN9LDE2NDp7Y29kZTpcIkFsdExlZnRcIixsb2NhdGlvbjphfSwxNjU6e2NvZGU6XCJBbHRSaWdodFwiLGxvY2F0aW9uOmN9LDE2Njp7Y29kZTpcIkJyb3dzZXJCYWNrXCJ9LDE2Nzp7Y29kZTpcIkJyb3dzZXJGb3J3YXJkXCJ9LDE2ODp7Y29kZTpcIkJyb3dzZXJSZWZyZXNoXCJ9LDE2OTp7Y29kZTpcIkJyb3dzZXJTdG9wXCJ9LDE3MDp7Y29kZTpcIkJyb3dzZXJTZWFyY2hcIn0sMTcxOntjb2RlOlwiQnJvd3NlckZhdm9yaXRlc1wifSwxNzI6e2NvZGU6XCJCcm93c2VySG9tZVwifSwxNzM6e2NvZGU6XCJWb2x1bWVNdXRlXCJ9LDE3NDp7Y29kZTpcIlZvbHVtZURvd25cIn0sMTc1Ontjb2RlOlwiVm9sdW1lVXBcIn0sMTc2Ontjb2RlOlwiTWVkaWFUcmFja05leHRcIn0sMTc3Ontjb2RlOlwiTWVkaWFUcmFja1ByZXZpb3VzXCJ9LDE3ODp7Y29kZTpcIk1lZGlhU3RvcFwifSwxNzk6e2NvZGU6XCJNZWRpYVBsYXlQYXVzZVwifSwxODA6e2NvZGU6XCJMYXVuY2hNYWlsXCJ9LDE4MTp7Y29kZTpcIk1lZGlhU2VsZWN0XCJ9LDE4Mjp7Y29kZTpcIkxhdW5jaEFwcDFcIn0sMTgzOntjb2RlOlwiTGF1bmNoQXBwMlwifSwxODY6e2NvZGU6XCJTZW1pY29sb25cIixrZXlDYXA6XCI7XCJ9LDE4Nzp7Y29kZTpcIkVxdWFsXCIsa2V5Q2FwOlwiPVwifSwxODg6e2NvZGU6XCJDb21tYVwiLGtleUNhcDpcIixcIn0sMTg5Ontjb2RlOlwiTWludXNcIixrZXlDYXA6XCItXCJ9LDE5MDp7Y29kZTpcIlBlcmlvZFwiLGtleUNhcDpcIi5cIn0sMTkxOntjb2RlOlwiU2xhc2hcIixrZXlDYXA6XCIvXCJ9LDE5Mjp7Y29kZTpcIkJhY2txdW90ZVwiLGtleUNhcDpcImBcIn0sMjE5Ontjb2RlOlwiQnJhY2tldExlZnRcIixrZXlDYXA6XCJbXCJ9LDIyMDp7Y29kZTpcIkJhY2tzbGFzaFwiLGtleUNhcDpcIlxcXFxcIn0sMjIxOntjb2RlOlwiQnJhY2tldFJpZ2h0XCIsa2V5Q2FwOlwiXVwifSwyMjI6e2NvZGU6XCJRdW90ZVwiLGtleUNhcDpcIidcIn0sMjI2Ontjb2RlOlwiSW50bEJhY2tzbGFzaFwiLGtleUNhcDpcIlxcXFxcIn0sMjI5Ontjb2RlOlwiUHJvY2Vzc1wifSwyNDY6e2NvZGU6XCJBdHRuXCJ9LDI0Nzp7Y29kZTpcIkNyU2VsXCJ9LDI0ODp7Y29kZTpcIkV4U2VsXCJ9LDI0OTp7Y29kZTpcIkVyYXNlRW9mXCJ9LDI1MDp7Y29kZTpcIlBsYXlcIn0sMjUxOntjb2RlOlwiWm9vbVRvZ2dsZVwifSwyNTQ6e2NvZGU6XCJDbGVhclwifX07byhkLFwibW96XCIsezU5Ontjb2RlOlwiU2VtaWNvbG9uXCIsa2V5Q2FwOlwiO1wifSw2MTp7Y29kZTpcIkVxdWFsXCIsa2V5Q2FwOlwiPVwifSwxMDc6e2NvZGU6XCJFcXVhbFwiLGtleUNhcDpcIj1cIn0sMTA5Ontjb2RlOlwiTWludXNcIixrZXlDYXA6XCItXCJ9LDE4Nzp7Y29kZTpcIk51bXBhZEFkZFwiLGtleUNhcDpcIitcIixsb2NhdGlvbjpofSwxODk6e2NvZGU6XCJOdW1wYWRTdWJ0cmFjdFwiLGtleUNhcDpcIi1cIixsb2NhdGlvbjpofX0pLG8oZCxcIm1vei1tYWNcIix7MTI6e2NvZGU6XCJOdW1Mb2NrXCIsbG9jYXRpb246aH0sMTczOntjb2RlOlwiTWludXNcIixrZXlDYXA6XCItXCJ9fSksbyhkLFwibW96LXdpblwiLHsxNzM6e2NvZGU6XCJNaW51c1wiLGtleUNhcDpcIi1cIn19KSxvKGQsXCJjaHJvbWUtbWFjXCIsezkzOntjb2RlOlwiT1NSaWdodFwiLGxvY2F0aW9uOmN9fSksbyhkLFwic2FmYXJpXCIsezM6e2NvZGU6XCJFbnRlclwifSwyNTp7Y29kZTpcIlRhYlwifX0pLG8oZCxcImlvc1wiLHsxMDp7Y29kZTpcIkVudGVyXCIsbG9jYXRpb246cn19KSxvKGQsXCJzYWZhcmktbWFjXCIsezkxOntjb2RlOlwiT1NMZWZ0XCIsbG9jYXRpb246YX0sOTM6e2NvZGU6XCJPU1JpZ2h0XCIsbG9jYXRpb246Y30sMjI5Ontjb2RlOlwiS2V5UVwiLGtleUNhcDpcIlFcIn19KTt2YXIgeT17fTtcImNyb3NcIj09PWwmJih5W1wiVSswMEEwXCJdPXtjb2RlOlwiU2hpZnRMZWZ0XCIsbG9jYXRpb246YX0seVtcIlUrMDBBMVwiXT17Y29kZTpcIlNoaWZ0UmlnaHRcIixsb2NhdGlvbjpjfSx5W1wiVSswMEEyXCJdPXtjb2RlOlwiQ29udHJvbExlZnRcIixsb2NhdGlvbjphfSx5W1wiVSswMEEzXCJdPXtjb2RlOlwiQ29udHJvbFJpZ2h0XCIsbG9jYXRpb246Y30seVtcIlUrMDBBNFwiXT17Y29kZTpcIkFsdExlZnRcIixsb2NhdGlvbjphfSx5W1wiVSswMEE1XCJdPXtjb2RlOlwiQWx0UmlnaHRcIixsb2NhdGlvbjpjfSksXCJjaHJvbWUtbWFjXCI9PT1wJiYoeVtcIlUrMDAxMFwiXT17Y29kZTpcIkNvbnRleHRNZW51XCJ9KSxcInNhZmFyaS1tYWNcIj09PXAmJih5W1wiVSswMDEwXCJdPXtjb2RlOlwiQ29udGV4dE1lbnVcIn0pLFwiaW9zXCI9PT1sJiYoeVtcIlUrMDAxMFwiXT17Y29kZTpcIkZ1bmN0aW9uXCJ9LHlbXCJVKzAwMUNcIl09e2NvZGU6XCJBcnJvd0xlZnRcIn0seVtcIlUrMDAxRFwiXT17Y29kZTpcIkFycm93UmlnaHRcIn0seVtcIlUrMDAxRVwiXT17Y29kZTpcIkFycm93VXBcIn0seVtcIlUrMDAxRlwiXT17Y29kZTpcIkFycm93RG93blwifSx5W1wiVSswMDAxXCJdPXtjb2RlOlwiSG9tZVwifSx5W1wiVSswMDA0XCJdPXtjb2RlOlwiRW5kXCJ9LHlbXCJVKzAwMEJcIl09e2NvZGU6XCJQYWdlVXBcIn0seVtcIlUrMDAwQ1wiXT17Y29kZTpcIlBhZ2VEb3duXCJ9KTt2YXIgdj1bXTt2W2FdPXsxNjp7Y29kZTpcIlNoaWZ0TGVmdFwiLGxvY2F0aW9uOmF9LDE3Ontjb2RlOlwiQ29udHJvbExlZnRcIixsb2NhdGlvbjphfSwxODp7Y29kZTpcIkFsdExlZnRcIixsb2NhdGlvbjphfX0sdltjXT17MTY6e2NvZGU6XCJTaGlmdFJpZ2h0XCIsbG9jYXRpb246Y30sMTc6e2NvZGU6XCJDb250cm9sUmlnaHRcIixsb2NhdGlvbjpjfSwxODp7Y29kZTpcIkFsdFJpZ2h0XCIsbG9jYXRpb246Y319LHZbaF09ezEzOntjb2RlOlwiTnVtcGFkRW50ZXJcIixsb2NhdGlvbjpofX0sbyh2W2hdLFwibW96XCIsezEwOTp7Y29kZTpcIk51bXBhZFN1YnRyYWN0XCIsbG9jYXRpb246aH0sMTA3Ontjb2RlOlwiTnVtcGFkQWRkXCIsbG9jYXRpb246aH19KSxvKHZbYV0sXCJtb3otbWFjXCIsezIyNDp7Y29kZTpcIk9TTGVmdFwiLGxvY2F0aW9uOmF9fSksbyh2W2NdLFwibW96LW1hY1wiLHsyMjQ6e2NvZGU6XCJPU1JpZ2h0XCIsbG9jYXRpb246Y319KSxvKHZbY10sXCJtb3otd2luXCIsezkxOntjb2RlOlwiT1NSaWdodFwiLGxvY2F0aW9uOmN9fSksbyh2W2NdLFwibWFjXCIsezkzOntjb2RlOlwiT1NSaWdodFwiLGxvY2F0aW9uOmN9fSksbyh2W2hdLFwiY2hyb21lLW1hY1wiLHsxMjp7Y29kZTpcIk51bUxvY2tcIixsb2NhdGlvbjpofX0pLG8odltoXSxcInNhZmFyaS1tYWNcIix7MTI6e2NvZGU6XCJOdW1Mb2NrXCIsbG9jYXRpb246aH0sMTg3Ontjb2RlOlwiTnVtcGFkQWRkXCIsbG9jYXRpb246aH0sMTg5Ontjb2RlOlwiTnVtcGFkU3VidHJhY3RcIixsb2NhdGlvbjpofSwxOTA6e2NvZGU6XCJOdW1wYWREZWNpbWFsXCIsbG9jYXRpb246aH0sMTkxOntjb2RlOlwiTnVtcGFkRGl2aWRlXCIsbG9jYXRpb246aH19KTt2YXIgZj17U2hpZnRMZWZ0OntrZXk6XCJTaGlmdFwifSxTaGlmdFJpZ2h0OntrZXk6XCJTaGlmdFwifSxDb250cm9sTGVmdDp7a2V5OlwiQ29udHJvbFwifSxDb250cm9sUmlnaHQ6e2tleTpcIkNvbnRyb2xcIn0sQWx0TGVmdDp7a2V5OlwiQWx0XCJ9LEFsdFJpZ2h0OntrZXk6XCJBbHRcIn0sT1NMZWZ0OntrZXk6XCJPU1wifSxPU1JpZ2h0OntrZXk6XCJPU1wifSxOdW1wYWRFbnRlcjp7a2V5OlwiRW50ZXJcIn0sU3BhY2U6e2tleTpcIiBcIn0sRGlnaXQwOntrZXk6XCIwXCIsc2hpZnRLZXk6XCIpXCJ9LERpZ2l0MTp7a2V5OlwiMVwiLHNoaWZ0S2V5OlwiIVwifSxEaWdpdDI6e2tleTpcIjJcIixzaGlmdEtleTpcIkBcIn0sRGlnaXQzOntrZXk6XCIzXCIsc2hpZnRLZXk6XCIjXCJ9LERpZ2l0NDp7a2V5OlwiNFwiLHNoaWZ0S2V5OlwiJFwifSxEaWdpdDU6e2tleTpcIjVcIixzaGlmdEtleTpcIiVcIn0sRGlnaXQ2OntrZXk6XCI2XCIsc2hpZnRLZXk6XCJeXCJ9LERpZ2l0Nzp7a2V5OlwiN1wiLHNoaWZ0S2V5OlwiJlwifSxEaWdpdDg6e2tleTpcIjhcIixzaGlmdEtleTpcIipcIn0sRGlnaXQ5OntrZXk6XCI5XCIsc2hpZnRLZXk6XCIoXCJ9LEtleUE6e2tleTpcImFcIixzaGlmdEtleTpcIkFcIn0sS2V5Qjp7a2V5OlwiYlwiLHNoaWZ0S2V5OlwiQlwifSxLZXlDOntrZXk6XCJjXCIsc2hpZnRLZXk6XCJDXCJ9LEtleUQ6e2tleTpcImRcIixzaGlmdEtleTpcIkRcIn0sS2V5RTp7a2V5OlwiZVwiLHNoaWZ0S2V5OlwiRVwifSxLZXlGOntrZXk6XCJmXCIsc2hpZnRLZXk6XCJGXCJ9LEtleUc6e2tleTpcImdcIixzaGlmdEtleTpcIkdcIn0sS2V5SDp7a2V5OlwiaFwiLHNoaWZ0S2V5OlwiSFwifSxLZXlJOntrZXk6XCJpXCIsc2hpZnRLZXk6XCJJXCJ9LEtleUo6e2tleTpcImpcIixzaGlmdEtleTpcIkpcIn0sS2V5Szp7a2V5Olwia1wiLHNoaWZ0S2V5OlwiS1wifSxLZXlMOntrZXk6XCJsXCIsc2hpZnRLZXk6XCJMXCJ9LEtleU06e2tleTpcIm1cIixzaGlmdEtleTpcIk1cIn0sS2V5Tjp7a2V5OlwiblwiLHNoaWZ0S2V5OlwiTlwifSxLZXlPOntrZXk6XCJvXCIsc2hpZnRLZXk6XCJPXCJ9LEtleVA6e2tleTpcInBcIixzaGlmdEtleTpcIlBcIn0sS2V5UTp7a2V5OlwicVwiLHNoaWZ0S2V5OlwiUVwifSxLZXlSOntrZXk6XCJyXCIsc2hpZnRLZXk6XCJSXCJ9LEtleVM6e2tleTpcInNcIixzaGlmdEtleTpcIlNcIn0sS2V5VDp7a2V5OlwidFwiLHNoaWZ0S2V5OlwiVFwifSxLZXlVOntrZXk6XCJ1XCIsc2hpZnRLZXk6XCJVXCJ9LEtleVY6e2tleTpcInZcIixzaGlmdEtleTpcIlZcIn0sS2V5Vzp7a2V5Olwid1wiLHNoaWZ0S2V5OlwiV1wifSxLZXlYOntrZXk6XCJ4XCIsc2hpZnRLZXk6XCJYXCJ9LEtleVk6e2tleTpcInlcIixzaGlmdEtleTpcIllcIn0sS2V5Wjp7a2V5OlwielwiLHNoaWZ0S2V5OlwiWlwifSxOdW1wYWQwOntrZXk6XCIwXCJ9LE51bXBhZDE6e2tleTpcIjFcIn0sTnVtcGFkMjp7a2V5OlwiMlwifSxOdW1wYWQzOntrZXk6XCIzXCJ9LE51bXBhZDQ6e2tleTpcIjRcIn0sTnVtcGFkNTp7a2V5OlwiNVwifSxOdW1wYWQ2OntrZXk6XCI2XCJ9LE51bXBhZDc6e2tleTpcIjdcIn0sTnVtcGFkODp7a2V5OlwiOFwifSxOdW1wYWQ5OntrZXk6XCI5XCJ9LE51bXBhZE11bHRpcGx5OntrZXk6XCIqXCJ9LE51bXBhZEFkZDp7a2V5OlwiK1wifSxOdW1wYWRDb21tYTp7a2V5OlwiLFwifSxOdW1wYWRTdWJ0cmFjdDp7a2V5OlwiLVwifSxOdW1wYWREZWNpbWFsOntrZXk6XCIuXCJ9LE51bXBhZERpdmlkZTp7a2V5OlwiL1wifSxTZW1pY29sb246e2tleTpcIjtcIixzaGlmdEtleTpcIjpcIn0sRXF1YWw6e2tleTpcIj1cIixzaGlmdEtleTpcIitcIn0sQ29tbWE6e2tleTpcIixcIixzaGlmdEtleTpcIjxcIn0sTWludXM6e2tleTpcIi1cIixzaGlmdEtleTpcIl9cIn0sUGVyaW9kOntrZXk6XCIuXCIsc2hpZnRLZXk6XCI+XCJ9LFNsYXNoOntrZXk6XCIvXCIsc2hpZnRLZXk6XCI/XCJ9LEJhY2txdW90ZTp7a2V5OlwiYFwiLHNoaWZ0S2V5OlwiflwifSxCcmFja2V0TGVmdDp7a2V5OlwiW1wiLHNoaWZ0S2V5Olwie1wifSxCYWNrc2xhc2g6e2tleTpcIlxcXFxcIixzaGlmdEtleTpcInxcIn0sQnJhY2tldFJpZ2h0OntrZXk6XCJdXCIsc2hpZnRLZXk6XCJ9XCJ9LFF1b3RlOntrZXk6XCInXCIsc2hpZnRLZXk6J1wiJ30sSW50bEJhY2tzbGFzaDp7a2V5OlwiXFxcXFwiLHNoaWZ0S2V5OlwifFwifX07byhmLFwibWFjXCIse09TTGVmdDp7a2V5OlwiTWV0YVwifSxPU1JpZ2h0OntrZXk6XCJNZXRhXCJ9fSk7dmFyIG09e0VzYzpcIkVzY2FwZVwiLE5vbmNvbnZlcnQ6XCJOb25Db252ZXJ0XCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixNZW51OlwiQ29udGV4dE1lbnVcIixNZWRpYU5leHRUcmFjazpcIk1lZGlhVHJhY2tOZXh0XCIsTWVkaWFQcmV2aW91c1RyYWNrOlwiTWVkaWFUcmFja1ByZXZpb3VzXCIsU2VsZWN0TWVkaWE6XCJNZWRpYVNlbGVjdFwiLEhhbGZXaWR0aDpcIkhhbmtha3VcIixGdWxsV2lkdGg6XCJaZW5rYWt1XCIsUm9tYW5DaGFyYWN0ZXJzOlwiUm9tYWppXCIsQ3JzZWw6XCJDclNlbFwiLEV4c2VsOlwiRXhTZWxcIixab29tOlwiWm9vbVRvZ2dsZVwifSxnPWZ1bmN0aW9uKHQsZSl7dmFyIG89e307cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZvckVhY2goZnVuY3Rpb24oaSl7dmFyIG49dFtpXTtlIGluIG4mJihvW25bZV1dPW4pfSksb30oZCxcImNvZGVcIik7dHJ5e3ZhciB3PXMmJlwibG9jYXRpb25cImluIG5ldyBLZXlib2FyZEV2ZW50KFwiXCIpfWNhdGNoKHQpe31cIktleWJvYXJkRXZlbnRcImluIHQmJlwiZGVmaW5lUHJvcGVydHlcImluIE9iamVjdCYmZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSxvKXtlIGluIHR8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUsbyl9aWYodChLZXlib2FyZEV2ZW50LnByb3RvdHlwZSxcImNvZGVcIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKTtyZXR1cm4gdD90LmNvZGU6XCJcIn19KSxcImtleVwiaW4gS2V5Ym9hcmRFdmVudC5wcm90b3R5cGUpe3ZhciBlPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoS2V5Ym9hcmRFdmVudC5wcm90b3R5cGUsXCJrZXlcIik7T2JqZWN0LmRlZmluZVByb3BlcnR5KEtleWJvYXJkRXZlbnQucHJvdG90eXBlLFwia2V5XCIse2dldDpmdW5jdGlvbigpe3ZhciB0PWUuZ2V0LmNhbGwodGhpcyk7cmV0dXJuIG0uaGFzT3duUHJvcGVydHkodCk/bVt0XTp0fX0pfXQoS2V5Ym9hcmRFdmVudC5wcm90b3R5cGUsXCJrZXlcIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKTtyZXR1cm4gdCYmXCJrZXlcImluIHQ/dC5rZXk6XCJVbmlkZW50aWZpZWRcIn19KSx0KEtleWJvYXJkRXZlbnQucHJvdG90eXBlLFwibG9jYXRpb25cIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKTtyZXR1cm4gdCYmXCJsb2NhdGlvblwiaW4gdD90LmxvY2F0aW9uOnJ9fSksdChLZXlib2FyZEV2ZW50LnByb3RvdHlwZSxcImxvY2FsZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cIlwifX0pfSgpLFwicXVlcnlLZXlDYXBcImluIHQuS2V5Ym9hcmRFdmVudHx8KHQuS2V5Ym9hcmRFdmVudC5xdWVyeUtleUNhcD1uKSx0LmlkZW50aWZ5S2V5PWZ1bmN0aW9uKHQpe2lmKCEoXCJjb2RlXCJpbiB0KSl7dmFyIGU9aSh0KTt0LmNvZGU9ZT9lLmNvZGU6XCJcIix0LmtleT1lJiZcImtleVwiaW4gZT9lLmtleTpcIlVuaWRlbnRpZmllZFwiLHQubG9jYXRpb249XCJsb2NhdGlvblwiaW4gdD90LmxvY2F0aW9uOlwia2V5TG9jYXRpb25cImluIHQ/dC5rZXlMb2NhdGlvbjplJiZcImxvY2F0aW9uXCJpbiBlP2UubG9jYXRpb246cix0LmxvY2FsZT1cIlwifX19KHdpbmRvdyl9LHt9XSw1OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9dChcImNhbm5vblwiKSxuPXQoXCIuL3NyYy9jb21wb25lbnRzL21hdGhcIik7ZS5leHBvcnRzPXtcImR5bmFtaWMtYm9keVwiOnQoXCIuL3NyYy9jb21wb25lbnRzL2JvZHkvZHluYW1pYy1ib2R5XCIpLFwic3RhdGljLWJvZHlcIjp0KFwiLi9zcmMvY29tcG9uZW50cy9ib2R5L3N0YXRpYy1ib2R5XCIpLGNvbnN0cmFpbnQ6dChcIi4vc3JjL2NvbXBvbmVudHMvY29uc3RyYWludFwiKSxzeXN0ZW06dChcIi4vc3JjL3N5c3RlbS9waHlzaWNzXCIpLHJlZ2lzdGVyQWxsOmZ1bmN0aW9uKHQpe3RoaXMuX3JlZ2lzdGVyZWR8fCh0PXR8fHdpbmRvdy5BRlJBTUUsbi5yZWdpc3RlckFsbCgpLHQuc3lzdGVtcy5waHlzaWNzfHx0LnJlZ2lzdGVyU3lzdGVtKFwicGh5c2ljc1wiLHRoaXMuc3lzdGVtKSx0LmNvbXBvbmVudHNbXCJkeW5hbWljLWJvZHlcIl18fHQucmVnaXN0ZXJDb21wb25lbnQoXCJkeW5hbWljLWJvZHlcIix0aGlzW1wiZHluYW1pYy1ib2R5XCJdKSx0LmNvbXBvbmVudHNbXCJzdGF0aWMtYm9keVwiXXx8dC5yZWdpc3RlckNvbXBvbmVudChcInN0YXRpYy1ib2R5XCIsdGhpc1tcInN0YXRpYy1ib2R5XCJdKSx0LmNvbXBvbmVudHMuY29uc3RyYWludHx8dC5yZWdpc3RlckNvbXBvbmVudChcImNvbnN0cmFpbnRcIix0aGlzLmNvbnN0cmFpbnQpLHRoaXMuX3JlZ2lzdGVyZWQ9ITApfX0sd2luZG93LkNBTk5PTj13aW5kb3cuQ0FOTk9OfHxpfSx7XCIuL3NyYy9jb21wb25lbnRzL2JvZHkvZHluYW1pYy1ib2R5XCI6OCxcIi4vc3JjL2NvbXBvbmVudHMvYm9keS9zdGF0aWMtYm9keVwiOjksXCIuL3NyYy9jb21wb25lbnRzL2NvbnN0cmFpbnRcIjoxMCxcIi4vc3JjL2NvbXBvbmVudHMvbWF0aFwiOjExLFwiLi9zcmMvc3lzdGVtL3BoeXNpY3NcIjoxNSxjYW5ub246MTd9XSw2OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9dChcImNhbm5vblwiKTtpLnNoYXBlMm1lc2g9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBUSFJFRS5PYmplY3QzRCxvPTA7bzx0LnNoYXBlcy5sZW5ndGg7bysrKXt2YXIgbixzPXQuc2hhcGVzW29dO3N3aXRjaChzLnR5cGUpe2Nhc2UgaS5TaGFwZS50eXBlcy5TUEhFUkU6dmFyIHI9bmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KHMucmFkaXVzLDgsOCk7bj1uZXcgVEhSRUUuTWVzaChyLHRoaXMuY3VycmVudE1hdGVyaWFsKTticmVhaztjYXNlIGkuU2hhcGUudHlwZXMuUEFSVElDTEU6bj1uZXcgVEhSRUUuTWVzaCh0aGlzLnBhcnRpY2xlR2VvLHRoaXMucGFydGljbGVNYXRlcmlhbCk7dmFyIGE9dGhpcy5zZXR0aW5ncztuLnNjYWxlLnNldChhLnBhcnRpY2xlU2l6ZSxhLnBhcnRpY2xlU2l6ZSxhLnBhcnRpY2xlU2l6ZSk7YnJlYWs7Y2FzZSBpLlNoYXBlLnR5cGVzLlBMQU5FOnZhciBjPW5ldyBUSFJFRS5QbGFuZUdlb21ldHJ5KDEwLDEwLDQsNCk7bj1uZXcgVEhSRUUuT2JqZWN0M0Q7dmFyIGg9bmV3IFRIUkVFLk9iamVjdDNELGw9bmV3IFRIUkVFLk1lc2goYyx0aGlzLmN1cnJlbnRNYXRlcmlhbCk7bC5zY2FsZS5zZXQoMTAwLDEwMCwxMDApLGguYWRkKGwpLGwuY2FzdFNoYWRvdz0hMCxsLnJlY2VpdmVTaGFkb3c9ITAsbi5hZGQoaCk7YnJlYWs7Y2FzZSBpLlNoYXBlLnR5cGVzLkJPWDp2YXIgdT1uZXcgVEhSRUUuQm94R2VvbWV0cnkoMipzLmhhbGZFeHRlbnRzLngsMipzLmhhbGZFeHRlbnRzLnksMipzLmhhbGZFeHRlbnRzLnopO249bmV3IFRIUkVFLk1lc2godSx0aGlzLmN1cnJlbnRNYXRlcmlhbCk7YnJlYWs7Y2FzZSBpLlNoYXBlLnR5cGVzLkNPTlZFWFBPTFlIRURST046Zm9yKHZhciBwPW5ldyBUSFJFRS5HZW9tZXRyeSxkPTA7ZDxzLnZlcnRpY2VzLmxlbmd0aDtkKyspe3ZhciB5PXMudmVydGljZXNbZF07cC52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKHkueCx5LnkseS56KSl9Zm9yKHZhciBkPTA7ZDxzLmZhY2VzLmxlbmd0aDtkKyspZm9yKHZhciB2PXMuZmFjZXNbZF0sZj12WzBdLG09MTttPHYubGVuZ3RoLTE7bSsrKXt2YXIgZz12W21dLHc9dlttKzFdO3AuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoZixnLHcpKX1wLmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpLHAuY29tcHV0ZUZhY2VOb3JtYWxzKCksbj1uZXcgVEhSRUUuTWVzaChwLHRoaXMuY3VycmVudE1hdGVyaWFsKTticmVhaztjYXNlIGkuU2hhcGUudHlwZXMuSEVJR0hURklFTEQ6Zm9yKHZhciBjPW5ldyBUSFJFRS5HZW9tZXRyeSx4PW5ldyBpLlZlYzMsYj1uZXcgaS5WZWMzLEU9bmV3IGkuVmVjMyxBPTA7QTxzLmRhdGEubGVuZ3RoLTE7QSsrKWZvcih2YXIgQj0wO0I8cy5kYXRhW0FdLmxlbmd0aC0xO0IrKylmb3IodmFyIEM9MDtDPDI7QysrKXtzLmdldENvbnZleFRyaWFuZ2xlUGlsbGFyKEEsQiwwPT09QykseC5jb3B5KHMucGlsbGFyQ29udmV4LnZlcnRpY2VzWzBdKSxiLmNvcHkocy5waWxsYXJDb252ZXgudmVydGljZXNbMV0pLEUuY29weShzLnBpbGxhckNvbnZleC52ZXJ0aWNlc1syXSkseC52YWRkKHMucGlsbGFyT2Zmc2V0LHgpLGIudmFkZChzLnBpbGxhck9mZnNldCxiKSxFLnZhZGQocy5waWxsYXJPZmZzZXQsRSksYy52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKHgueCx4LnkseC56KSxuZXcgVEhSRUUuVmVjdG9yMyhiLngsYi55LGIueiksbmV3IFRIUkVFLlZlY3RvcjMoRS54LEUueSxFLnopKTt2YXIgZD1jLnZlcnRpY2VzLmxlbmd0aC0zO2MuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoZCxkKzEsZCsyKSl9Yy5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSxjLmNvbXB1dGVGYWNlTm9ybWFscygpLG49bmV3IFRIUkVFLk1lc2goYyx0aGlzLmN1cnJlbnRNYXRlcmlhbCk7YnJlYWs7Y2FzZSBpLlNoYXBlLnR5cGVzLlRSSU1FU0g6Zm9yKHZhciBjPW5ldyBUSFJFRS5HZW9tZXRyeSx4PW5ldyBpLlZlYzMsYj1uZXcgaS5WZWMzLEU9bmV3IGkuVmVjMyxkPTA7ZDxzLmluZGljZXMubGVuZ3RoLzM7ZCsrKXtzLmdldFRyaWFuZ2xlVmVydGljZXMoZCx4LGIsRSksYy52ZXJ0aWNlcy5wdXNoKG5ldyBUSFJFRS5WZWN0b3IzKHgueCx4LnkseC56KSxuZXcgVEhSRUUuVmVjdG9yMyhiLngsYi55LGIueiksbmV3IFRIUkVFLlZlY3RvcjMoRS54LEUueSxFLnopKTt2YXIgbT1jLnZlcnRpY2VzLmxlbmd0aC0zO2MuZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMobSxtKzEsbSsyKSl9Yy5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSxjLmNvbXB1dGVGYWNlTm9ybWFscygpLG49bmV3IFRIUkVFLk1lc2goYyx0aGlzLmN1cnJlbnRNYXRlcmlhbCk7YnJlYWs7ZGVmYXVsdDp0aHJvd1wiVmlzdWFsIHR5cGUgbm90IHJlY29nbml6ZWQ6IFwiK3MudHlwZX1pZihuLnJlY2VpdmVTaGFkb3c9ITAsbi5jYXN0U2hhZG93PSEwLG4uY2hpbGRyZW4pZm9yKHZhciBkPTA7ZDxuLmNoaWxkcmVuLmxlbmd0aDtkKyspaWYobi5jaGlsZHJlbltkXS5jYXN0U2hhZG93PSEwLG4uY2hpbGRyZW5bZF0ucmVjZWl2ZVNoYWRvdz0hMCxuLmNoaWxkcmVuW2RdKWZvcih2YXIgbT0wO208bi5jaGlsZHJlbltkXS5sZW5ndGg7bSsrKW4uY2hpbGRyZW5bZF0uY2hpbGRyZW5bbV0uY2FzdFNoYWRvdz0hMCxuLmNoaWxkcmVuW2RdLmNoaWxkcmVuW21dLnJlY2VpdmVTaGFkb3c9ITA7dmFyIFM9dC5zaGFwZU9mZnNldHNbb10sUj10LnNoYXBlT3JpZW50YXRpb25zW29dO24ucG9zaXRpb24uc2V0KFMueCxTLnksUy56KSxuLnF1YXRlcm5pb24uc2V0KFIueCxSLnksUi56LFIudyksZS5hZGQobil9cmV0dXJuIGV9LGUuZXhwb3J0cz1pLnNoYXBlMm1lc2h9LHtjYW5ub246MTd9XSw3OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9dChcImNhbm5vblwiKSxuPXQoXCJ0aHJlZS10by1jYW5ub25cIik7dChcIi4uLy4uLy4uL2xpYi9DQU5OT04tc2hhcGUybWVzaFwiKSxlLmV4cG9ydHM9e3NjaGVtYTp7c2hhcGU6e2RlZmF1bHQ6XCJhdXRvXCIsb25lT2Y6W1wiYXV0b1wiLFwiYm94XCIsXCJjeWxpbmRlclwiLFwic3BoZXJlXCIsXCJodWxsXCIsXCJub25lXCJdfSxjeWxpbmRlckF4aXM6e2RlZmF1bHQ6XCJ5XCIsb25lT2Y6W1wieFwiLFwieVwiLFwielwiXX0sc3BoZXJlUmFkaXVzOntkZWZhdWx0Ok5hTn19LGluaXQ6ZnVuY3Rpb24oKXt0aGlzLnN5c3RlbT10aGlzLmVsLnNjZW5lRWwuc3lzdGVtcy5waHlzaWNzLHRoaXMuZWwuc2NlbmVFbC5oYXNMb2FkZWQ/dGhpcy5pbml0Qm9keSgpOnRoaXMuZWwuc2NlbmVFbC5hZGRFdmVudExpc3RlbmVyKFwibG9hZGVkXCIsdGhpcy5pbml0Qm9keS5iaW5kKHRoaXMpKX0saW5pdEJvZHk6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMuZWwsbz10aGlzLmRhdGEscz1lLmdldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIpO2lmKHRoaXMuYm9keT1uZXcgaS5Cb2R5KHttYXNzOm8ubWFzc3x8MCxtYXRlcmlhbDp0aGlzLnN5c3RlbS5tYXRlcmlhbCxwb3NpdGlvbjpuZXcgaS5WZWMzKHMueCxzLnkscy56KSxsaW5lYXJEYW1waW5nOm8ubGluZWFyRGFtcGluZyxhbmd1bGFyRGFtcGluZzpvLmFuZ3VsYXJEYW1waW5nfSksdGhpcy5lbC5vYmplY3QzRC51cGRhdGVNYXRyaXhXb3JsZCghMCksXCJub25lXCIhPT1vLnNoYXBlKXt2YXIgcj1cImF1dG9cIj09PW8uc2hhcGU/dm9pZCAwOkFGUkFNRS51dGlscy5leHRlbmQoe30sdGhpcy5kYXRhLHt0eXBlOm4uVHlwZVtvLnNoYXBlLnRvVXBwZXJDYXNlKCldfSk7aWYoISh0PW4odGhpcy5lbC5vYmplY3QzRCxyKSkpcmV0dXJuIHZvaWQgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKFwibW9kZWwtbG9hZGVkXCIsdGhpcy5pbml0Qm9keS5iaW5kKHRoaXMpKTt0aGlzLmJvZHkuYWRkU2hhcGUodCx0Lm9mZnNldCx0Lm9yaWVudGF0aW9uKSx0aGlzLnN5c3RlbS5kZWJ1ZyYmdGhpcy5jcmVhdGVXaXJlZnJhbWUodGhpcy5ib2R5LHQpfXZhciBhPWUuZ2V0QXR0cmlidXRlKFwicm90YXRpb25cIik7dGhpcy5ib2R5LnF1YXRlcm5pb24uc2V0RnJvbUV1bGVyKFRIUkVFLk1hdGguZGVnVG9SYWQoYS54KSxUSFJFRS5NYXRoLmRlZ1RvUmFkKGEueSksVEhSRUUuTWF0aC5kZWdUb1JhZChhLnopLFwiWFlaXCIpLm5vcm1hbGl6ZSgpLHRoaXMuZWwuYm9keT10aGlzLmJvZHksdGhpcy5ib2R5LmVsPXRoaXMuZWwsdGhpcy5pc0xvYWRlZD0hMCx0aGlzLmlzUGxheWluZyYmdGhpcy5fcGxheSgpLHRoaXMuZWwuZW1pdChcImJvZHktbG9hZGVkXCIse2JvZHk6dGhpcy5lbC5ib2R5fSl9LHBsYXk6ZnVuY3Rpb24oKXt0aGlzLmlzTG9hZGVkJiZ0aGlzLl9wbGF5KCl9LF9wbGF5OmZ1bmN0aW9uKCl7dGhpcy5zeXN0ZW0uYWRkQmVoYXZpb3IodGhpcyx0aGlzLnN5c3RlbS5QaGFzZS5TSU1VTEFURSksdGhpcy5zeXN0ZW0uYWRkQm9keSh0aGlzLmJvZHkpLHRoaXMud2lyZWZyYW1lJiZ0aGlzLmVsLnNjZW5lRWwub2JqZWN0M0QuYWRkKHRoaXMud2lyZWZyYW1lKSx0aGlzLnN5bmNUb1BoeXNpY3MoKX0scGF1c2U6ZnVuY3Rpb24oKXt0aGlzLmlzTG9hZGVkJiYodGhpcy5zeXN0ZW0ucmVtb3ZlQmVoYXZpb3IodGhpcyx0aGlzLnN5c3RlbS5QaGFzZS5TSU1VTEFURSksdGhpcy5zeXN0ZW0ucmVtb3ZlQm9keSh0aGlzLmJvZHkpLHRoaXMud2lyZWZyYW1lJiZ0aGlzLmVsLnNjZW5lRWwub2JqZWN0M0QucmVtb3ZlKHRoaXMud2lyZWZyYW1lKSl9LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMucGF1c2UoKSxkZWxldGUgdGhpcy5ib2R5LmVsLGRlbGV0ZSB0aGlzLmJvZHksZGVsZXRlIHRoaXMuZWwuYm9keSxkZWxldGUgdGhpcy53aXJlZnJhbWV9LGNyZWF0ZVdpcmVmcmFtZTpmdW5jdGlvbih0LGUpe3ZhciBvPWUub2Zmc2V0LG49ZS5vcmllbnRhdGlvbixzPWkuc2hhcGUybWVzaCh0KS5jaGlsZHJlblswXTt0aGlzLndpcmVmcmFtZT1uZXcgVEhSRUUuTGluZVNlZ21lbnRzKG5ldyBUSFJFRS5FZGdlc0dlb21ldHJ5KHMuZ2VvbWV0cnkpLG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6MTY3MTE2ODB9KSksbyYmKHRoaXMud2lyZWZyYW1lLm9mZnNldD1vLmNsb25lKCkpLG4mJihuLmludmVyc2UobiksdGhpcy53aXJlZnJhbWUub3JpZW50YXRpb249bmV3IFRIUkVFLlF1YXRlcm5pb24obi54LG4ueSxuLnosbi53KSksdGhpcy5zeW5jV2lyZWZyYW1lKCl9LHN5bmNXaXJlZnJhbWU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMud2lyZWZyYW1lO3RoaXMud2lyZWZyYW1lJiYoZS5xdWF0ZXJuaW9uLmNvcHkodGhpcy5ib2R5LnF1YXRlcm5pb24pLGUub3JpZW50YXRpb24mJmUucXVhdGVybmlvbi5tdWx0aXBseShlLm9yaWVudGF0aW9uKSxlLnBvc2l0aW9uLmNvcHkodGhpcy5ib2R5LnBvc2l0aW9uKSxlLm9mZnNldCYmKHQ9ZS5vZmZzZXQuY2xvbmUoKS5hcHBseVF1YXRlcm5pb24oZS5xdWF0ZXJuaW9uKSxlLnBvc2l0aW9uLmFkZCh0KSksZS51cGRhdGVNYXRyaXgoKSl9LHN5bmNUb1BoeXNpY3M6ZnVuY3Rpb24oKXt2YXIgdD1uZXcgVEhSRUUuUXVhdGVybmlvbixlPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBmdW5jdGlvbigpe3ZhciBvPXRoaXMuZWwsaT1vLnBhcmVudEVsLG49dGhpcy5ib2R5O24mJihvLmNvbXBvbmVudHMudmVsb2NpdHkmJm4udmVsb2NpdHkuY29weShvLmdldEF0dHJpYnV0ZShcInZlbG9jaXR5XCIpKSxpLmlzU2NlbmU/KG4ucXVhdGVybmlvbi5jb3B5KG8ub2JqZWN0M0QucXVhdGVybmlvbiksbi5wb3NpdGlvbi5jb3B5KG8ub2JqZWN0M0QucG9zaXRpb24pKTooby5vYmplY3QzRC5nZXRXb3JsZFF1YXRlcm5pb24odCksbi5xdWF0ZXJuaW9uLmNvcHkodCksby5vYmplY3QzRC5nZXRXb3JsZFBvc2l0aW9uKGUpLG4ucG9zaXRpb24uY29weShlKSksdGhpcy53aXJlZnJhbWUmJnRoaXMuc3luY1dpcmVmcmFtZSgpKX19KCksc3luY0Zyb21QaHlzaWNzOmZ1bmN0aW9uKCl7dmFyIHQ9bmV3IFRIUkVFLlZlY3RvcjMsZT1uZXcgVEhSRUUuUXVhdGVybmlvbixvPW5ldyBUSFJFRS5RdWF0ZXJuaW9uO3JldHVybiBmdW5jdGlvbigpe3ZhciBpPXRoaXMuZWwsbj1pLnBhcmVudEVsLHM9dGhpcy5ib2R5O3MmJihuLmlzU2NlbmU/KGkuc2V0QXR0cmlidXRlKFwicXVhdGVybmlvblwiLHMucXVhdGVybmlvbiksaS5zZXRBdHRyaWJ1dGUoXCJwb3NpdGlvblwiLHMucG9zaXRpb24pKTooZS5jb3B5KHMucXVhdGVybmlvbiksbi5vYmplY3QzRC5nZXRXb3JsZFF1YXRlcm5pb24obyksZS5tdWx0aXBseShvLmludmVyc2UoKSksaS5zZXRBdHRyaWJ1dGUoXCJxdWF0ZXJuaW9uXCIse3g6ZS54LHk6ZS55LHo6ZS56LHc6ZS53fSksdC5jb3B5KHMucG9zaXRpb24pLG4ub2JqZWN0M0Qud29ybGRUb0xvY2FsKHQpLGkuc2V0QXR0cmlidXRlKFwicG9zaXRpb25cIix7eDp0LngseTp0Lnksejp0Lnp9KSksdGhpcy53aXJlZnJhbWUmJnRoaXMuc3luY1dpcmVmcmFtZSgpKX19KCl9fSx7XCIuLi8uLi8uLi9saWIvQ0FOTk9OLXNoYXBlMm1lc2hcIjo2LGNhbm5vbjoxNyxcInRocmVlLXRvLWNhbm5vblwiOjczfV0sODpbZnVuY3Rpb24odCxlLG8pe3ZhciBpPXQoXCIuL2JvZHlcIik7ZS5leHBvcnRzPUFGUkFNRS51dGlscy5leHRlbmQoe30saSx7ZGVwZW5kZW5jaWVzOltcInF1YXRlcm5pb25cIixcInZlbG9jaXR5XCJdLHNjaGVtYTpBRlJBTUUudXRpbHMuZXh0ZW5kKHt9LGkuc2NoZW1hLHttYXNzOntkZWZhdWx0OjV9LGxpbmVhckRhbXBpbmc6e2RlZmF1bHQ6LjAxfSxhbmd1bGFyRGFtcGluZzp7ZGVmYXVsdDouMDF9fSksc3RlcDpmdW5jdGlvbigpe3RoaXMuc3luY0Zyb21QaHlzaWNzKCl9fSl9LHtcIi4vYm9keVwiOjd9XSw5OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9dChcIi4vYm9keVwiKTtlLmV4cG9ydHM9QUZSQU1FLnV0aWxzLmV4dGVuZCh7fSxpLHtzdGVwOmZ1bmN0aW9uKCl7dGhpcy5zeW5jVG9QaHlzaWNzKCl9fSl9LHtcIi4vYm9keVwiOjd9XSwxMDpbZnVuY3Rpb24odCxlLG8pe3ZhciBpPXQoXCJjYW5ub25cIik7ZS5leHBvcnRzPXtkZXBlbmRlbmNpZXM6W1wiZHluYW1pYy1ib2R5XCJdLG11bHRpcGxlOiEwLHNjaGVtYTp7dHlwZTp7ZGVmYXVsdDpcImxvY2tcIixvbmVPZjpbXCJjb25lVHdpc3RcIixcImRpc3RhbmNlXCIsXCJoaW5nZVwiLFwibG9ja1wiLFwicG9pbnRUb1BvaW50XCJdfSx0YXJnZXQ6e3R5cGU6XCJzZWxlY3RvclwifSxtYXhGb3JjZTp7ZGVmYXVsdDoxZTYsbWluOjB9LGNvbGxpZGVDb25uZWN0ZWQ6e2RlZmF1bHQ6ITB9LHdha2VVcEJvZGllczp7ZGVmYXVsdDohMH0sZGlzdGFuY2U6e2RlZmF1bHQ6MCxtaW46MH0scGl2b3Q6e3R5cGU6XCJ2ZWMzXCJ9LHRhcmdldFBpdm90Ont0eXBlOlwidmVjM1wifSxheGlzOnt0eXBlOlwidmVjM1wiLGRlZmF1bHQ6e3g6MCx5OjAsejoxfX0sdGFyZ2V0QXhpczp7dHlwZTpcInZlYzNcIixkZWZhdWx0Ont4OjAseTowLHo6MX19fSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5zeXN0ZW09dGhpcy5lbC5zY2VuZUVsLnN5c3RlbXMucGh5c2ljcyx0aGlzLmNvbnN0cmFpbnQ9bnVsbH0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5jb25zdHJhaW50JiYodGhpcy5zeXN0ZW0ud29ybGQucmVtb3ZlQ29uc3RyYWludCh0aGlzLmNvbnN0cmFpbnQpLHRoaXMuY29uc3RyYWludD1udWxsKX0sdXBkYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbCxlPXRoaXMuZGF0YTtpZih0aGlzLnJlbW92ZSgpLCF0LmJvZHl8fCFlLnRhcmdldC5ib2R5KXJldHVybiB2b2lkKHQuYm9keT9lLnRhcmdldDp0KS5hZGRFdmVudExpc3RlbmVyKFwiYm9keS1sb2FkZWRcIix0aGlzLnVwZGF0ZS5iaW5kKHRoaXMse30pKTt0aGlzLmNvbnN0cmFpbnQ9dGhpcy5jcmVhdGVDb25zdHJhaW50KCksdGhpcy5zeXN0ZW0ud29ybGQuYWRkQ29uc3RyYWludCh0aGlzLmNvbnN0cmFpbnQpfSxjcmVhdGVDb25zdHJhaW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kYXRhLGU9bmV3IGkuVmVjMyh0LnBpdm90LngsdC5waXZvdC55LHQucGl2b3Queiksbz1uZXcgaS5WZWMzKHQudGFyZ2V0UGl2b3QueCx0LnRhcmdldFBpdm90LnksdC50YXJnZXRQaXZvdC56KSxuPW5ldyBpLlZlYzModC5heGlzLngsdC5heGlzLnksdC5heGlzLnopLHM9bmV3IGkuVmVjMyh0LnRhcmdldEF4aXMueCx0LnRhcmdldEF4aXMueSx0LnRhcmdldEF4aXMueik7c3dpdGNoKHQudHlwZSl7Y2FzZVwibG9ja1wiOnJldHVybiBuZXcgaS5Mb2NrQ29uc3RyYWludCh0aGlzLmVsLmJvZHksdC50YXJnZXQuYm9keSx7bWF4Rm9yY2U6dC5tYXhGb3JjZX0pO2Nhc2VcImRpc3RhbmNlXCI6cmV0dXJuIG5ldyBpLkRpc3RhbmNlQ29uc3RyYWludCh0aGlzLmVsLmJvZHksdC50YXJnZXQuYm9keSx0LmRpc3RhbmNlLHQubWF4Rm9yY2UpO2Nhc2VcImhpbmdlXCI6cmV0dXJuIG5ldyBpLkhpbmdlQ29uc3RyYWludCh0aGlzLmVsLmJvZHksdC50YXJnZXQuYm9keSx7cGl2b3RBOmUscGl2b3RCOm8sYXhpc0E6bixheGlzQjpzLG1heEZvcmNlOnQubWF4Rm9yY2V9KTtjYXNlXCJjb25lVHdpc3RcIjpyZXR1cm4gbmV3IGkuQ29uZVR3aXN0Q29uc3RyYWludCh0aGlzLmVsLmJvZHksdC50YXJnZXQuYm9keSx7cGl2b3RBOmUscGl2b3RCOm8sYXhpc0E6bixheGlzQjpzLG1heEZvcmNlOnQubWF4Rm9yY2V9KTtjYXNlXCJwb2ludFRvUG9pbnRcIjpyZXR1cm4gbmV3IGkuUG9pbnRUb1BvaW50Q29uc3RyYWludCh0aGlzLmVsLmJvZHksZSx0LnRhcmdldC5ib2R5LG8sdC5tYXhGb3JjZSk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJbY29uc3RyYWludF0gVW5leHBlY3RlZCB0eXBlOiBcIit0LnR5cGUpfX19fSx7Y2Fubm9uOjE3fV0sMTE6W2Z1bmN0aW9uKHQsZSxvKXtlLmV4cG9ydHM9e3ZlbG9jaXR5OnQoXCIuL3ZlbG9jaXR5XCIpLHF1YXRlcm5pb246dChcIi4vcXVhdGVybmlvblwiKSxyZWdpc3RlckFsbDpmdW5jdGlvbih0KXt0aGlzLl9yZWdpc3RlcmVkfHwodD10fHx3aW5kb3cuQUZSQU1FLHQuY29tcG9uZW50cy52ZWxvY2l0eXx8dC5yZWdpc3RlckNvbXBvbmVudChcInZlbG9jaXR5XCIsdGhpcy52ZWxvY2l0eSksdC5jb21wb25lbnRzLnF1YXRlcm5pb258fHQucmVnaXN0ZXJDb21wb25lbnQoXCJxdWF0ZXJuaW9uXCIsdGhpcy5xdWF0ZXJuaW9uKSx0aGlzLl9yZWdpc3RlcmVkPSEwKX19fSx7XCIuL3F1YXRlcm5pb25cIjoxMixcIi4vdmVsb2NpdHlcIjoxM31dLDEyOltmdW5jdGlvbih0LGUsbyl7ZS5leHBvcnRzPXtzY2hlbWE6e3R5cGU6XCJ2ZWM0XCJ9LHBsYXk6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLGU9dC5vYmplY3QzRC5xdWF0ZXJuaW9uO3QuaGFzQXR0cmlidXRlKFwicm90YXRpb25cIikmJih0LmNvbXBvbmVudHMucm90YXRpb24udXBkYXRlKCksdC5zZXRBdHRyaWJ1dGUoXCJxdWF0ZXJuaW9uXCIse3g6ZS54LHk6ZS55LHo6ZS56LHc6ZS53fSksdC5yZW1vdmVBdHRyaWJ1dGUoXCJyb3RhdGlvblwiKSx0aGlzLnVwZGF0ZSgpKX0sdXBkYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kYXRhO3RoaXMuZWwub2JqZWN0M0QucXVhdGVybmlvbi5zZXQodC54LHQueSx0LnosdC53KX19fSx7fV0sMTM6W2Z1bmN0aW9uKHQsZSxvKXtlLmV4cG9ydHM9e3NjaGVtYTp7dHlwZTpcInZlYzNcIn0saW5pdDpmdW5jdGlvbigpe3RoaXMuc3lzdGVtPXRoaXMuZWwuc2NlbmVFbC5zeXN0ZW1zLnBoeXNpY3MsdGhpcy5zeXN0ZW0mJnRoaXMuc3lzdGVtLmFkZEJlaGF2aW9yKHRoaXMsdGhpcy5zeXN0ZW0uUGhhc2UuUkVOREVSKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5zeXN0ZW0mJnRoaXMuc3lzdGVtLnJlbW92ZUJlaGF2aW9yKHRoaXMsdGhpcy5zeXN0ZW0uUGhhc2UuUkVOREVSKX0sdGljazpmdW5jdGlvbih0LGUpe2UmJih0aGlzLnN5c3RlbXx8dGhpcy5zdGVwKHQsZSkpfSxzdGVwOmZ1bmN0aW9uKHQsZSl7aWYoZSl7dmFyIG89dGhpcy5lbC5zY2VuZUVsLnN5c3RlbXMucGh5c2ljc3x8e2RhdGE6e21heEludGVydmFsOjEvNjB9fSxpPXRoaXMuZWwuZ2V0QXR0cmlidXRlKFwidmVsb2NpdHlcIil8fHt4OjAseTowLHo6MH0sbj10aGlzLmVsLmdldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIpfHx7eDowLHk6MCx6OjB9O2U9TWF0aC5taW4oZSwxZTMqby5kYXRhLm1heEludGVydmFsKSx0aGlzLmVsLnNldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIse3g6bi54K2kueCplLzFlMyx5Om4ueStpLnkqZS8xZTMsejpuLnoraS56KmUvMWUzfSl9fX19LHt9XSwxNDpbZnVuY3Rpb24odCxlLG8pe2UuZXhwb3J0cz17R1JBVklUWTotOS44LE1BWF9JTlRFUlZBTDo0LzYwLElURVJBVElPTlM6MTAsQ09OVEFDVF9NQVRFUklBTDp7ZnJpY3Rpb246LjAxLHJlc3RpdHV0aW9uOi4zLGNvbnRhY3RFcXVhdGlvblN0aWZmbmVzczoxZTgsY29udGFjdEVxdWF0aW9uUmVsYXhhdGlvbjozLGZyaWN0aW9uRXF1YXRpb25TdGlmZm5lc3M6MWU4LGZyaWN0aW9uRXF1YXRpb25SZWd1bGFyaXphdGlvbjozfX19LHt9XSwxNTpbZnVuY3Rpb24odCxlLG8pe3ZhciBpPXQoXCJjYW5ub25cIiksbj10KFwiLi4vY29uc3RhbnRzXCIpLHM9bi5HUkFWSVRZLHI9bi5DT05UQUNUX01BVEVSSUFMO2UuZXhwb3J0cz17c2NoZW1hOntncmF2aXR5OntkZWZhdWx0OnN9LGl0ZXJhdGlvbnM6e2RlZmF1bHQ6bi5JVEVSQVRJT05TfSxmcmljdGlvbjp7ZGVmYXVsdDpyLmZyaWN0aW9ufSxyZXN0aXR1dGlvbjp7ZGVmYXVsdDpyLnJlc3RpdHV0aW9ufSxjb250YWN0RXF1YXRpb25TdGlmZm5lc3M6e2RlZmF1bHQ6ci5jb250YWN0RXF1YXRpb25TdGlmZm5lc3N9LGNvbnRhY3RFcXVhdGlvblJlbGF4YXRpb246e2RlZmF1bHQ6ci5jb250YWN0RXF1YXRpb25SZWxheGF0aW9ufSxmcmljdGlvbkVxdWF0aW9uU3RpZmZuZXNzOntkZWZhdWx0OnIuZnJpY3Rpb25FcXVhdGlvblN0aWZmbmVzc30sZnJpY3Rpb25FcXVhdGlvblJlZ3VsYXJpemF0aW9uOntkZWZhdWx0OnIuZnJpY3Rpb25FcXVhdGlvblJlZ3VsYXJpemF0aW9ufSxtYXhJbnRlcnZhbDp7ZGVmYXVsdDo0LzYwfSxkZWJ1Zzp7ZGVmYXVsdDohMX19LFBoYXNlOntTSU1VTEFURTpcInNpbVwiLFJFTkRFUjpcInJlbmRlclwifSxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kYXRhO3RoaXMuZGVidWc9dC5kZWJ1Zyx0aGlzLmNoaWxkcmVuPXt9LHRoaXMuY2hpbGRyZW5bdGhpcy5QaGFzZS5TSU1VTEFURV09W10sdGhpcy5jaGlsZHJlblt0aGlzLlBoYXNlLlJFTkRFUl09W10sdGhpcy5saXN0ZW5lcnM9e30sdGhpcy53b3JsZD1uZXcgaS5Xb3JsZCx0aGlzLndvcmxkLnF1YXROb3JtYWxpemVTa2lwPTAsdGhpcy53b3JsZC5xdWF0Tm9ybWFsaXplRmFzdD0hMSx0aGlzLndvcmxkLnNvbHZlci5pdGVyYXRpb25zPXQuaXRlcmF0aW9ucyx0aGlzLndvcmxkLmdyYXZpdHkuc2V0KDAsdC5ncmF2aXR5LDApLHRoaXMud29ybGQuYnJvYWRwaGFzZT1uZXcgaS5OYWl2ZUJyb2FkcGhhc2UsdGhpcy5tYXRlcmlhbD1uZXcgaS5NYXRlcmlhbCh7bmFtZTpcImRlZmF1bHRNYXRlcmlhbFwifSksdGhpcy5jb250YWN0TWF0ZXJpYWw9bmV3IGkuQ29udGFjdE1hdGVyaWFsKHRoaXMubWF0ZXJpYWwsdGhpcy5tYXRlcmlhbCx7ZnJpY3Rpb246dC5mcmljdGlvbixyZXN0aXR1dGlvbjp0LnJlc3RpdHV0aW9uLGNvbnRhY3RFcXVhdGlvblN0aWZmbmVzczp0LmNvbnRhY3RFcXVhdGlvblN0aWZmbmVzcyxjb250YWN0RXF1YXRpb25SZWxheGF0aW9uOnQuY29udGFjdEVxdWF0aW9uUmVsYXhhdGlvbixmcmljdGlvbkVxdWF0aW9uU3RpZmZuZXNzOnQuZnJpY3Rpb25FcXVhdGlvblN0aWZmbmVzcyxmcmljdGlvbkVxdWF0aW9uUmVndWxhcml6YXRpb246dC5mcmljdGlvbkVxdWF0aW9uUmVndWxhcml6YXRpb259KSx0aGlzLndvcmxkLmFkZENvbnRhY3RNYXRlcmlhbCh0aGlzLmNvbnRhY3RNYXRlcmlhbCl9LHRpY2s6ZnVuY3Rpb24odCxlKXtpZihlKXt0aGlzLndvcmxkLnN0ZXAoTWF0aC5taW4oZS8xZTMsdGhpcy5kYXRhLm1heEludGVydmFsKSk7dmFyIG87Zm9yKG89MDtvPHRoaXMuY2hpbGRyZW5bdGhpcy5QaGFzZS5TSU1VTEFURV0ubGVuZ3RoO28rKyl0aGlzLmNoaWxkcmVuW3RoaXMuUGhhc2UuU0lNVUxBVEVdW29dLnN0ZXAodCxlKTtmb3Iobz0wO288dGhpcy5jaGlsZHJlblt0aGlzLlBoYXNlLlJFTkRFUl0ubGVuZ3RoO28rKyl0aGlzLmNoaWxkcmVuW3RoaXMuUGhhc2UuUkVOREVSXVtvXS5zdGVwKHQsZSl9fSxhZGRCb2R5OmZ1bmN0aW9uKHQpe3RoaXMubGlzdGVuZXJzW3QuaWRdPWZ1bmN0aW9uKGUpe3QuZWwuZW1pdChcImNvbGxpZGVcIixlKX0sdC5hZGRFdmVudExpc3RlbmVyKFwiY29sbGlkZVwiLHRoaXMubGlzdGVuZXJzW3QuaWRdKSx0aGlzLndvcmxkLmFkZEJvZHkodCl9LHJlbW92ZUJvZHk6ZnVuY3Rpb24odCl7dC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY29sbGlkZVwiLHRoaXMubGlzdGVuZXJzW3QuaWRdKSxkZWxldGUgdGhpcy5saXN0ZW5lcnNbdC5pZF0sdGhpcy53b3JsZC5yZW1vdmVCb2R5KHQpfSxhZGRCZWhhdmlvcjpmdW5jdGlvbih0LGUpe3RoaXMuY2hpbGRyZW5bZV0ucHVzaCh0KX0scmVtb3ZlQmVoYXZpb3I6ZnVuY3Rpb24odCxlKXt0aGlzLmNoaWxkcmVuW2VdLnNwbGljZSh0aGlzLmNoaWxkcmVuW2VdLmluZGV4T2YodCksMSl9LHVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmRhdGE7ZS5kZWJ1ZyE9PXQuZGVidWcmJmNvbnNvbGUud2FybihcIltwaHlzaWNzXSBgZGVidWdgIGNhbm5vdCBiZSBjaGFuZ2VkIGR5bmFtaWNhbGx5LlwiKSxlLm1heEludGVydmFsLHQubWF4SW50ZXJ2YWwsZS5ncmF2aXR5IT09dC5ncmF2aXR5JiZ0aGlzLndvcmxkLmdyYXZpdHkuc2V0KDAsZS5ncmF2aXR5LDApLHRoaXMuY29udGFjdE1hdGVyaWFsLmZyaWN0aW9uPWUuZnJpY3Rpb24sdGhpcy5jb250YWN0TWF0ZXJpYWwucmVzdGl0dXRpb249ZS5yZXN0aXR1dGlvbix0aGlzLmNvbnRhY3RNYXRlcmlhbC5jb250YWN0RXF1YXRpb25TdGlmZm5lc3M9ZS5jb250YWN0RXF1YXRpb25TdGlmZm5lc3MsdGhpcy5jb250YWN0TWF0ZXJpYWwuY29udGFjdEVxdWF0aW9uUmVsYXhhdGlvbj1lLmNvbnRhY3RFcXVhdGlvblJlbGF4YXRpb24sdGhpcy5jb250YWN0TWF0ZXJpYWwuZnJpY3Rpb25FcXVhdGlvblN0aWZmbmVzcz1lLmZyaWN0aW9uRXF1YXRpb25TdGlmZm5lc3MsdGhpcy5jb250YWN0TWF0ZXJpYWwuZnJpY3Rpb25FcXVhdGlvblJlZ3VsYXJpemF0aW9uPWUuZnJpY3Rpb25FcXVhdGlvblJlZ3VsYXJpemF0aW9ufX19LHtcIi4uL2NvbnN0YW50c1wiOjE0LGNhbm5vbjoxN31dLDE2OltmdW5jdGlvbih0LGUsbyl7ZS5leHBvcnRzPXtfYXJnczpbW3tob3N0ZWQ6e2RpcmVjdFVybDpcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9kb25tY2N1cmR5L2Nhbm5vbi5qcy92MC42LjItZGV2MS9wYWNrYWdlLmpzb25cIixnaXRVcmw6XCJnaXQ6Ly9naXRodWIuY29tL2Rvbm1jY3VyZHkvY2Fubm9uLmpzLmdpdCN2MC42LjItZGV2MVwiLGh0dHBzVXJsOlwiZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9kb25tY2N1cmR5L2Nhbm5vbi5qcy5naXQjdjAuNi4yLWRldjFcIixzaG9ydGN1dDpcImdpdGh1Yjpkb25tY2N1cmR5L2Nhbm5vbi5qcyN2MC42LjItZGV2MVwiLHNzaDpcImdpdEBnaXRodWIuY29tOmRvbm1jY3VyZHkvY2Fubm9uLmpzLmdpdCN2MC42LjItZGV2MVwiLHNzaFVybDpcImdpdCtzc2g6Ly9naXRAZ2l0aHViLmNvbS9kb25tY2N1cmR5L2Nhbm5vbi5qcy5naXQjdjAuNi4yLWRldjFcIix0eXBlOlwiZ2l0aHViXCJ9LG5hbWU6XCJjYW5ub25cIixyYXc6XCJjYW5ub25AZ2l0aHViOmRvbm1jY3VyZHkvY2Fubm9uLmpzI3YwLjYuMi1kZXYxXCIscmF3U3BlYzpcImdpdGh1Yjpkb25tY2N1cmR5L2Nhbm5vbi5qcyN2MC42LjItZGV2MVwiLHNjb3BlOm51bGwsc3BlYzpcImdpdGh1Yjpkb25tY2N1cmR5L2Nhbm5vbi5qcyN2MC42LjItZGV2MVwiLHR5cGU6XCJob3N0ZWRcIn0sXCIvVXNlcnMvZG9ubWNjdXJkeS9Eb2N1bWVudHMvUHJvamVjdHMvYWZyYW1lLWV4dHJhcy9ub2RlX21vZHVsZXMvYWZyYW1lLXBoeXNpY3Mtc3lzdGVtXCJdXSxfZnJvbTpcImRvbm1jY3VyZHkvY2Fubm9uLmpzI3YwLjYuMi1kZXYxXCIsX2lkOlwiY2Fubm9uQDAuNi4yXCIsX2luQ2FjaGU6ITAsX2luc3RhbGxhYmxlOiEwLF9sb2NhdGlvbjpcIi9jYW5ub25cIixfcGhhbnRvbUNoaWxkcmVuOnt9LF9yZXF1ZXN0ZWQ6e2hvc3RlZDp7ZGlyZWN0VXJsOlwiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Rvbm1jY3VyZHkvY2Fubm9uLmpzL3YwLjYuMi1kZXYxL3BhY2thZ2UuanNvblwiLGdpdFVybDpcImdpdDovL2dpdGh1Yi5jb20vZG9ubWNjdXJkeS9jYW5ub24uanMuZ2l0I3YwLjYuMi1kZXYxXCIsaHR0cHNVcmw6XCJnaXQraHR0cHM6Ly9naXRodWIuY29tL2Rvbm1jY3VyZHkvY2Fubm9uLmpzLmdpdCN2MC42LjItZGV2MVwiLHNob3J0Y3V0OlwiZ2l0aHViOmRvbm1jY3VyZHkvY2Fubm9uLmpzI3YwLjYuMi1kZXYxXCIsc3NoOlwiZ2l0QGdpdGh1Yi5jb206ZG9ubWNjdXJkeS9jYW5ub24uanMuZ2l0I3YwLjYuMi1kZXYxXCIsc3NoVXJsOlwiZ2l0K3NzaDovL2dpdEBnaXRodWIuY29tL2Rvbm1jY3VyZHkvY2Fubm9uLmpzLmdpdCN2MC42LjItZGV2MVwiLHR5cGU6XCJnaXRodWJcIn0sbmFtZTpcImNhbm5vblwiLHJhdzpcImNhbm5vbkBnaXRodWI6ZG9ubWNjdXJkeS9jYW5ub24uanMjdjAuNi4yLWRldjFcIixyYXdTcGVjOlwiZ2l0aHViOmRvbm1jY3VyZHkvY2Fubm9uLmpzI3YwLjYuMi1kZXYxXCIsc2NvcGU6bnVsbCxzcGVjOlwiZ2l0aHViOmRvbm1jY3VyZHkvY2Fubm9uLmpzI3YwLjYuMi1kZXYxXCIsdHlwZTpcImhvc3RlZFwifSxfcmVxdWlyZWRCeTpbXCIvYWZyYW1lLXBoeXNpY3Mtc3lzdGVtXCJdLF9yZXNvbHZlZDpcImdpdDovL2dpdGh1Yi5jb20vZG9ubWNjdXJkeS9jYW5ub24uanMuZ2l0IzAyMmU4YmE1M2ZhODNhYmYwYWQ4YTBlNGZkMDg2MjMxMjM4MzhhMTdcIixfc2hhc3VtOlwiNTdkOTM2MjkxMjhiYjY0ZDlmZTIzYWYyNmQyZGY4MmQ2OGIwOWQ3ZlwiLF9zaHJpbmt3cmFwOm51bGwsX3NwZWM6XCJjYW5ub25AZ2l0aHViOmRvbm1jY3VyZHkvY2Fubm9uLmpzI3YwLjYuMi1kZXYxXCIsX3doZXJlOlwiL1VzZXJzL2Rvbm1jY3VyZHkvRG9jdW1lbnRzL1Byb2plY3RzL2FmcmFtZS1leHRyYXMvbm9kZV9tb2R1bGVzL2FmcmFtZS1waHlzaWNzLXN5c3RlbVwiLGF1dGhvcjp7ZW1haWw6XCJzY2h0ZXBwZUBnbWFpbC5jb21cIixuYW1lOlwiU3RlZmFuIEhlZG1hblwiLHVybDpcImh0dHA6Ly9zdGVmZmUuc2VcIn0sYnVnczp7dXJsOlwiaHR0cHM6Ly9naXRodWIuY29tL3NjaHRlcHBlL2Nhbm5vbi5qcy9pc3N1ZXNcIn0sZGVwZW5kZW5jaWVzOnt9LGRlc2NyaXB0aW9uOlwiQSBsaWdodHdlaWdodCAzRCBwaHlzaWNzIGVuZ2luZSB3cml0dGVuIGluIEphdmFTY3JpcHQuXCIsZGV2RGVwZW5kZW5jaWVzOnticm93c2VyaWZ5OlwiKlwiLGdydW50OlwifjAuNC4wXCIsXCJncnVudC1icm93c2VyaWZ5XCI6XCJeMi4xLjRcIixcImdydW50LWNvbnRyaWItY29uY2F0XCI6XCJ+MC4xLjNcIixcImdydW50LWNvbnRyaWItanNoaW50XCI6XCJ+MC4xLjFcIixcImdydW50LWNvbnRyaWItbm9kZXVuaXRcIjpcIl4wLjQuMVwiLFwiZ3J1bnQtY29udHJpYi11Z2xpZnlcIjpcIl4wLjUuMVwiLFwiZ3J1bnQtY29udHJpYi15dWlkb2NcIjpcIl4wLjUuMlwiLGpzaGludDpcImxhdGVzdFwiLG5vZGV1bml0OlwiXjAuOS4wXCIsXCJ1Z2xpZnktanNcIjpcImxhdGVzdFwifSxlbmdpbmVzOntub2RlOlwiKlwifSxnaXRIZWFkOlwiMDIyZThiYTUzZmE4M2FiZjBhZDhhMGU0ZmQwODYyMzEyMzgzOGExN1wiLGhvbWVwYWdlOlwiaHR0cHM6Ly9naXRodWIuY29tL3NjaHRlcHBlL2Nhbm5vbi5qc1wiLGtleXdvcmRzOltcImNhbm5vbi5qc1wiLFwiY2Fubm9uXCIsXCJwaHlzaWNzXCIsXCJlbmdpbmVcIixcIjNkXCJdLGxpY2Vuc2VzOlt7dHlwZTpcIk1JVFwifV0sbWFpbjpcIi4vc3JjL0Nhbm5vbi5qc1wiLG5hbWU6XCJjYW5ub25cIixvcHRpb25hbERlcGVuZGVuY2llczp7fSxcbnJlYWRtZTonIyBjYW5ub24uanNcXG5cXG4jIyMgTGlnaHR3ZWlnaHQgM0QgcGh5c2ljcyBmb3IgdGhlIHdlYlxcbkluc3BpcmVkIGJ5IFt0aHJlZS5qc10oaHR0cHM6Ly9naXRodWIuY29tL21yZG9vYi90aHJlZS5qcykgYW5kIFthbW1vLmpzXShodHRwczovL2dpdGh1Yi5jb20va3JpcGtlbi9hbW1vLmpzKSwgYW5kIGRyaXZlbiBieSB0aGUgZmFjdCB0aGF0IHRoZSB3ZWIgbGFja3MgYSBwaHlzaWNzIGVuZ2luZSwgaGVyZSBjb21lcyBjYW5ub24uanMuXFxuVGhlIHJpZ2lkIGJvZHkgcGh5c2ljcyBlbmdpbmUgaW5jbHVkZXMgc2ltcGxlIGNvbGxpc2lvbiBkZXRlY3Rpb24sIHZhcmlvdXMgYm9keSBzaGFwZXMsIGNvbnRhY3RzLCBmcmljdGlvbiBhbmQgY29uc3RyYWludHMuXFxuXFxuW0RlbW9zXShodHRwOi8vc2NodGVwcGUuZ2l0aHViLmNvbS9jYW5ub24uanMpIC0gW0RvY3VtZW50YXRpb25dKGh0dHA6Ly9zY2h0ZXBwZS5naXRodWIuY29tL2Nhbm5vbi5qcy9kb2NzKSAtIFtSZW5kZXJpbmcgaGludHNdKGh0dHBzOi8vZ2l0aHViLmNvbS9zY2h0ZXBwZS9jYW5ub24uanMvdHJlZS9tYXN0ZXIvZXhhbXBsZXMpIC0gW05QTSBwYWNrYWdlXShodHRwczovL25wbWpzLm9yZy9wYWNrYWdlL2Nhbm5vbikgLSBbQ0ROXShodHRwczovL2NkbmpzLmNvbS9saWJyYXJpZXMvY2Fubm9uLmpzKVxcblxcbiMjIyBCcm93c2VyIGluc3RhbGxcXG5cXG5KdXN0IGluY2x1ZGUgW2Nhbm5vbi5qc10oaHR0cHM6Ly9naXRodWIuY29tL3NjaHRlcHBlL2Nhbm5vbi5qcy9yZWxlYXNlcy9kb3dubG9hZC92MC42LjIvY2Fubm9uLmpzKSBvciBbY2Fubm9uLm1pbi5qc10oaHR0cHM6Ly9naXRodWIuY29tL3NjaHRlcHBlL2Nhbm5vbi5qcy9yZWxlYXNlcy9kb3dubG9hZC92MC42LjIvY2Fubm9uLm1pbi5qcykgaW4geW91ciBodG1sIGFuZCB5b3VcXCdyZSBkb25lOlxcblxcbmBgYGh0bWxcXG48c2NyaXB0IHNyYz1cImNhbm5vbi5taW4uanNcIj48XFwvc2NyaXB0PlxcbmBgYFxcblxcbiMjIyBOb2RlLmpzIGluc3RhbGxcXG5cXG5JbnN0YWxsIHRoZSBjYW5ub24gcGFja2FnZSB2aWEgTlBNOlxcblxcbmBgYGJhc2hcXG5ucG0gaW5zdGFsbCAtLXNhdmUgY2Fubm9uXFxuYGBgXFxuXFxuQWx0ZXJuYXRpdmVseSwgcG9pbnQgdG8gdGhlIEdpdGh1YiByZXBvIGRpcmVjdGx5IHRvIGdldCB0aGUgdmVyeSBsYXRlc3QgdmVyc2lvbjpcXG5cXG5gYGBiYXNoXFxubnBtIGluc3RhbGwgLS1zYXZlIHNjaHRlcHBlL2Nhbm5vbi5qc1xcbmBgYFxcblxcbiMjIyBFeGFtcGxlXFxuXFxuVGhlIHNhbXBsZSBjb2RlIGJlbG93IGNyZWF0ZXMgYSBzcGhlcmUgb24gYSBwbGFuZSwgc3RlcHMgdGhlIHNpbXVsYXRpb24sIGFuZCBwcmludHMgdGhlIHNwaGVyZSBzaW11bGF0aW9uIHRvIHRoZSBjb25zb2xlLiBOb3RlIHRoYXQgQ2Fubm9uLmpzIHVzZXMgW1NJIHVuaXRzXShodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0ludGVybmF0aW9uYWxfU3lzdGVtX29mX1VuaXRzKSAobWV0cmUsIGtpbG9ncmFtLCBzZWNvbmQsIGV0Yy4pLlxcblxcbmBgYGphdmFzY3JpcHRcXG4vLyBTZXR1cCBvdXIgd29ybGRcXG52YXIgd29ybGQgPSBuZXcgQ0FOTk9OLldvcmxkKCk7XFxud29ybGQuZ3Jhdml0eS5zZXQoMCwgMCwgLTkuODIpOyAvLyBtL3PCslxcblxcbi8vIENyZWF0ZSBhIHNwaGVyZVxcbnZhciByYWRpdXMgPSAxOyAvLyBtXFxudmFyIHNwaGVyZUJvZHkgPSBuZXcgQ0FOTk9OLkJvZHkoe1xcbiAgIG1hc3M6IDUsIC8vIGtnXFxuICAgcG9zaXRpb246IG5ldyBDQU5OT04uVmVjMygwLCAwLCAxMCksIC8vIG1cXG4gICBzaGFwZTogbmV3IENBTk5PTi5TcGhlcmUocmFkaXVzKVxcbn0pO1xcbndvcmxkLmFkZEJvZHkoc3BoZXJlQm9keSk7XFxuXFxuLy8gQ3JlYXRlIGEgcGxhbmVcXG52YXIgZ3JvdW5kQm9keSA9IG5ldyBDQU5OT04uQm9keSh7XFxuICAgIG1hc3M6IDAgLy8gbWFzcyA9PSAwIG1ha2VzIHRoZSBib2R5IHN0YXRpY1xcbn0pO1xcbnZhciBncm91bmRTaGFwZSA9IG5ldyBDQU5OT04uUGxhbmUoKTtcXG5ncm91bmRCb2R5LmFkZFNoYXBlKGdyb3VuZFNoYXBlKTtcXG53b3JsZC5hZGRCb2R5KGdyb3VuZEJvZHkpO1xcblxcbnZhciBmaXhlZFRpbWVTdGVwID0gMS4wIC8gNjAuMDsgLy8gc2Vjb25kc1xcbnZhciBtYXhTdWJTdGVwcyA9IDM7XFxuXFxuLy8gU3RhcnQgdGhlIHNpbXVsYXRpb24gbG9vcFxcbnZhciBsYXN0VGltZTtcXG4oZnVuY3Rpb24gc2ltbG9vcCh0aW1lKXtcXG4gIHJlcXVlc3RBbmltYXRpb25GcmFtZShzaW1sb29wKTtcXG4gIGlmKGxhc3RUaW1lICE9PSB1bmRlZmluZWQpe1xcbiAgICAgdmFyIGR0ID0gKHRpbWUgLSBsYXN0VGltZSkgLyAxMDAwO1xcbiAgICAgd29ybGQuc3RlcChmaXhlZFRpbWVTdGVwLCBkdCwgbWF4U3ViU3RlcHMpO1xcbiAgfVxcbiAgY29uc29sZS5sb2coXCJTcGhlcmUgeiBwb3NpdGlvbjogXCIgKyBzcGhlcmVCb2R5LnBvc2l0aW9uLnopO1xcbiAgbGFzdFRpbWUgPSB0aW1lO1xcbn0pKCk7XFxuYGBgXFxuXFxuSWYgeW91IHdhbnQgdG8ga25vdyBob3cgdG8gdXNlIGNhbm5vbi5qcyB3aXRoIGEgcmVuZGVyaW5nIGVuZ2luZSwgZm9yIGV4YW1wbGUgVGhyZWUuanMsIHNlZSB0aGUgW0V4YW1wbGVzXShleGFtcGxlcykuXFxuXFxuIyMjIEZlYXR1cmVzXFxuKiBSaWdpZCBib2R5IGR5bmFtaWNzXFxuKiBEaXNjcmV0ZSBjb2xsaXNpb24gZGV0ZWN0aW9uXFxuKiBDb250YWN0cywgZnJpY3Rpb24gYW5kIHJlc3RpdHV0aW9uXFxuKiBDb25zdHJhaW50c1xcbiAgICogUG9pbnRUb1BvaW50IChhLmsuYS4gYmFsbC9zb2NrZXQgam9pbnQpXFxuICAgKiBEaXN0YW5jZVxcbiAgICogSGluZ2UgKHdpdGggb3B0aW9uYWwgbW90b3IpXFxuICAgKiBMb2NrXFxuICAgKiBDb25lVHdpc3RcXG4qIEdhdXNzLVNlaWRlbCBjb25zdHJhaW50IHNvbHZlciBhbmQgYW4gaXNsYW5kIHNwbGl0IGFsZ29yaXRobVxcbiogQ29sbGlzaW9uIGZpbHRlcnNcXG4qIEJvZHkgc2xlZXBpbmdcXG4qIEV4cGVyaW1lbnRhbCBTUEggLyBmbHVpZCBzdXBwb3J0XFxuKiBWYXJpb3VzIHNoYXBlcyBhbmQgY29sbGlzaW9uIGFsZ29yaXRobXMgKHNlZSB0YWJsZSBiZWxvdylcXG5cXG58ICAgICAgICAgICAgIHwgW1NwaGVyZV0oaHR0cDovL3NjaHRlcHBlLmdpdGh1Yi5pby9jYW5ub24uanMvZG9jcy9jbGFzc2VzL1NwaGVyZS5odG1sKSB8IFtQbGFuZV0oaHR0cDovL3NjaHRlcHBlLmdpdGh1Yi5pby9jYW5ub24uanMvZG9jcy9jbGFzc2VzL1BsYW5lLmh0bWwpIHwgW0JveF0oaHR0cDovL3NjaHRlcHBlLmdpdGh1Yi5pby9jYW5ub24uanMvZG9jcy9jbGFzc2VzL0JveC5odG1sKSB8IFtDb252ZXhdKGh0dHA6Ly9zY2h0ZXBwZS5naXRodWIuaW8vY2Fubm9uLmpzL2RvY3MvY2xhc3Nlcy9Db252ZXhQb2x5aGVkcm9uLmh0bWwpIHwgW1BhcnRpY2xlXShodHRwOi8vc2NodGVwcGUuZ2l0aHViLmlvL2Nhbm5vbi5qcy9kb2NzL2NsYXNzZXMvUGFydGljbGUuaHRtbCkgfCBbSGVpZ2h0ZmllbGRdKGh0dHA6Ly9zY2h0ZXBwZS5naXRodWIuaW8vY2Fubm9uLmpzL2RvY3MvY2xhc3Nlcy9IZWlnaHRmaWVsZC5odG1sKSB8IFtUcmltZXNoXShodHRwOi8vc2NodGVwcGUuZ2l0aHViLmlvL2Nhbm5vbi5qcy9kb2NzL2NsYXNzZXMvVHJpbWVzaC5odG1sKSB8XFxufCA6LS0tLS0tLS0tLS18Oi0tLS0tLTp8Oi0tLS0tOnw6LS0tOnw6LS0tLS0tOnw6LS0tLS0tLS06fDotLS0tLS0tLS0tLTp8Oi0tLS0tLS06fFxcbnwgU3BoZXJlICAgICAgfCBZZXMgICAgfCBZZXMgICB8IFllcyB8IFllcyAgICB8IFllcyAgICAgIHwgWWVzICAgICAgICAgfCBZZXMgICAgIHxcXG58IFBsYW5lICAgICAgIHwgLSAgICAgIHwgLSAgICAgfCBZZXMgfCBZZXMgICAgfCBZZXMgICAgICB8IC0gICAgICAgICAgIHwgWWVzICAgICB8XFxufCBCb3ggICAgICAgICB8IC0gICAgICB8IC0gICAgIHwgWWVzIHwgWWVzICAgIHwgWWVzICAgICAgfCBZZXMgICAgICAgICB8ICh0b2RvKSAgfFxcbnwgQ3lsaW5kZXIgICAgfCAtICAgICAgfCAtICAgICB8IFllcyB8IFllcyAgICB8IFllcyAgICAgIHwgWWVzICAgICAgICAgfCAodG9kbykgIHxcXG58IENvbnZleCAgICAgIHwgLSAgICAgIHwgLSAgICAgfCAtICAgfCBZZXMgICAgfCBZZXMgICAgICB8IFllcyAgICAgICAgIHwgKHRvZG8pICB8XFxufCBQYXJ0aWNsZSAgICB8IC0gICAgICB8IC0gICAgIHwgLSAgIHwgLSAgICAgIHwgLSAgICAgICAgfCAodG9kbykgICAgICB8ICh0b2RvKSAgfFxcbnwgSGVpZ2h0ZmllbGQgfCAtICAgICAgfCAtICAgICB8IC0gICB8IC0gICAgICB8IC0gICAgICAgIHwgLSAgICAgICAgICAgfCAodG9kbykgIHxcXG58IFRyaW1lc2ggICAgIHwgLSAgICAgIHwgLSAgICAgfCAtICAgfCAtICAgICAgfCAtICAgICAgICB8IC0gICAgICAgICAgIHwgLSAgICAgICB8XFxuXFxuIyMjIFRvZG9cXG5UaGUgc2ltcGxlciB0b2RvcyBhcmUgbWFya2VkIHdpdGggYGBgQHRvZG9gYGAgaW4gdGhlIGNvZGUuIEdpdGh1YiBJc3N1ZXMgY2FuIGFuZCBzaG91bGQgYWxzbyBiZSB1c2VkIGZvciB0b2Rvcy5cXG5cXG4jIyMgSGVscFxcbkNyZWF0ZSBhbiBbaXNzdWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9zY2h0ZXBwZS9jYW5ub24uanMvaXNzdWVzKSBpZiB5b3UgbmVlZCBoZWxwLlxcbicscmVhZG1lRmlsZW5hbWU6XCJSRUFETUUubWFya2Rvd25cIixyZXBvc2l0b3J5Ont0eXBlOlwiZ2l0XCIsdXJsOlwiZ2l0K2h0dHBzOi8vZ2l0aHViLmNvbS9zY2h0ZXBwZS9jYW5ub24uanMuZ2l0XCJ9LHZlcnNpb246XCIwLjYuMlwifX0se31dLDE3OltmdW5jdGlvbih0LGUsbyl7ZS5leHBvcnRzPXt2ZXJzaW9uOnQoXCIuLi9wYWNrYWdlLmpzb25cIikudmVyc2lvbixBQUJCOnQoXCIuL2NvbGxpc2lvbi9BQUJCXCIpLEFycmF5Q29sbGlzaW9uTWF0cml4OnQoXCIuL2NvbGxpc2lvbi9BcnJheUNvbGxpc2lvbk1hdHJpeFwiKSxCb2R5OnQoXCIuL29iamVjdHMvQm9keVwiKSxCb3g6dChcIi4vc2hhcGVzL0JveFwiKSxCcm9hZHBoYXNlOnQoXCIuL2NvbGxpc2lvbi9Ccm9hZHBoYXNlXCIpLENvbnN0cmFpbnQ6dChcIi4vY29uc3RyYWludHMvQ29uc3RyYWludFwiKSxDb250YWN0RXF1YXRpb246dChcIi4vZXF1YXRpb25zL0NvbnRhY3RFcXVhdGlvblwiKSxOYXJyb3dwaGFzZTp0KFwiLi93b3JsZC9OYXJyb3dwaGFzZVwiKSxDb25lVHdpc3RDb25zdHJhaW50OnQoXCIuL2NvbnN0cmFpbnRzL0NvbmVUd2lzdENvbnN0cmFpbnRcIiksQ29udGFjdE1hdGVyaWFsOnQoXCIuL21hdGVyaWFsL0NvbnRhY3RNYXRlcmlhbFwiKSxDb252ZXhQb2x5aGVkcm9uOnQoXCIuL3NoYXBlcy9Db252ZXhQb2x5aGVkcm9uXCIpLEN5bGluZGVyOnQoXCIuL3NoYXBlcy9DeWxpbmRlclwiKSxEaXN0YW5jZUNvbnN0cmFpbnQ6dChcIi4vY29uc3RyYWludHMvRGlzdGFuY2VDb25zdHJhaW50XCIpLEVxdWF0aW9uOnQoXCIuL2VxdWF0aW9ucy9FcXVhdGlvblwiKSxFdmVudFRhcmdldDp0KFwiLi91dGlscy9FdmVudFRhcmdldFwiKSxGcmljdGlvbkVxdWF0aW9uOnQoXCIuL2VxdWF0aW9ucy9GcmljdGlvbkVxdWF0aW9uXCIpLEdTU29sdmVyOnQoXCIuL3NvbHZlci9HU1NvbHZlclwiKSxHcmlkQnJvYWRwaGFzZTp0KFwiLi9jb2xsaXNpb24vR3JpZEJyb2FkcGhhc2VcIiksSGVpZ2h0ZmllbGQ6dChcIi4vc2hhcGVzL0hlaWdodGZpZWxkXCIpLEhpbmdlQ29uc3RyYWludDp0KFwiLi9jb25zdHJhaW50cy9IaW5nZUNvbnN0cmFpbnRcIiksTG9ja0NvbnN0cmFpbnQ6dChcIi4vY29uc3RyYWludHMvTG9ja0NvbnN0cmFpbnRcIiksTWF0Mzp0KFwiLi9tYXRoL01hdDNcIiksTWF0ZXJpYWw6dChcIi4vbWF0ZXJpYWwvTWF0ZXJpYWxcIiksTmFpdmVCcm9hZHBoYXNlOnQoXCIuL2NvbGxpc2lvbi9OYWl2ZUJyb2FkcGhhc2VcIiksT2JqZWN0Q29sbGlzaW9uTWF0cml4OnQoXCIuL2NvbGxpc2lvbi9PYmplY3RDb2xsaXNpb25NYXRyaXhcIiksUG9vbDp0KFwiLi91dGlscy9Qb29sXCIpLFBhcnRpY2xlOnQoXCIuL3NoYXBlcy9QYXJ0aWNsZVwiKSxQbGFuZTp0KFwiLi9zaGFwZXMvUGxhbmVcIiksUG9pbnRUb1BvaW50Q29uc3RyYWludDp0KFwiLi9jb25zdHJhaW50cy9Qb2ludFRvUG9pbnRDb25zdHJhaW50XCIpLFF1YXRlcm5pb246dChcIi4vbWF0aC9RdWF0ZXJuaW9uXCIpLFJheTp0KFwiLi9jb2xsaXNpb24vUmF5XCIpLFJheWNhc3RWZWhpY2xlOnQoXCIuL29iamVjdHMvUmF5Y2FzdFZlaGljbGVcIiksUmF5Y2FzdFJlc3VsdDp0KFwiLi9jb2xsaXNpb24vUmF5Y2FzdFJlc3VsdFwiKSxSaWdpZFZlaGljbGU6dChcIi4vb2JqZWN0cy9SaWdpZFZlaGljbGVcIiksUm90YXRpb25hbEVxdWF0aW9uOnQoXCIuL2VxdWF0aW9ucy9Sb3RhdGlvbmFsRXF1YXRpb25cIiksUm90YXRpb25hbE1vdG9yRXF1YXRpb246dChcIi4vZXF1YXRpb25zL1JvdGF0aW9uYWxNb3RvckVxdWF0aW9uXCIpLFNBUEJyb2FkcGhhc2U6dChcIi4vY29sbGlzaW9uL1NBUEJyb2FkcGhhc2VcIiksU1BIU3lzdGVtOnQoXCIuL29iamVjdHMvU1BIU3lzdGVtXCIpLFNoYXBlOnQoXCIuL3NoYXBlcy9TaGFwZVwiKSxTb2x2ZXI6dChcIi4vc29sdmVyL1NvbHZlclwiKSxTcGhlcmU6dChcIi4vc2hhcGVzL1NwaGVyZVwiKSxTcGxpdFNvbHZlcjp0KFwiLi9zb2x2ZXIvU3BsaXRTb2x2ZXJcIiksU3ByaW5nOnQoXCIuL29iamVjdHMvU3ByaW5nXCIpLFRyYW5zZm9ybTp0KFwiLi9tYXRoL1RyYW5zZm9ybVwiKSxUcmltZXNoOnQoXCIuL3NoYXBlcy9UcmltZXNoXCIpLFZlYzM6dChcIi4vbWF0aC9WZWMzXCIpLFZlYzNQb29sOnQoXCIuL3V0aWxzL1ZlYzNQb29sXCIpLFdvcmxkOnQoXCIuL3dvcmxkL1dvcmxkXCIpfX0se1wiLi4vcGFja2FnZS5qc29uXCI6MTYsXCIuL2NvbGxpc2lvbi9BQUJCXCI6MTgsXCIuL2NvbGxpc2lvbi9BcnJheUNvbGxpc2lvbk1hdHJpeFwiOjE5LFwiLi9jb2xsaXNpb24vQnJvYWRwaGFzZVwiOjIwLFwiLi9jb2xsaXNpb24vR3JpZEJyb2FkcGhhc2VcIjoyMSxcIi4vY29sbGlzaW9uL05haXZlQnJvYWRwaGFzZVwiOjIyLFwiLi9jb2xsaXNpb24vT2JqZWN0Q29sbGlzaW9uTWF0cml4XCI6MjMsXCIuL2NvbGxpc2lvbi9SYXlcIjoyNSxcIi4vY29sbGlzaW9uL1JheWNhc3RSZXN1bHRcIjoyNixcIi4vY29sbGlzaW9uL1NBUEJyb2FkcGhhc2VcIjoyNyxcIi4vY29uc3RyYWludHMvQ29uZVR3aXN0Q29uc3RyYWludFwiOjI4LFwiLi9jb25zdHJhaW50cy9Db25zdHJhaW50XCI6MjksXCIuL2NvbnN0cmFpbnRzL0Rpc3RhbmNlQ29uc3RyYWludFwiOjMwLFwiLi9jb25zdHJhaW50cy9IaW5nZUNvbnN0cmFpbnRcIjozMSxcIi4vY29uc3RyYWludHMvTG9ja0NvbnN0cmFpbnRcIjozMixcIi4vY29uc3RyYWludHMvUG9pbnRUb1BvaW50Q29uc3RyYWludFwiOjMzLFwiLi9lcXVhdGlvbnMvQ29udGFjdEVxdWF0aW9uXCI6MzUsXCIuL2VxdWF0aW9ucy9FcXVhdGlvblwiOjM2LFwiLi9lcXVhdGlvbnMvRnJpY3Rpb25FcXVhdGlvblwiOjM3LFwiLi9lcXVhdGlvbnMvUm90YXRpb25hbEVxdWF0aW9uXCI6MzgsXCIuL2VxdWF0aW9ucy9Sb3RhdGlvbmFsTW90b3JFcXVhdGlvblwiOjM5LFwiLi9tYXRlcmlhbC9Db250YWN0TWF0ZXJpYWxcIjo0MCxcIi4vbWF0ZXJpYWwvTWF0ZXJpYWxcIjo0MSxcIi4vbWF0aC9NYXQzXCI6NDMsXCIuL21hdGgvUXVhdGVybmlvblwiOjQ0LFwiLi9tYXRoL1RyYW5zZm9ybVwiOjQ1LFwiLi9tYXRoL1ZlYzNcIjo0NixcIi4vb2JqZWN0cy9Cb2R5XCI6NDcsXCIuL29iamVjdHMvUmF5Y2FzdFZlaGljbGVcIjo0OCxcIi4vb2JqZWN0cy9SaWdpZFZlaGljbGVcIjo0OSxcIi4vb2JqZWN0cy9TUEhTeXN0ZW1cIjo1MCxcIi4vb2JqZWN0cy9TcHJpbmdcIjo1MSxcIi4vc2hhcGVzL0JveFwiOjUzLFwiLi9zaGFwZXMvQ29udmV4UG9seWhlZHJvblwiOjU0LFwiLi9zaGFwZXMvQ3lsaW5kZXJcIjo1NSxcIi4vc2hhcGVzL0hlaWdodGZpZWxkXCI6NTYsXCIuL3NoYXBlcy9QYXJ0aWNsZVwiOjU3LFwiLi9zaGFwZXMvUGxhbmVcIjo1OCxcIi4vc2hhcGVzL1NoYXBlXCI6NTksXCIuL3NoYXBlcy9TcGhlcmVcIjo2MCxcIi4vc2hhcGVzL1RyaW1lc2hcIjo2MSxcIi4vc29sdmVyL0dTU29sdmVyXCI6NjIsXCIuL3NvbHZlci9Tb2x2ZXJcIjo2MyxcIi4vc29sdmVyL1NwbGl0U29sdmVyXCI6NjQsXCIuL3V0aWxzL0V2ZW50VGFyZ2V0XCI6NjUsXCIuL3V0aWxzL1Bvb2xcIjo2NyxcIi4vdXRpbHMvVmVjM1Bvb2xcIjo3MCxcIi4vd29ybGQvTmFycm93cGhhc2VcIjo3MSxcIi4vd29ybGQvV29ybGRcIjo3Mn1dLDE4OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXt0PXR8fHt9LHRoaXMubG93ZXJCb3VuZD1uZXcgbix0Lmxvd2VyQm91bmQmJnRoaXMubG93ZXJCb3VuZC5jb3B5KHQubG93ZXJCb3VuZCksdGhpcy51cHBlckJvdW5kPW5ldyBuLHQudXBwZXJCb3VuZCYmdGhpcy51cHBlckJvdW5kLmNvcHkodC51cHBlckJvdW5kKX12YXIgbj10KFwiLi4vbWF0aC9WZWMzXCIpO3QoXCIuLi91dGlscy9VdGlsc1wiKTtlLmV4cG9ydHM9aTt2YXIgcz1uZXcgbjtpLnByb3RvdHlwZS5zZXRGcm9tUG9pbnRzPWZ1bmN0aW9uKHQsZSxvLGkpe3ZhciBuPXRoaXMubG93ZXJCb3VuZCxyPXRoaXMudXBwZXJCb3VuZCxhPW87bi5jb3B5KHRbMF0pLGEmJmEudm11bHQobixuKSxyLmNvcHkobik7Zm9yKHZhciBjPTE7Yzx0Lmxlbmd0aDtjKyspe3ZhciBoPXRbY107YSYmKGEudm11bHQoaCxzKSxoPXMpLGgueD5yLngmJihyLng9aC54KSxoLng8bi54JiYobi54PWgueCksaC55PnIueSYmKHIueT1oLnkpLGgueTxuLnkmJihuLnk9aC55KSxoLno+ci56JiYoci56PWgueiksaC56PG4ueiYmKG4uej1oLnopfXJldHVybiBlJiYoZS52YWRkKG4sbiksZS52YWRkKHIscikpLGkmJihuLngtPWksbi55LT1pLG4uei09aSxyLngrPWksci55Kz1pLHIueis9aSksdGhpc30saS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sb3dlckJvdW5kLmNvcHkodC5sb3dlckJvdW5kKSx0aGlzLnVwcGVyQm91bmQuY29weSh0LnVwcGVyQm91bmQpLHRoaXN9LGkucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBpKS5jb3B5KHRoaXMpfSxpLnByb3RvdHlwZS5leHRlbmQ9ZnVuY3Rpb24odCl7dGhpcy5sb3dlckJvdW5kLng9TWF0aC5taW4odGhpcy5sb3dlckJvdW5kLngsdC5sb3dlckJvdW5kLngpLHRoaXMudXBwZXJCb3VuZC54PU1hdGgubWF4KHRoaXMudXBwZXJCb3VuZC54LHQudXBwZXJCb3VuZC54KSx0aGlzLmxvd2VyQm91bmQueT1NYXRoLm1pbih0aGlzLmxvd2VyQm91bmQueSx0Lmxvd2VyQm91bmQueSksdGhpcy51cHBlckJvdW5kLnk9TWF0aC5tYXgodGhpcy51cHBlckJvdW5kLnksdC51cHBlckJvdW5kLnkpLHRoaXMubG93ZXJCb3VuZC56PU1hdGgubWluKHRoaXMubG93ZXJCb3VuZC56LHQubG93ZXJCb3VuZC56KSx0aGlzLnVwcGVyQm91bmQuej1NYXRoLm1heCh0aGlzLnVwcGVyQm91bmQueix0LnVwcGVyQm91bmQueil9LGkucHJvdG90eXBlLm92ZXJsYXBzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubG93ZXJCb3VuZCxvPXRoaXMudXBwZXJCb3VuZCxpPXQubG93ZXJCb3VuZCxuPXQudXBwZXJCb3VuZCxzPWkueDw9by54JiZvLng8PW4ueHx8ZS54PD1uLngmJm4ueDw9by54LHI9aS55PD1vLnkmJm8ueTw9bi55fHxlLnk8PW4ueSYmbi55PD1vLnksYT1pLno8PW8ueiYmby56PD1uLnp8fGUuejw9bi56JiZuLno8PW8uejtyZXR1cm4gcyYmciYmYX0saS5wcm90b3R5cGUudm9sdW1lPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sb3dlckJvdW5kLGU9dGhpcy51cHBlckJvdW5kO3JldHVybihlLngtdC54KSooZS55LXQueSkqKGUuei10LnopfSxpLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmxvd2VyQm91bmQsbz10aGlzLnVwcGVyQm91bmQsaT10Lmxvd2VyQm91bmQsbj10LnVwcGVyQm91bmQ7cmV0dXJuIGUueDw9aS54JiZvLng+PW4ueCYmZS55PD1pLnkmJm8ueT49bi55JiZlLno8PWkueiYmby56Pj1uLnp9LGkucHJvdG90eXBlLmdldENvcm5lcnM9ZnVuY3Rpb24odCxlLG8saSxuLHMscixhKXt2YXIgYz10aGlzLmxvd2VyQm91bmQsaD10aGlzLnVwcGVyQm91bmQ7dC5jb3B5KGMpLGUuc2V0KGgueCxjLnksYy56KSxvLnNldChoLngsaC55LGMueiksaS5zZXQoYy54LGgueSxoLnopLG4uc2V0KGgueCxjLnksYy56KSxzLnNldChjLngsaC55LGMueiksci5zZXQoYy54LGMueSxoLnopLGEuY29weShoKX07dmFyIHI9W25ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuXTtpLnByb3RvdHlwZS50b0xvY2FsRnJhbWU9ZnVuY3Rpb24odCxlKXt2YXIgbz1yLGk9b1swXSxuPW9bMV0scz1vWzJdLGE9b1szXSxjPW9bNF0saD1vWzVdLGw9b1s2XSx1PW9bN107dGhpcy5nZXRDb3JuZXJzKGksbixzLGEsYyxoLGwsdSk7Zm9yKHZhciBwPTA7OCE9PXA7cCsrKXt2YXIgZD1vW3BdO3QucG9pbnRUb0xvY2FsKGQsZCl9cmV0dXJuIGUuc2V0RnJvbVBvaW50cyhvKX0saS5wcm90b3R5cGUudG9Xb3JsZEZyYW1lPWZ1bmN0aW9uKHQsZSl7dmFyIG89cixpPW9bMF0sbj1vWzFdLHM9b1syXSxhPW9bM10sYz1vWzRdLGg9b1s1XSxsPW9bNl0sdT1vWzddO3RoaXMuZ2V0Q29ybmVycyhpLG4scyxhLGMsaCxsLHUpO2Zvcih2YXIgcD0wOzghPT1wO3ArKyl7dmFyIGQ9b1twXTt0LnBvaW50VG9Xb3JsZChkLGQpfXJldHVybiBlLnNldEZyb21Qb2ludHMobyl9LGkucHJvdG90eXBlLm92ZXJsYXBzUmF5PWZ1bmN0aW9uKHQpe3ZhciBlPTEvdC5fZGlyZWN0aW9uLngsbz0xL3QuX2RpcmVjdGlvbi55LGk9MS90Ll9kaXJlY3Rpb24ueixuPSh0aGlzLmxvd2VyQm91bmQueC10LmZyb20ueCkqZSxzPSh0aGlzLnVwcGVyQm91bmQueC10LmZyb20ueCkqZSxyPSh0aGlzLmxvd2VyQm91bmQueS10LmZyb20ueSkqbyxhPSh0aGlzLnVwcGVyQm91bmQueS10LmZyb20ueSkqbyxjPSh0aGlzLmxvd2VyQm91bmQuei10LmZyb20ueikqaSxoPSh0aGlzLnVwcGVyQm91bmQuei10LmZyb20ueikqaSxsPU1hdGgubWF4KE1hdGgubWF4KE1hdGgubWluKG4scyksTWF0aC5taW4ocixhKSksTWF0aC5taW4oYyxoKSksdT1NYXRoLm1pbihNYXRoLm1pbihNYXRoLm1heChuLHMpLE1hdGgubWF4KHIsYSkpLE1hdGgubWF4KGMsaCkpO3JldHVybiEodTwwKSYmIShsPnUpfX0se1wiLi4vbWF0aC9WZWMzXCI6NDYsXCIuLi91dGlscy9VdGlsc1wiOjY5fV0sMTk6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKCl7dGhpcy5tYXRyaXg9W119ZS5leHBvcnRzPWksaS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQsZSl7aWYodD10LmluZGV4LChlPWUuaW5kZXgpPnQpe3ZhciBvPWU7ZT10LHQ9b31yZXR1cm4gdGhpcy5tYXRyaXhbKHQqKHQrMSk+PjEpK2UtMV19LGkucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUsbyl7aWYodD10LmluZGV4LChlPWUuaW5kZXgpPnQpe3ZhciBpPWU7ZT10LHQ9aX10aGlzLm1hdHJpeFsodCoodCsxKT4+MSkrZS0xXT1vPzE6MH0saS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMubWF0cml4Lmxlbmd0aDt0IT09ZTt0KyspdGhpcy5tYXRyaXhbdF09MH0saS5wcm90b3R5cGUuc2V0TnVtT2JqZWN0cz1mdW5jdGlvbih0KXt0aGlzLm1hdHJpeC5sZW5ndGg9dCoodC0xKT4+MX19LHt9XSwyMDpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXt0aGlzLndvcmxkPW51bGwsdGhpcy51c2VCb3VuZGluZ0JveGVzPSExLHRoaXMuZGlydHk9ITB9dmFyIG49dChcIi4uL29iamVjdHMvQm9keVwiKSxzPXQoXCIuLi9tYXRoL1ZlYzNcIikscj10KFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCIpO3QoXCIuLi9zaGFwZXMvU2hhcGVcIiksdChcIi4uL3NoYXBlcy9QbGFuZVwiKTtlLmV4cG9ydHM9aSxpLnByb3RvdHlwZS5jb2xsaXNpb25QYWlycz1mdW5jdGlvbih0LGUsbyl7dGhyb3cgbmV3IEVycm9yKFwiY29sbGlzaW9uUGFpcnMgbm90IGltcGxlbWVudGVkIGZvciB0aGlzIEJyb2FkUGhhc2UgY2xhc3MhXCIpfSxpLnByb3RvdHlwZS5uZWVkQnJvYWRwaGFzZUNvbGxpc2lvbj1mdW5jdGlvbih0LGUpe3JldHVybiAwIT0odC5jb2xsaXNpb25GaWx0ZXJHcm91cCZlLmNvbGxpc2lvbkZpbHRlck1hc2spJiYwIT0oZS5jb2xsaXNpb25GaWx0ZXJHcm91cCZ0LmNvbGxpc2lvbkZpbHRlck1hc2spJiYoMD09KHQudHlwZSZuLlNUQVRJQykmJnQuc2xlZXBTdGF0ZSE9PW4uU0xFRVBJTkd8fDA9PShlLnR5cGUmbi5TVEFUSUMpJiZlLnNsZWVwU3RhdGUhPT1uLlNMRUVQSU5HKX0saS5wcm90b3R5cGUuaW50ZXJzZWN0aW9uVGVzdD1mdW5jdGlvbih0LGUsbyxpKXt0aGlzLnVzZUJvdW5kaW5nQm94ZXM/dGhpcy5kb0JvdW5kaW5nQm94QnJvYWRwaGFzZSh0LGUsbyxpKTp0aGlzLmRvQm91bmRpbmdTcGhlcmVCcm9hZHBoYXNlKHQsZSxvLGkpfTt2YXIgYT1uZXcgcztuZXcgcyxuZXcgcixuZXcgcztpLnByb3RvdHlwZS5kb0JvdW5kaW5nU3BoZXJlQnJvYWRwaGFzZT1mdW5jdGlvbih0LGUsbyxpKXt2YXIgbj1hO2UucG9zaXRpb24udnN1Yih0LnBvc2l0aW9uLG4pO3ZhciBzPU1hdGgucG93KHQuYm91bmRpbmdSYWRpdXMrZS5ib3VuZGluZ1JhZGl1cywyKTtuLm5vcm0yKCk8cyYmKG8ucHVzaCh0KSxpLnB1c2goZSkpfSxpLnByb3RvdHlwZS5kb0JvdW5kaW5nQm94QnJvYWRwaGFzZT1mdW5jdGlvbih0LGUsbyxpKXt0LmFhYmJOZWVkc1VwZGF0ZSYmdC5jb21wdXRlQUFCQigpLGUuYWFiYk5lZWRzVXBkYXRlJiZlLmNvbXB1dGVBQUJCKCksdC5hYWJiLm92ZXJsYXBzKGUuYWFiYikmJihvLnB1c2godCksaS5wdXNoKGUpKX07dmFyIGM9e2tleXM6W119LGg9W10sbD1bXTtpLnByb3RvdHlwZS5tYWtlUGFpcnNVbmlxdWU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG89YyxpPWgsbj1sLHM9dC5sZW5ndGgscj0wO3IhPT1zO3IrKylpW3JdPXRbcl0sbltyXT1lW3JdO3QubGVuZ3RoPTAsZS5sZW5ndGg9MDtmb3IodmFyIHI9MDtyIT09cztyKyspe3ZhciBhPWlbcl0uaWQsdT1uW3JdLmlkLHA9YTx1P2ErXCIsXCIrdTp1K1wiLFwiK2E7b1twXT1yLG8ua2V5cy5wdXNoKHApfWZvcih2YXIgcj0wO3IhPT1vLmtleXMubGVuZ3RoO3IrKyl7dmFyIHA9by5rZXlzLnBvcCgpLGQ9b1twXTt0LnB1c2goaVtkXSksZS5wdXNoKG5bZF0pLGRlbGV0ZSBvW3BdfX0saS5wcm90b3R5cGUuc2V0V29ybGQ9ZnVuY3Rpb24odCl7fTt2YXIgdT1uZXcgcztpLmJvdW5kaW5nU3BoZXJlQ2hlY2s9ZnVuY3Rpb24odCxlKXt2YXIgbz11O3JldHVybiB0LnBvc2l0aW9uLnZzdWIoZS5wb3NpdGlvbixvKSxNYXRoLnBvdyh0LnNoYXBlLmJvdW5kaW5nU3BoZXJlUmFkaXVzK2Uuc2hhcGUuYm91bmRpbmdTcGhlcmVSYWRpdXMsMik+by5ub3JtMigpfSxpLnByb3RvdHlwZS5hYWJiUXVlcnk9ZnVuY3Rpb24odCxlLG8pe3JldHVybiBjb25zb2xlLndhcm4oXCIuYWFiYlF1ZXJ5IGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIEJyb2FkcGhhc2Ugc3ViY2xhc3MuXCIpLFtdfX0se1wiLi4vbWF0aC9RdWF0ZXJuaW9uXCI6NDQsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4uL29iamVjdHMvQm9keVwiOjQ3LFwiLi4vc2hhcGVzL1BsYW5lXCI6NTgsXCIuLi9zaGFwZXMvU2hhcGVcIjo1OX1dLDIxOltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyxpLHIpe24uYXBwbHkodGhpcyksdGhpcy5ueD1vfHwxMCx0aGlzLm55PWl8fDEwLHRoaXMubno9cnx8MTAsdGhpcy5hYWJiTWluPXR8fG5ldyBzKDEwMCwxMDAsMTAwKSx0aGlzLmFhYmJNYXg9ZXx8bmV3IHMoLTEwMCwtMTAwLC0xMDApO3ZhciBhPXRoaXMubngqdGhpcy5ueSp0aGlzLm56O2lmKGE8PTApdGhyb3dcIkdyaWRCcm9hZHBoYXNlOiBFYWNoIGRpbWVuc2lvbidzIG4gbXVzdCBiZSA+MFwiO3RoaXMuYmlucz1bXSx0aGlzLmJpbkxlbmd0aHM9W10sdGhpcy5iaW5zLmxlbmd0aD1hLHRoaXMuYmluTGVuZ3Rocy5sZW5ndGg9YTtmb3IodmFyIGM9MDtjPGE7YysrKXRoaXMuYmluc1tjXT1bXSx0aGlzLmJpbkxlbmd0aHNbY109MH1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9Ccm9hZHBoYXNlXCIpLHM9dChcIi4uL21hdGgvVmVjM1wiKSxyPXQoXCIuLi9zaGFwZXMvU2hhcGVcIik7aS5wcm90b3R5cGU9bmV3IG4saS5wcm90b3R5cGUuY29uc3RydWN0b3I9aTt2YXIgYT1uZXcgcztuZXcgcztpLnByb3RvdHlwZS5jb2xsaXNpb25QYWlycz1mdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyxpLG4scyxyKXt2YXIgYT0odC13KSpFfDAsYz0oZS14KSpBfDAsaD0oby1iKSpCfDAsZj1GKChpLXcpKkUpLG09Rigobi14KSpBKSxnPUYoKHMtYikqQik7YTwwP2E9MDphPj1sJiYoYT1sLTEpLGM8MD9jPTA6Yz49dSYmKGM9dS0xKSxoPDA/aD0wOmg+PXAmJihoPXAtMSksZjwwP2Y9MDpmPj1sJiYoZj1sLTEpLG08MD9tPTA6bT49dSYmKG09dS0xKSxnPDA/Zz0wOmc+PXAmJihnPXAtMSksYSo9ZCxjKj15LGgqPXYsZio9ZCxtKj15LGcqPXY7Zm9yKHZhciBDPWE7Qzw9ZjtDKz1kKWZvcih2YXIgUz1jO1M8PW07Uys9eSlmb3IodmFyIFI9aDtSPD1nO1IrPXYpe3ZhciBNPUMrUytSO1BbTV1bcVtNXSsrXT1yfX1mb3IodmFyIG49dC5udW1PYmplY3RzKCkscz10LmJvZGllcyxjPXRoaXMuYWFiYk1heCxoPXRoaXMuYWFiYk1pbixsPXRoaXMubngsdT10aGlzLm55LHA9dGhpcy5ueixkPXUqcCx5PXAsdj0xLGY9Yy54LG09Yy55LGc9Yy56LHc9aC54LHg9aC55LGI9aC56LEU9bC8oZi13KSxBPXUvKG0teCksQj1wLyhnLWIpLEM9KGYtdykvbCxTPShtLXgpL3UsUj0oZy1iKS9wLE09LjUqTWF0aC5zcXJ0KEMqQytTKlMrUipSKSxUPXIudHlwZXMsej1ULlNQSEVSRSxrPVQuUExBTkUsUD0oVC5CT1gsVC5DT01QT1VORCxULkNPTlZFWFBPTFlIRURST04sdGhpcy5iaW5zKSxxPXRoaXMuYmluTGVuZ3RocyxMPXRoaXMuYmlucy5sZW5ndGgsVj0wO1YhPT1MO1YrKylxW1ZdPTA7Zm9yKHZhciBGPU1hdGguY2VpbCxoPU1hdGgubWluLGM9TWF0aC5tYXgsVj0wO1YhPT1uO1YrKyl7dmFyIE49c1tWXSxJPU4uc2hhcGU7c3dpdGNoKEkudHlwZSl7Y2FzZSB6OnZhciBqPU4ucG9zaXRpb24ueCxPPU4ucG9zaXRpb24ueSxEPU4ucG9zaXRpb24ueixXPUkucmFkaXVzO2koai1XLE8tVyxELVcsaitXLE8rVyxEK1csTik7YnJlYWs7Y2FzZSBrOkkud29ybGROb3JtYWxOZWVkc1VwZGF0ZSYmSS5jb21wdXRlV29ybGROb3JtYWwoTi5xdWF0ZXJuaW9uKTt2YXIgSD1JLndvcmxkTm9ybWFsLEs9dysuNSpDLU4ucG9zaXRpb24ueCxfPXgrLjUqUy1OLnBvc2l0aW9uLnksVT1iKy41KlItTi5wb3NpdGlvbi56LEc9YTtHLnNldChLLF8sVSk7Zm9yKHZhciBZPTAsWD0wO1khPT1sO1krKyxYKz1kLEcueT1fLEcueCs9Qylmb3IodmFyIFE9MCxaPTA7USE9PXU7USsrLForPXksRy56PVUsRy55Kz1TKWZvcih2YXIgSj0wLCQ9MDtKIT09cDtKKyssJCs9dixHLnorPVIpaWYoRy5kb3QoSCk8TSl7dmFyIHR0PVgrWiskO1BbdHRdW3FbdHRdKytdPU59YnJlYWs7ZGVmYXVsdDpOLmFhYmJOZWVkc1VwZGF0ZSYmTi5jb21wdXRlQUFCQigpLGkoTi5hYWJiLmxvd2VyQm91bmQueCxOLmFhYmIubG93ZXJCb3VuZC55LE4uYWFiYi5sb3dlckJvdW5kLnosTi5hYWJiLnVwcGVyQm91bmQueCxOLmFhYmIudXBwZXJCb3VuZC55LE4uYWFiYi51cHBlckJvdW5kLnosTil9fWZvcih2YXIgVj0wO1YhPT1MO1YrKyl7dmFyIGV0PXFbVl07aWYoZXQ+MSlmb3IodmFyIG90PVBbVl0sWT0wO1khPT1ldDtZKyspZm9yKHZhciBOPW90W1ldLFE9MDtRIT09WTtRKyspe3ZhciBpdD1vdFtRXTt0aGlzLm5lZWRCcm9hZHBoYXNlQ29sbGlzaW9uKE4saXQpJiZ0aGlzLmludGVyc2VjdGlvblRlc3QoTixpdCxlLG8pfX10aGlzLm1ha2VQYWlyc1VuaXF1ZShlLG8pfX0se1wiLi4vbWF0aC9WZWMzXCI6NDYsXCIuLi9zaGFwZXMvU2hhcGVcIjo1OSxcIi4vQnJvYWRwaGFzZVwiOjIwfV0sMjI6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKCl7bi5hcHBseSh0aGlzKX1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9Ccm9hZHBoYXNlXCIpLHM9dChcIi4vQUFCQlwiKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pLGkucHJvdG90eXBlLmNvbGxpc2lvblBhaXJzPWZ1bmN0aW9uKHQsZSxvKXt2YXIgaSxuLHMscixhPXQuYm9kaWVzLGM9YS5sZW5ndGg7Zm9yKGk9MDtpIT09YztpKyspZm9yKG49MDtuIT09aTtuKyspcz1hW2ldLHI9YVtuXSx0aGlzLm5lZWRCcm9hZHBoYXNlQ29sbGlzaW9uKHMscikmJnRoaXMuaW50ZXJzZWN0aW9uVGVzdChzLHIsZSxvKX07bmV3IHM7aS5wcm90b3R5cGUuYWFiYlF1ZXJ5PWZ1bmN0aW9uKHQsZSxvKXtvPW98fFtdO2Zvcih2YXIgaT0wO2k8dC5ib2RpZXMubGVuZ3RoO2krKyl7dmFyIG49dC5ib2RpZXNbaV07bi5hYWJiTmVlZHNVcGRhdGUmJm4uY29tcHV0ZUFBQkIoKSxuLmFhYmIub3ZlcmxhcHMoZSkmJm8ucHVzaChuKX1yZXR1cm4gb319LHtcIi4vQUFCQlwiOjE4LFwiLi9Ccm9hZHBoYXNlXCI6MjB9XSwyMzpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXt0aGlzLm1hdHJpeD17fX1lLmV4cG9ydHM9aSxpLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCxlKXtpZih0PXQuaWQsKGU9ZS5pZCk+dCl7dmFyIG89ZTtlPXQsdD1vfXJldHVybiB0K1wiLVwiK2UgaW4gdGhpcy5tYXRyaXh9LGkucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUsbyl7aWYodD10LmlkLChlPWUuaWQpPnQpe3ZhciBpPWU7ZT10LHQ9aX1vP3RoaXMubWF0cml4W3QrXCItXCIrZV09ITA6ZGVsZXRlIHRoaXMubWF0cml4W3QrXCItXCIrZV19LGkucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5tYXRyaXg9e319LGkucHJvdG90eXBlLnNldE51bU9iamVjdHM9ZnVuY3Rpb24odCl7fX0se31dLDI0OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSgpe3RoaXMuY3VycmVudD1bXSx0aGlzLnByZXZpb3VzPVtdfWZ1bmN0aW9uIG4odCxlKXt0LnB1c2goKDQyOTQ5MDE3NjAmZSk+PjE2LDY1NTM1JmUpfWUuZXhwb3J0cz1pLGkucHJvdG90eXBlLmdldEtleT1mdW5jdGlvbih0LGUpe2lmKGU8dCl7dmFyIG89ZTtlPXQsdD1vfXJldHVybiB0PDwxNnxlfSxpLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG89dGhpcy5nZXRLZXkodCxlKSxpPXRoaXMuY3VycmVudCxuPTA7bz5pW25dOyluKys7aWYobyE9PWlbbl0pe2Zvcih2YXIgZT1pLmxlbmd0aC0xO2U+PW47ZS0tKWlbZSsxXT1pW2VdO2lbbl09b319LGkucHJvdG90eXBlLnRpY2s9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmN1cnJlbnQ7dGhpcy5jdXJyZW50PXRoaXMucHJldmlvdXMsdGhpcy5wcmV2aW91cz10LHRoaXMuY3VycmVudC5sZW5ndGg9MH0saS5wcm90b3R5cGUuZ2V0RGlmZj1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbz10aGlzLmN1cnJlbnQsaT10aGlzLnByZXZpb3VzLHM9by5sZW5ndGgscj1pLmxlbmd0aCxhPTAsYz0wO2M8cztjKyspe2Zvcih2YXIgaD0hMSxsPW9bY107bD5pW2FdOylhKys7aD1sPT09aVthXSxofHxuKHQsbCl9YT0wO2Zvcih2YXIgYz0wO2M8cjtjKyspe2Zvcih2YXIgaD0hMSx1PWlbY107dT5vW2FdOylhKys7aD1vW2FdPT09dSxofHxuKGUsdSl9fX0se31dLDI1OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUpe3RoaXMuZnJvbT10P3QuY2xvbmUoKTpuZXcgcix0aGlzLnRvPWU/ZS5jbG9uZSgpOm5ldyByLHRoaXMuX2RpcmVjdGlvbj1uZXcgcix0aGlzLnByZWNpc2lvbj0xZS00LHRoaXMuY2hlY2tDb2xsaXNpb25SZXNwb25zZT0hMCx0aGlzLnNraXBCYWNrZmFjZXM9ITEsdGhpcy5jb2xsaXNpb25GaWx0ZXJNYXNrPS0xLHRoaXMuY29sbGlzaW9uRmlsdGVyR3JvdXA9LTEsdGhpcy5tb2RlPWkuQU5ZLHRoaXMucmVzdWx0PW5ldyBoLHRoaXMuaGFzSGl0PSExLHRoaXMuY2FsbGJhY2s9ZnVuY3Rpb24odCl7fX1mdW5jdGlvbiBuKHQsZSxvLGkpe2kudnN1YihlLEkpLG8udnN1YihlLHkpLHQudnN1YihlLHYpO3ZhciBuLHMscj1JLmRvdChJKSxhPUkuZG90KHkpLGM9SS5kb3QodiksaD15LmRvdCh5KSxsPXkuZG90KHYpO3JldHVybihuPWgqYy1hKmwpPj0wJiYocz1yKmwtYSpjKT49MCYmbitzPHIqaC1hKmF9ZnVuY3Rpb24gcyh0LGUsbyl7by52c3ViKHQsSSk7dmFyIGk9SS5kb3QoZSk7cmV0dXJuIGUubXVsdChpLGopLGoudmFkZCh0LGopLG8uZGlzdGFuY2VUbyhqKX1lLmV4cG9ydHM9aTt2YXIgcj10KFwiLi4vbWF0aC9WZWMzXCIpLGE9dChcIi4uL21hdGgvUXVhdGVybmlvblwiKSxjPXQoXCIuLi9tYXRoL1RyYW5zZm9ybVwiKSxoPSh0KFwiLi4vc2hhcGVzL0NvbnZleFBvbHloZWRyb25cIiksdChcIi4uL3NoYXBlcy9Cb3hcIiksdChcIi4uL2NvbGxpc2lvbi9SYXljYXN0UmVzdWx0XCIpKSxsPXQoXCIuLi9zaGFwZXMvU2hhcGVcIiksdT10KFwiLi4vY29sbGlzaW9uL0FBQkJcIik7aS5wcm90b3R5cGUuY29uc3RydWN0b3I9aSxpLkNMT1NFU1Q9MSxpLkFOWT0yLGkuQUxMPTQ7dmFyIHA9bmV3IHUsZD1bXTtpLnByb3RvdHlwZS5pbnRlcnNlY3RXb3JsZD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLm1vZGU9ZS5tb2RlfHxpLkFOWSx0aGlzLnJlc3VsdD1lLnJlc3VsdHx8bmV3IGgsdGhpcy5za2lwQmFja2ZhY2VzPSEhZS5za2lwQmFja2ZhY2VzLHRoaXMuY29sbGlzaW9uRmlsdGVyTWFzaz12b2lkIDAhPT1lLmNvbGxpc2lvbkZpbHRlck1hc2s/ZS5jb2xsaXNpb25GaWx0ZXJNYXNrOi0xLHRoaXMuY29sbGlzaW9uRmlsdGVyR3JvdXA9dm9pZCAwIT09ZS5jb2xsaXNpb25GaWx0ZXJHcm91cD9lLmNvbGxpc2lvbkZpbHRlckdyb3VwOi0xLGUuZnJvbSYmdGhpcy5mcm9tLmNvcHkoZS5mcm9tKSxlLnRvJiZ0aGlzLnRvLmNvcHkoZS50byksdGhpcy5jYWxsYmFjaz1lLmNhbGxiYWNrfHxmdW5jdGlvbigpe30sdGhpcy5oYXNIaXQ9ITEsdGhpcy5yZXN1bHQucmVzZXQoKSx0aGlzLl91cGRhdGVEaXJlY3Rpb24oKSx0aGlzLmdldEFBQkIocCksZC5sZW5ndGg9MCx0LmJyb2FkcGhhc2UuYWFiYlF1ZXJ5KHQscCxkKSx0aGlzLmludGVyc2VjdEJvZGllcyhkKSx0aGlzLmhhc0hpdH07dmFyIHk9bmV3IHIsdj1uZXcgcjtpLnBvaW50SW5UcmlhbmdsZT1uO3ZhciBmPW5ldyByLG09bmV3IGE7aS5wcm90b3R5cGUuaW50ZXJzZWN0Qm9keT1mdW5jdGlvbih0LGUpe2UmJih0aGlzLnJlc3VsdD1lLHRoaXMuX3VwZGF0ZURpcmVjdGlvbigpKTt2YXIgbz10aGlzLmNoZWNrQ29sbGlzaW9uUmVzcG9uc2U7aWYoKCFvfHx0LmNvbGxpc2lvblJlc3BvbnNlKSYmMCE9KHRoaXMuY29sbGlzaW9uRmlsdGVyR3JvdXAmdC5jb2xsaXNpb25GaWx0ZXJNYXNrKSYmMCE9KHQuY29sbGlzaW9uRmlsdGVyR3JvdXAmdGhpcy5jb2xsaXNpb25GaWx0ZXJNYXNrKSlmb3IodmFyIGk9ZixuPW0scz0wLHI9dC5zaGFwZXMubGVuZ3RoO3M8cjtzKyspe3ZhciBhPXQuc2hhcGVzW3NdO2lmKCghb3x8YS5jb2xsaXNpb25SZXNwb25zZSkmJih0LnF1YXRlcm5pb24ubXVsdCh0LnNoYXBlT3JpZW50YXRpb25zW3NdLG4pLHQucXVhdGVybmlvbi52bXVsdCh0LnNoYXBlT2Zmc2V0c1tzXSxpKSxpLnZhZGQodC5wb3NpdGlvbixpKSx0aGlzLmludGVyc2VjdFNoYXBlKGEsbixpLHQpLHRoaXMucmVzdWx0Ll9zaG91bGRTdG9wKSlicmVha319LGkucHJvdG90eXBlLmludGVyc2VjdEJvZGllcz1mdW5jdGlvbih0LGUpe2UmJih0aGlzLnJlc3VsdD1lLHRoaXMuX3VwZGF0ZURpcmVjdGlvbigpKTtmb3IodmFyIG89MCxpPXQubGVuZ3RoOyF0aGlzLnJlc3VsdC5fc2hvdWxkU3RvcCYmbzxpO28rKyl0aGlzLmludGVyc2VjdEJvZHkodFtvXSl9LGkucHJvdG90eXBlLl91cGRhdGVEaXJlY3Rpb249ZnVuY3Rpb24oKXt0aGlzLnRvLnZzdWIodGhpcy5mcm9tLHRoaXMuX2RpcmVjdGlvbiksdGhpcy5fZGlyZWN0aW9uLm5vcm1hbGl6ZSgpfSxpLnByb3RvdHlwZS5pbnRlcnNlY3RTaGFwZT1mdW5jdGlvbih0LGUsbyxpKXtpZighKHModGhpcy5mcm9tLHRoaXMuX2RpcmVjdGlvbixvKT50LmJvdW5kaW5nU3BoZXJlUmFkaXVzKSl7dmFyIG49dGhpc1t0LnR5cGVdO24mJm4uY2FsbCh0aGlzLHQsZSxvLGksdCl9fTt2YXIgZz0obmV3IHIsbmV3IHIsbmV3IHIpLHc9bmV3IHIseD1uZXcgcixiPW5ldyByO25ldyByLG5ldyBoO2kucHJvdG90eXBlLmludGVyc2VjdEJveD1mdW5jdGlvbih0LGUsbyxpLG4pe3JldHVybiB0aGlzLmludGVyc2VjdENvbnZleCh0LmNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbixlLG8saSxuKX0saS5wcm90b3R5cGVbbC50eXBlcy5CT1hdPWkucHJvdG90eXBlLmludGVyc2VjdEJveCxpLnByb3RvdHlwZS5pbnRlcnNlY3RQbGFuZT1mdW5jdGlvbih0LGUsbyxpLG4pe3ZhciBzPXRoaXMuZnJvbSxhPXRoaXMudG8sYz10aGlzLl9kaXJlY3Rpb24saD1uZXcgcigwLDAsMSk7ZS52bXVsdChoLGgpO3ZhciBsPW5ldyByO3MudnN1YihvLGwpO3ZhciB1PWwuZG90KGgpO2lmKGEudnN1YihvLGwpLCEodSpsLmRvdChoKT4wfHxzLmRpc3RhbmNlVG8oYSk8dSkpe3ZhciBwPWguZG90KGMpO2lmKCEoTWF0aC5hYnMocCk8dGhpcy5wcmVjaXNpb24pKXt2YXIgZD1uZXcgcix5PW5ldyByLHY9bmV3IHI7cy52c3ViKG8sZCk7dmFyIGY9LWguZG90KGQpL3A7Yy5zY2FsZShmLHkpLHMudmFkZCh5LHYpLHRoaXMucmVwb3J0SW50ZXJzZWN0aW9uKGgsdixuLGksLTEpfX19LGkucHJvdG90eXBlW2wudHlwZXMuUExBTkVdPWkucHJvdG90eXBlLmludGVyc2VjdFBsYW5lLGkucHJvdG90eXBlLmdldEFBQkI9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy50byxvPXRoaXMuZnJvbTt0Lmxvd2VyQm91bmQueD1NYXRoLm1pbihlLngsby54KSx0Lmxvd2VyQm91bmQueT1NYXRoLm1pbihlLnksby55KSx0Lmxvd2VyQm91bmQuej1NYXRoLm1pbihlLnosby56KSx0LnVwcGVyQm91bmQueD1NYXRoLm1heChlLngsby54KSx0LnVwcGVyQm91bmQueT1NYXRoLm1heChlLnksby55KSx0LnVwcGVyQm91bmQuej1NYXRoLm1heChlLnosby56KX07dmFyIEU9e2ZhY2VMaXN0OlswXX0sQT1uZXcgcixCPW5ldyBpLEM9W107aS5wcm90b3R5cGUuaW50ZXJzZWN0SGVpZ2h0ZmllbGQ9ZnVuY3Rpb24odCxlLG8saSxuKXt2YXIgcz0odC5kYXRhLHQuZWxlbWVudFNpemUsQik7cy5mcm9tLmNvcHkodGhpcy5mcm9tKSxzLnRvLmNvcHkodGhpcy50byksYy5wb2ludFRvTG9jYWxGcmFtZShvLGUscy5mcm9tLHMuZnJvbSksYy5wb2ludFRvTG9jYWxGcmFtZShvLGUscy50byxzLnRvKSxzLl91cGRhdGVEaXJlY3Rpb24oKTt2YXIgcixhLGgsbCxwPUM7cj1hPTAsaD1sPXQuZGF0YS5sZW5ndGgtMTt2YXIgZD1uZXcgdTtzLmdldEFBQkIoZCksdC5nZXRJbmRleE9mUG9zaXRpb24oZC5sb3dlckJvdW5kLngsZC5sb3dlckJvdW5kLnkscCwhMCkscj1NYXRoLm1heChyLHBbMF0pLGE9TWF0aC5tYXgoYSxwWzFdKSx0LmdldEluZGV4T2ZQb3NpdGlvbihkLnVwcGVyQm91bmQueCxkLnVwcGVyQm91bmQueSxwLCEwKSxoPU1hdGgubWluKGgscFswXSsxKSxsPU1hdGgubWluKGwscFsxXSsxKTtmb3IodmFyIHk9cjt5PGg7eSsrKWZvcih2YXIgdj1hO3Y8bDt2Kyspe2lmKHRoaXMucmVzdWx0Ll9zaG91bGRTdG9wKXJldHVybjtpZih0LmdldEFhYmJBdEluZGV4KHksdixkKSxkLm92ZXJsYXBzUmF5KHMpKXtpZih0LmdldENvbnZleFRyaWFuZ2xlUGlsbGFyKHksdiwhMSksYy5wb2ludFRvV29ybGRGcmFtZShvLGUsdC5waWxsYXJPZmZzZXQsQSksdGhpcy5pbnRlcnNlY3RDb252ZXgodC5waWxsYXJDb252ZXgsZSxBLGksbixFKSx0aGlzLnJlc3VsdC5fc2hvdWxkU3RvcClyZXR1cm47dC5nZXRDb252ZXhUcmlhbmdsZVBpbGxhcih5LHYsITApLGMucG9pbnRUb1dvcmxkRnJhbWUobyxlLHQucGlsbGFyT2Zmc2V0LEEpLHRoaXMuaW50ZXJzZWN0Q29udmV4KHQucGlsbGFyQ29udmV4LGUsQSxpLG4sRSl9fX0saS5wcm90b3R5cGVbbC50eXBlcy5IRUlHSFRGSUVMRF09aS5wcm90b3R5cGUuaW50ZXJzZWN0SGVpZ2h0ZmllbGQ7dmFyIFM9bmV3IHIsUj1uZXcgcjtpLnByb3RvdHlwZS5pbnRlcnNlY3RTcGhlcmU9ZnVuY3Rpb24odCxlLG8saSxuKXt2YXIgcz10aGlzLmZyb20scj10aGlzLnRvLGE9dC5yYWRpdXMsYz1NYXRoLnBvdyhyLngtcy54LDIpK01hdGgucG93KHIueS1zLnksMikrTWF0aC5wb3coci56LXMueiwyKSxoPTIqKChyLngtcy54KSoocy54LW8ueCkrKHIueS1zLnkpKihzLnktby55KSsoci56LXMueikqKHMuei1vLnopKSxsPU1hdGgucG93KHMueC1vLngsMikrTWF0aC5wb3cocy55LW8ueSwyKStNYXRoLnBvdyhzLnotby56LDIpLU1hdGgucG93KGEsMiksdT1NYXRoLnBvdyhoLDIpLTQqYypsLHA9UyxkPVI7aWYoISh1PDApKWlmKDA9PT11KXMubGVycChyLHUscCkscC52c3ViKG8sZCksZC5ub3JtYWxpemUoKSx0aGlzLnJlcG9ydEludGVyc2VjdGlvbihkLHAsbixpLC0xKTtlbHNle3ZhciB5PSgtaC1NYXRoLnNxcnQodSkpLygyKmMpLHY9KC1oK01hdGguc3FydCh1KSkvKDIqYyk7aWYoeT49MCYmeTw9MSYmKHMubGVycChyLHkscCkscC52c3ViKG8sZCksZC5ub3JtYWxpemUoKSx0aGlzLnJlcG9ydEludGVyc2VjdGlvbihkLHAsbixpLC0xKSksdGhpcy5yZXN1bHQuX3Nob3VsZFN0b3ApcmV0dXJuO3Y+PTAmJnY8PTEmJihzLmxlcnAocix2LHApLHAudnN1YihvLGQpLGQubm9ybWFsaXplKCksdGhpcy5yZXBvcnRJbnRlcnNlY3Rpb24oZCxwLG4saSwtMSkpfX0saS5wcm90b3R5cGVbbC50eXBlcy5TUEhFUkVdPWkucHJvdG90eXBlLmludGVyc2VjdFNwaGVyZTt2YXIgTT1uZXcgcixUPShuZXcgcixuZXcgcixuZXcgcik7aS5wcm90b3R5cGUuaW50ZXJzZWN0Q29udmV4PWZ1bmN0aW9uKHQsZSxvLGkscyxyKXtmb3IodmFyIGE9TSxjPVQsaD1yJiZyLmZhY2VMaXN0fHxudWxsLGw9dC5mYWNlcyx1PXQudmVydGljZXMscD10LmZhY2VOb3JtYWxzLGQ9dGhpcy5fZGlyZWN0aW9uLHk9dGhpcy5mcm9tLHY9dGhpcy50byxmPXkuZGlzdGFuY2VUbyh2KSxtPWg/aC5sZW5ndGg6bC5sZW5ndGgsRT10aGlzLnJlc3VsdCxBPTA7IUUuX3Nob3VsZFN0b3AmJkE8bTtBKyspe3ZhciBCPWg/aFtBXTpBLEM9bFtCXSxTPXBbQl0sUj1lLHo9bztjLmNvcHkodVtDWzBdXSksUi52bXVsdChjLGMpLGMudmFkZCh6LGMpLGMudnN1Yih5LGMpLFIudm11bHQoUyxhKTt2YXIgaz1kLmRvdChhKTtpZighKE1hdGguYWJzKGspPHRoaXMucHJlY2lzaW9uKSl7dmFyIFA9YS5kb3QoYykvaztpZighKFA8MCkpe2QubXVsdChQLGcpLGcudmFkZCh5LGcpLHcuY29weSh1W0NbMF1dKSxSLnZtdWx0KHcsdyksei52YWRkKHcsdyk7Zm9yKHZhciBxPTE7IUUuX3Nob3VsZFN0b3AmJnE8Qy5sZW5ndGgtMTtxKyspe3guY29weSh1W0NbcV1dKSxiLmNvcHkodVtDW3ErMV1dKSxSLnZtdWx0KHgseCksUi52bXVsdChiLGIpLHoudmFkZCh4LHgpLHoudmFkZChiLGIpO3ZhciBMPWcuZGlzdGFuY2VUbyh5KTshbihnLHcseCxiKSYmIW4oZyx4LHcsYil8fEw+Znx8dGhpcy5yZXBvcnRJbnRlcnNlY3Rpb24oYSxnLHMsaSxCKX19fX19LGkucHJvdG90eXBlW2wudHlwZXMuQ09OVkVYUE9MWUhFRFJPTl09aS5wcm90b3R5cGUuaW50ZXJzZWN0Q29udmV4O3ZhciB6PW5ldyByLGs9bmV3IHIsUD1uZXcgcixxPW5ldyByLEw9bmV3IHIsVj1uZXcgcixGPShuZXcgdSxbXSksTj1uZXcgYztpLnByb3RvdHlwZS5pbnRlcnNlY3RUcmltZXNoPWZ1bmN0aW9uKHQsZSxvLGkscyxyKXt2YXIgYT16LGg9RixsPU4sdT1ULHA9ayxkPVAseT1xLHY9VixmPUwsbT0ociYmci5mYWNlTGlzdCx0LmluZGljZXMpLEU9KHQudmVydGljZXMsdC5mYWNlTm9ybWFscyx0aGlzLmZyb20pLEE9dGhpcy50byxCPXRoaXMuX2RpcmVjdGlvbjtsLnBvc2l0aW9uLmNvcHkobyksbC5xdWF0ZXJuaW9uLmNvcHkoZSksYy52ZWN0b3JUb0xvY2FsRnJhbWUobyxlLEIscCksYy5wb2ludFRvTG9jYWxGcmFtZShvLGUsRSxkKSxjLnBvaW50VG9Mb2NhbEZyYW1lKG8sZSxBLHkpLHkueCo9dC5zY2FsZS54LHkueSo9dC5zY2FsZS55LHkueio9dC5zY2FsZS56LGQueCo9dC5zY2FsZS54LGQueSo9dC5zY2FsZS55LGQueio9dC5zY2FsZS56LHkudnN1YihkLHApLHAubm9ybWFsaXplKCk7dmFyIEM9ZC5kaXN0YW5jZVNxdWFyZWQoeSk7dC50cmVlLnJheVF1ZXJ5KHRoaXMsbCxoKTtmb3IodmFyIFM9MCxSPWgubGVuZ3RoOyF0aGlzLnJlc3VsdC5fc2hvdWxkU3RvcCYmUyE9PVI7UysrKXt2YXIgTT1oW1NdO3QuZ2V0Tm9ybWFsKE0sYSksdC5nZXRWZXJ0ZXgobVszKk1dLHcpLHcudnN1YihkLHUpO3ZhciBJPXAuZG90KGEpLGo9YS5kb3QodSkvSTtpZighKGo8MCkpe3Auc2NhbGUoaixnKSxnLnZhZGQoZCxnKSx0LmdldFZlcnRleChtWzMqTSsxXSx4KSx0LmdldFZlcnRleChtWzMqTSsyXSxiKTt2YXIgTz1nLmRpc3RhbmNlU3F1YXJlZChkKTshbihnLHgsdyxiKSYmIW4oZyx3LHgsYil8fE8+Q3x8KGMudmVjdG9yVG9Xb3JsZEZyYW1lKGUsYSxmKSxjLnBvaW50VG9Xb3JsZEZyYW1lKG8sZSxnLHYpLHRoaXMucmVwb3J0SW50ZXJzZWN0aW9uKGYsdixzLGksTSkpfX1oLmxlbmd0aD0wfSxpLnByb3RvdHlwZVtsLnR5cGVzLlRSSU1FU0hdPWkucHJvdG90eXBlLmludGVyc2VjdFRyaW1lc2gsaS5wcm90b3R5cGUucmVwb3J0SW50ZXJzZWN0aW9uPWZ1bmN0aW9uKHQsZSxvLG4scyl7dmFyIHI9dGhpcy5mcm9tLGE9dGhpcy50byxjPXIuZGlzdGFuY2VUbyhlKSxoPXRoaXMucmVzdWx0O2lmKCEodGhpcy5za2lwQmFja2ZhY2VzJiZ0LmRvdCh0aGlzLl9kaXJlY3Rpb24pPjApKXN3aXRjaChoLmhpdEZhY2VJbmRleD12b2lkIDAhPT1zP3M6LTEsdGhpcy5tb2RlKXtjYXNlIGkuQUxMOnRoaXMuaGFzSGl0PSEwLGguc2V0KHIsYSx0LGUsbyxuLGMpLGguaGFzSGl0PSEwLHRoaXMuY2FsbGJhY2soaCk7YnJlYWs7Y2FzZSBpLkNMT1NFU1Q6KGM8aC5kaXN0YW5jZXx8IWguaGFzSGl0KSYmKHRoaXMuaGFzSGl0PSEwLGguaGFzSGl0PSEwLGguc2V0KHIsYSx0LGUsbyxuLGMpKTticmVhaztjYXNlIGkuQU5ZOnRoaXMuaGFzSGl0PSEwLGguaGFzSGl0PSEwLGguc2V0KHIsYSx0LGUsbyxuLGMpLGguX3Nob3VsZFN0b3A9ITB9fTt2YXIgST1uZXcgcixqPW5ldyByfSx7XCIuLi9jb2xsaXNpb24vQUFCQlwiOjE4LFwiLi4vY29sbGlzaW9uL1JheWNhc3RSZXN1bHRcIjoyNixcIi4uL21hdGgvUXVhdGVybmlvblwiOjQ0LFwiLi4vbWF0aC9UcmFuc2Zvcm1cIjo0NSxcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi4vc2hhcGVzL0JveFwiOjUzLFwiLi4vc2hhcGVzL0NvbnZleFBvbHloZWRyb25cIjo1NCxcIi4uL3NoYXBlcy9TaGFwZVwiOjU5fV0sMjY6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKCl7dGhpcy5yYXlGcm9tV29ybGQ9bmV3IG4sdGhpcy5yYXlUb1dvcmxkPW5ldyBuLHRoaXMuaGl0Tm9ybWFsV29ybGQ9bmV3IG4sdGhpcy5oaXRQb2ludFdvcmxkPW5ldyBuLHRoaXMuaGFzSGl0PSExLHRoaXMuc2hhcGU9bnVsbCx0aGlzLmJvZHk9bnVsbCx0aGlzLmhpdEZhY2VJbmRleD0tMSx0aGlzLmRpc3RhbmNlPS0xLHRoaXMuX3Nob3VsZFN0b3A9ITF9dmFyIG49dChcIi4uL21hdGgvVmVjM1wiKTtlLmV4cG9ydHM9aSxpLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMucmF5RnJvbVdvcmxkLnNldFplcm8oKSx0aGlzLnJheVRvV29ybGQuc2V0WmVybygpLHRoaXMuaGl0Tm9ybWFsV29ybGQuc2V0WmVybygpLHRoaXMuaGl0UG9pbnRXb3JsZC5zZXRaZXJvKCksdGhpcy5oYXNIaXQ9ITEsdGhpcy5zaGFwZT1udWxsLHRoaXMuYm9keT1udWxsLHRoaXMuaGl0RmFjZUluZGV4PS0xLHRoaXMuZGlzdGFuY2U9LTEsdGhpcy5fc2hvdWxkU3RvcD0hMX0saS5wcm90b3R5cGUuYWJvcnQ9ZnVuY3Rpb24oKXt0aGlzLl9zaG91bGRTdG9wPSEwfSxpLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlLG8saSxuLHMscil7dGhpcy5yYXlGcm9tV29ybGQuY29weSh0KSx0aGlzLnJheVRvV29ybGQuY29weShlKSx0aGlzLmhpdE5vcm1hbFdvcmxkLmNvcHkobyksdGhpcy5oaXRQb2ludFdvcmxkLmNvcHkoaSksdGhpcy5zaGFwZT1uLHRoaXMuYm9keT1zLHRoaXMuZGlzdGFuY2U9cn19LHtcIi4uL21hdGgvVmVjM1wiOjQ2fV0sMjc6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQpe24uYXBwbHkodGhpcyksdGhpcy5heGlzTGlzdD1bXSx0aGlzLndvcmxkPW51bGwsdGhpcy5heGlzSW5kZXg9MDt2YXIgZT10aGlzLmF4aXNMaXN0O3RoaXMuX2FkZEJvZHlIYW5kbGVyPWZ1bmN0aW9uKHQpe2UucHVzaCh0LmJvZHkpfSx0aGlzLl9yZW1vdmVCb2R5SGFuZGxlcj1mdW5jdGlvbih0KXt2YXIgbz1lLmluZGV4T2YodC5ib2R5KTstMSE9PW8mJmUuc3BsaWNlKG8sMSl9LHQmJnRoaXMuc2V0V29ybGQodCl9dmFyIG49KHQoXCIuLi9zaGFwZXMvU2hhcGVcIiksdChcIi4uL2NvbGxpc2lvbi9Ccm9hZHBoYXNlXCIpKTtlLmV4cG9ydHM9aSxpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5zZXRXb3JsZD1mdW5jdGlvbih0KXt0aGlzLmF4aXNMaXN0Lmxlbmd0aD0wO2Zvcih2YXIgZT0wO2U8dC5ib2RpZXMubGVuZ3RoO2UrKyl0aGlzLmF4aXNMaXN0LnB1c2godC5ib2RpZXNbZV0pO3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFkZEJvZHlcIix0aGlzLl9hZGRCb2R5SGFuZGxlciksdC5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVtb3ZlQm9keVwiLHRoaXMuX3JlbW92ZUJvZHlIYW5kbGVyKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJhZGRCb2R5XCIsdGhpcy5fYWRkQm9keUhhbmRsZXIpLHQuYWRkRXZlbnRMaXN0ZW5lcihcInJlbW92ZUJvZHlcIix0aGlzLl9yZW1vdmVCb2R5SGFuZGxlciksdGhpcy53b3JsZD10LHRoaXMuZGlydHk9ITB9LGkuaW5zZXJ0aW9uU29ydFg9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTEsbz10Lmxlbmd0aDtlPG87ZSsrKXtmb3IodmFyIGk9dFtlXSxuPWUtMTtuPj0wJiYhKHRbbl0uYWFiYi5sb3dlckJvdW5kLng8PWkuYWFiYi5sb3dlckJvdW5kLngpO24tLSl0W24rMV09dFtuXTt0W24rMV09aX1yZXR1cm4gdH0saS5pbnNlcnRpb25Tb3J0WT1mdW5jdGlvbih0KXtmb3IodmFyIGU9MSxvPXQubGVuZ3RoO2U8bztlKyspe2Zvcih2YXIgaT10W2VdLG49ZS0xO24+PTAmJiEodFtuXS5hYWJiLmxvd2VyQm91bmQueTw9aS5hYWJiLmxvd2VyQm91bmQueSk7bi0tKXRbbisxXT10W25dO3RbbisxXT1pfXJldHVybiB0fSxpLmluc2VydGlvblNvcnRaPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0xLG89dC5sZW5ndGg7ZTxvO2UrKyl7Zm9yKHZhciBpPXRbZV0sbj1lLTE7bj49MCYmISh0W25dLmFhYmIubG93ZXJCb3VuZC56PD1pLmFhYmIubG93ZXJCb3VuZC56KTtuLS0pdFtuKzFdPXRbbl07dFtuKzFdPWl9cmV0dXJuIHR9LGkucHJvdG90eXBlLmNvbGxpc2lvblBhaXJzPWZ1bmN0aW9uKHQsZSxvKXt2YXIgbixzLHI9dGhpcy5heGlzTGlzdCxhPXIubGVuZ3RoLGM9dGhpcy5heGlzSW5kZXg7Zm9yKHRoaXMuZGlydHkmJih0aGlzLnNvcnRMaXN0KCksdGhpcy5kaXJ0eT0hMSksbj0wO24hPT1hO24rKyl7dmFyIGg9cltuXTtmb3Iocz1uKzE7czxhO3MrKyl7dmFyIGw9cltzXTtpZih0aGlzLm5lZWRCcm9hZHBoYXNlQ29sbGlzaW9uKGgsbCkpe2lmKCFpLmNoZWNrQm91bmRzKGgsbCxjKSlicmVhazt0aGlzLmludGVyc2VjdGlvblRlc3QoaCxsLGUsbyl9fX19LGkucHJvdG90eXBlLnNvcnRMaXN0PWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuYXhpc0xpc3QsZT10aGlzLmF4aXNJbmRleCxvPXQubGVuZ3RoLG49MDtuIT09bztuKyspe3ZhciBzPXRbbl07cy5hYWJiTmVlZHNVcGRhdGUmJnMuY29tcHV0ZUFBQkIoKX0wPT09ZT9pLmluc2VydGlvblNvcnRYKHQpOjE9PT1lP2kuaW5zZXJ0aW9uU29ydFkodCk6Mj09PWUmJmkuaW5zZXJ0aW9uU29ydFoodCl9LGkuY2hlY2tCb3VuZHM9ZnVuY3Rpb24odCxlLG8pe3ZhciBpLG47MD09PW8/KGk9dC5wb3NpdGlvbi54LG49ZS5wb3NpdGlvbi54KToxPT09bz8oaT10LnBvc2l0aW9uLnksbj1lLnBvc2l0aW9uLnkpOjI9PT1vJiYoaT10LnBvc2l0aW9uLnosbj1lLnBvc2l0aW9uLnopO3ZhciBzPXQuYm91bmRpbmdSYWRpdXMscj1lLmJvdW5kaW5nUmFkaXVzLGE9aStzLGM9bi1yO3JldHVybiBjPGF9LGkucHJvdG90eXBlLmF1dG9EZXRlY3RBeGlzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT0wLG89MCxpPTAsbj0wLHM9MCxyPXRoaXMuYXhpc0xpc3QsYT1yLmxlbmd0aCxjPTEvYSxoPTA7aCE9PWE7aCsrKXt2YXIgbD1yW2hdLHU9bC5wb3NpdGlvbi54O3QrPXUsZSs9dSp1O3ZhciBwPWwucG9zaXRpb24ueTtvKz1wLGkrPXAqcDt2YXIgZD1sLnBvc2l0aW9uLno7bis9ZCxzKz1kKmR9dmFyIHk9ZS10KnQqYyx2PWktbypvKmMsZj1zLW4qbipjO3RoaXMuYXhpc0luZGV4PXk+dj95PmY/MDoyOnY+Zj8xOjJ9LGkucHJvdG90eXBlLmFhYmJRdWVyeT1mdW5jdGlvbih0LGUsbyl7bz1vfHxbXSx0aGlzLmRpcnR5JiYodGhpcy5zb3J0TGlzdCgpLHRoaXMuZGlydHk9ITEpO3ZhciBpPXRoaXMuYXhpc0luZGV4LG49XCJ4XCI7MT09PWkmJihuPVwieVwiKSwyPT09aSYmKG49XCJ6XCIpO2Zvcih2YXIgcz10aGlzLmF4aXNMaXN0LHI9KGUubG93ZXJCb3VuZFtuXSxlLnVwcGVyQm91bmRbbl0sMCk7cjxzLmxlbmd0aDtyKyspe3ZhciBhPXNbcl07YS5hYWJiTmVlZHNVcGRhdGUmJmEuY29tcHV0ZUFBQkIoKSxhLmFhYmIub3ZlcmxhcHMoZSkmJm8ucHVzaChhKX1yZXR1cm4gb319LHtcIi4uL2NvbGxpc2lvbi9Ccm9hZHBoYXNlXCI6MjAsXCIuLi9zaGFwZXMvU2hhcGVcIjo1OX1dLDI4OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bz1vfHx7fTt2YXIgaT12b2lkIDAhPT1vLm1heEZvcmNlP28ubWF4Rm9yY2U6MWU2LGM9by5waXZvdEE/by5waXZvdEEuY2xvbmUoKTpuZXcgYSxoPW8ucGl2b3RCP28ucGl2b3RCLmNsb25lKCk6bmV3IGE7dGhpcy5heGlzQT1vLmF4aXNBP28uYXhpc0EuY2xvbmUoKTpuZXcgYSx0aGlzLmF4aXNCPW8uYXhpc0I/by5heGlzQi5jbG9uZSgpOm5ldyBhLG4uY2FsbCh0aGlzLHQsYyxlLGgsaSksdGhpcy5jb2xsaWRlQ29ubmVjdGVkPSEhby5jb2xsaWRlQ29ubmVjdGVkLHRoaXMuYW5nbGU9dm9pZCAwIT09by5hbmdsZT9vLmFuZ2xlOjA7dmFyIGw9dGhpcy5jb25lRXF1YXRpb249bmV3IHModCxlLG8pLHU9dGhpcy50d2lzdEVxdWF0aW9uPW5ldyByKHQsZSxvKTt0aGlzLnR3aXN0QW5nbGU9dm9pZCAwIT09by50d2lzdEFuZ2xlP28udHdpc3RBbmdsZTowLGwubWF4Rm9yY2U9MCxsLm1pbkZvcmNlPS1pLHUubWF4Rm9yY2U9MCx1Lm1pbkZvcmNlPS1pLHRoaXMuZXF1YXRpb25zLnB1c2gobCx1KX1lLmV4cG9ydHM9aTt2YXIgbj0odChcIi4vQ29uc3RyYWludFwiKSx0KFwiLi9Qb2ludFRvUG9pbnRDb25zdHJhaW50XCIpKSxzPXQoXCIuLi9lcXVhdGlvbnMvQ29uZUVxdWF0aW9uXCIpLHI9dChcIi4uL2VxdWF0aW9ucy9Sb3RhdGlvbmFsRXF1YXRpb25cIiksYT0odChcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIiksdChcIi4uL21hdGgvVmVjM1wiKSk7aS5wcm90b3R5cGU9bmV3IG4saS5jb25zdHJ1Y3Rvcj1pO25ldyBhLG5ldyBhO2kucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuYm9keUEsZT10aGlzLmJvZHlCLG89dGhpcy5jb25lRXF1YXRpb24saT10aGlzLnR3aXN0RXF1YXRpb247bi5wcm90b3R5cGUudXBkYXRlLmNhbGwodGhpcyksdC52ZWN0b3JUb1dvcmxkRnJhbWUodGhpcy5heGlzQSxvLmF4aXNBKSxlLnZlY3RvclRvV29ybGRGcmFtZSh0aGlzLmF4aXNCLG8uYXhpc0IpLHRoaXMuYXhpc0EudGFuZ2VudHMoaS5heGlzQSxpLmF4aXNBKSx0LnZlY3RvclRvV29ybGRGcmFtZShpLmF4aXNBLGkuYXhpc0EpLHRoaXMuYXhpc0IudGFuZ2VudHMoaS5heGlzQixpLmF4aXNCKSxlLnZlY3RvclRvV29ybGRGcmFtZShpLmF4aXNCLGkuYXhpc0IpLG8uYW5nbGU9dGhpcy5hbmdsZSxpLm1heEFuZ2xlPXRoaXMudHdpc3RBbmdsZX19LHtcIi4uL2VxdWF0aW9ucy9Db25lRXF1YXRpb25cIjozNCxcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIjozNSxcIi4uL2VxdWF0aW9ucy9Sb3RhdGlvbmFsRXF1YXRpb25cIjozOCxcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi9Db25zdHJhaW50XCI6MjksXCIuL1BvaW50VG9Qb2ludENvbnN0cmFpbnRcIjozM31dLDI5OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bz1uLmRlZmF1bHRzKG8se2NvbGxpZGVDb25uZWN0ZWQ6ITAsd2FrZVVwQm9kaWVzOiEwfSksdGhpcy5lcXVhdGlvbnM9W10sdGhpcy5ib2R5QT10LHRoaXMuYm9keUI9ZSx0aGlzLmlkPWkuaWRDb3VudGVyKyssdGhpcy5jb2xsaWRlQ29ubmVjdGVkPW8uY29sbGlkZUNvbm5lY3RlZCxvLndha2VVcEJvZGllcyYmKHQmJnQud2FrZVVwKCksZSYmZS53YWtlVXAoKSl9ZS5leHBvcnRzPWk7dmFyIG49dChcIi4uL3V0aWxzL1V0aWxzXCIpO2kucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIm1ldGhvZCB1cGRhdGUoKSBub3QgaW1wbG1lbWVudGVkIGluIHRoaXMgQ29uc3RyYWludCBzdWJjbGFzcyFcIil9LGkucHJvdG90eXBlLmVuYWJsZT1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmVxdWF0aW9ucyxlPTA7ZTx0Lmxlbmd0aDtlKyspdFtlXS5lbmFibGVkPSEwfSxpLnByb3RvdHlwZS5kaXNhYmxlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuZXF1YXRpb25zLGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdLmVuYWJsZWQ9ITF9LGkuaWRDb3VudGVyPTB9LHtcIi4uL3V0aWxzL1V0aWxzXCI6Njl9XSwzMDpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8saSl7bi5jYWxsKHRoaXMsdCxlKSx2b2lkIDA9PT1vJiYobz10LnBvc2l0aW9uLmRpc3RhbmNlVG8oZS5wb3NpdGlvbikpLHZvaWQgMD09PWkmJihpPTFlNiksdGhpcy5kaXN0YW5jZT1vO3ZhciByPXRoaXMuZGlzdGFuY2VFcXVhdGlvbj1uZXcgcyh0LGUpO3RoaXMuZXF1YXRpb25zLnB1c2gociksci5taW5Gb3JjZT0taSxyLm1heEZvcmNlPWl9ZS5leHBvcnRzPWk7dmFyIG49dChcIi4vQ29uc3RyYWludFwiKSxzPXQoXCIuLi9lcXVhdGlvbnMvQ29udGFjdEVxdWF0aW9uXCIpO2kucHJvdG90eXBlPW5ldyBuLGkucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuYm9keUEsZT10aGlzLmJvZHlCLG89dGhpcy5kaXN0YW5jZUVxdWF0aW9uLGk9LjUqdGhpcy5kaXN0YW5jZSxuPW8ubmk7ZS5wb3NpdGlvbi52c3ViKHQucG9zaXRpb24sbiksbi5ub3JtYWxpemUoKSxuLm11bHQoaSxvLnJpKSxuLm11bHQoLWksby5yail9fSx7XCIuLi9lcXVhdGlvbnMvQ29udGFjdEVxdWF0aW9uXCI6MzUsXCIuL0NvbnN0cmFpbnRcIjoyOX1dLDMxOltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bz1vfHx7fTt2YXIgaT12b2lkIDAhPT1vLm1heEZvcmNlP28ubWF4Rm9yY2U6MWU2LGM9by5waXZvdEE/by5waXZvdEEuY2xvbmUoKTpuZXcgYSxoPW8ucGl2b3RCP28ucGl2b3RCLmNsb25lKCk6bmV3IGE7bi5jYWxsKHRoaXMsdCxjLGUsaCxpKSwodGhpcy5heGlzQT1vLmF4aXNBP28uYXhpc0EuY2xvbmUoKTpuZXcgYSgxLDAsMCkpLm5vcm1hbGl6ZSgpLCh0aGlzLmF4aXNCPW8uYXhpc0I/by5heGlzQi5jbG9uZSgpOm5ldyBhKDEsMCwwKSkubm9ybWFsaXplKCk7dmFyIGw9dGhpcy5yb3RhdGlvbmFsRXF1YXRpb24xPW5ldyBzKHQsZSxvKSx1PXRoaXMucm90YXRpb25hbEVxdWF0aW9uMj1uZXcgcyh0LGUsbykscD10aGlzLm1vdG9yRXF1YXRpb249bmV3IHIodCxlLGkpO3AuZW5hYmxlZD0hMSx0aGlzLmVxdWF0aW9ucy5wdXNoKGwsdSxwKX1lLmV4cG9ydHM9aTt2YXIgbj0odChcIi4vQ29uc3RyYWludFwiKSx0KFwiLi9Qb2ludFRvUG9pbnRDb25zdHJhaW50XCIpKSxzPXQoXCIuLi9lcXVhdGlvbnMvUm90YXRpb25hbEVxdWF0aW9uXCIpLHI9dChcIi4uL2VxdWF0aW9ucy9Sb3RhdGlvbmFsTW90b3JFcXVhdGlvblwiKSxhPSh0KFwiLi4vZXF1YXRpb25zL0NvbnRhY3RFcXVhdGlvblwiKSx0KFwiLi4vbWF0aC9WZWMzXCIpKTtpLnByb3RvdHlwZT1uZXcgbixpLmNvbnN0cnVjdG9yPWksaS5wcm90b3R5cGUuZW5hYmxlTW90b3I9ZnVuY3Rpb24oKXt0aGlzLm1vdG9yRXF1YXRpb24uZW5hYmxlZD0hMH0saS5wcm90b3R5cGUuZGlzYWJsZU1vdG9yPWZ1bmN0aW9uKCl7dGhpcy5tb3RvckVxdWF0aW9uLmVuYWJsZWQ9ITF9LGkucHJvdG90eXBlLnNldE1vdG9yU3BlZWQ9ZnVuY3Rpb24odCl7dGhpcy5tb3RvckVxdWF0aW9uLnRhcmdldFZlbG9jaXR5PXR9LGkucHJvdG90eXBlLnNldE1vdG9yTWF4Rm9yY2U9ZnVuY3Rpb24odCl7dGhpcy5tb3RvckVxdWF0aW9uLm1heEZvcmNlPXQsdGhpcy5tb3RvckVxdWF0aW9uLm1pbkZvcmNlPS10fTt2YXIgYz1uZXcgYSxoPW5ldyBhO2kucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuYm9keUEsZT10aGlzLmJvZHlCLG89dGhpcy5tb3RvckVxdWF0aW9uLGk9dGhpcy5yb3RhdGlvbmFsRXF1YXRpb24xLHM9dGhpcy5yb3RhdGlvbmFsRXF1YXRpb24yLHI9YyxhPWgsbD10aGlzLmF4aXNBLHU9dGhpcy5heGlzQjtuLnByb3RvdHlwZS51cGRhdGUuY2FsbCh0aGlzKSxcbnQucXVhdGVybmlvbi52bXVsdChsLHIpLGUucXVhdGVybmlvbi52bXVsdCh1LGEpLHIudGFuZ2VudHMoaS5heGlzQSxzLmF4aXNBKSxpLmF4aXNCLmNvcHkoYSkscy5heGlzQi5jb3B5KGEpLHRoaXMubW90b3JFcXVhdGlvbi5lbmFibGVkJiYodC5xdWF0ZXJuaW9uLnZtdWx0KHRoaXMuYXhpc0Esby5heGlzQSksZS5xdWF0ZXJuaW9uLnZtdWx0KHRoaXMuYXhpc0Isby5heGlzQikpfX0se1wiLi4vZXF1YXRpb25zL0NvbnRhY3RFcXVhdGlvblwiOjM1LFwiLi4vZXF1YXRpb25zL1JvdGF0aW9uYWxFcXVhdGlvblwiOjM4LFwiLi4vZXF1YXRpb25zL1JvdGF0aW9uYWxNb3RvckVxdWF0aW9uXCI6MzksXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vQ29uc3RyYWludFwiOjI5LFwiLi9Qb2ludFRvUG9pbnRDb25zdHJhaW50XCI6MzN9XSwzMjpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8pe289b3x8e307dmFyIGk9dm9pZCAwIT09by5tYXhGb3JjZT9vLm1heEZvcmNlOjFlNixhPW5ldyByLGM9bmV3IHIsaD1uZXcgcjt0LnBvc2l0aW9uLnZhZGQoZS5wb3NpdGlvbixoKSxoLnNjYWxlKC41LGgpLGUucG9pbnRUb0xvY2FsRnJhbWUoaCxjKSx0LnBvaW50VG9Mb2NhbEZyYW1lKGgsYSksbi5jYWxsKHRoaXMsdCxhLGUsYyxpKSx0aGlzLnhBPXQudmVjdG9yVG9Mb2NhbEZyYW1lKHIuVU5JVF9YKSx0aGlzLnhCPWUudmVjdG9yVG9Mb2NhbEZyYW1lKHIuVU5JVF9YKSx0aGlzLnlBPXQudmVjdG9yVG9Mb2NhbEZyYW1lKHIuVU5JVF9ZKSx0aGlzLnlCPWUudmVjdG9yVG9Mb2NhbEZyYW1lKHIuVU5JVF9ZKSx0aGlzLnpBPXQudmVjdG9yVG9Mb2NhbEZyYW1lKHIuVU5JVF9aKSx0aGlzLnpCPWUudmVjdG9yVG9Mb2NhbEZyYW1lKHIuVU5JVF9aKTt2YXIgbD10aGlzLnJvdGF0aW9uYWxFcXVhdGlvbjE9bmV3IHModCxlLG8pLHU9dGhpcy5yb3RhdGlvbmFsRXF1YXRpb24yPW5ldyBzKHQsZSxvKSxwPXRoaXMucm90YXRpb25hbEVxdWF0aW9uMz1uZXcgcyh0LGUsbyk7dGhpcy5lcXVhdGlvbnMucHVzaChsLHUscCl9ZS5leHBvcnRzPWk7dmFyIG49KHQoXCIuL0NvbnN0cmFpbnRcIiksdChcIi4vUG9pbnRUb1BvaW50Q29uc3RyYWludFwiKSkscz10KFwiLi4vZXF1YXRpb25zL1JvdGF0aW9uYWxFcXVhdGlvblwiKSxyPSh0KFwiLi4vZXF1YXRpb25zL1JvdGF0aW9uYWxNb3RvckVxdWF0aW9uXCIpLHQoXCIuLi9lcXVhdGlvbnMvQ29udGFjdEVxdWF0aW9uXCIpLHQoXCIuLi9tYXRoL1ZlYzNcIikpO2kucHJvdG90eXBlPW5ldyBuLGkuY29uc3RydWN0b3I9aTtuZXcgcixuZXcgcjtpLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmJvZHlBLGU9dGhpcy5ib2R5QixvPSh0aGlzLm1vdG9yRXF1YXRpb24sdGhpcy5yb3RhdGlvbmFsRXF1YXRpb24xKSxpPXRoaXMucm90YXRpb25hbEVxdWF0aW9uMixzPXRoaXMucm90YXRpb25hbEVxdWF0aW9uMztuLnByb3RvdHlwZS51cGRhdGUuY2FsbCh0aGlzKSx0LnZlY3RvclRvV29ybGRGcmFtZSh0aGlzLnhBLG8uYXhpc0EpLGUudmVjdG9yVG9Xb3JsZEZyYW1lKHRoaXMueUIsby5heGlzQiksdC52ZWN0b3JUb1dvcmxkRnJhbWUodGhpcy55QSxpLmF4aXNBKSxlLnZlY3RvclRvV29ybGRGcmFtZSh0aGlzLnpCLGkuYXhpc0IpLHQudmVjdG9yVG9Xb3JsZEZyYW1lKHRoaXMuekEscy5heGlzQSksZS52ZWN0b3JUb1dvcmxkRnJhbWUodGhpcy54QixzLmF4aXNCKX19LHtcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIjozNSxcIi4uL2VxdWF0aW9ucy9Sb3RhdGlvbmFsRXF1YXRpb25cIjozOCxcIi4uL2VxdWF0aW9ucy9Sb3RhdGlvbmFsTW90b3JFcXVhdGlvblwiOjM5LFwiLi4vbWF0aC9WZWMzXCI6NDYsXCIuL0NvbnN0cmFpbnRcIjoyOSxcIi4vUG9pbnRUb1BvaW50Q29uc3RyYWludFwiOjMzfV0sMzM6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQsZSxvLGksYSl7bi5jYWxsKHRoaXMsdCxvKSxhPXZvaWQgMCE9PWE/YToxZTYsdGhpcy5waXZvdEE9ZT9lLmNsb25lKCk6bmV3IHIsdGhpcy5waXZvdEI9aT9pLmNsb25lKCk6bmV3IHI7dmFyIGM9dGhpcy5lcXVhdGlvblg9bmV3IHModCxvKSxoPXRoaXMuZXF1YXRpb25ZPW5ldyBzKHQsbyksbD10aGlzLmVxdWF0aW9uWj1uZXcgcyh0LG8pO3RoaXMuZXF1YXRpb25zLnB1c2goYyxoLGwpLGMubWluRm9yY2U9aC5taW5Gb3JjZT1sLm1pbkZvcmNlPS1hLGMubWF4Rm9yY2U9aC5tYXhGb3JjZT1sLm1heEZvcmNlPWEsYy5uaS5zZXQoMSwwLDApLGgubmkuc2V0KDAsMSwwKSxsLm5pLnNldCgwLDAsMSl9ZS5leHBvcnRzPWk7dmFyIG49dChcIi4vQ29uc3RyYWludFwiKSxzPXQoXCIuLi9lcXVhdGlvbnMvQ29udGFjdEVxdWF0aW9uXCIpLHI9dChcIi4uL21hdGgvVmVjM1wiKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmJvZHlBLGU9dGhpcy5ib2R5QixvPXRoaXMuZXF1YXRpb25YLGk9dGhpcy5lcXVhdGlvblksbj10aGlzLmVxdWF0aW9uWjt0LnF1YXRlcm5pb24udm11bHQodGhpcy5waXZvdEEsby5yaSksZS5xdWF0ZXJuaW9uLnZtdWx0KHRoaXMucGl2b3RCLG8ucmopLGkucmkuY29weShvLnJpKSxpLnJqLmNvcHkoby5yaiksbi5yaS5jb3B5KG8ucmkpLG4ucmouY29weShvLnJqKX19LHtcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIjozNSxcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi9Db25zdHJhaW50XCI6Mjl9XSwzNDpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8pe289b3x8e307dmFyIGk9dm9pZCAwIT09by5tYXhGb3JjZT9vLm1heEZvcmNlOjFlNjtzLmNhbGwodGhpcyx0LGUsLWksaSksdGhpcy5heGlzQT1vLmF4aXNBP28uYXhpc0EuY2xvbmUoKTpuZXcgbigxLDAsMCksdGhpcy5heGlzQj1vLmF4aXNCP28uYXhpc0IuY2xvbmUoKTpuZXcgbigwLDEsMCksdGhpcy5hbmdsZT12b2lkIDAhPT1vLmFuZ2xlP28uYW5nbGU6MH1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi4vbWF0aC9WZWMzXCIpLHM9KHQoXCIuLi9tYXRoL01hdDNcIiksdChcIi4vRXF1YXRpb25cIikpO2kucHJvdG90eXBlPW5ldyBzLGkucHJvdG90eXBlLmNvbnN0cnVjdG9yPWk7dmFyIHI9bmV3IG4sYT1uZXcgbjtpLnByb3RvdHlwZS5jb21wdXRlQj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmEsbz10aGlzLmIsaT10aGlzLmF4aXNBLG49dGhpcy5heGlzQixzPXIsYz1hLGg9dGhpcy5qYWNvYmlhbkVsZW1lbnRBLGw9dGhpcy5qYWNvYmlhbkVsZW1lbnRCO3JldHVybiBpLmNyb3NzKG4scyksbi5jcm9zcyhpLGMpLGgucm90YXRpb25hbC5jb3B5KGMpLGwucm90YXRpb25hbC5jb3B5KHMpLC0oTWF0aC5jb3ModGhpcy5hbmdsZSktaS5kb3QobikpKmUtdGhpcy5jb21wdXRlR1coKSpvLXQqdGhpcy5jb21wdXRlR2lNZigpfX0se1wiLi4vbWF0aC9NYXQzXCI6NDMsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vRXF1YXRpb25cIjozNn1dLDM1OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bz12b2lkIDAhPT1vP286MWU2LG4uY2FsbCh0aGlzLHQsZSwwLG8pLHRoaXMucmVzdGl0dXRpb249MCx0aGlzLnJpPW5ldyBzLHRoaXMucmo9bmV3IHMsdGhpcy5uaT1uZXcgc31lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9FcXVhdGlvblwiKSxzPXQoXCIuLi9tYXRoL1ZlYzNcIik7dChcIi4uL21hdGgvTWF0M1wiKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pO3ZhciByPW5ldyBzLGE9bmV3IHMsYz1uZXcgcztpLnByb3RvdHlwZS5jb21wdXRlQj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmEsbz10aGlzLmIsaT10aGlzLmJpLG49dGhpcy5iaixzPXRoaXMucmksaD10aGlzLnJqLGw9cix1PWEscD1pLnZlbG9jaXR5LGQ9aS5hbmd1bGFyVmVsb2NpdHkseT0oaS5mb3JjZSxpLnRvcnF1ZSxuLnZlbG9jaXR5KSx2PW4uYW5ndWxhclZlbG9jaXR5LGY9KG4uZm9yY2Usbi50b3JxdWUsYyksbT10aGlzLmphY29iaWFuRWxlbWVudEEsZz10aGlzLmphY29iaWFuRWxlbWVudEIsdz10aGlzLm5pO3MuY3Jvc3ModyxsKSxoLmNyb3NzKHcsdSksdy5uZWdhdGUobS5zcGF0aWFsKSxsLm5lZ2F0ZShtLnJvdGF0aW9uYWwpLGcuc3BhdGlhbC5jb3B5KHcpLGcucm90YXRpb25hbC5jb3B5KHUpLGYuY29weShuLnBvc2l0aW9uKSxmLnZhZGQoaCxmKSxmLnZzdWIoaS5wb3NpdGlvbixmKSxmLnZzdWIocyxmKTt2YXIgeD13LmRvdChmKSxiPXRoaXMucmVzdGl0dXRpb24rMTtyZXR1cm4teCplLShiKnkuZG90KHcpLWIqcC5kb3Qodykrdi5kb3QodSktZC5kb3QobCkpKm8tdCp0aGlzLmNvbXB1dGVHaU1mKCl9O3ZhciBoPW5ldyBzLGw9bmV3IHMsdT1uZXcgcyxwPW5ldyBzLGQ9bmV3IHM7aS5wcm90b3R5cGUuZ2V0SW1wYWN0VmVsb2NpdHlBbG9uZ05vcm1hbD1mdW5jdGlvbigpe3ZhciB0PWgsZT1sLG89dSxpPXAsbj1kO3JldHVybiB0aGlzLmJpLnBvc2l0aW9uLnZhZGQodGhpcy5yaSxvKSx0aGlzLmJqLnBvc2l0aW9uLnZhZGQodGhpcy5yaixpKSx0aGlzLmJpLmdldFZlbG9jaXR5QXRXb3JsZFBvaW50KG8sdCksdGhpcy5iai5nZXRWZWxvY2l0eUF0V29ybGRQb2ludChpLGUpLHQudnN1YihlLG4pLHRoaXMubmkuZG90KG4pfX0se1wiLi4vbWF0aC9NYXQzXCI6NDMsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vRXF1YXRpb25cIjozNn1dLDM2OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyxzKXt0aGlzLmlkPWkuaWQrKyx0aGlzLm1pbkZvcmNlPXZvaWQgMD09PW8/LTFlNjpvLHRoaXMubWF4Rm9yY2U9dm9pZCAwPT09cz8xZTY6cyx0aGlzLmJpPXQsdGhpcy5iaj1lLHRoaXMuYT0wLHRoaXMuYj0wLHRoaXMuZXBzPTAsdGhpcy5qYWNvYmlhbkVsZW1lbnRBPW5ldyBuLHRoaXMuamFjb2JpYW5FbGVtZW50Qj1uZXcgbix0aGlzLmVuYWJsZWQ9ITAsdGhpcy5tdWx0aXBsaWVyPTAsdGhpcy5zZXRTcG9va1BhcmFtcygxZTcsNCwxLzYwKX1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi4vbWF0aC9KYWNvYmlhbkVsZW1lbnRcIikscz10KFwiLi4vbWF0aC9WZWMzXCIpO2kucHJvdG90eXBlLmNvbnN0cnVjdG9yPWksaS5pZD0wLGkucHJvdG90eXBlLnNldFNwb29rUGFyYW1zPWZ1bmN0aW9uKHQsZSxvKXt2YXIgaT1lLG49dCxzPW87dGhpcy5hPTQvKHMqKDErNCppKSksdGhpcy5iPTQqaS8oMSs0KmkpLHRoaXMuZXBzPTQvKHMqcypuKigxKzQqaSkpfSxpLnByb3RvdHlwZS5jb21wdXRlQj1mdW5jdGlvbih0LGUsbyl7dmFyIGk9dGhpcy5jb21wdXRlR1coKTtyZXR1cm4tdGhpcy5jb21wdXRlR3EoKSp0LWkqZS10aGlzLmNvbXB1dGVHaU1mKCkqb30saS5wcm90b3R5cGUuY29tcHV0ZUdxPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5qYWNvYmlhbkVsZW1lbnRBLGU9dGhpcy5qYWNvYmlhbkVsZW1lbnRCLG89dGhpcy5iaSxpPXRoaXMuYmosbj1vLnBvc2l0aW9uLHM9aS5wb3NpdGlvbjtyZXR1cm4gdC5zcGF0aWFsLmRvdChuKStlLnNwYXRpYWwuZG90KHMpfTtuZXcgcztpLnByb3RvdHlwZS5jb21wdXRlR1c9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmphY29iaWFuRWxlbWVudEEsZT10aGlzLmphY29iaWFuRWxlbWVudEIsbz10aGlzLmJpLGk9dGhpcy5iaixuPW8udmVsb2NpdHkscz1pLnZlbG9jaXR5LHI9by5hbmd1bGFyVmVsb2NpdHksYT1pLmFuZ3VsYXJWZWxvY2l0eTtyZXR1cm4gdC5tdWx0aXBseVZlY3RvcnMobixyKStlLm11bHRpcGx5VmVjdG9ycyhzLGEpfSxpLnByb3RvdHlwZS5jb21wdXRlR1dsYW1iZGE9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmphY29iaWFuRWxlbWVudEEsZT10aGlzLmphY29iaWFuRWxlbWVudEIsbz10aGlzLmJpLGk9dGhpcy5iaixuPW8udmxhbWJkYSxzPWkudmxhbWJkYSxyPW8ud2xhbWJkYSxhPWkud2xhbWJkYTtyZXR1cm4gdC5tdWx0aXBseVZlY3RvcnMobixyKStlLm11bHRpcGx5VmVjdG9ycyhzLGEpfTt2YXIgcj1uZXcgcyxhPW5ldyBzLGM9bmV3IHMsaD1uZXcgcztpLnByb3RvdHlwZS5jb21wdXRlR2lNZj1mdW5jdGlvbigpe3ZhciB0PXRoaXMuamFjb2JpYW5FbGVtZW50QSxlPXRoaXMuamFjb2JpYW5FbGVtZW50QixvPXRoaXMuYmksaT10aGlzLmJqLG49by5mb3JjZSxzPW8udG9ycXVlLGw9aS5mb3JjZSx1PWkudG9ycXVlLHA9by5pbnZNYXNzU29sdmUsZD1pLmludk1hc3NTb2x2ZTtyZXR1cm4gbi5zY2FsZShwLHIpLGwuc2NhbGUoZCxhKSxvLmludkluZXJ0aWFXb3JsZFNvbHZlLnZtdWx0KHMsYyksaS5pbnZJbmVydGlhV29ybGRTb2x2ZS52bXVsdCh1LGgpLHQubXVsdGlwbHlWZWN0b3JzKHIsYykrZS5tdWx0aXBseVZlY3RvcnMoYSxoKX07dmFyIGw9bmV3IHM7aS5wcm90b3R5cGUuY29tcHV0ZUdpTUd0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5qYWNvYmlhbkVsZW1lbnRBLGU9dGhpcy5qYWNvYmlhbkVsZW1lbnRCLG89dGhpcy5iaSxpPXRoaXMuYmosbj1vLmludk1hc3NTb2x2ZSxzPWkuaW52TWFzc1NvbHZlLHI9by5pbnZJbmVydGlhV29ybGRTb2x2ZSxhPWkuaW52SW5lcnRpYVdvcmxkU29sdmUsYz1uK3M7cmV0dXJuIHIudm11bHQodC5yb3RhdGlvbmFsLGwpLGMrPWwuZG90KHQucm90YXRpb25hbCksYS52bXVsdChlLnJvdGF0aW9uYWwsbCksYys9bC5kb3QoZS5yb3RhdGlvbmFsKX07dmFyIHU9bmV3IHM7bmV3IHMsbmV3IHMsbmV3IHMsbmV3IHMsbmV3IHM7aS5wcm90b3R5cGUuYWRkVG9XbGFtYmRhPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuamFjb2JpYW5FbGVtZW50QSxvPXRoaXMuamFjb2JpYW5FbGVtZW50QixpPXRoaXMuYmksbj10aGlzLmJqLHM9dTtpLnZsYW1iZGEuYWRkU2NhbGVkVmVjdG9yKGkuaW52TWFzc1NvbHZlKnQsZS5zcGF0aWFsLGkudmxhbWJkYSksbi52bGFtYmRhLmFkZFNjYWxlZFZlY3RvcihuLmludk1hc3NTb2x2ZSp0LG8uc3BhdGlhbCxuLnZsYW1iZGEpLGkuaW52SW5lcnRpYVdvcmxkU29sdmUudm11bHQoZS5yb3RhdGlvbmFsLHMpLGkud2xhbWJkYS5hZGRTY2FsZWRWZWN0b3IodCxzLGkud2xhbWJkYSksbi5pbnZJbmVydGlhV29ybGRTb2x2ZS52bXVsdChvLnJvdGF0aW9uYWwscyksbi53bGFtYmRhLmFkZFNjYWxlZFZlY3Rvcih0LHMsbi53bGFtYmRhKX0saS5wcm90b3R5cGUuY29tcHV0ZUM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb21wdXRlR2lNR3QoKSt0aGlzLmVwc319LHtcIi4uL21hdGgvSmFjb2JpYW5FbGVtZW50XCI6NDIsXCIuLi9tYXRoL1ZlYzNcIjo0Nn1dLDM3OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bi5jYWxsKHRoaXMsdCxlLC1vLG8pLHRoaXMucmk9bmV3IHMsdGhpcy5yaj1uZXcgcyx0aGlzLnQ9bmV3IHN9ZS5leHBvcnRzPWk7dmFyIG49dChcIi4vRXF1YXRpb25cIikscz10KFwiLi4vbWF0aC9WZWMzXCIpO3QoXCIuLi9tYXRoL01hdDNcIik7aS5wcm90b3R5cGU9bmV3IG4saS5wcm90b3R5cGUuY29uc3RydWN0b3I9aTt2YXIgcj1uZXcgcyxhPW5ldyBzO2kucHJvdG90eXBlLmNvbXB1dGVCPWZ1bmN0aW9uKHQpe3ZhciBlPSh0aGlzLmEsdGhpcy5iKSxvPSh0aGlzLmJpLHRoaXMuYmosdGhpcy5yaSksaT10aGlzLnJqLG49cixzPWEsYz10aGlzLnQ7by5jcm9zcyhjLG4pLGkuY3Jvc3MoYyxzKTt2YXIgaD10aGlzLmphY29iaWFuRWxlbWVudEEsbD10aGlzLmphY29iaWFuRWxlbWVudEI7cmV0dXJuIGMubmVnYXRlKGguc3BhdGlhbCksbi5uZWdhdGUoaC5yb3RhdGlvbmFsKSxsLnNwYXRpYWwuY29weShjKSxsLnJvdGF0aW9uYWwuY29weShzKSwtdGhpcy5jb21wdXRlR1coKSplLXQqdGhpcy5jb21wdXRlR2lNZigpfX0se1wiLi4vbWF0aC9NYXQzXCI6NDMsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vRXF1YXRpb25cIjozNn1dLDM4OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bz1vfHx7fTt2YXIgaT12b2lkIDAhPT1vLm1heEZvcmNlP28ubWF4Rm9yY2U6MWU2O3MuY2FsbCh0aGlzLHQsZSwtaSxpKSx0aGlzLmF4aXNBPW8uYXhpc0E/by5heGlzQS5jbG9uZSgpOm5ldyBuKDEsMCwwKSx0aGlzLmF4aXNCPW8uYXhpc0I/by5heGlzQi5jbG9uZSgpOm5ldyBuKDAsMSwwKSx0aGlzLm1heEFuZ2xlPU1hdGguUEkvMn1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi4vbWF0aC9WZWMzXCIpLHM9KHQoXCIuLi9tYXRoL01hdDNcIiksdChcIi4vRXF1YXRpb25cIikpO2kucHJvdG90eXBlPW5ldyBzLGkucHJvdG90eXBlLmNvbnN0cnVjdG9yPWk7dmFyIHI9bmV3IG4sYT1uZXcgbjtpLnByb3RvdHlwZS5jb21wdXRlQj1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmEsbz10aGlzLmIsaT10aGlzLmF4aXNBLG49dGhpcy5heGlzQixzPXIsYz1hLGg9dGhpcy5qYWNvYmlhbkVsZW1lbnRBLGw9dGhpcy5qYWNvYmlhbkVsZW1lbnRCO3JldHVybiBpLmNyb3NzKG4scyksbi5jcm9zcyhpLGMpLGgucm90YXRpb25hbC5jb3B5KGMpLGwucm90YXRpb25hbC5jb3B5KHMpLC0oTWF0aC5jb3ModGhpcy5tYXhBbmdsZSktaS5kb3QobikpKmUtdGhpcy5jb21wdXRlR1coKSpvLXQqdGhpcy5jb21wdXRlR2lNZigpfX0se1wiLi4vbWF0aC9NYXQzXCI6NDMsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vRXF1YXRpb25cIjozNn1dLDM5OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyl7bz12b2lkIDAhPT1vP286MWU2LHMuY2FsbCh0aGlzLHQsZSwtbyxvKSx0aGlzLmF4aXNBPW5ldyBuLHRoaXMuYXhpc0I9bmV3IG4sdGhpcy50YXJnZXRWZWxvY2l0eT0wfWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuLi9tYXRoL1ZlYzNcIikscz0odChcIi4uL21hdGgvTWF0M1wiKSx0KFwiLi9FcXVhdGlvblwiKSk7aS5wcm90b3R5cGU9bmV3IHMsaS5wcm90b3R5cGUuY29uc3RydWN0b3I9aSxpLnByb3RvdHlwZS5jb21wdXRlQj1mdW5jdGlvbih0KXt2YXIgZT0odGhpcy5hLHRoaXMuYiksbz0odGhpcy5iaSx0aGlzLmJqLHRoaXMuYXhpc0EpLGk9dGhpcy5heGlzQixuPXRoaXMuamFjb2JpYW5FbGVtZW50QSxzPXRoaXMuamFjb2JpYW5FbGVtZW50QjtyZXR1cm4gbi5yb3RhdGlvbmFsLmNvcHkobyksaS5uZWdhdGUocy5yb3RhdGlvbmFsKSwtKHRoaXMuY29tcHV0ZUdXKCktdGhpcy50YXJnZXRWZWxvY2l0eSkqZS10KnRoaXMuY29tcHV0ZUdpTWYoKX19LHtcIi4uL21hdGgvTWF0M1wiOjQzLFwiLi4vbWF0aC9WZWMzXCI6NDYsXCIuL0VxdWF0aW9uXCI6MzZ9XSw0MDpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8pe289bi5kZWZhdWx0cyhvLHtmcmljdGlvbjouMyxyZXN0aXR1dGlvbjouMyxjb250YWN0RXF1YXRpb25TdGlmZm5lc3M6MWU3LGNvbnRhY3RFcXVhdGlvblJlbGF4YXRpb246MyxmcmljdGlvbkVxdWF0aW9uU3RpZmZuZXNzOjFlNyxmcmljdGlvbkVxdWF0aW9uUmVsYXhhdGlvbjozfSksdGhpcy5pZD1pLmlkQ291bnRlcisrLHRoaXMubWF0ZXJpYWxzPVt0LGVdLHRoaXMuZnJpY3Rpb249by5mcmljdGlvbix0aGlzLnJlc3RpdHV0aW9uPW8ucmVzdGl0dXRpb24sdGhpcy5jb250YWN0RXF1YXRpb25TdGlmZm5lc3M9by5jb250YWN0RXF1YXRpb25TdGlmZm5lc3MsdGhpcy5jb250YWN0RXF1YXRpb25SZWxheGF0aW9uPW8uY29udGFjdEVxdWF0aW9uUmVsYXhhdGlvbix0aGlzLmZyaWN0aW9uRXF1YXRpb25TdGlmZm5lc3M9by5mcmljdGlvbkVxdWF0aW9uU3RpZmZuZXNzLHRoaXMuZnJpY3Rpb25FcXVhdGlvblJlbGF4YXRpb249by5mcmljdGlvbkVxdWF0aW9uUmVsYXhhdGlvbn12YXIgbj10KFwiLi4vdXRpbHMvVXRpbHNcIik7ZS5leHBvcnRzPWksaS5pZENvdW50ZXI9MH0se1wiLi4vdXRpbHMvVXRpbHNcIjo2OX1dLDQxOltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXt2YXIgZT1cIlwiO3Q9dHx8e30sXCJzdHJpbmdcIj09dHlwZW9mIHQ/KGU9dCx0PXt9KTpcIm9iamVjdFwiPT10eXBlb2YgdCYmKGU9XCJcIiksdGhpcy5uYW1lPWUsdGhpcy5pZD1pLmlkQ291bnRlcisrLHRoaXMuZnJpY3Rpb249dm9pZCAwIT09dC5mcmljdGlvbj90LmZyaWN0aW9uOi0xLHRoaXMucmVzdGl0dXRpb249dm9pZCAwIT09dC5yZXN0aXR1dGlvbj90LnJlc3RpdHV0aW9uOi0xfWUuZXhwb3J0cz1pLGkuaWRDb3VudGVyPTB9LHt9XSw0MjpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXt0aGlzLnNwYXRpYWw9bmV3IG4sdGhpcy5yb3RhdGlvbmFsPW5ldyBufWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuL1ZlYzNcIik7aS5wcm90b3R5cGUubXVsdGlwbHlFbGVtZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0LnNwYXRpYWwuZG90KHRoaXMuc3BhdGlhbCkrdC5yb3RhdGlvbmFsLmRvdCh0aGlzLnJvdGF0aW9uYWwpfSxpLnByb3RvdHlwZS5tdWx0aXBseVZlY3RvcnM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5kb3QodGhpcy5zcGF0aWFsKStlLmRvdCh0aGlzLnJvdGF0aW9uYWwpfX0se1wiLi9WZWMzXCI6NDZ9XSw0MzpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCl7dGhpcy5lbGVtZW50cz10fHxbMCwwLDAsMCwwLDAsMCwwLDBdfWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuL1ZlYzNcIik7aS5wcm90b3R5cGUuaWRlbnRpdHk9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnRzO3RbMF09MSx0WzFdPTAsdFsyXT0wLHRbM109MCx0WzRdPTEsdFs1XT0wLHRbNl09MCx0WzddPTAsdFs4XT0xfSxpLnByb3RvdHlwZS5zZXRaZXJvPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50czt0WzBdPTAsdFsxXT0wLHRbMl09MCx0WzNdPTAsdFs0XT0wLHRbNV09MCx0WzZdPTAsdFs3XT0wLHRbOF09MH0saS5wcm90b3R5cGUuc2V0VHJhY2U9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5lbGVtZW50cztlWzBdPXQueCxlWzRdPXQueSxlWzhdPXQuen0saS5wcm90b3R5cGUuZ2V0VHJhY2U9ZnVuY3Rpb24odCl7dmFyIHQ9dHx8bmV3IG4sZT10aGlzLmVsZW1lbnRzO3QueD1lWzBdLHQueT1lWzRdLHQuej1lWzhdfSxpLnByb3RvdHlwZS52bXVsdD1mdW5jdGlvbih0LGUpe2U9ZXx8bmV3IG47dmFyIG89dGhpcy5lbGVtZW50cyxpPXQueCxzPXQueSxyPXQuejtyZXR1cm4gZS54PW9bMF0qaStvWzFdKnMrb1syXSpyLGUueT1vWzNdKmkrb1s0XSpzK29bNV0qcixlLno9b1s2XSppK29bN10qcytvWzhdKnIsZX0saS5wcm90b3R5cGUuc211bHQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLmVsZW1lbnRzLmxlbmd0aDtlKyspdGhpcy5lbGVtZW50c1tlXSo9dH0saS5wcm90b3R5cGUubW11bHQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG89ZXx8bmV3IGksbj0wO248MztuKyspZm9yKHZhciBzPTA7czwzO3MrKyl7Zm9yKHZhciByPTAsYT0wO2E8MzthKyspcis9dC5lbGVtZW50c1tuKzMqYV0qdGhpcy5lbGVtZW50c1thKzMqc107by5lbGVtZW50c1tuKzMqc109cn1yZXR1cm4gb30saS5wcm90b3R5cGUuc2NhbGU9ZnVuY3Rpb24odCxlKXtlPWV8fG5ldyBpO2Zvcih2YXIgbz10aGlzLmVsZW1lbnRzLG49ZS5lbGVtZW50cyxzPTA7MyE9PXM7cysrKW5bMypzKzBdPXQueCpvWzMqcyswXSxuWzMqcysxXT10Lnkqb1szKnMrMV0sblszKnMrMl09dC56Km9bMypzKzJdO3JldHVybiBlfSxpLnByb3RvdHlwZS5zb2x2ZT1mdW5jdGlvbih0LGUpe2U9ZXx8bmV3IG47Zm9yKHZhciBvPVtdLGk9MDtpPDEyO2krKylvLnB1c2goMCk7dmFyIGkscztmb3IoaT0wO2k8MztpKyspZm9yKHM9MDtzPDM7cysrKW9baSs0KnNdPXRoaXMuZWxlbWVudHNbaSszKnNdO29bM109dC54LG9bN109dC55LG9bMTFdPXQuejt2YXIgcixhLGM9MyxoPWM7ZG97aWYoaT1oLWMsMD09PW9baSs0KmldKWZvcihzPWkrMTtzPGg7cysrKWlmKDAhPT1vW2krNCpzXSl7cj00O2Rve2E9NC1yLG9bYSs0KmldKz1vW2ErNCpzXX13aGlsZSgtLXIpO2JyZWFrfWlmKDAhPT1vW2krNCppXSlmb3Iocz1pKzE7czxoO3MrKyl7dmFyIGw9b1tpKzQqc10vb1tpKzQqaV07cj00O2Rve2E9NC1yLG9bYSs0KnNdPWE8PWk/MDpvW2ErNCpzXS1vW2ErNCppXSpsfXdoaWxlKC0tcil9fXdoaWxlKC0tYyk7aWYoZS56PW9bMTFdL29bMTBdLGUueT0ob1s3XS1vWzZdKmUueikvb1s1XSxlLng9KG9bM10tb1syXSplLnotb1sxXSplLnkpL29bMF0saXNOYU4oZS54KXx8aXNOYU4oZS55KXx8aXNOYU4oZS56KXx8ZS54PT09MS8wfHxlLnk9PT0xLzB8fGUuej09PTEvMCl0aHJvd1wiQ291bGQgbm90IHNvbHZlIGVxdWF0aW9uISBHb3QgeD1bXCIrZS50b1N0cmluZygpK1wiXSwgYj1bXCIrdC50b1N0cmluZygpK1wiXSwgQT1bXCIrdGhpcy50b1N0cmluZygpK1wiXVwiO3JldHVybiBlfSxpLnByb3RvdHlwZS5lPWZ1bmN0aW9uKHQsZSxvKXtpZih2b2lkIDA9PT1vKXJldHVybiB0aGlzLmVsZW1lbnRzW2UrMyp0XTt0aGlzLmVsZW1lbnRzW2UrMyp0XT1vfSxpLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8dC5lbGVtZW50cy5sZW5ndGg7ZSsrKXRoaXMuZWxlbWVudHNbZV09dC5lbGVtZW50c1tlXTtyZXR1cm4gdGhpc30saS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9XCJcIixlPTA7ZTw5O2UrKyl0Kz10aGlzLmVsZW1lbnRzW2VdK1wiLFwiO3JldHVybiB0fSxpLnByb3RvdHlwZS5yZXZlcnNlPWZ1bmN0aW9uKHQpe3Q9dHx8bmV3IGk7Zm9yKHZhciBlPVtdLG89MDtvPDE4O28rKyllLnB1c2goMCk7dmFyIG8sbjtmb3Iobz0wO288MztvKyspZm9yKG49MDtuPDM7bisrKWVbbys2Km5dPXRoaXMuZWxlbWVudHNbbyszKm5dO2VbM109MSxlWzldPTAsZVsxNV09MCxlWzRdPTAsZVsxMF09MSxlWzE2XT0wLGVbNV09MCxlWzExXT0wLGVbMTddPTE7dmFyIHMscixhPTMsYz1hO2Rve2lmKG89Yy1hLDA9PT1lW28rNipvXSlmb3Iobj1vKzE7bjxjO24rKylpZigwIT09ZVtvKzYqbl0pe3M9Njtkb3tyPTYtcyxlW3IrNipvXSs9ZVtyKzYqbl19d2hpbGUoLS1zKTticmVha31pZigwIT09ZVtvKzYqb10pZm9yKG49bysxO248YztuKyspe3ZhciBoPWVbbys2Km5dL2Vbbys2Km9dO3M9Njtkb3tyPTYtcyxlW3IrNipuXT1yPD1vPzA6ZVtyKzYqbl0tZVtyKzYqb10qaH13aGlsZSgtLXMpfX13aGlsZSgtLWEpO289Mjtkb3tuPW8tMTtkb3t2YXIgaD1lW28rNipuXS9lW28rNipvXTtzPTY7ZG97cj02LXMsZVtyKzYqbl09ZVtyKzYqbl0tZVtyKzYqb10qaH13aGlsZSgtLXMpfXdoaWxlKG4tLSl9d2hpbGUoLS1vKTtvPTI7ZG97dmFyIGg9MS9lW28rNipvXTtzPTY7ZG97cj02LXMsZVtyKzYqb109ZVtyKzYqb10qaH13aGlsZSgtLXMpfXdoaWxlKG8tLSk7bz0yO2Rve249Mjtkb3tpZihyPWVbMytuKzYqb10saXNOYU4ocil8fHI9PT0xLzApdGhyb3dcIkNvdWxkIG5vdCByZXZlcnNlISBBPVtcIit0aGlzLnRvU3RyaW5nKCkrXCJdXCI7dC5lKG8sbixyKX13aGlsZShuLS0pfXdoaWxlKG8tLSk7cmV0dXJuIHR9LGkucHJvdG90eXBlLnNldFJvdGF0aW9uRnJvbVF1YXRlcm5pb249ZnVuY3Rpb24odCl7dmFyIGU9dC54LG89dC55LGk9dC56LG49dC53LHM9ZStlLHI9bytvLGE9aStpLGM9ZSpzLGg9ZSpyLGw9ZSphLHU9bypyLHA9byphLGQ9aSphLHk9bipzLHY9bipyLGY9biphLG09dGhpcy5lbGVtZW50cztyZXR1cm4gbVswXT0xLSh1K2QpLG1bMV09aC1mLG1bMl09bCt2LG1bM109aCtmLG1bNF09MS0oYytkKSxtWzVdPXAteSxtWzZdPWwtdixtWzddPXAreSxtWzhdPTEtKGMrdSksdGhpc30saS5wcm90b3R5cGUudHJhbnNwb3NlPWZ1bmN0aW9uKHQpe3Q9dHx8bmV3IGk7Zm9yKHZhciBlPXQuZWxlbWVudHMsbz10aGlzLmVsZW1lbnRzLG49MDszIT09bjtuKyspZm9yKHZhciBzPTA7MyE9PXM7cysrKWVbMypuK3NdPW9bMypzK25dO3JldHVybiB0fX0se1wiLi9WZWMzXCI6NDZ9XSw0NDpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8saSl7dGhpcy54PXZvaWQgMCE9PXQ/dDowLHRoaXMueT12b2lkIDAhPT1lP2U6MCx0aGlzLno9dm9pZCAwIT09bz9vOjAsdGhpcy53PXZvaWQgMCE9PWk/aToxfWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuL1ZlYzNcIik7aS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSxvLGkpe3JldHVybiB0aGlzLng9dCx0aGlzLnk9ZSx0aGlzLno9byx0aGlzLnc9aSx0aGlzfSxpLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLngrXCIsXCIrdGhpcy55K1wiLFwiK3RoaXMueitcIixcIit0aGlzLnd9LGkucHJvdG90eXBlLnRvQXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm5bdGhpcy54LHRoaXMueSx0aGlzLnosdGhpcy53XX0saS5wcm90b3R5cGUuc2V0RnJvbUF4aXNBbmdsZT1mdW5jdGlvbih0LGUpe3ZhciBvPU1hdGguc2luKC41KmUpO3JldHVybiB0aGlzLng9dC54Km8sdGhpcy55PXQueSpvLHRoaXMuej10Lnoqbyx0aGlzLnc9TWF0aC5jb3MoLjUqZSksdGhpc30saS5wcm90b3R5cGUudG9BeGlzQW5nbGU9ZnVuY3Rpb24odCl7dD10fHxuZXcgbix0aGlzLm5vcm1hbGl6ZSgpO3ZhciBlPTIqTWF0aC5hY29zKHRoaXMudyksbz1NYXRoLnNxcnQoMS10aGlzLncqdGhpcy53KTtyZXR1cm4gbzwuMDAxPyh0Lng9dGhpcy54LHQueT10aGlzLnksdC56PXRoaXMueik6KHQueD10aGlzLngvbyx0Lnk9dGhpcy55L28sdC56PXRoaXMuei9vKSxbdCxlXX07dmFyIHM9bmV3IG4scj1uZXcgbjtpLnByb3RvdHlwZS5zZXRGcm9tVmVjdG9ycz1mdW5jdGlvbih0LGUpe2lmKHQuaXNBbnRpcGFyYWxsZWxUbyhlKSl7dmFyIG89cyxpPXI7dC50YW5nZW50cyhvLGkpLHRoaXMuc2V0RnJvbUF4aXNBbmdsZShvLE1hdGguUEkpfWVsc2V7dmFyIG49dC5jcm9zcyhlKTt0aGlzLng9bi54LHRoaXMueT1uLnksdGhpcy56PW4ueix0aGlzLnc9TWF0aC5zcXJ0KE1hdGgucG93KHQubm9ybSgpLDIpKk1hdGgucG93KGUubm9ybSgpLDIpKSt0LmRvdChlKSx0aGlzLm5vcm1hbGl6ZSgpfXJldHVybiB0aGlzfTtuZXcgbixuZXcgbixuZXcgbjtpLnByb3RvdHlwZS5tdWx0PWZ1bmN0aW9uKHQsZSl7ZT1lfHxuZXcgaTt2YXIgbz10aGlzLngsbj10aGlzLnkscz10aGlzLnoscj10aGlzLncsYT10LngsYz10LnksaD10LnosbD10Lnc7cmV0dXJuIGUueD1vKmwrciphK24qaC1zKmMsZS55PW4qbCtyKmMrcyphLW8qaCxlLno9cypsK3IqaCtvKmMtbiphLGUudz1yKmwtbyphLW4qYy1zKmgsZX0saS5wcm90b3R5cGUuaW52ZXJzZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLngsbz10aGlzLnksbj10aGlzLnoscz10aGlzLnc7dD10fHxuZXcgaSx0aGlzLmNvbmp1Z2F0ZSh0KTt2YXIgcj0xLyhlKmUrbypvK24qbitzKnMpO3JldHVybiB0LngqPXIsdC55Kj1yLHQueio9cix0LncqPXIsdH0saS5wcm90b3R5cGUuY29uanVnYXRlPWZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBpLHQueD0tdGhpcy54LHQueT0tdGhpcy55LHQuej0tdGhpcy56LHQudz10aGlzLncsdH0saS5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKCl7dmFyIHQ9TWF0aC5zcXJ0KHRoaXMueCp0aGlzLngrdGhpcy55KnRoaXMueSt0aGlzLnoqdGhpcy56K3RoaXMudyp0aGlzLncpO3JldHVybiAwPT09dD8odGhpcy54PTAsdGhpcy55PTAsdGhpcy56PTAsdGhpcy53PTApOih0PTEvdCx0aGlzLngqPXQsdGhpcy55Kj10LHRoaXMueio9dCx0aGlzLncqPXQpLHRoaXN9LGkucHJvdG90eXBlLm5vcm1hbGl6ZUZhc3Q9ZnVuY3Rpb24oKXt2YXIgdD0oMy0odGhpcy54KnRoaXMueCt0aGlzLnkqdGhpcy55K3RoaXMueip0aGlzLnordGhpcy53KnRoaXMudykpLzI7cmV0dXJuIDA9PT10Pyh0aGlzLng9MCx0aGlzLnk9MCx0aGlzLno9MCx0aGlzLnc9MCk6KHRoaXMueCo9dCx0aGlzLnkqPXQsdGhpcy56Kj10LHRoaXMudyo9dCksdGhpc30saS5wcm90b3R5cGUudm11bHQ9ZnVuY3Rpb24odCxlKXtlPWV8fG5ldyBuO3ZhciBvPXQueCxpPXQueSxzPXQueixyPXRoaXMueCxhPXRoaXMueSxjPXRoaXMueixoPXRoaXMudyxsPWgqbythKnMtYyppLHU9aCppK2Mqby1yKnMscD1oKnMrcippLWEqbyxkPS1yKm8tYSppLWMqcztyZXR1cm4gZS54PWwqaCtkKi1yK3UqLWMtcCotYSxlLnk9dSpoK2QqLWErcCotci1sKi1jLGUuej1wKmgrZCotYytsKi1hLXUqLXIsZX0saS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PXQueCx0aGlzLnk9dC55LHRoaXMuej10LnosdGhpcy53PXQudyx0aGlzfSxpLnByb3RvdHlwZS50b0V1bGVyPWZ1bmN0aW9uKHQsZSl7ZT1lfHxcIllaWFwiO3ZhciBvLGksbixzPXRoaXMueCxyPXRoaXMueSxhPXRoaXMueixjPXRoaXMudztzd2l0Y2goZSl7Y2FzZVwiWVpYXCI6dmFyIGg9cypyK2EqYztpZihoPi40OTkmJihvPTIqTWF0aC5hdGFuMihzLGMpLGk9TWF0aC5QSS8yLG49MCksaDwtLjQ5OSYmKG89LTIqTWF0aC5hdGFuMihzLGMpLGk9LU1hdGguUEkvMixuPTApLGlzTmFOKG8pKXt2YXIgbD1zKnMsdT1yKnIscD1hKmE7bz1NYXRoLmF0YW4yKDIqcipjLTIqcyphLDEtMip1LTIqcCksaT1NYXRoLmFzaW4oMipoKSxuPU1hdGguYXRhbjIoMipzKmMtMipyKmEsMS0yKmwtMipwKX1icmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIkV1bGVyIG9yZGVyIFwiK2UrXCIgbm90IHN1cHBvcnRlZCB5ZXQuXCIpfXQueT1vLHQuej1pLHQueD1ufSxpLnByb3RvdHlwZS5zZXRGcm9tRXVsZXI9ZnVuY3Rpb24odCxlLG8saSl7aT1pfHxcIlhZWlwiO3ZhciBuPU1hdGguY29zKHQvMikscz1NYXRoLmNvcyhlLzIpLHI9TWF0aC5jb3Moby8yKSxhPU1hdGguc2luKHQvMiksYz1NYXRoLnNpbihlLzIpLGg9TWF0aC5zaW4oby8yKTtyZXR1cm5cIlhZWlwiPT09aT8odGhpcy54PWEqcypyK24qYypoLHRoaXMueT1uKmMqci1hKnMqaCx0aGlzLno9bipzKmgrYSpjKnIsdGhpcy53PW4qcypyLWEqYypoKTpcIllYWlwiPT09aT8odGhpcy54PWEqcypyK24qYypoLHRoaXMueT1uKmMqci1hKnMqaCx0aGlzLno9bipzKmgtYSpjKnIsdGhpcy53PW4qcypyK2EqYypoKTpcIlpYWVwiPT09aT8odGhpcy54PWEqcypyLW4qYypoLHRoaXMueT1uKmMqcithKnMqaCx0aGlzLno9bipzKmgrYSpjKnIsdGhpcy53PW4qcypyLWEqYypoKTpcIlpZWFwiPT09aT8odGhpcy54PWEqcypyLW4qYypoLHRoaXMueT1uKmMqcithKnMqaCx0aGlzLno9bipzKmgtYSpjKnIsdGhpcy53PW4qcypyK2EqYypoKTpcIllaWFwiPT09aT8odGhpcy54PWEqcypyK24qYypoLHRoaXMueT1uKmMqcithKnMqaCx0aGlzLno9bipzKmgtYSpjKnIsdGhpcy53PW4qcypyLWEqYypoKTpcIlhaWVwiPT09aSYmKHRoaXMueD1hKnMqci1uKmMqaCx0aGlzLnk9bipjKnItYSpzKmgsdGhpcy56PW4qcypoK2EqYypyLHRoaXMudz1uKnMqcithKmMqaCksdGhpc30saS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGkodGhpcy54LHRoaXMueSx0aGlzLnosdGhpcy53KX0saS5wcm90b3R5cGUuc2xlcnA9ZnVuY3Rpb24odCxlLG8pe289b3x8bmV3IGk7dmFyIG4scyxyLGEsYyxoPXRoaXMueCxsPXRoaXMueSx1PXRoaXMueixwPXRoaXMudyxkPXQueCx5PXQueSx2PXQueixmPXQudztyZXR1cm4gcz1oKmQrbCp5K3UqditwKmYsczwwJiYocz0tcyxkPS1kLHk9LXksdj0tdixmPS1mKSwxLXM+MWUtNj8obj1NYXRoLmFjb3Mocykscj1NYXRoLnNpbihuKSxhPU1hdGguc2luKCgxLWUpKm4pL3IsYz1NYXRoLnNpbihlKm4pL3IpOihhPTEtZSxjPWUpLG8ueD1hKmgrYypkLG8ueT1hKmwrYyp5LG8uej1hKnUrYyp2LG8udz1hKnArYypmLG99LGkucHJvdG90eXBlLmludGVncmF0ZT1mdW5jdGlvbih0LGUsbyxuKXtuPW58fG5ldyBpO3ZhciBzPXQueCpvLngscj10Lnkqby55LGE9dC56Km8ueixjPXRoaXMueCxoPXRoaXMueSxsPXRoaXMueix1PXRoaXMudyxwPS41KmU7cmV0dXJuIG4ueCs9cCoocyp1K3IqbC1hKmgpLG4ueSs9cCoocip1K2EqYy1zKmwpLG4ueis9cCooYSp1K3MqaC1yKmMpLG4udys9cCooLXMqYy1yKmgtYSpsKSxufX0se1wiLi9WZWMzXCI6NDZ9XSw0NTpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCl7dD10fHx7fSx0aGlzLnBvc2l0aW9uPW5ldyBuLHQucG9zaXRpb24mJnRoaXMucG9zaXRpb24uY29weSh0LnBvc2l0aW9uKSx0aGlzLnF1YXRlcm5pb249bmV3IHMsdC5xdWF0ZXJuaW9uJiZ0aGlzLnF1YXRlcm5pb24uY29weSh0LnF1YXRlcm5pb24pfXZhciBuPXQoXCIuL1ZlYzNcIikscz10KFwiLi9RdWF0ZXJuaW9uXCIpO2UuZXhwb3J0cz1pO3ZhciByPW5ldyBzO2kucG9pbnRUb0xvY2FsRnJhbWU9ZnVuY3Rpb24odCxlLG8saSl7dmFyIGk9aXx8bmV3IG47cmV0dXJuIG8udnN1Yih0LGkpLGUuY29uanVnYXRlKHIpLHIudm11bHQoaSxpKSxpfSxpLnByb3RvdHlwZS5wb2ludFRvTG9jYWw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaS5wb2ludFRvTG9jYWxGcmFtZSh0aGlzLnBvc2l0aW9uLHRoaXMucXVhdGVybmlvbix0LGUpfSxpLnBvaW50VG9Xb3JsZEZyYW1lPWZ1bmN0aW9uKHQsZSxvLGkpe3ZhciBpPWl8fG5ldyBuO3JldHVybiBlLnZtdWx0KG8saSksaS52YWRkKHQsaSksaX0saS5wcm90b3R5cGUucG9pbnRUb1dvcmxkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkucG9pbnRUb1dvcmxkRnJhbWUodGhpcy5wb3NpdGlvbix0aGlzLnF1YXRlcm5pb24sdCxlKX0saS5wcm90b3R5cGUudmVjdG9yVG9Xb3JsZEZyYW1lPWZ1bmN0aW9uKHQsZSl7dmFyIGU9ZXx8bmV3IG47cmV0dXJuIHRoaXMucXVhdGVybmlvbi52bXVsdCh0LGUpLGV9LGkudmVjdG9yVG9Xb3JsZEZyYW1lPWZ1bmN0aW9uKHQsZSxvKXtyZXR1cm4gdC52bXVsdChlLG8pLG99LGkudmVjdG9yVG9Mb2NhbEZyYW1lPWZ1bmN0aW9uKHQsZSxvLGkpe3ZhciBpPWl8fG5ldyBuO3JldHVybiBlLncqPS0xLGUudm11bHQobyxpKSxlLncqPS0xLGl9fSx7XCIuL1F1YXRlcm5pb25cIjo0NCxcIi4vVmVjM1wiOjQ2fV0sNDY6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQsZSxvKXt0aGlzLng9dHx8MCx0aGlzLnk9ZXx8MCx0aGlzLno9b3x8MH1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9NYXQzXCIpO2kuWkVSTz1uZXcgaSgwLDAsMCksaS5VTklUX1g9bmV3IGkoMSwwLDApLGkuVU5JVF9ZPW5ldyBpKDAsMSwwKSxpLlVOSVRfWj1uZXcgaSgwLDAsMSksaS5wcm90b3R5cGUuY3Jvc3M9ZnVuY3Rpb24odCxlKXt2YXIgbz10Lngsbj10Lnkscz10Lnoscj10aGlzLngsYT10aGlzLnksYz10aGlzLno7cmV0dXJuIGU9ZXx8bmV3IGksZS54PWEqcy1jKm4sZS55PWMqby1yKnMsZS56PXIqbi1hKm8sZX0saS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSxvKXtyZXR1cm4gdGhpcy54PXQsdGhpcy55PWUsdGhpcy56PW8sdGhpc30saS5wcm90b3R5cGUuc2V0WmVybz1mdW5jdGlvbigpe3RoaXMueD10aGlzLnk9dGhpcy56PTB9LGkucHJvdG90eXBlLnZhZGQ9ZnVuY3Rpb24odCxlKXtpZighZSlyZXR1cm4gbmV3IGkodGhpcy54K3QueCx0aGlzLnkrdC55LHRoaXMueit0LnopO2UueD10LngrdGhpcy54LGUueT10LnkrdGhpcy55LGUuej10LnordGhpcy56fSxpLnByb3RvdHlwZS52c3ViPWZ1bmN0aW9uKHQsZSl7aWYoIWUpcmV0dXJuIG5ldyBpKHRoaXMueC10LngsdGhpcy55LXQueSx0aGlzLnotdC56KTtlLng9dGhpcy54LXQueCxlLnk9dGhpcy55LXQueSxlLno9dGhpcy56LXQuen0saS5wcm90b3R5cGUuY3Jvc3NtYXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG4oWzAsLXRoaXMueix0aGlzLnksdGhpcy56LDAsLXRoaXMueCwtdGhpcy55LHRoaXMueCwwXSl9LGkucHJvdG90eXBlLm5vcm1hbGl6ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMueCxlPXRoaXMueSxvPXRoaXMueixpPU1hdGguc3FydCh0KnQrZSplK28qbyk7aWYoaT4wKXt2YXIgbj0xL2k7dGhpcy54Kj1uLHRoaXMueSo9bix0aGlzLnoqPW59ZWxzZSB0aGlzLng9MCx0aGlzLnk9MCx0aGlzLno9MDtyZXR1cm4gaX0saS5wcm90b3R5cGUudW5pdD1mdW5jdGlvbih0KXt0PXR8fG5ldyBpO3ZhciBlPXRoaXMueCxvPXRoaXMueSxuPXRoaXMueixzPU1hdGguc3FydChlKmUrbypvK24qbik7cmV0dXJuIHM+MD8ocz0xL3MsdC54PWUqcyx0Lnk9bypzLHQuej1uKnMpOih0Lng9MSx0Lnk9MCx0Lno9MCksdH0saS5wcm90b3R5cGUubm9ybT1mdW5jdGlvbigpe3ZhciB0PXRoaXMueCxlPXRoaXMueSxvPXRoaXMuejtyZXR1cm4gTWF0aC5zcXJ0KHQqdCtlKmUrbypvKX0saS5wcm90b3R5cGUubGVuZ3RoPWkucHJvdG90eXBlLm5vcm0saS5wcm90b3R5cGUubm9ybTI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb3QodGhpcyl9LGkucHJvdG90eXBlLmxlbmd0aFNxdWFyZWQ9aS5wcm90b3R5cGUubm9ybTIsaS5wcm90b3R5cGUuZGlzdGFuY2VUbz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLngsbz10aGlzLnksaT10aGlzLnosbj10Lngscz10Lnkscj10Lno7cmV0dXJuIE1hdGguc3FydCgobi1lKSoobi1lKSsocy1vKSoocy1vKSsoci1pKSooci1pKSl9LGkucHJvdG90eXBlLmRpc3RhbmNlU3F1YXJlZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLngsbz10aGlzLnksaT10aGlzLnosbj10Lngscz10Lnkscj10Lno7cmV0dXJuKG4tZSkqKG4tZSkrKHMtbykqKHMtbykrKHItaSkqKHItaSl9LGkucHJvdG90eXBlLm11bHQ9ZnVuY3Rpb24odCxlKXtlPWV8fG5ldyBpO3ZhciBvPXRoaXMueCxuPXRoaXMueSxzPXRoaXMuejtyZXR1cm4gZS54PXQqbyxlLnk9dCpuLGUuej10KnMsZX0saS5wcm90b3R5cGUudm11bD1mdW5jdGlvbih0LGUpe3JldHVybiBlPWV8fG5ldyBpLGUueD10LngqdGhpcy54LGUueT10LnkqdGhpcy55LGUuej10LnoqdGhpcy56LGV9LGkucHJvdG90eXBlLnNjYWxlPWkucHJvdG90eXBlLm11bHQsaS5wcm90b3R5cGUuYWRkU2NhbGVkVmVjdG9yPWZ1bmN0aW9uKHQsZSxvKXtyZXR1cm4gbz1vfHxuZXcgaSxvLng9dGhpcy54K3QqZS54LG8ueT10aGlzLnkrdCplLnksby56PXRoaXMueit0KmUueixvfSxpLnByb3RvdHlwZS5kb3Q9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMueCp0LngrdGhpcy55KnQueSt0aGlzLnoqdC56fSxpLnByb3RvdHlwZS5pc1plcm89ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMueCYmMD09PXRoaXMueSYmMD09PXRoaXMuen0saS5wcm90b3R5cGUubmVnYXRlPWZ1bmN0aW9uKHQpe3JldHVybiB0PXR8fG5ldyBpLHQueD0tdGhpcy54LHQueT0tdGhpcy55LHQuej0tdGhpcy56LHR9O3ZhciBzPW5ldyBpLHI9bmV3IGk7aS5wcm90b3R5cGUudGFuZ2VudHM9ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLm5vcm0oKTtpZihvPjApe3ZhciBpPXMsbj0xL287aS5zZXQodGhpcy54Km4sdGhpcy55Km4sdGhpcy56Km4pO3ZhciBhPXI7TWF0aC5hYnMoaS54KTwuOT8oYS5zZXQoMSwwLDApLGkuY3Jvc3MoYSx0KSk6KGEuc2V0KDAsMSwwKSxpLmNyb3NzKGEsdCkpLGkuY3Jvc3ModCxlKX1lbHNlIHQuc2V0KDEsMCwwKSxlLnNldCgwLDEsMCl9LGkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueCtcIixcIit0aGlzLnkrXCIsXCIrdGhpcy56fSxpLnByb3RvdHlwZS50b0FycmF5PWZ1bmN0aW9uKCl7cmV0dXJuW3RoaXMueCx0aGlzLnksdGhpcy56XX0saS5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy54PXQueCx0aGlzLnk9dC55LHRoaXMuej10LnosdGhpc30saS5wcm90b3R5cGUubGVycD1mdW5jdGlvbih0LGUsbyl7dmFyIGk9dGhpcy54LG49dGhpcy55LHM9dGhpcy56O28ueD1pKyh0LngtaSkqZSxvLnk9bisodC55LW4pKmUsby56PXMrKHQuei1zKSplfSxpLnByb3RvdHlwZS5hbG1vc3RFcXVhbHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9MWUtNiksIShNYXRoLmFicyh0aGlzLngtdC54KT5lfHxNYXRoLmFicyh0aGlzLnktdC55KT5lfHxNYXRoLmFicyh0aGlzLnotdC56KT5lKX0saS5wcm90b3R5cGUuYWxtb3N0WmVybz1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9MWUtNiksIShNYXRoLmFicyh0aGlzLngpPnR8fE1hdGguYWJzKHRoaXMueSk+dHx8TWF0aC5hYnModGhpcy56KT50KX07dmFyIGE9bmV3IGk7aS5wcm90b3R5cGUuaXNBbnRpcGFyYWxsZWxUbz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLm5lZ2F0ZShhKSxhLmFsbW9zdEVxdWFscyh0LGUpfSxpLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgaSh0aGlzLngsdGhpcy55LHRoaXMueil9fSx7XCIuL01hdDNcIjo0M31dLDQ3OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXt0PXR8fHt9LG4uYXBwbHkodGhpcyksdGhpcy5pZD1pLmlkQ291bnRlcisrLHRoaXMud29ybGQ9bnVsbCx0aGlzLnByZVN0ZXA9bnVsbCx0aGlzLnBvc3RTdGVwPW51bGwsdGhpcy52bGFtYmRhPW5ldyBzLHRoaXMuY29sbGlzaW9uRmlsdGVyR3JvdXA9XCJudW1iZXJcIj09dHlwZW9mIHQuY29sbGlzaW9uRmlsdGVyR3JvdXA/dC5jb2xsaXNpb25GaWx0ZXJHcm91cDoxLHRoaXMuY29sbGlzaW9uRmlsdGVyTWFzaz1cIm51bWJlclwiPT10eXBlb2YgdC5jb2xsaXNpb25GaWx0ZXJNYXNrP3QuY29sbGlzaW9uRmlsdGVyTWFzazoxLHRoaXMuY29sbGlzaW9uUmVzcG9uc2U9ITAsdGhpcy5wb3NpdGlvbj1uZXcgcyx0aGlzLnByZXZpb3VzUG9zaXRpb249bmV3IHMsdGhpcy5pbnRlcnBvbGF0ZWRQb3NpdGlvbj1uZXcgcyx0aGlzLmluaXRQb3NpdGlvbj1uZXcgcyx0LnBvc2l0aW9uJiYodGhpcy5wb3NpdGlvbi5jb3B5KHQucG9zaXRpb24pLHRoaXMucHJldmlvdXNQb3NpdGlvbi5jb3B5KHQucG9zaXRpb24pLHRoaXMuaW50ZXJwb2xhdGVkUG9zaXRpb24uY29weSh0LnBvc2l0aW9uKSx0aGlzLmluaXRQb3NpdGlvbi5jb3B5KHQucG9zaXRpb24pKSx0aGlzLnZlbG9jaXR5PW5ldyBzLHQudmVsb2NpdHkmJnRoaXMudmVsb2NpdHkuY29weSh0LnZlbG9jaXR5KSx0aGlzLmluaXRWZWxvY2l0eT1uZXcgcyx0aGlzLmZvcmNlPW5ldyBzO3ZhciBlPVwibnVtYmVyXCI9PXR5cGVvZiB0Lm1hc3M/dC5tYXNzOjA7dGhpcy5tYXNzPWUsdGhpcy5pbnZNYXNzPWU+MD8xL2U6MCx0aGlzLm1hdGVyaWFsPXQubWF0ZXJpYWx8fG51bGwsdGhpcy5saW5lYXJEYW1waW5nPVwibnVtYmVyXCI9PXR5cGVvZiB0LmxpbmVhckRhbXBpbmc/dC5saW5lYXJEYW1waW5nOi4wMSx0aGlzLnR5cGU9ZTw9MD9pLlNUQVRJQzppLkRZTkFNSUMsdHlwZW9mIHQudHlwZT09dHlwZW9mIGkuU1RBVElDJiYodGhpcy50eXBlPXQudHlwZSksdGhpcy5hbGxvd1NsZWVwPXZvaWQgMD09PXQuYWxsb3dTbGVlcHx8dC5hbGxvd1NsZWVwLHRoaXMuc2xlZXBTdGF0ZT0wLHRoaXMuc2xlZXBTcGVlZExpbWl0PXZvaWQgMCE9PXQuc2xlZXBTcGVlZExpbWl0P3Quc2xlZXBTcGVlZExpbWl0Oi4xLHRoaXMuc2xlZXBUaW1lTGltaXQ9dm9pZCAwIT09dC5zbGVlcFRpbWVMaW1pdD90LnNsZWVwVGltZUxpbWl0OjEsdGhpcy50aW1lTGFzdFNsZWVweT0wLHRoaXMuX3dha2VVcEFmdGVyTmFycm93cGhhc2U9ITEsdGhpcy50b3JxdWU9bmV3IHMsdGhpcy5xdWF0ZXJuaW9uPW5ldyBhLHRoaXMuaW5pdFF1YXRlcm5pb249bmV3IGEsdGhpcy5wcmV2aW91c1F1YXRlcm5pb249bmV3IGEsdGhpcy5pbnRlcnBvbGF0ZWRRdWF0ZXJuaW9uPW5ldyBhLHQucXVhdGVybmlvbiYmKHRoaXMucXVhdGVybmlvbi5jb3B5KHQucXVhdGVybmlvbiksdGhpcy5pbml0UXVhdGVybmlvbi5jb3B5KHQucXVhdGVybmlvbiksdGhpcy5wcmV2aW91c1F1YXRlcm5pb24uY29weSh0LnF1YXRlcm5pb24pLHRoaXMuaW50ZXJwb2xhdGVkUXVhdGVybmlvbi5jb3B5KHQucXVhdGVybmlvbikpLHRoaXMuYW5ndWxhclZlbG9jaXR5PW5ldyBzLHQuYW5ndWxhclZlbG9jaXR5JiZ0aGlzLmFuZ3VsYXJWZWxvY2l0eS5jb3B5KHQuYW5ndWxhclZlbG9jaXR5KSx0aGlzLmluaXRBbmd1bGFyVmVsb2NpdHk9bmV3IHMsdGhpcy5zaGFwZXM9W10sdGhpcy5zaGFwZU9mZnNldHM9W10sdGhpcy5zaGFwZU9yaWVudGF0aW9ucz1bXSx0aGlzLmluZXJ0aWE9bmV3IHMsdGhpcy5pbnZJbmVydGlhPW5ldyBzLHRoaXMuaW52SW5lcnRpYVdvcmxkPW5ldyByLHRoaXMuaW52TWFzc1NvbHZlPTAsdGhpcy5pbnZJbmVydGlhU29sdmU9bmV3IHMsdGhpcy5pbnZJbmVydGlhV29ybGRTb2x2ZT1uZXcgcix0aGlzLmZpeGVkUm90YXRpb249dm9pZCAwIT09dC5maXhlZFJvdGF0aW9uJiZ0LmZpeGVkUm90YXRpb24sdGhpcy5hbmd1bGFyRGFtcGluZz12b2lkIDAhPT10LmFuZ3VsYXJEYW1waW5nP3QuYW5ndWxhckRhbXBpbmc6LjAxLHRoaXMubGluZWFyRmFjdG9yPW5ldyBzKDEsMSwxKSx0LmxpbmVhckZhY3RvciYmdGhpcy5saW5lYXJGYWN0b3IuY29weSh0LmxpbmVhckZhY3RvciksdGhpcy5hbmd1bGFyRmFjdG9yPW5ldyBzKDEsMSwxKSx0LmFuZ3VsYXJGYWN0b3ImJnRoaXMuYW5ndWxhckZhY3Rvci5jb3B5KHQuYW5ndWxhckZhY3RvciksdGhpcy5hYWJiPW5ldyBjLHRoaXMuYWFiYk5lZWRzVXBkYXRlPSEwLHRoaXMud2xhbWJkYT1uZXcgcyx0LnNoYXBlJiZ0aGlzLmFkZFNoYXBlKHQuc2hhcGUpLHRoaXMudXBkYXRlTWFzc1Byb3BlcnRpZXMoKX1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi4vdXRpbHMvRXZlbnRUYXJnZXRcIikscz0odChcIi4uL3NoYXBlcy9TaGFwZVwiKSx0KFwiLi4vbWF0aC9WZWMzXCIpKSxyPXQoXCIuLi9tYXRoL01hdDNcIiksYT10KFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCIpLGM9KHQoXCIuLi9tYXRlcmlhbC9NYXRlcmlhbFwiKSx0KFwiLi4vY29sbGlzaW9uL0FBQkJcIikpLGg9dChcIi4uL3NoYXBlcy9Cb3hcIik7aS5wcm90b3R5cGU9bmV3IG4saS5wcm90b3R5cGUuY29uc3RydWN0b3I9aSxpLkNPTExJREVfRVZFTlRfTkFNRT1cImNvbGxpZGVcIixpLkRZTkFNSUM9MSxpLlNUQVRJQz0yLGkuS0lORU1BVElDPTQsaS5BV0FLRT0wLGkuU0xFRVBZPTEsaS5TTEVFUElORz0yLGkuaWRDb3VudGVyPTAsaS53YWtldXBFdmVudD17dHlwZTpcIndha2V1cFwifSxpLnByb3RvdHlwZS53YWtlVXA9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnNsZWVwU3RhdGU7dGhpcy5zbGVlcFN0YXRlPTAsdGhpcy5fd2FrZVVwQWZ0ZXJOYXJyb3dwaGFzZT0hMSx0PT09aS5TTEVFUElORyYmdGhpcy5kaXNwYXRjaEV2ZW50KGkud2FrZXVwRXZlbnQpfSxpLnByb3RvdHlwZS5zbGVlcD1mdW5jdGlvbigpe3RoaXMuc2xlZXBTdGF0ZT1pLlNMRUVQSU5HLHRoaXMudmVsb2NpdHkuc2V0KDAsMCwwKSx0aGlzLmFuZ3VsYXJWZWxvY2l0eS5zZXQoMCwwLDApLHRoaXMuX3dha2VVcEFmdGVyTmFycm93cGhhc2U9ITF9LGkuc2xlZXB5RXZlbnQ9e3R5cGU6XCJzbGVlcHlcIn0saS5zbGVlcEV2ZW50PXt0eXBlOlwic2xlZXBcIn0saS5wcm90b3R5cGUuc2xlZXBUaWNrPWZ1bmN0aW9uKHQpe2lmKHRoaXMuYWxsb3dTbGVlcCl7dmFyIGU9dGhpcy5zbGVlcFN0YXRlLG89dGhpcy52ZWxvY2l0eS5ub3JtMigpK3RoaXMuYW5ndWxhclZlbG9jaXR5Lm5vcm0yKCksbj1NYXRoLnBvdyh0aGlzLnNsZWVwU3BlZWRMaW1pdCwyKTtlPT09aS5BV0FLRSYmbzxuPyh0aGlzLnNsZWVwU3RhdGU9aS5TTEVFUFksdGhpcy50aW1lTGFzdFNsZWVweT10LHRoaXMuZGlzcGF0Y2hFdmVudChpLnNsZWVweUV2ZW50KSk6ZT09PWkuU0xFRVBZJiZvPm4/dGhpcy53YWtlVXAoKTplPT09aS5TTEVFUFkmJnQtdGhpcy50aW1lTGFzdFNsZWVweT50aGlzLnNsZWVwVGltZUxpbWl0JiYodGhpcy5zbGVlcCgpLHRoaXMuZGlzcGF0Y2hFdmVudChpLnNsZWVwRXZlbnQpKX19LGkucHJvdG90eXBlLnVwZGF0ZVNvbHZlTWFzc1Byb3BlcnRpZXM9ZnVuY3Rpb24oKXt0aGlzLnNsZWVwU3RhdGU9PT1pLlNMRUVQSU5HfHx0aGlzLnR5cGU9PT1pLktJTkVNQVRJQz8odGhpcy5pbnZNYXNzU29sdmU9MCx0aGlzLmludkluZXJ0aWFTb2x2ZS5zZXRaZXJvKCksdGhpcy5pbnZJbmVydGlhV29ybGRTb2x2ZS5zZXRaZXJvKCkpOih0aGlzLmludk1hc3NTb2x2ZT10aGlzLmludk1hc3MsdGhpcy5pbnZJbmVydGlhU29sdmUuY29weSh0aGlzLmludkluZXJ0aWEpLHRoaXMuaW52SW5lcnRpYVdvcmxkU29sdmUuY29weSh0aGlzLmludkluZXJ0aWFXb3JsZCkpfSxpLnByb3RvdHlwZS5wb2ludFRvTG9jYWxGcmFtZT1mdW5jdGlvbih0LGUpe3ZhciBlPWV8fG5ldyBzO3JldHVybiB0LnZzdWIodGhpcy5wb3NpdGlvbixlKSx0aGlzLnF1YXRlcm5pb24uY29uanVnYXRlKCkudm11bHQoZSxlKSxlfSxpLnByb3RvdHlwZS52ZWN0b3JUb0xvY2FsRnJhbWU9ZnVuY3Rpb24odCxlKXt2YXIgZT1lfHxuZXcgcztyZXR1cm4gdGhpcy5xdWF0ZXJuaW9uLmNvbmp1Z2F0ZSgpLnZtdWx0KHQsZSksZX0saS5wcm90b3R5cGUucG9pbnRUb1dvcmxkRnJhbWU9ZnVuY3Rpb24odCxlKXt2YXIgZT1lfHxuZXcgcztyZXR1cm4gdGhpcy5xdWF0ZXJuaW9uLnZtdWx0KHQsZSksZS52YWRkKHRoaXMucG9zaXRpb24sZSksZX0saS5wcm90b3R5cGUudmVjdG9yVG9Xb3JsZEZyYW1lPWZ1bmN0aW9uKHQsZSl7dmFyIGU9ZXx8bmV3IHM7cmV0dXJuIHRoaXMucXVhdGVybmlvbi52bXVsdCh0LGUpLGV9O3ZhciBsPW5ldyBzLHU9bmV3IGE7aS5wcm90b3R5cGUuYWRkU2hhcGU9ZnVuY3Rpb24odCxlLG8pe3ZhciBpPW5ldyBzLG49bmV3IGE7cmV0dXJuIGUmJmkuY29weShlKSxvJiZuLmNvcHkobyksdGhpcy5zaGFwZXMucHVzaCh0KSx0aGlzLnNoYXBlT2Zmc2V0cy5wdXNoKGkpLHRoaXMuc2hhcGVPcmllbnRhdGlvbnMucHVzaChuKSx0aGlzLnVwZGF0ZU1hc3NQcm9wZXJ0aWVzKCksdGhpcy51cGRhdGVCb3VuZGluZ1JhZGl1cygpLHRoaXMuYWFiYk5lZWRzVXBkYXRlPSEwLHQuYm9keT10aGlzLHRoaXN9LGkucHJvdG90eXBlLnVwZGF0ZUJvdW5kaW5nUmFkaXVzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuc2hhcGVzLGU9dGhpcy5zaGFwZU9mZnNldHMsbz10Lmxlbmd0aCxpPTAsbj0wO24hPT1vO24rKyl7dmFyIHM9dFtuXTtzLnVwZGF0ZUJvdW5kaW5nU3BoZXJlUmFkaXVzKCk7dmFyIHI9ZVtuXS5ub3JtKCksYT1zLmJvdW5kaW5nU3BoZXJlUmFkaXVzO3IrYT5pJiYoaT1yK2EpfXRoaXMuYm91bmRpbmdSYWRpdXM9aX07dmFyIHA9bmV3IGM7aS5wcm90b3R5cGUuY29tcHV0ZUFBQkI9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5zaGFwZXMsZT10aGlzLnNoYXBlT2Zmc2V0cyxvPXRoaXMuc2hhcGVPcmllbnRhdGlvbnMsaT10Lmxlbmd0aCxuPWwscz11LHI9dGhpcy5xdWF0ZXJuaW9uLGE9dGhpcy5hYWJiLGM9cCxoPTA7aCE9PWk7aCsrKXt2YXIgZD10W2hdO3Iudm11bHQoZVtoXSxuKSxuLnZhZGQodGhpcy5wb3NpdGlvbixuKSxvW2hdLm11bHQocixzKSxkLmNhbGN1bGF0ZVdvcmxkQUFCQihuLHMsYy5sb3dlckJvdW5kLGMudXBwZXJCb3VuZCksMD09PWg/YS5jb3B5KGMpOmEuZXh0ZW5kKGMpfXRoaXMuYWFiYk5lZWRzVXBkYXRlPSExfTt2YXIgZD1uZXcgcix5PW5ldyByO25ldyByO2kucHJvdG90eXBlLnVwZGF0ZUluZXJ0aWFXb3JsZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmludkluZXJ0aWE7aWYoZS54IT09ZS55fHxlLnkhPT1lLnp8fHQpe3ZhciBvPWQsaT15O28uc2V0Um90YXRpb25Gcm9tUXVhdGVybmlvbih0aGlzLnF1YXRlcm5pb24pLG8udHJhbnNwb3NlKGkpLG8uc2NhbGUoZSxvKSxvLm1tdWx0KGksdGhpcy5pbnZJbmVydGlhV29ybGQpfWVsc2U7fTt2YXIgdj0obmV3IHMsbmV3IHMpO2kucHJvdG90eXBlLmFwcGx5Rm9yY2U9ZnVuY3Rpb24odCxlKXtpZih0aGlzLnR5cGU9PT1pLkRZTkFNSUMpe3ZhciBvPXY7ZS5jcm9zcyh0LG8pLHRoaXMuZm9yY2UudmFkZCh0LHRoaXMuZm9yY2UpLHRoaXMudG9ycXVlLnZhZGQobyx0aGlzLnRvcnF1ZSl9fTt2YXIgZj1uZXcgcyxtPW5ldyBzO2kucHJvdG90eXBlLmFwcGx5TG9jYWxGb3JjZT1mdW5jdGlvbih0LGUpe2lmKHRoaXMudHlwZT09PWkuRFlOQU1JQyl7dmFyIG89ZixuPW07dGhpcy52ZWN0b3JUb1dvcmxkRnJhbWUodCxvKSx0aGlzLnZlY3RvclRvV29ybGRGcmFtZShlLG4pLHRoaXMuYXBwbHlGb3JjZShvLG4pfX07dmFyIGc9KG5ldyBzLG5ldyBzKSx3PW5ldyBzO2kucHJvdG90eXBlLmFwcGx5SW1wdWxzZT1mdW5jdGlvbih0LGUpe2lmKHRoaXMudHlwZT09PWkuRFlOQU1JQyl7dmFyIG89ZSxuPWc7bi5jb3B5KHQpLG4ubXVsdCh0aGlzLmludk1hc3MsbiksdGhpcy52ZWxvY2l0eS52YWRkKG4sdGhpcy52ZWxvY2l0eSk7dmFyIHM9dztvLmNyb3NzKHQscyksdGhpcy5pbnZJbmVydGlhV29ybGQudm11bHQocyxzKSx0aGlzLmFuZ3VsYXJWZWxvY2l0eS52YWRkKHMsdGhpcy5hbmd1bGFyVmVsb2NpdHkpfX07dmFyIHg9bmV3IHMsYj1uZXcgcztpLnByb3RvdHlwZS5hcHBseUxvY2FsSW1wdWxzZT1mdW5jdGlvbih0LGUpe2lmKHRoaXMudHlwZT09PWkuRFlOQU1JQyl7dmFyIG89eCxuPWI7dGhpcy52ZWN0b3JUb1dvcmxkRnJhbWUodCxvKSx0aGlzLnZlY3RvclRvV29ybGRGcmFtZShlLG4pLHRoaXMuYXBwbHlJbXB1bHNlKG8sbil9fTt2YXIgRT1uZXcgcztpLnByb3RvdHlwZS51cGRhdGVNYXNzUHJvcGVydGllcz1mdW5jdGlvbigpe3ZhciB0PUU7dGhpcy5pbnZNYXNzPXRoaXMubWFzcz4wPzEvdGhpcy5tYXNzOjA7dmFyIGU9dGhpcy5pbmVydGlhLG89dGhpcy5maXhlZFJvdGF0aW9uO3RoaXMuY29tcHV0ZUFBQkIoKSx0LnNldCgodGhpcy5hYWJiLnVwcGVyQm91bmQueC10aGlzLmFhYmIubG93ZXJCb3VuZC54KS8yLCh0aGlzLmFhYmIudXBwZXJCb3VuZC55LXRoaXMuYWFiYi5sb3dlckJvdW5kLnkpLzIsKHRoaXMuYWFiYi51cHBlckJvdW5kLnotdGhpcy5hYWJiLmxvd2VyQm91bmQueikvMiksaC5jYWxjdWxhdGVJbmVydGlhKHQsdGhpcy5tYXNzLGUpLHRoaXMuaW52SW5lcnRpYS5zZXQoZS54PjAmJiFvPzEvZS54OjAsZS55PjAmJiFvPzEvZS55OjAsZS56PjAmJiFvPzEvZS56OjApLHRoaXMudXBkYXRlSW5lcnRpYVdvcmxkKCEwKX0saS5wcm90b3R5cGUuZ2V0VmVsb2NpdHlBdFdvcmxkUG9pbnQ9ZnVuY3Rpb24odCxlKXt2YXIgbz1uZXcgcztyZXR1cm4gdC52c3ViKHRoaXMucG9zaXRpb24sbyksdGhpcy5hbmd1bGFyVmVsb2NpdHkuY3Jvc3MobyxlKSx0aGlzLnZlbG9jaXR5LnZhZGQoZSxlKSxlfTtuZXcgcyxuZXcgcyxuZXcgYSxuZXcgYTtpLnByb3RvdHlwZS5pbnRlZ3JhdGU9ZnVuY3Rpb24odCxlLG8pe2lmKHRoaXMucHJldmlvdXNQb3NpdGlvbi5jb3B5KHRoaXMucG9zaXRpb24pLHRoaXMucHJldmlvdXNRdWF0ZXJuaW9uLmNvcHkodGhpcy5xdWF0ZXJuaW9uKSwodGhpcy50eXBlPT09aS5EWU5BTUlDfHx0aGlzLnR5cGU9PT1pLktJTkVNQVRJQykmJnRoaXMuc2xlZXBTdGF0ZSE9PWkuU0xFRVBJTkcpe3ZhciBuPXRoaXMudmVsb2NpdHkscz10aGlzLmFuZ3VsYXJWZWxvY2l0eSxyPXRoaXMucG9zaXRpb24sYT10aGlzLmZvcmNlLGM9dGhpcy50b3JxdWUsaD10aGlzLnF1YXRlcm5pb24sbD10aGlzLmludk1hc3MsdT10aGlzLmludkluZXJ0aWFXb3JsZCxwPXRoaXMubGluZWFyRmFjdG9yLGQ9bCp0O24ueCs9YS54KmQqcC54LG4ueSs9YS55KmQqcC55LG4ueis9YS56KmQqcC56O3ZhciB5PXUuZWxlbWVudHMsdj10aGlzLmFuZ3VsYXJGYWN0b3IsZj1jLngqdi54LG09Yy55KnYueSxnPWMueip2Lno7cy54Kz10Kih5WzBdKmYreVsxXSptK3lbMl0qZykscy55Kz10Kih5WzNdKmYreVs0XSptK3lbNV0qZykscy56Kz10Kih5WzZdKmYreVs3XSptK3lbOF0qZyksci54Kz1uLngqdCxyLnkrPW4ueSp0LHIueis9bi56KnQsaC5pbnRlZ3JhdGUodGhpcy5hbmd1bGFyVmVsb2NpdHksdCx0aGlzLmFuZ3VsYXJGYWN0b3IsaCksZSYmKG8/aC5ub3JtYWxpemVGYXN0KCk6aC5ub3JtYWxpemUoKSksdGhpcy5hYWJiTmVlZHNVcGRhdGU9ITAsdGhpcy51cGRhdGVJbmVydGlhV29ybGQoKX19fSx7XCIuLi9jb2xsaXNpb24vQUFCQlwiOjE4LFwiLi4vbWF0ZXJpYWwvTWF0ZXJpYWxcIjo0MSxcIi4uL21hdGgvTWF0M1wiOjQzLFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCI6NDQsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4uL3NoYXBlcy9Cb3hcIjo1MyxcIi4uL3NoYXBlcy9TaGFwZVwiOjU5LFwiLi4vdXRpbHMvRXZlbnRUYXJnZXRcIjo2NX1dLDQ4OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXt0aGlzLmNoYXNzaXNCb2R5PXQuY2hhc3Npc0JvZHksdGhpcy53aGVlbEluZm9zPVtdLHRoaXMuc2xpZGluZz0hMSx0aGlzLndvcmxkPW51bGwsdGhpcy5pbmRleFJpZ2h0QXhpcz12b2lkIDAhPT10LmluZGV4UmlnaHRBeGlzP3QuaW5kZXhSaWdodEF4aXM6MSx0aGlzLmluZGV4Rm9yd2FyZEF4aXM9dm9pZCAwIT09dC5pbmRleEZvcndhcmRBeGlzP3QuaW5kZXhGb3J3YXJkQXhpczowLHRoaXMuaW5kZXhVcEF4aXM9dm9pZCAwIT09dC5pbmRleFVwQXhpcz90LmluZGV4VXBBeGlzOjJ9ZnVuY3Rpb24gbih0LGUsbyxpLG4pe3ZhciByPTAsYT1vLGM9eCxoPWIsbD1FO3QuZ2V0VmVsb2NpdHlBdFdvcmxkUG9pbnQoYSxjKSxlLmdldFZlbG9jaXR5QXRXb3JsZFBvaW50KGEsaCksYy52c3ViKGgsbCk7cmV0dXJuIHI9LWkuZG90KGwpKigxLyhzKHQsbyxpKStzKGUsbyxpKSkpLG48ciYmKHI9bikscjwtbiYmKHI9LW4pLHJ9ZnVuY3Rpb24gcyh0LGUsbyl7dmFyIGk9QSxuPUIscz1DLHI9UztyZXR1cm4gZS52c3ViKHQucG9zaXRpb24saSksaS5jcm9zcyhvLG4pLHQuaW52SW5lcnRpYVdvcmxkLnZtdWx0KG4sciksci5jcm9zcyhpLHMpLHQuaW52TWFzcytvLmRvdChzKX1mdW5jdGlvbiByKHQsZSxvLGksbixzKXtpZihuLm5vcm0yKCk+MS4xKXJldHVybiAwO3ZhciByPVIsYT1NLGM9VDt0LmdldFZlbG9jaXR5QXRXb3JsZFBvaW50KGUsciksby5nZXRWZWxvY2l0eUF0V29ybGRQb2ludChpLGEpLHIudnN1YihhLGMpO3JldHVybi0uMipuLmRvdChjKSooMS8odC5pbnZNYXNzK28uaW52TWFzcykpfXZhciBhPSh0KFwiLi9Cb2R5XCIpLHQoXCIuLi9tYXRoL1ZlYzNcIikpLGM9dChcIi4uL21hdGgvUXVhdGVybmlvblwiKSxoPSh0KFwiLi4vY29sbGlzaW9uL1JheWNhc3RSZXN1bHRcIiksdChcIi4uL2NvbGxpc2lvbi9SYXlcIikpLGw9dChcIi4uL29iamVjdHMvV2hlZWxJbmZvXCIpO2UuZXhwb3J0cz1pO3ZhciB1PShuZXcgYSxuZXcgYSxuZXcgYSxuZXcgYSkscD1uZXcgYSxkPW5ldyBhO25ldyBoO2kucHJvdG90eXBlLmFkZFdoZWVsPWZ1bmN0aW9uKHQpe3Q9dHx8e307dmFyIGU9bmV3IGwodCksbz10aGlzLndoZWVsSW5mb3MubGVuZ3RoO3JldHVybiB0aGlzLndoZWVsSW5mb3MucHVzaChlKSxvfSxpLnByb3RvdHlwZS5zZXRTdGVlcmluZ1ZhbHVlPWZ1bmN0aW9uKHQsZSl7dGhpcy53aGVlbEluZm9zW2VdLnN0ZWVyaW5nPXR9O25ldyBhO2kucHJvdG90eXBlLmFwcGx5RW5naW5lRm9yY2U9ZnVuY3Rpb24odCxlKXt0aGlzLndoZWVsSW5mb3NbZV0uZW5naW5lRm9yY2U9dH0saS5wcm90b3R5cGUuc2V0QnJha2U9ZnVuY3Rpb24odCxlKXt0aGlzLndoZWVsSW5mb3NbZV0uYnJha2U9dH0saS5wcm90b3R5cGUuYWRkVG9Xb3JsZD1mdW5jdGlvbih0KXt0aGlzLmNvbnN0cmFpbnRzO3QuYWRkQm9keSh0aGlzLmNoYXNzaXNCb2R5KTt2YXIgZT10aGlzO3RoaXMucHJlU3RlcENhbGxiYWNrPWZ1bmN0aW9uKCl7ZS51cGRhdGVWZWhpY2xlKHQuZHQpfSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJwcmVTdGVwXCIsdGhpcy5wcmVTdGVwQ2FsbGJhY2spLHRoaXMud29ybGQ9dH0saS5wcm90b3R5cGUuZ2V0VmVoaWNsZUF4aXNXb3JsZD1mdW5jdGlvbih0LGUpe2Uuc2V0KDA9PT10PzE6MCwxPT09dD8xOjAsMj09PXQ/MTowKSx0aGlzLmNoYXNzaXNCb2R5LnZlY3RvclRvV29ybGRGcmFtZShlLGUpfSxpLnByb3RvdHlwZS51cGRhdGVWZWhpY2xlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLndoZWVsSW5mb3Msbz1lLmxlbmd0aCxpPXRoaXMuY2hhc3Npc0JvZHksbj0wO248bztuKyspdGhpcy51cGRhdGVXaGVlbFRyYW5zZm9ybShuKTt0aGlzLmN1cnJlbnRWZWhpY2xlU3BlZWRLbUhvdXI9My42KmkudmVsb2NpdHkubm9ybSgpO3ZhciBzPW5ldyBhO3RoaXMuZ2V0VmVoaWNsZUF4aXNXb3JsZCh0aGlzLmluZGV4Rm9yd2FyZEF4aXMscykscy5kb3QoaS52ZWxvY2l0eSk8MCYmKHRoaXMuY3VycmVudFZlaGljbGVTcGVlZEttSG91cio9LTEpO2Zvcih2YXIgbj0wO248bztuKyspdGhpcy5jYXN0UmF5KGVbbl0pO3RoaXMudXBkYXRlU3VzcGVuc2lvbih0KTtmb3IodmFyIHI9bmV3IGEsYz1uZXcgYSxuPTA7bjxvO24rKyl7dmFyIGg9ZVtuXSxsPWguc3VzcGVuc2lvbkZvcmNlO2w+aC5tYXhTdXNwZW5zaW9uRm9yY2UmJihsPWgubWF4U3VzcGVuc2lvbkZvcmNlKSxoLnJheWNhc3RSZXN1bHQuaGl0Tm9ybWFsV29ybGQuc2NhbGUobCp0LHIpLGgucmF5Y2FzdFJlc3VsdC5oaXRQb2ludFdvcmxkLnZzdWIoaS5wb3NpdGlvbixjKSxpLmFwcGx5SW1wdWxzZShyLGMpfXRoaXMudXBkYXRlRnJpY3Rpb24odCk7dmFyIHU9bmV3IGEscD1uZXcgYSxkPW5ldyBhO2ZvcihuPTA7bjxvO24rKyl7dmFyIGg9ZVtuXTtpLmdldFZlbG9jaXR5QXRXb3JsZFBvaW50KGguY2hhc3Npc0Nvbm5lY3Rpb25Qb2ludFdvcmxkLGQpO3ZhciB5PTE7c3dpdGNoKHRoaXMuaW5kZXhVcEF4aXMpe2Nhc2UgMTp5PS0xfWlmKGguaXNJbkNvbnRhY3Qpe1xudGhpcy5nZXRWZWhpY2xlQXhpc1dvcmxkKHRoaXMuaW5kZXhGb3J3YXJkQXhpcyxwKTt2YXIgdj1wLmRvdChoLnJheWNhc3RSZXN1bHQuaGl0Tm9ybWFsV29ybGQpO2gucmF5Y2FzdFJlc3VsdC5oaXROb3JtYWxXb3JsZC5zY2FsZSh2LHUpLHAudnN1Yih1LHApO3ZhciBmPXAuZG90KGQpO2guZGVsdGFSb3RhdGlvbj15KmYqdC9oLnJhZGl1c30haC5zbGlkaW5nJiZoLmlzSW5Db250YWN0fHwwPT09aC5lbmdpbmVGb3JjZXx8IWgudXNlQ3VzdG9tU2xpZGluZ1JvdGF0aW9uYWxTcGVlZHx8KGguZGVsdGFSb3RhdGlvbj0oaC5lbmdpbmVGb3JjZT4wPzE6LTEpKmguY3VzdG9tU2xpZGluZ1JvdGF0aW9uYWxTcGVlZCp0KSxNYXRoLmFicyhoLmJyYWtlKT5NYXRoLmFicyhoLmVuZ2luZUZvcmNlKSYmKGguZGVsdGFSb3RhdGlvbj0wKSxoLnJvdGF0aW9uKz1oLmRlbHRhUm90YXRpb24saC5kZWx0YVJvdGF0aW9uKj0uOTl9fSxpLnByb3RvdHlwZS51cGRhdGVTdXNwZW5zaW9uPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmNoYXNzaXNCb2R5LG89ZS5tYXNzLGk9dGhpcy53aGVlbEluZm9zLG49aS5sZW5ndGgscz0wO3M8bjtzKyspe3ZhciByPWlbc107aWYoci5pc0luQ29udGFjdCl7dmFyIGEsYz1yLnN1c3BlbnNpb25SZXN0TGVuZ3RoLGg9ci5zdXNwZW5zaW9uTGVuZ3RoLGw9Yy1oO2E9ci5zdXNwZW5zaW9uU3RpZmZuZXNzKmwqci5jbGlwcGVkSW52Q29udGFjdERvdFN1c3BlbnNpb247dmFyIHUscD1yLnN1c3BlbnNpb25SZWxhdGl2ZVZlbG9jaXR5O3U9cDwwP3IuZGFtcGluZ0NvbXByZXNzaW9uOnIuZGFtcGluZ1JlbGF4YXRpb24sYS09dSpwLHIuc3VzcGVuc2lvbkZvcmNlPWEqbyxyLnN1c3BlbnNpb25Gb3JjZTwwJiYoci5zdXNwZW5zaW9uRm9yY2U9MCl9ZWxzZSByLnN1c3BlbnNpb25Gb3JjZT0wfX0saS5wcm90b3R5cGUucmVtb3ZlRnJvbVdvcmxkPWZ1bmN0aW9uKHQpe3RoaXMuY29uc3RyYWludHM7dC5yZW1vdmUodGhpcy5jaGFzc2lzQm9keSksdC5yZW1vdmVFdmVudExpc3RlbmVyKFwicHJlU3RlcFwiLHRoaXMucHJlU3RlcENhbGxiYWNrKSx0aGlzLndvcmxkPW51bGx9O3ZhciB5PW5ldyBhLHY9bmV3IGE7aS5wcm90b3R5cGUuY2FzdFJheT1mdW5jdGlvbih0KXt2YXIgZT15LG89djt0aGlzLnVwZGF0ZVdoZWVsVHJhbnNmb3JtV29ybGQodCk7dmFyIGk9dGhpcy5jaGFzc2lzQm9keSxuPS0xLHM9dC5zdXNwZW5zaW9uUmVzdExlbmd0aCt0LnJhZGl1czt0LmRpcmVjdGlvbldvcmxkLnNjYWxlKHMsZSk7dmFyIHI9dC5jaGFzc2lzQ29ubmVjdGlvblBvaW50V29ybGQ7ci52YWRkKGUsbyk7dmFyIGM9dC5yYXljYXN0UmVzdWx0O2MucmVzZXQoKTt2YXIgaD1pLmNvbGxpc2lvblJlc3BvbnNlO2kuY29sbGlzaW9uUmVzcG9uc2U9ITEsdGhpcy53b3JsZC5yYXlUZXN0KHIsbyxjKSxpLmNvbGxpc2lvblJlc3BvbnNlPWg7dmFyIGw9Yy5ib2R5O2lmKHQucmF5Y2FzdFJlc3VsdC5ncm91bmRPYmplY3Q9MCxsKXtuPWMuZGlzdGFuY2UsdC5yYXljYXN0UmVzdWx0LmhpdE5vcm1hbFdvcmxkPWMuaGl0Tm9ybWFsV29ybGQsdC5pc0luQ29udGFjdD0hMDt2YXIgdT1jLmRpc3RhbmNlO3Quc3VzcGVuc2lvbkxlbmd0aD11LXQucmFkaXVzO3ZhciBwPXQuc3VzcGVuc2lvblJlc3RMZW5ndGgtdC5tYXhTdXNwZW5zaW9uVHJhdmVsLGQ9dC5zdXNwZW5zaW9uUmVzdExlbmd0aCt0Lm1heFN1c3BlbnNpb25UcmF2ZWw7dC5zdXNwZW5zaW9uTGVuZ3RoPHAmJih0LnN1c3BlbnNpb25MZW5ndGg9cCksdC5zdXNwZW5zaW9uTGVuZ3RoPmQmJih0LnN1c3BlbnNpb25MZW5ndGg9ZCx0LnJheWNhc3RSZXN1bHQucmVzZXQoKSk7dmFyIGY9dC5yYXljYXN0UmVzdWx0LmhpdE5vcm1hbFdvcmxkLmRvdCh0LmRpcmVjdGlvbldvcmxkKSxtPW5ldyBhO2kuZ2V0VmVsb2NpdHlBdFdvcmxkUG9pbnQodC5yYXljYXN0UmVzdWx0LmhpdFBvaW50V29ybGQsbSk7dmFyIGc9dC5yYXljYXN0UmVzdWx0LmhpdE5vcm1hbFdvcmxkLmRvdChtKTtpZihmPj0tLjEpdC5zdXNwZW5zaW9uUmVsYXRpdmVWZWxvY2l0eT0wLHQuY2xpcHBlZEludkNvbnRhY3REb3RTdXNwZW5zaW9uPTEwO2Vsc2V7dmFyIHc9LTEvZjt0LnN1c3BlbnNpb25SZWxhdGl2ZVZlbG9jaXR5PWcqdyx0LmNsaXBwZWRJbnZDb250YWN0RG90U3VzcGVuc2lvbj13fX1lbHNlIHQuc3VzcGVuc2lvbkxlbmd0aD10LnN1c3BlbnNpb25SZXN0TGVuZ3RoKzAqdC5tYXhTdXNwZW5zaW9uVHJhdmVsLHQuc3VzcGVuc2lvblJlbGF0aXZlVmVsb2NpdHk9MCx0LmRpcmVjdGlvbldvcmxkLnNjYWxlKC0xLHQucmF5Y2FzdFJlc3VsdC5oaXROb3JtYWxXb3JsZCksdC5jbGlwcGVkSW52Q29udGFjdERvdFN1c3BlbnNpb249MTtyZXR1cm4gbn0saS5wcm90b3R5cGUudXBkYXRlV2hlZWxUcmFuc2Zvcm1Xb3JsZD1mdW5jdGlvbih0KXt0LmlzSW5Db250YWN0PSExO3ZhciBlPXRoaXMuY2hhc3Npc0JvZHk7ZS5wb2ludFRvV29ybGRGcmFtZSh0LmNoYXNzaXNDb25uZWN0aW9uUG9pbnRMb2NhbCx0LmNoYXNzaXNDb25uZWN0aW9uUG9pbnRXb3JsZCksZS52ZWN0b3JUb1dvcmxkRnJhbWUodC5kaXJlY3Rpb25Mb2NhbCx0LmRpcmVjdGlvbldvcmxkKSxlLnZlY3RvclRvV29ybGRGcmFtZSh0LmF4bGVMb2NhbCx0LmF4bGVXb3JsZCl9LGkucHJvdG90eXBlLnVwZGF0ZVdoZWVsVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3ZhciBlPXUsbz1wLGk9ZCxuPXRoaXMud2hlZWxJbmZvc1t0XTt0aGlzLnVwZGF0ZVdoZWVsVHJhbnNmb3JtV29ybGQobiksbi5kaXJlY3Rpb25Mb2NhbC5zY2FsZSgtMSxlKSxvLmNvcHkobi5heGxlTG9jYWwpLGUuY3Jvc3MobyxpKSxpLm5vcm1hbGl6ZSgpLG8ubm9ybWFsaXplKCk7dmFyIHM9bi5zdGVlcmluZyxyPW5ldyBjO3Iuc2V0RnJvbUF4aXNBbmdsZShlLHMpO3ZhciBhPW5ldyBjO2Euc2V0RnJvbUF4aXNBbmdsZShvLG4ucm90YXRpb24pO3ZhciBoPW4ud29ybGRUcmFuc2Zvcm0ucXVhdGVybmlvbjt0aGlzLmNoYXNzaXNCb2R5LnF1YXRlcm5pb24ubXVsdChyLGgpLGgubXVsdChhLGgpLGgubm9ybWFsaXplKCk7dmFyIGw9bi53b3JsZFRyYW5zZm9ybS5wb3NpdGlvbjtsLmNvcHkobi5kaXJlY3Rpb25Xb3JsZCksbC5zY2FsZShuLnN1c3BlbnNpb25MZW5ndGgsbCksbC52YWRkKG4uY2hhc3Npc0Nvbm5lY3Rpb25Qb2ludFdvcmxkLGwpfTt2YXIgZj1bbmV3IGEoMSwwLDApLG5ldyBhKDAsMSwwKSxuZXcgYSgwLDAsMSldO2kucHJvdG90eXBlLmdldFdoZWVsVHJhbnNmb3JtV29ybGQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMud2hlZWxJbmZvc1t0XS53b3JsZFRyYW5zZm9ybX07dmFyIG09bmV3IGEsZz1bXSx3PVtdO2kucHJvdG90eXBlLnVwZGF0ZUZyaWN0aW9uPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1tLG89dGhpcy53aGVlbEluZm9zLGk9by5sZW5ndGgscz10aGlzLmNoYXNzaXNCb2R5LGM9dyxoPWcsbD0wLHU9MDt1PGk7dSsrKXt2YXIgcD1vW3VdLGQ9cC5yYXljYXN0UmVzdWx0LmJvZHk7ZCYmbCsrLHAuc2lkZUltcHVsc2U9MCxwLmZvcndhcmRJbXB1bHNlPTAsY1t1XXx8KGNbdV09bmV3IGEpLGhbdV18fChoW3VdPW5ldyBhKX1mb3IodmFyIHU9MDt1PGk7dSsrKXt2YXIgcD1vW3VdLGQ9cC5yYXljYXN0UmVzdWx0LmJvZHk7aWYoZCl7dmFyIHk9aFt1XTt0aGlzLmdldFdoZWVsVHJhbnNmb3JtV29ybGQodSkudmVjdG9yVG9Xb3JsZEZyYW1lKGZbdGhpcy5pbmRleFJpZ2h0QXhpc10seSk7dmFyIHY9cC5yYXljYXN0UmVzdWx0LmhpdE5vcm1hbFdvcmxkLHg9eS5kb3Qodik7di5zY2FsZSh4LGUpLHkudnN1YihlLHkpLHkubm9ybWFsaXplKCksdi5jcm9zcyh5LGNbdV0pLGNbdV0ubm9ybWFsaXplKCkscC5zaWRlSW1wdWxzZT1yKHMscC5yYXljYXN0UmVzdWx0LmhpdFBvaW50V29ybGQsZCxwLnJheWNhc3RSZXN1bHQuaGl0UG9pbnRXb3JsZCx5KSxwLnNpZGVJbXB1bHNlKj0xfX10aGlzLnNsaWRpbmc9ITE7Zm9yKHZhciB1PTA7dTxpO3UrKyl7dmFyIHA9b1t1XSxkPXAucmF5Y2FzdFJlc3VsdC5ib2R5LGI9MDtpZihwLnNsaXBJbmZvPTEsZCl7dmFyIEU9cC5icmFrZT9wLmJyYWtlOjA7Yj1uKHMsZCxwLnJheWNhc3RSZXN1bHQuaGl0UG9pbnRXb3JsZCxjW3VdLEUpLGIrPXAuZW5naW5lRm9yY2UqdDt2YXIgQT1FL2I7cC5zbGlwSW5mbyo9QX1pZihwLmZvcndhcmRJbXB1bHNlPTAscC5za2lkSW5mbz0xLGQpe3Auc2tpZEluZm89MTt2YXIgQj1wLnN1c3BlbnNpb25Gb3JjZSp0KnAuZnJpY3Rpb25TbGlwLEM9QixTPUIqQztwLmZvcndhcmRJbXB1bHNlPWI7dmFyIFI9LjUqcC5mb3J3YXJkSW1wdWxzZSxNPTEqcC5zaWRlSW1wdWxzZSxUPVIqUitNKk07aWYocC5zbGlkaW5nPSExLFQ+Uyl7dGhpcy5zbGlkaW5nPSEwLHAuc2xpZGluZz0hMDt2YXIgQT1CL01hdGguc3FydChUKTtwLnNraWRJbmZvKj1BfX19aWYodGhpcy5zbGlkaW5nKWZvcih2YXIgdT0wO3U8aTt1Kyspe3ZhciBwPW9bdV07MCE9PXAuc2lkZUltcHVsc2UmJnAuc2tpZEluZm88MSYmKHAuZm9yd2FyZEltcHVsc2UqPXAuc2tpZEluZm8scC5zaWRlSW1wdWxzZSo9cC5za2lkSW5mbyl9Zm9yKHZhciB1PTA7dTxpO3UrKyl7dmFyIHA9b1t1XSx6PW5ldyBhO2lmKHAucmF5Y2FzdFJlc3VsdC5oaXRQb2ludFdvcmxkLnZzdWIocy5wb3NpdGlvbix6KSwwIT09cC5mb3J3YXJkSW1wdWxzZSl7dmFyIGs9bmV3IGE7Y1t1XS5zY2FsZShwLmZvcndhcmRJbXB1bHNlLGspLHMuYXBwbHlJbXB1bHNlKGsseil9aWYoMCE9PXAuc2lkZUltcHVsc2Upe3ZhciBkPXAucmF5Y2FzdFJlc3VsdC5ib2R5LFA9bmV3IGE7cC5yYXljYXN0UmVzdWx0LmhpdFBvaW50V29ybGQudnN1YihkLnBvc2l0aW9uLFApO3ZhciBxPW5ldyBhO2hbdV0uc2NhbGUocC5zaWRlSW1wdWxzZSxxKSxzLnZlY3RvclRvTG9jYWxGcmFtZSh6LHopLHpbXCJ4eXpcIlt0aGlzLmluZGV4VXBBeGlzXV0qPXAucm9sbEluZmx1ZW5jZSxzLnZlY3RvclRvV29ybGRGcmFtZSh6LHopLHMuYXBwbHlJbXB1bHNlKHEseikscS5zY2FsZSgtMSxxKSxkLmFwcGx5SW1wdWxzZShxLFApfX19O3ZhciB4PW5ldyBhLGI9bmV3IGEsRT1uZXcgYSxBPW5ldyBhLEI9bmV3IGEsQz1uZXcgYSxTPW5ldyBhLFI9bmV3IGEsTT1uZXcgYSxUPW5ldyBhfSx7XCIuLi9jb2xsaXNpb24vUmF5XCI6MjUsXCIuLi9jb2xsaXNpb24vUmF5Y2FzdFJlc3VsdFwiOjI2LFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCI6NDQsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4uL29iamVjdHMvV2hlZWxJbmZvXCI6NTIsXCIuL0JvZHlcIjo0N31dLDQ5OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXtpZih0aGlzLndoZWVsQm9kaWVzPVtdLHRoaXMuY29vcmRpbmF0ZVN5c3RlbT12b2lkIDA9PT10LmNvb3JkaW5hdGVTeXN0ZW0/bmV3IGEoMSwyLDMpOnQuY29vcmRpbmF0ZVN5c3RlbS5jbG9uZSgpLHRoaXMuY2hhc3Npc0JvZHk9dC5jaGFzc2lzQm9keSwhdGhpcy5jaGFzc2lzQm9keSl7dmFyIGU9bmV3IHIobmV3IGEoNSwyLC41KSk7dGhpcy5jaGFzc2lzQm9keT1uZXcgbigxLGUpfXRoaXMuY29uc3RyYWludHM9W10sdGhpcy53aGVlbEF4ZXM9W10sdGhpcy53aGVlbEZvcmNlcz1bXX12YXIgbj10KFwiLi9Cb2R5XCIpLHM9dChcIi4uL3NoYXBlcy9TcGhlcmVcIikscj10KFwiLi4vc2hhcGVzL0JveFwiKSxhPXQoXCIuLi9tYXRoL1ZlYzNcIiksYz10KFwiLi4vY29uc3RyYWludHMvSGluZ2VDb25zdHJhaW50XCIpO2UuZXhwb3J0cz1pLGkucHJvdG90eXBlLmFkZFdoZWVsPWZ1bmN0aW9uKHQpe3Q9dHx8e307dmFyIGU9dC5ib2R5O2V8fChlPW5ldyBuKDEsbmV3IHMoMS4yKSkpLHRoaXMud2hlZWxCb2RpZXMucHVzaChlKSx0aGlzLndoZWVsRm9yY2VzLnB1c2goMCk7dmFyIG89KG5ldyBhLHZvaWQgMCE9PXQucG9zaXRpb24/dC5wb3NpdGlvbi5jbG9uZSgpOm5ldyBhKSxpPW5ldyBhO3RoaXMuY2hhc3Npc0JvZHkucG9pbnRUb1dvcmxkRnJhbWUobyxpKSxlLnBvc2l0aW9uLnNldChpLngsaS55LGkueik7dmFyIHI9dm9pZCAwIT09dC5heGlzP3QuYXhpcy5jbG9uZSgpOm5ldyBhKDAsMSwwKTt0aGlzLndoZWVsQXhlcy5wdXNoKHIpO3ZhciBoPW5ldyBjKHRoaXMuY2hhc3Npc0JvZHksZSx7cGl2b3RBOm8sYXhpc0E6cixwaXZvdEI6YS5aRVJPLGF4aXNCOnIsY29sbGlkZUNvbm5lY3RlZDohMX0pO3JldHVybiB0aGlzLmNvbnN0cmFpbnRzLnB1c2goaCksdGhpcy53aGVlbEJvZGllcy5sZW5ndGgtMX0saS5wcm90b3R5cGUuc2V0U3RlZXJpbmdWYWx1ZT1mdW5jdGlvbih0LGUpe3ZhciBvPXRoaXMud2hlZWxBeGVzW2VdLGk9TWF0aC5jb3ModCksbj1NYXRoLnNpbih0KSxzPW8ueCxyPW8ueTt0aGlzLmNvbnN0cmFpbnRzW2VdLmF4aXNBLnNldChpKnMtbipyLG4qcytpKnIsMCl9LGkucHJvdG90eXBlLnNldE1vdG9yU3BlZWQ9ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLmNvbnN0cmFpbnRzW2VdO28uZW5hYmxlTW90b3IoKSxvLm1vdG9yVGFyZ2V0VmVsb2NpdHk9dH0saS5wcm90b3R5cGUuZGlzYWJsZU1vdG9yPWZ1bmN0aW9uKHQpe3RoaXMuY29uc3RyYWludHNbdF0uZGlzYWJsZU1vdG9yKCl9O3ZhciBoPW5ldyBhO2kucHJvdG90eXBlLnNldFdoZWVsRm9yY2U9ZnVuY3Rpb24odCxlKXt0aGlzLndoZWVsRm9yY2VzW2VdPXR9LGkucHJvdG90eXBlLmFwcGx5V2hlZWxGb3JjZT1mdW5jdGlvbih0LGUpe3ZhciBvPXRoaXMud2hlZWxBeGVzW2VdLGk9dGhpcy53aGVlbEJvZGllc1tlXSxuPWkudG9ycXVlO28uc2NhbGUodCxoKSxpLnZlY3RvclRvV29ybGRGcmFtZShoLGgpLG4udmFkZChoLG4pfSxpLnByb3RvdHlwZS5hZGRUb1dvcmxkPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLmNvbnN0cmFpbnRzLG89dGhpcy53aGVlbEJvZGllcy5jb25jYXQoW3RoaXMuY2hhc3Npc0JvZHldKSxpPTA7aTxvLmxlbmd0aDtpKyspdC5hZGRCb2R5KG9baV0pO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXQuYWRkQ29uc3RyYWludChlW2ldKTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJwcmVTdGVwXCIsdGhpcy5fdXBkYXRlLmJpbmQodGhpcykpfSxpLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMud2hlZWxGb3JjZXMsZT0wO2U8dC5sZW5ndGg7ZSsrKXRoaXMuYXBwbHlXaGVlbEZvcmNlKHRbZV0sZSl9LGkucHJvdG90eXBlLnJlbW92ZUZyb21Xb3JsZD1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5jb25zdHJhaW50cyxvPXRoaXMud2hlZWxCb2RpZXMuY29uY2F0KFt0aGlzLmNoYXNzaXNCb2R5XSksaT0wO2k8by5sZW5ndGg7aSsrKXQucmVtb3ZlKG9baV0pO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXQucmVtb3ZlQ29uc3RyYWludChlW2ldKX07dmFyIGw9bmV3IGE7aS5wcm90b3R5cGUuZ2V0V2hlZWxTcGVlZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLndoZWVsQXhlc1t0XSxvPXRoaXMud2hlZWxCb2RpZXNbdF0saT1vLmFuZ3VsYXJWZWxvY2l0eTtyZXR1cm4gdGhpcy5jaGFzc2lzQm9keS52ZWN0b3JUb1dvcmxkRnJhbWUoZSxsKSxpLmRvdChsKX19LHtcIi4uL2NvbnN0cmFpbnRzL0hpbmdlQ29uc3RyYWludFwiOjMxLFwiLi4vbWF0aC9WZWMzXCI6NDYsXCIuLi9zaGFwZXMvQm94XCI6NTMsXCIuLi9zaGFwZXMvU3BoZXJlXCI6NjAsXCIuL0JvZHlcIjo0N31dLDUwOltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSgpe3RoaXMucGFydGljbGVzPVtdLHRoaXMuZGVuc2l0eT0xLHRoaXMuc21vb3RoaW5nUmFkaXVzPTEsdGhpcy5zcGVlZE9mU291bmQ9MSx0aGlzLnZpc2Nvc2l0eT0uMDEsdGhpcy5lcHM9MWUtNix0aGlzLnByZXNzdXJlcz1bXSx0aGlzLmRlbnNpdGllcz1bXSx0aGlzLm5laWdoYm9ycz1bXX1lLmV4cG9ydHM9aTt2YXIgbj0odChcIi4uL3NoYXBlcy9TaGFwZVwiKSx0KFwiLi4vbWF0aC9WZWMzXCIpKTt0KFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCIpLHQoXCIuLi9zaGFwZXMvUGFydGljbGVcIiksdChcIi4uL29iamVjdHMvQm9keVwiKSx0KFwiLi4vbWF0ZXJpYWwvTWF0ZXJpYWxcIik7aS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3RoaXMucGFydGljbGVzLnB1c2godCksdGhpcy5uZWlnaGJvcnMubGVuZ3RoPHRoaXMucGFydGljbGVzLmxlbmd0aCYmdGhpcy5uZWlnaGJvcnMucHVzaChbXSl9LGkucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnBhcnRpY2xlcy5pbmRleE9mKHQpOy0xIT09ZSYmKHRoaXMucGFydGljbGVzLnNwbGljZShlLDEpLHRoaXMubmVpZ2hib3JzLmxlbmd0aD50aGlzLnBhcnRpY2xlcy5sZW5ndGgmJnRoaXMubmVpZ2hib3JzLnBvcCgpKX07dmFyIHM9bmV3IG47aS5wcm90b3R5cGUuZ2V0TmVpZ2hib3JzPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBvPXRoaXMucGFydGljbGVzLmxlbmd0aCxpPXQuaWQsbj10aGlzLnNtb290aGluZ1JhZGl1cyp0aGlzLnNtb290aGluZ1JhZGl1cyxyPXMsYT0wO2EhPT1vO2ErKyl7dmFyIGM9dGhpcy5wYXJ0aWNsZXNbYV07Yy5wb3NpdGlvbi52c3ViKHQucG9zaXRpb24sciksaSE9PWMuaWQmJnIubm9ybTIoKTxuJiZlLnB1c2goYyl9fTt2YXIgcj1uZXcgbixhPW5ldyBuLGM9bmV3IG4saD1uZXcgbixsPW5ldyBuLHU9bmV3IG47aS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMucGFydGljbGVzLmxlbmd0aCxlPXIsbz10aGlzLnNwZWVkT2ZTb3VuZCxpPXRoaXMuZXBzLG49MDtuIT09dDtuKyspe3ZhciBzPXRoaXMucGFydGljbGVzW25dLHA9dGhpcy5uZWlnaGJvcnNbbl07cC5sZW5ndGg9MCx0aGlzLmdldE5laWdoYm9ycyhzLHApLHAucHVzaCh0aGlzLnBhcnRpY2xlc1tuXSk7Zm9yKHZhciBkPXAubGVuZ3RoLHk9MCx2PTA7diE9PWQ7disrKXtzLnBvc2l0aW9uLnZzdWIocFt2XS5wb3NpdGlvbixlKTt2YXIgZj1lLm5vcm0oKSxtPXRoaXMudyhmKTt5Kz1wW3ZdLm1hc3MqbX10aGlzLmRlbnNpdGllc1tuXT15LHRoaXMucHJlc3N1cmVzW25dPW8qbyoodGhpcy5kZW5zaXRpZXNbbl0tdGhpcy5kZW5zaXR5KX1mb3IodmFyIGc9YSx3PWMseD1oLGI9bCxFPXUsbj0wO24hPT10O24rKyl7dmFyIEE9dGhpcy5wYXJ0aWNsZXNbbl07Zy5zZXQoMCwwLDApLHcuc2V0KDAsMCwwKTtmb3IodmFyIEIsQyxwPXRoaXMubmVpZ2hib3JzW25dLGQ9cC5sZW5ndGgsdj0wO3YhPT1kO3YrKyl7dmFyIFM9cFt2XTtBLnBvc2l0aW9uLnZzdWIoUy5wb3NpdGlvbixiKTt2YXIgUj1iLm5vcm0oKTtCPS1TLm1hc3MqKHRoaXMucHJlc3N1cmVzW25dLyh0aGlzLmRlbnNpdGllc1tuXSp0aGlzLmRlbnNpdGllc1tuXStpKSt0aGlzLnByZXNzdXJlc1t2XS8odGhpcy5kZW5zaXRpZXNbdl0qdGhpcy5kZW5zaXRpZXNbdl0raSkpLHRoaXMuZ3JhZHcoYix4KSx4Lm11bHQoQix4KSxnLnZhZGQoeCxnKSxTLnZlbG9jaXR5LnZzdWIoQS52ZWxvY2l0eSxFKSxFLm11bHQoMS8oMWUtNCt0aGlzLmRlbnNpdGllc1tuXSp0aGlzLmRlbnNpdGllc1t2XSkqdGhpcy52aXNjb3NpdHkqUy5tYXNzLEUpLEM9dGhpcy5uYWJsYXcoUiksRS5tdWx0KEMsRSksdy52YWRkKEUsdyl9dy5tdWx0KEEubWFzcyx3KSxnLm11bHQoQS5tYXNzLGcpLEEuZm9yY2UudmFkZCh3LEEuZm9yY2UpLEEuZm9yY2UudmFkZChnLEEuZm9yY2UpfX0saS5wcm90b3R5cGUudz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnNtb290aGluZ1JhZGl1cztyZXR1cm4gMzE1Lyg2NCpNYXRoLlBJKk1hdGgucG93KGUsOSkpKk1hdGgucG93KGUqZS10KnQsMyl9LGkucHJvdG90eXBlLmdyYWR3PWZ1bmN0aW9uKHQsZSl7dmFyIG89dC5ub3JtKCksaT10aGlzLnNtb290aGluZ1JhZGl1czt0Lm11bHQoOTQ1LygzMipNYXRoLlBJKk1hdGgucG93KGksOSkpKk1hdGgucG93KGkqaS1vKm8sMiksZSl9LGkucHJvdG90eXBlLm5hYmxhdz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnNtb290aGluZ1JhZGl1cztyZXR1cm4gOTQ1LygzMipNYXRoLlBJKk1hdGgucG93KGUsOSkpKihlKmUtdCp0KSooNyp0KnQtMyplKmUpfX0se1wiLi4vbWF0ZXJpYWwvTWF0ZXJpYWxcIjo0MSxcIi4uL21hdGgvUXVhdGVybmlvblwiOjQ0LFwiLi4vbWF0aC9WZWMzXCI6NDYsXCIuLi9vYmplY3RzL0JvZHlcIjo0NyxcIi4uL3NoYXBlcy9QYXJ0aWNsZVwiOjU3LFwiLi4vc2hhcGVzL1NoYXBlXCI6NTl9XSw1MTpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8pe289b3x8e30sdGhpcy5yZXN0TGVuZ3RoPVwibnVtYmVyXCI9PXR5cGVvZiBvLnJlc3RMZW5ndGg/by5yZXN0TGVuZ3RoOjEsdGhpcy5zdGlmZm5lc3M9by5zdGlmZm5lc3N8fDEwMCx0aGlzLmRhbXBpbmc9by5kYW1waW5nfHwxLHRoaXMuYm9keUE9dCx0aGlzLmJvZHlCPWUsdGhpcy5sb2NhbEFuY2hvckE9bmV3IG4sdGhpcy5sb2NhbEFuY2hvckI9bmV3IG4sby5sb2NhbEFuY2hvckEmJnRoaXMubG9jYWxBbmNob3JBLmNvcHkoby5sb2NhbEFuY2hvckEpLG8ubG9jYWxBbmNob3JCJiZ0aGlzLmxvY2FsQW5jaG9yQi5jb3B5KG8ubG9jYWxBbmNob3JCKSxvLndvcmxkQW5jaG9yQSYmdGhpcy5zZXRXb3JsZEFuY2hvckEoby53b3JsZEFuY2hvckEpLG8ud29ybGRBbmNob3JCJiZ0aGlzLnNldFdvcmxkQW5jaG9yQihvLndvcmxkQW5jaG9yQil9dmFyIG49dChcIi4uL21hdGgvVmVjM1wiKTtlLmV4cG9ydHM9aSxpLnByb3RvdHlwZS5zZXRXb3JsZEFuY2hvckE9ZnVuY3Rpb24odCl7dGhpcy5ib2R5QS5wb2ludFRvTG9jYWxGcmFtZSh0LHRoaXMubG9jYWxBbmNob3JBKX0saS5wcm90b3R5cGUuc2V0V29ybGRBbmNob3JCPWZ1bmN0aW9uKHQpe3RoaXMuYm9keUIucG9pbnRUb0xvY2FsRnJhbWUodCx0aGlzLmxvY2FsQW5jaG9yQil9LGkucHJvdG90eXBlLmdldFdvcmxkQW5jaG9yQT1mdW5jdGlvbih0KXt0aGlzLmJvZHlBLnBvaW50VG9Xb3JsZEZyYW1lKHRoaXMubG9jYWxBbmNob3JBLHQpfSxpLnByb3RvdHlwZS5nZXRXb3JsZEFuY2hvckI9ZnVuY3Rpb24odCl7dGhpcy5ib2R5Qi5wb2ludFRvV29ybGRGcmFtZSh0aGlzLmxvY2FsQW5jaG9yQix0KX07dmFyIHM9bmV3IG4scj1uZXcgbixhPW5ldyBuLGM9bmV3IG4saD1uZXcgbixsPW5ldyBuLHU9bmV3IG4scD1uZXcgbixkPW5ldyBuLHk9bmV3IG4sdj1uZXcgbjtpLnByb3RvdHlwZS5hcHBseUZvcmNlPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5zdGlmZm5lc3MsZT10aGlzLmRhbXBpbmcsbz10aGlzLnJlc3RMZW5ndGgsaT10aGlzLmJvZHlBLG49dGhpcy5ib2R5QixmPXMsbT1yLGc9YSx3PWMseD12LGI9aCxFPWwsQT11LEI9cCxDPWQsUz15O3RoaXMuZ2V0V29ybGRBbmNob3JBKGIpLHRoaXMuZ2V0V29ybGRBbmNob3JCKEUpLGIudnN1YihpLnBvc2l0aW9uLEEpLEUudnN1YihuLnBvc2l0aW9uLEIpLEUudnN1YihiLGYpO3ZhciBSPWYubm9ybSgpO20uY29weShmKSxtLm5vcm1hbGl6ZSgpLG4udmVsb2NpdHkudnN1YihpLnZlbG9jaXR5LGcpLG4uYW5ndWxhclZlbG9jaXR5LmNyb3NzKEIseCksZy52YWRkKHgsZyksaS5hbmd1bGFyVmVsb2NpdHkuY3Jvc3MoQSx4KSxnLnZzdWIoeCxnKSxtLm11bHQoLXQqKFItbyktZSpnLmRvdChtKSx3KSxpLmZvcmNlLnZzdWIodyxpLmZvcmNlKSxuLmZvcmNlLnZhZGQodyxuLmZvcmNlKSxBLmNyb3NzKHcsQyksQi5jcm9zcyh3LFMpLGkudG9ycXVlLnZzdWIoQyxpLnRvcnF1ZSksbi50b3JxdWUudmFkZChTLG4udG9ycXVlKX19LHtcIi4uL21hdGgvVmVjM1wiOjQ2fV0sNTI6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQpe3Q9YS5kZWZhdWx0cyh0LHtjaGFzc2lzQ29ubmVjdGlvblBvaW50TG9jYWw6bmV3IG4sY2hhc3Npc0Nvbm5lY3Rpb25Qb2ludFdvcmxkOm5ldyBuLGRpcmVjdGlvbkxvY2FsOm5ldyBuLGRpcmVjdGlvbldvcmxkOm5ldyBuLGF4bGVMb2NhbDpuZXcgbixheGxlV29ybGQ6bmV3IG4sc3VzcGVuc2lvblJlc3RMZW5ndGg6MSxzdXNwZW5zaW9uTWF4TGVuZ3RoOjIscmFkaXVzOjEsc3VzcGVuc2lvblN0aWZmbmVzczoxMDAsZGFtcGluZ0NvbXByZXNzaW9uOjEwLGRhbXBpbmdSZWxheGF0aW9uOjEwLGZyaWN0aW9uU2xpcDoxZTQsc3RlZXJpbmc6MCxyb3RhdGlvbjowLGRlbHRhUm90YXRpb246MCxyb2xsSW5mbHVlbmNlOi4wMSxtYXhTdXNwZW5zaW9uRm9yY2U6TnVtYmVyLk1BWF9WQUxVRSxpc0Zyb250V2hlZWw6ITAsY2xpcHBlZEludkNvbnRhY3REb3RTdXNwZW5zaW9uOjEsc3VzcGVuc2lvblJlbGF0aXZlVmVsb2NpdHk6MCxzdXNwZW5zaW9uRm9yY2U6MCxza2lkSW5mbzowLHN1c3BlbnNpb25MZW5ndGg6MCxtYXhTdXNwZW5zaW9uVHJhdmVsOjEsdXNlQ3VzdG9tU2xpZGluZ1JvdGF0aW9uYWxTcGVlZDohMSxjdXN0b21TbGlkaW5nUm90YXRpb25hbFNwZWVkOi0uMX0pLHRoaXMubWF4U3VzcGVuc2lvblRyYXZlbD10Lm1heFN1c3BlbnNpb25UcmF2ZWwsdGhpcy5jdXN0b21TbGlkaW5nUm90YXRpb25hbFNwZWVkPXQuY3VzdG9tU2xpZGluZ1JvdGF0aW9uYWxTcGVlZCx0aGlzLnVzZUN1c3RvbVNsaWRpbmdSb3RhdGlvbmFsU3BlZWQ9dC51c2VDdXN0b21TbGlkaW5nUm90YXRpb25hbFNwZWVkLHRoaXMuc2xpZGluZz0hMSx0aGlzLmNoYXNzaXNDb25uZWN0aW9uUG9pbnRMb2NhbD10LmNoYXNzaXNDb25uZWN0aW9uUG9pbnRMb2NhbC5jbG9uZSgpLHRoaXMuY2hhc3Npc0Nvbm5lY3Rpb25Qb2ludFdvcmxkPXQuY2hhc3Npc0Nvbm5lY3Rpb25Qb2ludFdvcmxkLmNsb25lKCksdGhpcy5kaXJlY3Rpb25Mb2NhbD10LmRpcmVjdGlvbkxvY2FsLmNsb25lKCksdGhpcy5kaXJlY3Rpb25Xb3JsZD10LmRpcmVjdGlvbldvcmxkLmNsb25lKCksdGhpcy5heGxlTG9jYWw9dC5heGxlTG9jYWwuY2xvbmUoKSx0aGlzLmF4bGVXb3JsZD10LmF4bGVXb3JsZC5jbG9uZSgpLHRoaXMuc3VzcGVuc2lvblJlc3RMZW5ndGg9dC5zdXNwZW5zaW9uUmVzdExlbmd0aCx0aGlzLnN1c3BlbnNpb25NYXhMZW5ndGg9dC5zdXNwZW5zaW9uTWF4TGVuZ3RoLHRoaXMucmFkaXVzPXQucmFkaXVzLHRoaXMuc3VzcGVuc2lvblN0aWZmbmVzcz10LnN1c3BlbnNpb25TdGlmZm5lc3MsdGhpcy5kYW1waW5nQ29tcHJlc3Npb249dC5kYW1waW5nQ29tcHJlc3Npb24sdGhpcy5kYW1waW5nUmVsYXhhdGlvbj10LmRhbXBpbmdSZWxheGF0aW9uLHRoaXMuZnJpY3Rpb25TbGlwPXQuZnJpY3Rpb25TbGlwLHRoaXMuc3RlZXJpbmc9MCx0aGlzLnJvdGF0aW9uPTAsdGhpcy5kZWx0YVJvdGF0aW9uPTAsdGhpcy5yb2xsSW5mbHVlbmNlPXQucm9sbEluZmx1ZW5jZSx0aGlzLm1heFN1c3BlbnNpb25Gb3JjZT10Lm1heFN1c3BlbnNpb25Gb3JjZSx0aGlzLmVuZ2luZUZvcmNlPTAsdGhpcy5icmFrZT0wLHRoaXMuaXNGcm9udFdoZWVsPXQuaXNGcm9udFdoZWVsLHRoaXMuY2xpcHBlZEludkNvbnRhY3REb3RTdXNwZW5zaW9uPTEsdGhpcy5zdXNwZW5zaW9uUmVsYXRpdmVWZWxvY2l0eT0wLHRoaXMuc3VzcGVuc2lvbkZvcmNlPTAsdGhpcy5za2lkSW5mbz0wLHRoaXMuc3VzcGVuc2lvbkxlbmd0aD0wLHRoaXMuc2lkZUltcHVsc2U9MCx0aGlzLmZvcndhcmRJbXB1bHNlPTAsdGhpcy5yYXljYXN0UmVzdWx0PW5ldyByLHRoaXMud29ybGRUcmFuc2Zvcm09bmV3IHMsdGhpcy5pc0luQ29udGFjdD0hMX12YXIgbj10KFwiLi4vbWF0aC9WZWMzXCIpLHM9dChcIi4uL21hdGgvVHJhbnNmb3JtXCIpLHI9dChcIi4uL2NvbGxpc2lvbi9SYXljYXN0UmVzdWx0XCIpLGE9dChcIi4uL3V0aWxzL1V0aWxzXCIpO2UuZXhwb3J0cz1pO3ZhciBjPW5ldyBuLGg9bmV3IG4sYz1uZXcgbjtpLnByb3RvdHlwZS51cGRhdGVXaGVlbD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnJheWNhc3RSZXN1bHQ7aWYodGhpcy5pc0luQ29udGFjdCl7dmFyIG89ZS5oaXROb3JtYWxXb3JsZC5kb3QoZS5kaXJlY3Rpb25Xb3JsZCk7ZS5oaXRQb2ludFdvcmxkLnZzdWIodC5wb3NpdGlvbixoKSx0LmdldFZlbG9jaXR5QXRXb3JsZFBvaW50KGgsYyk7dmFyIGk9ZS5oaXROb3JtYWxXb3JsZC5kb3QoYyk7aWYobz49LS4xKXRoaXMuc3VzcGVuc2lvblJlbGF0aXZlVmVsb2NpdHk9MCx0aGlzLmNsaXBwZWRJbnZDb250YWN0RG90U3VzcGVuc2lvbj0xMDtlbHNle3ZhciBuPS0xL287dGhpcy5zdXNwZW5zaW9uUmVsYXRpdmVWZWxvY2l0eT1pKm4sdGhpcy5jbGlwcGVkSW52Q29udGFjdERvdFN1c3BlbnNpb249bn19ZWxzZSBlLnN1c3BlbnNpb25MZW5ndGg9dGhpcy5zdXNwZW5zaW9uUmVzdExlbmd0aCx0aGlzLnN1c3BlbnNpb25SZWxhdGl2ZVZlbG9jaXR5PTAsZS5kaXJlY3Rpb25Xb3JsZC5zY2FsZSgtMSxlLmhpdE5vcm1hbFdvcmxkKSx0aGlzLmNsaXBwZWRJbnZDb250YWN0RG90U3VzcGVuc2lvbj0xfX0se1wiLi4vY29sbGlzaW9uL1JheWNhc3RSZXN1bHRcIjoyNixcIi4uL21hdGgvVHJhbnNmb3JtXCI6NDUsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4uL3V0aWxzL1V0aWxzXCI6Njl9XSw1MzpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCl7bi5jYWxsKHRoaXMpLHRoaXMudHlwZT1uLnR5cGVzLkJPWCx0aGlzLmhhbGZFeHRlbnRzPXQsdGhpcy5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb249bnVsbCx0aGlzLnVwZGF0ZUNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbigpLHRoaXMudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXMoKX1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9TaGFwZVwiKSxzPXQoXCIuLi9tYXRoL1ZlYzNcIikscj10KFwiLi9Db252ZXhQb2x5aGVkcm9uXCIpO2kucHJvdG90eXBlPW5ldyBuLGkucHJvdG90eXBlLmNvbnN0cnVjdG9yPWksaS5wcm90b3R5cGUudXBkYXRlQ29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5oYWxmRXh0ZW50cy54LGU9dGhpcy5oYWxmRXh0ZW50cy55LG89dGhpcy5oYWxmRXh0ZW50cy56LGk9cyxuPVtuZXcgaSgtdCwtZSwtbyksbmV3IGkodCwtZSwtbyksbmV3IGkodCxlLC1vKSxuZXcgaSgtdCxlLC1vKSxuZXcgaSgtdCwtZSxvKSxuZXcgaSh0LC1lLG8pLG5ldyBpKHQsZSxvKSxuZXcgaSgtdCxlLG8pXSxhPVtbMywyLDEsMF0sWzQsNSw2LDddLFs1LDQsMCwxXSxbMiwzLDcsNl0sWzAsNCw3LDNdLFsxLDIsNiw1XV0sYz0obmV3IGkoMCwwLDEpLG5ldyBpKDAsMSwwKSxuZXcgaSgxLDAsMCksbmV3IHIobixhKSk7dGhpcy5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb249YyxjLm1hdGVyaWFsPXRoaXMubWF0ZXJpYWx9LGkucHJvdG90eXBlLmNhbGN1bGF0ZUxvY2FsSW5lcnRpYT1mdW5jdGlvbih0LGUpe3JldHVybiBlPWV8fG5ldyBzLGkuY2FsY3VsYXRlSW5lcnRpYSh0aGlzLmhhbGZFeHRlbnRzLHQsZSksZX0saS5jYWxjdWxhdGVJbmVydGlhPWZ1bmN0aW9uKHQsZSxvKXt2YXIgaT10O28ueD0xLzEyKmUqKDIqaS55KjIqaS55KzIqaS56KjIqaS56KSxvLnk9MS8xMiplKigyKmkueCoyKmkueCsyKmkueioyKmkueiksby56PTEvMTIqZSooMippLnkqMippLnkrMippLngqMippLngpfSxpLnByb3RvdHlwZS5nZXRTaWRlTm9ybWFscz1mdW5jdGlvbih0LGUpe3ZhciBvPXQsaT10aGlzLmhhbGZFeHRlbnRzO2lmKG9bMF0uc2V0KGkueCwwLDApLG9bMV0uc2V0KDAsaS55LDApLG9bMl0uc2V0KDAsMCxpLnopLG9bM10uc2V0KC1pLngsMCwwKSxvWzRdLnNldCgwLC1pLnksMCksb1s1XS5zZXQoMCwwLC1pLnopLHZvaWQgMCE9PWUpZm9yKHZhciBuPTA7biE9PW8ubGVuZ3RoO24rKyllLnZtdWx0KG9bbl0sb1tuXSk7cmV0dXJuIG99LGkucHJvdG90eXBlLnZvbHVtZT1mdW5jdGlvbigpe3JldHVybiA4KnRoaXMuaGFsZkV4dGVudHMueCp0aGlzLmhhbGZFeHRlbnRzLnkqdGhpcy5oYWxmRXh0ZW50cy56fSxpLnByb3RvdHlwZS51cGRhdGVCb3VuZGluZ1NwaGVyZVJhZGl1cz1mdW5jdGlvbigpe3RoaXMuYm91bmRpbmdTcGhlcmVSYWRpdXM9dGhpcy5oYWxmRXh0ZW50cy5ub3JtKCl9O3ZhciBhPW5ldyBzO25ldyBzO2kucHJvdG90eXBlLmZvckVhY2hXb3JsZENvcm5lcj1mdW5jdGlvbih0LGUsbyl7Zm9yKHZhciBpPXRoaXMuaGFsZkV4dGVudHMsbj1bW2kueCxpLnksaS56XSxbLWkueCxpLnksaS56XSxbLWkueCwtaS55LGkuel0sWy1pLngsLWkueSwtaS56XSxbaS54LC1pLnksLWkuel0sW2kueCxpLnksLWkuel0sWy1pLngsaS55LC1pLnpdLFtpLngsLWkueSxpLnpdXSxzPTA7czxuLmxlbmd0aDtzKyspYS5zZXQobltzXVswXSxuW3NdWzFdLG5bc11bMl0pLGUudm11bHQoYSxhKSx0LnZhZGQoYSxhKSxvKGEueCxhLnksYS56KX07dmFyIGM9W25ldyBzLG5ldyBzLG5ldyBzLG5ldyBzLG5ldyBzLG5ldyBzLG5ldyBzLG5ldyBzXTtpLnByb3RvdHlwZS5jYWxjdWxhdGVXb3JsZEFBQkI9ZnVuY3Rpb24odCxlLG8saSl7dmFyIG49dGhpcy5oYWxmRXh0ZW50cztjWzBdLnNldChuLngsbi55LG4ueiksY1sxXS5zZXQoLW4ueCxuLnksbi56KSxjWzJdLnNldCgtbi54LC1uLnksbi56KSxjWzNdLnNldCgtbi54LC1uLnksLW4ueiksY1s0XS5zZXQobi54LC1uLnksLW4ueiksY1s1XS5zZXQobi54LG4ueSwtbi56KSxjWzZdLnNldCgtbi54LG4ueSwtbi56KSxjWzddLnNldChuLngsLW4ueSxuLnopO3ZhciBzPWNbMF07ZS52bXVsdChzLHMpLHQudmFkZChzLHMpLGkuY29weShzKSxvLmNvcHkocyk7Zm9yKHZhciByPTE7cjw4O3IrKyl7dmFyIHM9Y1tyXTtlLnZtdWx0KHMscyksdC52YWRkKHMscyk7dmFyIGE9cy54LGg9cy55LGw9cy56O2E+aS54JiYoaS54PWEpLGg+aS55JiYoaS55PWgpLGw+aS56JiYoaS56PWwpLGE8by54JiYoby54PWEpLGg8by55JiYoby55PWgpLGw8by56JiYoby56PWwpfX19LHtcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi9Db252ZXhQb2x5aGVkcm9uXCI6NTQsXCIuL1NoYXBlXCI6NTl9XSw1NDpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlLG8pe24uY2FsbCh0aGlzKSx0aGlzLnR5cGU9bi50eXBlcy5DT05WRVhQT0xZSEVEUk9OLHRoaXMudmVydGljZXM9dHx8W10sdGhpcy53b3JsZFZlcnRpY2VzPVtdLHRoaXMud29ybGRWZXJ0aWNlc05lZWRzVXBkYXRlPSEwLHRoaXMuZmFjZXM9ZXx8W10sdGhpcy5mYWNlTm9ybWFscz1bXSx0aGlzLmNvbXB1dGVOb3JtYWxzKCksdGhpcy53b3JsZEZhY2VOb3JtYWxzTmVlZHNVcGRhdGU9ITAsdGhpcy53b3JsZEZhY2VOb3JtYWxzPVtdLHRoaXMudW5pcXVlRWRnZXM9W10sdGhpcy51bmlxdWVBeGVzPW8/by5zbGljZSgpOm51bGwsdGhpcy5jb21wdXRlRWRnZXMoKSx0aGlzLnVwZGF0ZUJvdW5kaW5nU3BoZXJlUmFkaXVzKCl9ZS5leHBvcnRzPWk7dmFyIG49dChcIi4vU2hhcGVcIikscz10KFwiLi4vbWF0aC9WZWMzXCIpLHI9KHQoXCIuLi9tYXRoL1F1YXRlcm5pb25cIiksdChcIi4uL21hdGgvVHJhbnNmb3JtXCIpKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pO3ZhciBhPW5ldyBzO2kucHJvdG90eXBlLmNvbXB1dGVFZGdlcz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZmFjZXMsZT10aGlzLnZlcnRpY2VzLG89KGUubGVuZ3RoLHRoaXMudW5pcXVlRWRnZXMpO28ubGVuZ3RoPTA7Zm9yKHZhciBpPWEsbj0wO24hPT10Lmxlbmd0aDtuKyspZm9yKHZhciBzPXRbbl0scj1zLmxlbmd0aCxjPTA7YyE9PXI7YysrKXt2YXIgaD0oYysxKSVyO2Vbc1tjXV0udnN1YihlW3NbaF1dLGkpLGkubm9ybWFsaXplKCk7Zm9yKHZhciBsPSExLHU9MDt1IT09by5sZW5ndGg7dSsrKWlmKG9bdV0uYWxtb3N0RXF1YWxzKGkpfHxvW3VdLmFsbW9zdEVxdWFscyhpKSl7bD0hMDticmVha31sfHxvLnB1c2goaS5jbG9uZSgpKX19LGkucHJvdG90eXBlLmNvbXB1dGVOb3JtYWxzPWZ1bmN0aW9uKCl7dGhpcy5mYWNlTm9ybWFscy5sZW5ndGg9dGhpcy5mYWNlcy5sZW5ndGg7Zm9yKHZhciB0PTA7dDx0aGlzLmZhY2VzLmxlbmd0aDt0Kyspe2Zvcih2YXIgZT0wO2U8dGhpcy5mYWNlc1t0XS5sZW5ndGg7ZSsrKWlmKCF0aGlzLnZlcnRpY2VzW3RoaXMuZmFjZXNbdF1bZV1dKXRocm93IG5ldyBFcnJvcihcIlZlcnRleCBcIit0aGlzLmZhY2VzW3RdW2VdK1wiIG5vdCBmb3VuZCFcIik7dmFyIG89dGhpcy5mYWNlTm9ybWFsc1t0XXx8bmV3IHM7dGhpcy5nZXRGYWNlTm9ybWFsKHQsbyksby5uZWdhdGUobyksdGhpcy5mYWNlTm9ybWFsc1t0XT1vO3ZhciBpPXRoaXMudmVydGljZXNbdGhpcy5mYWNlc1t0XVswXV07aWYoby5kb3QoaSk8MCl7Y29uc29sZS5lcnJvcihcIi5mYWNlTm9ybWFsc1tcIit0K1wiXSA9IFZlYzMoXCIrby50b1N0cmluZygpK1wiKSBsb29rcyBsaWtlIGl0IHBvaW50cyBpbnRvIHRoZSBzaGFwZT8gVGhlIHZlcnRpY2VzIGZvbGxvdy4gTWFrZSBzdXJlIHRoZXkgYXJlIG9yZGVyZWQgQ0NXIGFyb3VuZCB0aGUgbm9ybWFsLCB1c2luZyB0aGUgcmlnaHQgaGFuZCBydWxlLlwiKTtmb3IodmFyIGU9MDtlPHRoaXMuZmFjZXNbdF0ubGVuZ3RoO2UrKyljb25zb2xlLndhcm4oXCIudmVydGljZXNbXCIrdGhpcy5mYWNlc1t0XVtlXStcIl0gPSBWZWMzKFwiK3RoaXMudmVydGljZXNbdGhpcy5mYWNlc1t0XVtlXV0udG9TdHJpbmcoKStcIilcIil9fX07dmFyIGM9bmV3IHMsaD1uZXcgcztpLmNvbXB1dGVOb3JtYWw9ZnVuY3Rpb24odCxlLG8saSl7ZS52c3ViKHQsaCksby52c3ViKGUsYyksYy5jcm9zcyhoLGkpLGkuaXNaZXJvKCl8fGkubm9ybWFsaXplKCl9LGkucHJvdG90eXBlLmdldEZhY2VOb3JtYWw9ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLmZhY2VzW3RdLG49dGhpcy52ZXJ0aWNlc1tvWzBdXSxzPXRoaXMudmVydGljZXNbb1sxXV0scj10aGlzLnZlcnRpY2VzW29bMl1dO3JldHVybiBpLmNvbXB1dGVOb3JtYWwobixzLHIsZSl9O3ZhciBsPW5ldyBzO2kucHJvdG90eXBlLmNsaXBBZ2FpbnN0SHVsbD1mdW5jdGlvbih0LGUsbyxpLG4scixhLGMsaCl7Zm9yKHZhciB1PWwscD0tMSxkPS1OdW1iZXIuTUFYX1ZBTFVFLHk9MDt5PG8uZmFjZXMubGVuZ3RoO3krKyl7dS5jb3B5KG8uZmFjZU5vcm1hbHNbeV0pLG4udm11bHQodSx1KTt2YXIgdj11LmRvdChyKTt2PmQmJihkPXYscD15KX1mb3IodmFyIGY9W10sbT1vLmZhY2VzW3BdLGc9bS5sZW5ndGgsdz0wO3c8Zzt3Kyspe3ZhciB4PW8udmVydGljZXNbbVt3XV0sYj1uZXcgcztiLmNvcHkoeCksbi52bXVsdChiLGIpLGkudmFkZChiLGIpLGYucHVzaChiKX1wPj0wJiZ0aGlzLmNsaXBGYWNlQWdhaW5zdEh1bGwocix0LGUsZixhLGMsaCl9O3ZhciB1PW5ldyBzLHA9bmV3IHMsZD1uZXcgcyx5PW5ldyBzLHY9bmV3IHMsZj1uZXcgcztpLnByb3RvdHlwZS5maW5kU2VwYXJhdGluZ0F4aXM9ZnVuY3Rpb24odCxlLG8saSxuLHMscixhKXt2YXIgYz11LGg9cCxsPWQsbT15LGc9dix3PWYseD1OdW1iZXIuTUFYX1ZBTFVFLGI9dGhpcyxFPTA7aWYoYi51bmlxdWVBeGVzKWZvcih2YXIgQT0wO0EhPT1iLnVuaXF1ZUF4ZXMubGVuZ3RoO0ErKyl7by52bXVsdChiLnVuaXF1ZUF4ZXNbQV0sYyk7dmFyIEI9Yi50ZXN0U2VwQXhpcyhjLHQsZSxvLGksbik7aWYoITE9PT1CKXJldHVybiExO0I8eCYmKHg9QixzLmNvcHkoYykpfWVsc2UgZm9yKHZhciBDPXI/ci5sZW5ndGg6Yi5mYWNlcy5sZW5ndGgsQT0wO0E8QztBKyspe3ZhciBTPXI/cltBXTpBO2MuY29weShiLmZhY2VOb3JtYWxzW1NdKSxvLnZtdWx0KGMsYyk7dmFyIEI9Yi50ZXN0U2VwQXhpcyhjLHQsZSxvLGksbik7aWYoITE9PT1CKXJldHVybiExO0I8eCYmKHg9QixzLmNvcHkoYykpfWlmKHQudW5pcXVlQXhlcylmb3IodmFyIEE9MDtBIT09dC51bmlxdWVBeGVzLmxlbmd0aDtBKyspe24udm11bHQodC51bmlxdWVBeGVzW0FdLGgpLEUrKzt2YXIgQj1iLnRlc3RTZXBBeGlzKGgsdCxlLG8saSxuKTtpZighMT09PUIpcmV0dXJuITE7Qjx4JiYoeD1CLHMuY29weShoKSl9ZWxzZSBmb3IodmFyIFI9YT9hLmxlbmd0aDp0LmZhY2VzLmxlbmd0aCxBPTA7QTxSO0ErKyl7dmFyIFM9YT9hW0FdOkE7aC5jb3B5KHQuZmFjZU5vcm1hbHNbU10pLG4udm11bHQoaCxoKSxFKys7dmFyIEI9Yi50ZXN0U2VwQXhpcyhoLHQsZSxvLGksbik7aWYoITE9PT1CKXJldHVybiExO0I8eCYmKHg9QixzLmNvcHkoaCkpfWZvcih2YXIgTT0wO00hPT1iLnVuaXF1ZUVkZ2VzLmxlbmd0aDtNKyspe28udm11bHQoYi51bmlxdWVFZGdlc1tNXSxtKTtmb3IodmFyIFQ9MDtUIT09dC51bmlxdWVFZGdlcy5sZW5ndGg7VCsrKWlmKG4udm11bHQodC51bmlxdWVFZGdlc1tUXSxnKSxtLmNyb3NzKGcsdyksIXcuYWxtb3N0WmVybygpKXt3Lm5vcm1hbGl6ZSgpO3ZhciB6PWIudGVzdFNlcEF4aXModyx0LGUsbyxpLG4pO2lmKCExPT09eilyZXR1cm4hMTt6PHgmJih4PXoscy5jb3B5KHcpKX19cmV0dXJuIGkudnN1YihlLGwpLGwuZG90KHMpPjAmJnMubmVnYXRlKHMpLCEwfTt2YXIgbT1bXSxnPVtdO2kucHJvdG90eXBlLnRlc3RTZXBBeGlzPWZ1bmN0aW9uKHQsZSxvLG4scyxyKXt2YXIgYT10aGlzO2kucHJvamVjdChhLHQsbyxuLG0pLGkucHJvamVjdChlLHQscyxyLGcpO3ZhciBjPW1bMF0saD1tWzFdLGw9Z1swXSx1PWdbMV07aWYoYzx1fHxsPGgpcmV0dXJuITE7dmFyIHA9Yy11LGQ9bC1oO3JldHVybiBwPGQ/cDpkfTt2YXIgdz1uZXcgcyx4PW5ldyBzO2kucHJvdG90eXBlLmNhbGN1bGF0ZUxvY2FsSW5lcnRpYT1mdW5jdGlvbih0LGUpe3RoaXMuY29tcHV0ZUxvY2FsQUFCQih3LHgpO3ZhciBvPXgueC13LngsaT14Lnktdy55LG49eC56LXcuejtlLng9MS8xMip0KigyKmkqMippKzIqbioyKm4pLGUueT0xLzEyKnQqKDIqbyoyKm8rMipuKjIqbiksZS56PTEvMTIqdCooMippKjIqaSsyKm8qMipvKX0saS5wcm90b3R5cGUuZ2V0UGxhbmVDb25zdGFudE9mRmFjZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmZhY2VzW3RdLG89dGhpcy5mYWNlTm9ybWFsc1t0XSxpPXRoaXMudmVydGljZXNbZVswXV07cmV0dXJuLW8uZG90KGkpfTt2YXIgYj1uZXcgcyxFPW5ldyBzLEE9bmV3IHMsQj1uZXcgcyxDPW5ldyBzLFM9bmV3IHMsUj1uZXcgcyxNPW5ldyBzO2kucHJvdG90eXBlLmNsaXBGYWNlQWdhaW5zdEh1bGw9ZnVuY3Rpb24odCxlLG8saSxuLHMscil7Zm9yKHZhciBhPWIsYz1FLGg9QSxsPUIsdT1DLHA9UyxkPVIseT1NLHY9dGhpcyxmPVtdLG09aSxnPWYsdz0tMSx4PU51bWJlci5NQVhfVkFMVUUsVD0wO1Q8di5mYWNlcy5sZW5ndGg7VCsrKXthLmNvcHkodi5mYWNlTm9ybWFsc1tUXSksby52bXVsdChhLGEpO3ZhciB6PWEuZG90KHQpO3o8eCYmKHg9eix3PVQpfWlmKCEodzwwKSl7dmFyIGs9di5mYWNlc1t3XTtrLmNvbm5lY3RlZEZhY2VzPVtdO2Zvcih2YXIgUD0wO1A8di5mYWNlcy5sZW5ndGg7UCsrKWZvcih2YXIgcT0wO3E8di5mYWNlc1tQXS5sZW5ndGg7cSsrKS0xIT09ay5pbmRleE9mKHYuZmFjZXNbUF1bcV0pJiZQIT09dyYmLTE9PT1rLmNvbm5lY3RlZEZhY2VzLmluZGV4T2YoUCkmJmsuY29ubmVjdGVkRmFjZXMucHVzaChQKTtmb3IodmFyIEw9KG0ubGVuZ3RoLGsubGVuZ3RoKSxWPTA7VjxMO1YrKyl7dmFyIEY9di52ZXJ0aWNlc1trW1ZdXSxOPXYudmVydGljZXNba1soVisxKSVMXV07Ri52c3ViKE4sYyksaC5jb3B5KGMpLG8udm11bHQoaCxoKSxlLnZhZGQoaCxoKSxsLmNvcHkodGhpcy5mYWNlTm9ybWFsc1t3XSksby52bXVsdChsLGwpLGUudmFkZChsLGwpLGguY3Jvc3MobCx1KSx1Lm5lZ2F0ZSh1KSxwLmNvcHkoRiksby52bXVsdChwLHApLGUudmFkZChwLHApO3ZhciBJLGo9KHAuZG90KHUpLGsuY29ubmVjdGVkRmFjZXNbVl0pO2QuY29weSh0aGlzLmZhY2VOb3JtYWxzW2pdKTt2YXIgTz10aGlzLmdldFBsYW5lQ29uc3RhbnRPZkZhY2Uoaik7eS5jb3B5KGQpLG8udm11bHQoeSx5KTt2YXIgST1PLXkuZG90KGUpO2Zvcih0aGlzLmNsaXBGYWNlQWdhaW5zdFBsYW5lKG0sZyx5LEkpO20ubGVuZ3RoOyltLnNoaWZ0KCk7Zm9yKDtnLmxlbmd0aDspbS5wdXNoKGcuc2hpZnQoKSl9ZC5jb3B5KHRoaXMuZmFjZU5vcm1hbHNbd10pO3ZhciBPPXRoaXMuZ2V0UGxhbmVDb25zdGFudE9mRmFjZSh3KTt5LmNvcHkoZCksby52bXVsdCh5LHkpO2Zvcih2YXIgST1PLXkuZG90KGUpLFA9MDtQPG0ubGVuZ3RoO1ArKyl7dmFyIEQ9eS5kb3QobVtQXSkrSTtpZihEPD1uJiYoY29uc29sZS5sb2coXCJjbGFtcGVkOiBkZXB0aD1cIitEK1wiIHRvIG1pbkRpc3Q9XCIrbiksRD1uKSxEPD1zKXt2YXIgVz1tW1BdO2lmKEQ8PTApe3ZhciBIPXtwb2ludDpXLG5vcm1hbDp5LGRlcHRoOkR9O3IucHVzaChIKX19fX19LGkucHJvdG90eXBlLmNsaXBGYWNlQWdhaW5zdFBsYW5lPWZ1bmN0aW9uKHQsZSxvLGkpe3ZhciBuLHIsYT10Lmxlbmd0aDtpZihhPDIpcmV0dXJuIGU7dmFyIGM9dFt0Lmxlbmd0aC0xXSxoPXRbMF07bj1vLmRvdChjKStpO2Zvcih2YXIgbD0wO2w8YTtsKyspe2lmKGg9dFtsXSxyPW8uZG90KGgpK2ksbjwwKWlmKHI8MCl7dmFyIHU9bmV3IHM7dS5jb3B5KGgpLGUucHVzaCh1KX1lbHNle3ZhciB1PW5ldyBzO2MubGVycChoLG4vKG4tciksdSksZS5wdXNoKHUpfWVsc2UgaWYocjwwKXt2YXIgdT1uZXcgcztjLmxlcnAoaCxuLyhuLXIpLHUpLGUucHVzaCh1KSxlLnB1c2goaCl9Yz1oLG49cn1yZXR1cm4gZX0saS5wcm90b3R5cGUuY29tcHV0ZVdvcmxkVmVydGljZXM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG89dGhpcy52ZXJ0aWNlcy5sZW5ndGg7dGhpcy53b3JsZFZlcnRpY2VzLmxlbmd0aDxvOyl0aGlzLndvcmxkVmVydGljZXMucHVzaChuZXcgcyk7Zm9yKHZhciBpPXRoaXMudmVydGljZXMsbj10aGlzLndvcmxkVmVydGljZXMscj0wO3IhPT1vO3IrKyllLnZtdWx0KGlbcl0sbltyXSksdC52YWRkKG5bcl0sbltyXSk7dGhpcy53b3JsZFZlcnRpY2VzTmVlZHNVcGRhdGU9ITF9O25ldyBzO2kucHJvdG90eXBlLmNvbXB1dGVMb2NhbEFBQkI9ZnVuY3Rpb24odCxlKXt2YXIgbz10aGlzLnZlcnRpY2VzLmxlbmd0aCxpPXRoaXMudmVydGljZXM7dC5zZXQoTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUpLGUuc2V0KC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFLC1OdW1iZXIuTUFYX1ZBTFVFKTtmb3IodmFyIG49MDtuPG87bisrKXt2YXIgcz1pW25dO3MueDx0Lng/dC54PXMueDpzLng+ZS54JiYoZS54PXMueCkscy55PHQueT90Lnk9cy55OnMueT5lLnkmJihlLnk9cy55KSxzLno8dC56P3Quej1zLno6cy56PmUueiYmKGUuej1zLnopfX0saS5wcm90b3R5cGUuY29tcHV0ZVdvcmxkRmFjZU5vcm1hbHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuZmFjZU5vcm1hbHMubGVuZ3RoO3RoaXMud29ybGRGYWNlTm9ybWFscy5sZW5ndGg8ZTspdGhpcy53b3JsZEZhY2VOb3JtYWxzLnB1c2gobmV3IHMpO2Zvcih2YXIgbz10aGlzLmZhY2VOb3JtYWxzLGk9dGhpcy53b3JsZEZhY2VOb3JtYWxzLG49MDtuIT09ZTtuKyspdC52bXVsdChvW25dLGlbbl0pO3RoaXMud29ybGRGYWNlTm9ybWFsc05lZWRzVXBkYXRlPSExfSxpLnByb3RvdHlwZS51cGRhdGVCb3VuZGluZ1NwaGVyZVJhZGl1cz1mdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9dGhpcy52ZXJ0aWNlcyxvPTAsaT1lLmxlbmd0aDtvIT09aTtvKyspe3ZhciBuPWVbb10ubm9ybTIoKTtuPnQmJih0PW4pfXRoaXMuYm91bmRpbmdTcGhlcmVSYWRpdXM9TWF0aC5zcXJ0KHQpfTt2YXIgVD1uZXcgcztpLnByb3RvdHlwZS5jYWxjdWxhdGVXb3JsZEFBQkI9ZnVuY3Rpb24odCxlLG8saSl7Zm9yKHZhciBuLHMscixhLGMsaCxsPXRoaXMudmVydGljZXMubGVuZ3RoLHU9dGhpcy52ZXJ0aWNlcyxwPTA7cDxsO3ArKyl7VC5jb3B5KHVbcF0pLGUudm11bHQoVCxUKSx0LnZhZGQoVCxUKTt2YXIgZD1UO2QueDxufHx2b2lkIDA9PT1uP249ZC54OihkLng+YXx8dm9pZCAwPT09YSkmJihhPWQueCksZC55PHN8fHZvaWQgMD09PXM/cz1kLnk6KGQueT5jfHx2b2lkIDA9PT1jKSYmKGM9ZC55KSxkLno8cnx8dm9pZCAwPT09cj9yPWQuejooZC56Pmh8fHZvaWQgMD09PWgpJiYoaD1kLnopfW8uc2V0KG4scyxyKSxpLnNldChhLGMsaCl9LGkucHJvdG90eXBlLnZvbHVtZT1mdW5jdGlvbigpe3JldHVybiA0Kk1hdGguUEkqdGhpcy5ib3VuZGluZ1NwaGVyZVJhZGl1cy8zfSxpLnByb3RvdHlwZS5nZXRBdmVyYWdlUG9pbnRMb2NhbD1mdW5jdGlvbih0KXt0PXR8fG5ldyBzO2Zvcih2YXIgZT10aGlzLnZlcnRpY2VzLmxlbmd0aCxvPXRoaXMudmVydGljZXMsaT0wO2k8ZTtpKyspdC52YWRkKG9baV0sdCk7cmV0dXJuIHQubXVsdCgxL2UsdCksdH0saS5wcm90b3R5cGUudHJhbnNmb3JtQWxsUG9pbnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG89dGhpcy52ZXJ0aWNlcy5sZW5ndGgsaT10aGlzLnZlcnRpY2VzO2lmKGUpe2Zvcih2YXIgbj0wO248bztuKyspe3ZhciBzPWlbbl07ZS52bXVsdChzLHMpfWZvcih2YXIgbj0wO248dGhpcy5mYWNlTm9ybWFscy5sZW5ndGg7bisrKXt2YXIgcz10aGlzLmZhY2VOb3JtYWxzW25dO2Uudm11bHQocyxzKX19aWYodClmb3IodmFyIG49MDtuPG87bisrKXt2YXIgcz1pW25dO3MudmFkZCh0LHMpfX07dmFyIHo9bmV3IHMsaz1uZXcgcyxQPW5ldyBzO2kucHJvdG90eXBlLnBvaW50SXNJbnNpZGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52ZXJ0aWNlcy5sZW5ndGgsbz10aGlzLnZlcnRpY2VzLGk9dGhpcy5mYWNlcyxuPXRoaXMuZmFjZU5vcm1hbHMscz10aGlzLmZhY2VzLmxlbmd0aCxyPXo7dGhpcy5nZXRBdmVyYWdlUG9pbnRMb2NhbChyKTtmb3IodmFyIGE9MDthPHM7YSsrKXt2YXIgZT0odGhpcy5mYWNlc1thXS5sZW5ndGgsblthXSksYz1vW2lbYV1bMF1dLGg9azt0LnZzdWIoYyxoKTt2YXIgbD1lLmRvdChoKSx1PVA7ci52c3ViKGMsdSk7dmFyIHA9ZS5kb3QodSk7aWYobDwwJiZwPjB8fGw+MCYmcDwwKXJldHVybiExfXJldHVybi0xfTt2YXIgcT0obmV3IHMsbmV3IHMpLEw9bmV3IHM7aS5wcm9qZWN0PWZ1bmN0aW9uKHQsZSxvLGksbil7dmFyIHM9dC52ZXJ0aWNlcy5sZW5ndGgsYT1xLGM9MCxoPTAsbD1MLHU9dC52ZXJ0aWNlcztsLnNldFplcm8oKSxyLnZlY3RvclRvTG9jYWxGcmFtZShvLGksZSxhKSxyLnBvaW50VG9Mb2NhbEZyYW1lKG8saSxsLGwpO3ZhciBwPWwuZG90KGEpO2g9Yz11WzBdLmRvdChhKTtmb3IodmFyIGQ9MTtkPHM7ZCsrKXt2YXIgeT11W2RdLmRvdChhKTt5PmMmJihjPXkpLHk8aCYmKGg9eSl9aWYoaC09cCxjLT1wLGg+Yyl7dmFyIHY9aDtoPWMsYz12fW5bMF09YyxuWzFdPWh9fSx7XCIuLi9tYXRoL1F1YXRlcm5pb25cIjo0NCxcIi4uL21hdGgvVHJhbnNmb3JtXCI6NDUsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vU2hhcGVcIjo1OX1dLDU1OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0LGUsbyxpKXt2YXIgYT1pLGM9W10saD1bXSxsPVtdLHU9W10scD1bXSxkPU1hdGguY29zLHk9TWF0aC5zaW47Yy5wdXNoKG5ldyBzKGUqZCgwKSxlKnkoMCksLjUqLW8pKSx1LnB1c2goMCksYy5wdXNoKG5ldyBzKHQqZCgwKSx0KnkoMCksLjUqbykpLHAucHVzaCgxKTtmb3IodmFyIHY9MDt2PGE7disrKXt2YXIgZj0yKk1hdGguUEkvYSoodisxKSxtPTIqTWF0aC5QSS9hKih2Ky41KTt2PGEtMT8oYy5wdXNoKG5ldyBzKGUqZChmKSxlKnkoZiksLjUqLW8pKSx1LnB1c2goMip2KzIpLGMucHVzaChuZXcgcyh0KmQoZiksdCp5KGYpLC41Km8pKSxwLnB1c2goMip2KzMpLGwucHVzaChbMip2KzIsMip2KzMsMip2KzEsMip2XSkpOmwucHVzaChbMCwxLDIqdisxLDIqdl0pLChhJTI9PTF8fHY8YS8yKSYmaC5wdXNoKG5ldyBzKGQobSkseShtKSwwKSl9bC5wdXNoKHApLGgucHVzaChuZXcgcygwLDAsMSkpO2Zvcih2YXIgZz1bXSx2PTA7djx1Lmxlbmd0aDt2KyspZy5wdXNoKHVbdS5sZW5ndGgtdi0xXSk7bC5wdXNoKGcpLHRoaXMudHlwZT1uLnR5cGVzLkNPTlZFWFBPTFlIRURST04sci5jYWxsKHRoaXMsYyxsLGgpfWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuL1NoYXBlXCIpLHM9dChcIi4uL21hdGgvVmVjM1wiKSxyPSh0KFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCIpLHQoXCIuL0NvbnZleFBvbHloZWRyb25cIikpO2kucHJvdG90eXBlPW5ldyByfSx7XCIuLi9tYXRoL1F1YXRlcm5pb25cIjo0NCxcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi9Db252ZXhQb2x5aGVkcm9uXCI6NTQsXCIuL1NoYXBlXCI6NTl9XSw1NjpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCxlKXtlPWMuZGVmYXVsdHMoZSx7bWF4VmFsdWU6bnVsbCxtaW5WYWx1ZTpudWxsLGVsZW1lbnRTaXplOjF9KSx0aGlzLmRhdGE9dCx0aGlzLm1heFZhbHVlPWUubWF4VmFsdWUsdGhpcy5taW5WYWx1ZT1lLm1pblZhbHVlLHRoaXMuZWxlbWVudFNpemU9ZS5lbGVtZW50U2l6ZSxudWxsPT09ZS5taW5WYWx1ZSYmdGhpcy51cGRhdGVNaW5WYWx1ZSgpLG51bGw9PT1lLm1heFZhbHVlJiZ0aGlzLnVwZGF0ZU1heFZhbHVlKCksdGhpcy5jYWNoZUVuYWJsZWQ9ITAscy5jYWxsKHRoaXMpLHRoaXMucGlsbGFyQ29udmV4PW5ldyByLHRoaXMucGlsbGFyT2Zmc2V0PW5ldyBhLHRoaXMudHlwZT1zLnR5cGVzLkhFSUdIVEZJRUxELHRoaXMudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXMoKSx0aGlzLl9jYWNoZWRQaWxsYXJzPXt9fWZ1bmN0aW9uIG4odCxlLG8saSxuLHMscixhLGMpe2MueD0oKHMtYSkqKHQtcikrKHItbikqKGUtYSkpLygocy1hKSooby1yKSsoci1uKSooaS1hKSksYy55PSgoYS1pKSoodC1yKSsoby1yKSooZS1hKSkvKChzLWEpKihvLXIpKyhyLW4pKihpLWEpKSxjLno9MS1jLngtYy55fXZhciBzPXQoXCIuL1NoYXBlXCIpLHI9dChcIi4vQ29udmV4UG9seWhlZHJvblwiKSxhPXQoXCIuLi9tYXRoL1ZlYzNcIiksYz10KFwiLi4vdXRpbHMvVXRpbHNcIik7ZS5leHBvcnRzPWksaS5wcm90b3R5cGU9bmV3IHMsaS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7dGhpcy5fY2FjaGVkUGlsbGFycz17fX0saS5wcm90b3R5cGUudXBkYXRlTWluVmFsdWU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5kYXRhLGU9dFswXVswXSxvPTA7byE9PXQubGVuZ3RoO28rKylmb3IodmFyIGk9MDtpIT09dFtvXS5sZW5ndGg7aSsrKXt2YXIgbj10W29dW2ldO248ZSYmKGU9bil9dGhpcy5taW5WYWx1ZT1lfSxpLnByb3RvdHlwZS51cGRhdGVNYXhWYWx1ZT1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmRhdGEsZT10WzBdWzBdLG89MDtvIT09dC5sZW5ndGg7bysrKWZvcih2YXIgaT0wO2khPT10W29dLmxlbmd0aDtpKyspe3ZhciBuPXRbb11baV07bj5lJiYoZT1uKX10aGlzLm1heFZhbHVlPWV9LGkucHJvdG90eXBlLnNldEhlaWdodFZhbHVlQXRJbmRleD1mdW5jdGlvbih0LGUsbyl7dGhpcy5kYXRhW3RdW2VdPW8sdGhpcy5jbGVhckNhY2hlZENvbnZleFRyaWFuZ2xlUGlsbGFyKHQsZSwhMSksdD4wJiYodGhpcy5jbGVhckNhY2hlZENvbnZleFRyaWFuZ2xlUGlsbGFyKHQtMSxlLCEwKSx0aGlzLmNsZWFyQ2FjaGVkQ29udmV4VHJpYW5nbGVQaWxsYXIodC0xLGUsITEpKSxlPjAmJih0aGlzLmNsZWFyQ2FjaGVkQ29udmV4VHJpYW5nbGVQaWxsYXIodCxlLTEsITApLHRoaXMuY2xlYXJDYWNoZWRDb252ZXhUcmlhbmdsZVBpbGxhcih0LGUtMSwhMSkpLGU+MCYmdD4wJiZ0aGlzLmNsZWFyQ2FjaGVkQ29udmV4VHJpYW5nbGVQaWxsYXIodC0xLGUtMSwhMCl9LGkucHJvdG90eXBlLmdldFJlY3RNaW5NYXg9ZnVuY3Rpb24odCxlLG8saSxuKXtuPW58fFtdO2Zvcih2YXIgcz10aGlzLmRhdGEscj10aGlzLm1pblZhbHVlLGE9dDthPD1vO2ErKylmb3IodmFyIGM9ZTtjPD1pO2MrKyl7dmFyIGg9c1thXVtjXTtoPnImJihyPWgpfW5bMF09dGhpcy5taW5WYWx1ZSxuWzFdPXJ9LGkucHJvdG90eXBlLmdldEluZGV4T2ZQb3NpdGlvbj1mdW5jdGlvbih0LGUsbyxpKXt2YXIgbj10aGlzLmVsZW1lbnRTaXplLHM9dGhpcy5kYXRhLHI9TWF0aC5mbG9vcih0L24pLGE9TWF0aC5mbG9vcihlL24pO3JldHVybiBvWzBdPXIsb1sxXT1hLGkmJihyPDAmJihyPTApLGE8MCYmKGE9MCkscj49cy5sZW5ndGgtMSYmKHI9cy5sZW5ndGgtMSksYT49c1swXS5sZW5ndGgtMSYmKGE9c1swXS5sZW5ndGgtMSkpLCEocjwwfHxhPDB8fHI+PXMubGVuZ3RoLTF8fGE+PXNbMF0ubGVuZ3RoLTEpfTt2YXIgaD1bXSxsPW5ldyBhLHU9bmV3IGEscD1uZXcgYSxkPW5ldyBhO2kucHJvdG90eXBlLmdldFRyaWFuZ2xlQXQ9ZnVuY3Rpb24odCxlLG8saSxuLHMpe3ZhciByPWg7dGhpcy5nZXRJbmRleE9mUG9zaXRpb24odCxlLHIsbyk7dmFyIGE9clswXSxjPXJbMV0sbD10aGlzLmRhdGE7byYmKGE9TWF0aC5taW4obC5sZW5ndGgtMixNYXRoLm1heCgwLGEpKSxjPU1hdGgubWluKGxbMF0ubGVuZ3RoLTIsTWF0aC5tYXgoMCxjKSkpO3ZhciB1PXRoaXMuZWxlbWVudFNpemUscD1NYXRoLnBvdyh0L3UtYSwyKStNYXRoLnBvdyhlL3UtYywyKSxkPU1hdGgucG93KHQvdS0oYSsxKSwyKStNYXRoLnBvdyhlL3UtKGMrMSksMikseT1wPmQ7cmV0dXJuIHRoaXMuZ2V0VHJpYW5nbGUoYSxjLHksaSxuLHMpLHl9O3ZhciB5PW5ldyBhLHY9bmV3IGEsZj1uZXcgYSxtPW5ldyBhLGc9bmV3IGE7aS5wcm90b3R5cGUuZ2V0Tm9ybWFsQXQ9ZnVuY3Rpb24odCxlLG8saSl7dmFyIG49eSxzPXYscj1mLGE9bSxjPWc7dGhpcy5nZXRUcmlhbmdsZUF0KHQsZSxvLG4scyxyKSxzLnZzdWIobixhKSxyLnZzdWIobixjKSxhLmNyb3NzKGMsaSksaS5ub3JtYWxpemUoKX0saS5wcm90b3R5cGUuZ2V0QWFiYkF0SW5kZXg9ZnVuY3Rpb24odCxlLG8pe3ZhciBpPXRoaXMuZGF0YSxuPXRoaXMuZWxlbWVudFNpemU7by5sb3dlckJvdW5kLnNldCh0Km4sZSpuLGlbdF1bZV0pLG8udXBwZXJCb3VuZC5zZXQoKHQrMSkqbiwoZSsxKSpuLGlbdCsxXVtlKzFdKX0saS5wcm90b3R5cGUuZ2V0SGVpZ2h0QXQ9ZnVuY3Rpb24odCxlLG8pe3ZhciBpPXRoaXMuZGF0YSxzPXUscj1wLGE9ZCxjPWg7dGhpcy5nZXRJbmRleE9mUG9zaXRpb24odCxlLGMsbyk7dmFyIHk9Y1swXSx2PWNbMV07byYmKHk9TWF0aC5taW4oaS5sZW5ndGgtMixNYXRoLm1heCgwLHkpKSx2PU1hdGgubWluKGlbMF0ubGVuZ3RoLTIsTWF0aC5tYXgoMCx2KSkpO3ZhciBmPXRoaXMuZ2V0VHJpYW5nbGVBdCh0LGUsbyxzLHIsYSk7bih0LGUscy54LHMueSxyLngsci55LGEueCxhLnksbCk7dmFyIG09bDtyZXR1cm4gZj9pW3krMV1bdisxXSptLngraVt5XVt2KzFdKm0ueStpW3krMV1bdl0qbS56OmlbeV1bdl0qbS54K2lbeSsxXVt2XSptLnkraVt5XVt2KzFdKm0uen0saS5wcm90b3R5cGUuZ2V0Q2FjaGVDb252ZXhUcmlhbmdsZVBpbGxhcktleT1mdW5jdGlvbih0LGUsbyl7cmV0dXJuIHQrXCJfXCIrZStcIl9cIisobz8xOjApfSxpLnByb3RvdHlwZS5nZXRDYWNoZWRDb252ZXhUcmlhbmdsZVBpbGxhcj1mdW5jdGlvbih0LGUsbyl7cmV0dXJuIHRoaXMuX2NhY2hlZFBpbGxhcnNbdGhpcy5nZXRDYWNoZUNvbnZleFRyaWFuZ2xlUGlsbGFyS2V5KHQsZSxvKV19LGkucHJvdG90eXBlLnNldENhY2hlZENvbnZleFRyaWFuZ2xlUGlsbGFyPWZ1bmN0aW9uKHQsZSxvLGksbil7dGhpcy5fY2FjaGVkUGlsbGFyc1t0aGlzLmdldENhY2hlQ29udmV4VHJpYW5nbGVQaWxsYXJLZXkodCxlLG8pXT17Y29udmV4Omksb2Zmc2V0Om59fSxpLnByb3RvdHlwZS5jbGVhckNhY2hlZENvbnZleFRyaWFuZ2xlUGlsbGFyPWZ1bmN0aW9uKHQsZSxvKXtkZWxldGUgdGhpcy5fY2FjaGVkUGlsbGFyc1t0aGlzLmdldENhY2hlQ29udmV4VHJpYW5nbGVQaWxsYXJLZXkodCxlLG8pXX0saS5wcm90b3R5cGUuZ2V0VHJpYW5nbGU9ZnVuY3Rpb24odCxlLG8saSxuLHMpe3ZhciByPXRoaXMuZGF0YSxhPXRoaXMuZWxlbWVudFNpemU7bz8oaS5zZXQoKHQrMSkqYSwoZSsxKSphLHJbdCsxXVtlKzFdKSxuLnNldCh0KmEsKGUrMSkqYSxyW3RdW2UrMV0pLHMuc2V0KCh0KzEpKmEsZSphLHJbdCsxXVtlXSkpOihpLnNldCh0KmEsZSphLHJbdF1bZV0pLG4uc2V0KCh0KzEpKmEsZSphLHJbdCsxXVtlXSkscy5zZXQodCphLChlKzEpKmEsclt0XVtlKzFdKSl9LGkucHJvdG90eXBlLmdldENvbnZleFRyaWFuZ2xlUGlsbGFyPWZ1bmN0aW9uKHQsZSxvKXt2YXIgaT10aGlzLnBpbGxhckNvbnZleCxuPXRoaXMucGlsbGFyT2Zmc2V0O2lmKHRoaXMuY2FjaGVFbmFibGVkKXt2YXIgcz10aGlzLmdldENhY2hlZENvbnZleFRyaWFuZ2xlUGlsbGFyKHQsZSxvKTtpZihzKXJldHVybiB0aGlzLnBpbGxhckNvbnZleD1zLmNvbnZleCx2b2lkKHRoaXMucGlsbGFyT2Zmc2V0PXMub2Zmc2V0KTtpPW5ldyByLG49bmV3IGEsdGhpcy5waWxsYXJDb252ZXg9aSx0aGlzLnBpbGxhck9mZnNldD1ufXZhciBzPXRoaXMuZGF0YSxjPXRoaXMuZWxlbWVudFNpemUsaD1pLmZhY2VzO2kudmVydGljZXMubGVuZ3RoPTY7Zm9yKHZhciBsPTA7bDw2O2wrKylpLnZlcnRpY2VzW2xdfHwoaS52ZXJ0aWNlc1tsXT1uZXcgYSk7aC5sZW5ndGg9NTtmb3IodmFyIGw9MDtsPDU7bCsrKWhbbF18fChoW2xdPVtdKTt2YXIgdT1pLnZlcnRpY2VzLHA9KE1hdGgubWluKHNbdF1bZV0sc1t0KzFdW2VdLHNbdF1bZSsxXSxzW3QrMV1bZSsxXSktdGhpcy5taW5WYWx1ZSkvMit0aGlzLm1pblZhbHVlO28/KG4uc2V0KCh0Ky43NSkqYywoZSsuNzUpKmMscCksdVswXS5zZXQoLjI1KmMsLjI1KmMsc1t0KzFdW2UrMV0tcCksdVsxXS5zZXQoLS43NSpjLC4yNSpjLHNbdF1bZSsxXS1wKSx1WzJdLnNldCguMjUqYywtLjc1KmMsc1t0KzFdW2VdLXApLHVbM10uc2V0KC4yNSpjLC4yNSpjLC1wLTEpLHVbNF0uc2V0KC0uNzUqYywuMjUqYywtcC0xKSx1WzVdLnNldCguMjUqYywtLjc1KmMsLXAtMSksaFswXVswXT0wLGhbMF1bMV09MSxoWzBdWzJdPTIsaFsxXVswXT01LGhbMV1bMV09NCxoWzFdWzJdPTMsaFsyXVswXT0yLGhbMl1bMV09NSxoWzJdWzJdPTMsaFsyXVszXT0wLGhbM11bMF09MyxoWzNdWzFdPTQsaFszXVsyXT0xLGhbM11bM109MCxoWzRdWzBdPTEsaFs0XVsxXT00LGhbNF1bMl09NSxoWzRdWzNdPTIpOihuLnNldCgodCsuMjUpKmMsKGUrLjI1KSpjLHApLHVbMF0uc2V0KC0uMjUqYywtLjI1KmMsc1t0XVtlXS1wKSx1WzFdLnNldCguNzUqYywtLjI1KmMsc1t0KzFdW2VdLXApLHVbMl0uc2V0KC0uMjUqYywuNzUqYyxzW3RdW2UrMV0tcCksdVszXS5zZXQoLS4yNSpjLC0uMjUqYywtcC0xKSx1WzRdLnNldCguNzUqYywtLjI1KmMsLXAtMSksdVs1XS5zZXQoLS4yNSpjLC43NSpjLC1wLTEpLGhbMF1bMF09MCxoWzBdWzFdPTEsaFswXVsyXT0yLGhbMV1bMF09NSxoWzFdWzFdPTQsaFsxXVsyXT0zLGhbMl1bMF09MCxoWzJdWzFdPTIsaFsyXVsyXT01LGhbMl1bM109MyxoWzNdWzBdPTEsaFszXVsxXT0wLGhbM11bMl09MyxoWzNdWzNdPTQsaFs0XVswXT00LGhbNF1bMV09NSxoWzRdWzJdPTIsaFs0XVszXT0xKSxpLmNvbXB1dGVOb3JtYWxzKCksaS5jb21wdXRlRWRnZXMoKSxpLnVwZGF0ZUJvdW5kaW5nU3BoZXJlUmFkaXVzKCksdGhpcy5zZXRDYWNoZWRDb252ZXhUcmlhbmdsZVBpbGxhcih0LGUsbyxpLG4pfSxpLnByb3RvdHlwZS5jYWxjdWxhdGVMb2NhbEluZXJ0aWE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZT1lfHxuZXcgYSxlLnNldCgwLDAsMCksZX0saS5wcm90b3R5cGUudm9sdW1lPWZ1bmN0aW9uKCl7cmV0dXJuIE51bWJlci5NQVhfVkFMVUV9LGkucHJvdG90eXBlLmNhbGN1bGF0ZVdvcmxkQUFCQj1mdW5jdGlvbih0LGUsbyxpKXtvLnNldCgtTnVtYmVyLk1BWF9WQUxVRSwtTnVtYmVyLk1BWF9WQUxVRSwtTnVtYmVyLk1BWF9WQUxVRSksaS5zZXQoTnVtYmVyLk1BWF9WQUxVRSxOdW1iZXIuTUFYX1ZBTFVFLE51bWJlci5NQVhfVkFMVUUpfSxpLnByb3RvdHlwZS51cGRhdGVCb3VuZGluZ1NwaGVyZVJhZGl1cz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuZGF0YSxlPXRoaXMuZWxlbWVudFNpemU7dGhpcy5ib3VuZGluZ1NwaGVyZVJhZGl1cz1uZXcgYSh0Lmxlbmd0aCplLHRbMF0ubGVuZ3RoKmUsTWF0aC5tYXgoTWF0aC5hYnModGhpcy5tYXhWYWx1ZSksTWF0aC5hYnModGhpcy5taW5WYWx1ZSkpKS5ub3JtKCl9LGkucHJvdG90eXBlLnNldEhlaWdodHNGcm9tSW1hZ2U9ZnVuY3Rpb24odCxlKXt2YXIgbz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO28ud2lkdGg9dC53aWR0aCxvLmhlaWdodD10LmhlaWdodDt2YXIgaT1vLmdldENvbnRleHQoXCIyZFwiKTtpLmRyYXdJbWFnZSh0LDAsMCk7dmFyIG49aS5nZXRJbWFnZURhdGEoMCwwLHQud2lkdGgsdC5oZWlnaHQpLHM9dGhpcy5kYXRhO3MubGVuZ3RoPTAsdGhpcy5lbGVtZW50U2l6ZT1NYXRoLmFicyhlLngpL24ud2lkdGg7Zm9yKHZhciByPTA7cjxuLmhlaWdodDtyKyspe2Zvcih2YXIgYT1bXSxjPTA7YzxuLndpZHRoO2MrKyl7dmFyIGg9bi5kYXRhWzQqKHIqbi5oZWlnaHQrYyldLGw9bi5kYXRhWzQqKHIqbi5oZWlnaHQrYykrMV0sdT1uLmRhdGFbNCoocipuLmhlaWdodCtjKSsyXSxwPShoK2wrdSkvNC8yNTUqZS56XG47ZS54PDA/YS5wdXNoKHApOmEudW5zaGlmdChwKX1lLnk8MD9zLnVuc2hpZnQoYSk6cy5wdXNoKGEpfXRoaXMudXBkYXRlTWF4VmFsdWUoKSx0aGlzLnVwZGF0ZU1pblZhbHVlKCksdGhpcy51cGRhdGUoKX19LHtcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi4vdXRpbHMvVXRpbHNcIjo2OSxcIi4vQ29udmV4UG9seWhlZHJvblwiOjU0LFwiLi9TaGFwZVwiOjU5fV0sNTc6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKCl7bi5jYWxsKHRoaXMpLHRoaXMudHlwZT1uLnR5cGVzLlBBUlRJQ0xFfWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuL1NoYXBlXCIpLHM9dChcIi4uL21hdGgvVmVjM1wiKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pLGkucHJvdG90eXBlLmNhbGN1bGF0ZUxvY2FsSW5lcnRpYT1mdW5jdGlvbih0LGUpe3JldHVybiBlPWV8fG5ldyBzLGUuc2V0KDAsMCwwKSxlfSxpLnByb3RvdHlwZS52b2x1bWU9ZnVuY3Rpb24oKXtyZXR1cm4gMH0saS5wcm90b3R5cGUudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXM9ZnVuY3Rpb24oKXt0aGlzLmJvdW5kaW5nU3BoZXJlUmFkaXVzPTB9LGkucHJvdG90eXBlLmNhbGN1bGF0ZVdvcmxkQUFCQj1mdW5jdGlvbih0LGUsbyxpKXtvLmNvcHkodCksaS5jb3B5KHQpfX0se1wiLi4vbWF0aC9WZWMzXCI6NDYsXCIuL1NoYXBlXCI6NTl9XSw1ODpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXtuLmNhbGwodGhpcyksdGhpcy50eXBlPW4udHlwZXMuUExBTkUsdGhpcy53b3JsZE5vcm1hbD1uZXcgcyx0aGlzLndvcmxkTm9ybWFsTmVlZHNVcGRhdGU9ITAsdGhpcy5ib3VuZGluZ1NwaGVyZVJhZGl1cz1OdW1iZXIuTUFYX1ZBTFVFfWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuL1NoYXBlXCIpLHM9dChcIi4uL21hdGgvVmVjM1wiKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pLGkucHJvdG90eXBlLmNvbXB1dGVXb3JsZE5vcm1hbD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLndvcmxkTm9ybWFsO2Uuc2V0KDAsMCwxKSx0LnZtdWx0KGUsZSksdGhpcy53b3JsZE5vcm1hbE5lZWRzVXBkYXRlPSExfSxpLnByb3RvdHlwZS5jYWxjdWxhdGVMb2NhbEluZXJ0aWE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZT1lfHxuZXcgc30saS5wcm90b3R5cGUudm9sdW1lPWZ1bmN0aW9uKCl7cmV0dXJuIE51bWJlci5NQVhfVkFMVUV9O3ZhciByPW5ldyBzO2kucHJvdG90eXBlLmNhbGN1bGF0ZVdvcmxkQUFCQj1mdW5jdGlvbih0LGUsbyxpKXtyLnNldCgwLDAsMSksZS52bXVsdChyLHIpO3ZhciBuPU51bWJlci5NQVhfVkFMVUU7by5zZXQoLW4sLW4sLW4pLGkuc2V0KG4sbixuKSwxPT09ci54JiYoaS54PXQueCksMT09PXIueSYmKGkueT10LnkpLDE9PT1yLnomJihpLno9dC56KSwtMT09PXIueCYmKG8ueD10LngpLC0xPT09ci55JiYoby55PXQueSksLTE9PT1yLnomJihvLno9dC56KX0saS5wcm90b3R5cGUudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXM9ZnVuY3Rpb24oKXt0aGlzLmJvdW5kaW5nU3BoZXJlUmFkaXVzPU51bWJlci5NQVhfVkFMVUV9fSx7XCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vU2hhcGVcIjo1OX1dLDU5OltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSgpe3RoaXMuaWQ9aS5pZENvdW50ZXIrKyx0aGlzLnR5cGU9MCx0aGlzLmJvdW5kaW5nU3BoZXJlUmFkaXVzPTAsdGhpcy5jb2xsaXNpb25SZXNwb25zZT0hMCx0aGlzLm1hdGVyaWFsPW51bGwsdGhpcy5ib2R5PW51bGx9ZS5leHBvcnRzPWk7dmFyIGk9dChcIi4vU2hhcGVcIik7dChcIi4uL21hdGgvVmVjM1wiKSx0KFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCIpLHQoXCIuLi9tYXRlcmlhbC9NYXRlcmlhbFwiKTtpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pLGkucHJvdG90eXBlLnVwZGF0ZUJvdW5kaW5nU3BoZXJlUmFkaXVzPWZ1bmN0aW9uKCl7dGhyb3dcImNvbXB1dGVCb3VuZGluZ1NwaGVyZVJhZGl1cygpIG5vdCBpbXBsZW1lbnRlZCBmb3Igc2hhcGUgdHlwZSBcIit0aGlzLnR5cGV9LGkucHJvdG90eXBlLnZvbHVtZT1mdW5jdGlvbigpe3Rocm93XCJ2b2x1bWUoKSBub3QgaW1wbGVtZW50ZWQgZm9yIHNoYXBlIHR5cGUgXCIrdGhpcy50eXBlfSxpLnByb3RvdHlwZS5jYWxjdWxhdGVMb2NhbEluZXJ0aWE9ZnVuY3Rpb24odCxlKXt0aHJvd1wiY2FsY3VsYXRlTG9jYWxJbmVydGlhKCkgbm90IGltcGxlbWVudGVkIGZvciBzaGFwZSB0eXBlIFwiK3RoaXMudHlwZX0saS5pZENvdW50ZXI9MCxpLnR5cGVzPXtTUEhFUkU6MSxQTEFORToyLEJPWDo0LENPTVBPVU5EOjgsQ09OVkVYUE9MWUhFRFJPTjoxNixIRUlHSFRGSUVMRDozMixQQVJUSUNMRTo2NCxDWUxJTkRFUjoxMjgsVFJJTUVTSDoyNTZ9fSx7XCIuLi9tYXRlcmlhbC9NYXRlcmlhbFwiOjQxLFwiLi4vbWF0aC9RdWF0ZXJuaW9uXCI6NDQsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vU2hhcGVcIjo1OX1dLDYwOltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXtpZihuLmNhbGwodGhpcyksdGhpcy5yYWRpdXM9dm9pZCAwIT09dD9OdW1iZXIodCk6MSx0aGlzLnR5cGU9bi50eXBlcy5TUEhFUkUsdGhpcy5yYWRpdXM8MCl0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3BoZXJlIHJhZGl1cyBjYW5ub3QgYmUgbmVnYXRpdmUuXCIpO3RoaXMudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXMoKX1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9TaGFwZVwiKSxzPXQoXCIuLi9tYXRoL1ZlYzNcIik7aS5wcm90b3R5cGU9bmV3IG4saS5wcm90b3R5cGUuY29uc3RydWN0b3I9aSxpLnByb3RvdHlwZS5jYWxjdWxhdGVMb2NhbEluZXJ0aWE9ZnVuY3Rpb24odCxlKXtlPWV8fG5ldyBzO3ZhciBvPTIqdCp0aGlzLnJhZGl1cyp0aGlzLnJhZGl1cy81O3JldHVybiBlLng9byxlLnk9byxlLno9byxlfSxpLnByb3RvdHlwZS52b2x1bWU9ZnVuY3Rpb24oKXtyZXR1cm4gNCpNYXRoLlBJKnRoaXMucmFkaXVzLzN9LGkucHJvdG90eXBlLnVwZGF0ZUJvdW5kaW5nU3BoZXJlUmFkaXVzPWZ1bmN0aW9uKCl7dGhpcy5ib3VuZGluZ1NwaGVyZVJhZGl1cz10aGlzLnJhZGl1c30saS5wcm90b3R5cGUuY2FsY3VsYXRlV29ybGRBQUJCPWZ1bmN0aW9uKHQsZSxvLGkpe2Zvcih2YXIgbj10aGlzLnJhZGl1cyxzPVtcInhcIixcInlcIixcInpcIl0scj0wO3I8cy5sZW5ndGg7cisrKXt2YXIgYT1zW3JdO29bYV09dFthXS1uLGlbYV09dFthXStufX19LHtcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi9TaGFwZVwiOjU5fV0sNjE6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQsZSl7bi5jYWxsKHRoaXMpLHRoaXMudHlwZT1uLnR5cGVzLlRSSU1FU0gsdGhpcy52ZXJ0aWNlcz1uZXcgRmxvYXQzMkFycmF5KHQpLHRoaXMuaW5kaWNlcz1uZXcgSW50MTZBcnJheShlKSx0aGlzLm5vcm1hbHM9bmV3IEZsb2F0MzJBcnJheShlLmxlbmd0aCksdGhpcy5hYWJiPW5ldyBhLHRoaXMuZWRnZXM9bnVsbCx0aGlzLnNjYWxlPW5ldyBzKDEsMSwxKSx0aGlzLnRyZWU9bmV3IGMsdGhpcy51cGRhdGVFZGdlcygpLHRoaXMudXBkYXRlTm9ybWFscygpLHRoaXMudXBkYXRlQUFCQigpLHRoaXMudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXMoKSx0aGlzLnVwZGF0ZVRyZWUoKX1lLmV4cG9ydHM9aTt2YXIgbj10KFwiLi9TaGFwZVwiKSxzPXQoXCIuLi9tYXRoL1ZlYzNcIikscj0odChcIi4uL21hdGgvUXVhdGVybmlvblwiKSx0KFwiLi4vbWF0aC9UcmFuc2Zvcm1cIikpLGE9dChcIi4uL2NvbGxpc2lvbi9BQUJCXCIpLGM9dChcIi4uL3V0aWxzL09jdHJlZVwiKTtpLnByb3RvdHlwZT1uZXcgbixpLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1pO3ZhciBoPW5ldyBzO2kucHJvdG90eXBlLnVwZGF0ZVRyZWU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnRyZWU7dC5yZXNldCgpLHQuYWFiYi5jb3B5KHRoaXMuYWFiYik7dmFyIGU9dGhpcy5zY2FsZTt0LmFhYmIubG93ZXJCb3VuZC54Kj0xL2UueCx0LmFhYmIubG93ZXJCb3VuZC55Kj0xL2UueSx0LmFhYmIubG93ZXJCb3VuZC56Kj0xL2Uueix0LmFhYmIudXBwZXJCb3VuZC54Kj0xL2UueCx0LmFhYmIudXBwZXJCb3VuZC55Kj0xL2UueSx0LmFhYmIudXBwZXJCb3VuZC56Kj0xL2Uuejtmb3IodmFyIG89bmV3IGEsaT1uZXcgcyxuPW5ldyBzLHI9bmV3IHMsYz1baSxuLHJdLGg9MDtoPHRoaXMuaW5kaWNlcy5sZW5ndGgvMztoKyspe3ZhciBsPTMqaDt0aGlzLl9nZXRVbnNjYWxlZFZlcnRleCh0aGlzLmluZGljZXNbbF0saSksdGhpcy5fZ2V0VW5zY2FsZWRWZXJ0ZXgodGhpcy5pbmRpY2VzW2wrMV0sbiksdGhpcy5fZ2V0VW5zY2FsZWRWZXJ0ZXgodGhpcy5pbmRpY2VzW2wrMl0sciksby5zZXRGcm9tUG9pbnRzKGMpLHQuaW5zZXJ0KG8saCl9dC5yZW1vdmVFbXB0eU5vZGVzKCl9O3ZhciBsPW5ldyBhO2kucHJvdG90eXBlLmdldFRyaWFuZ2xlc0luQUFCQj1mdW5jdGlvbih0LGUpe2wuY29weSh0KTt2YXIgbz10aGlzLnNjYWxlLGk9by54LG49by55LHM9by56LHI9bC5sb3dlckJvdW5kLGE9bC51cHBlckJvdW5kO3JldHVybiByLngvPWksci55Lz1uLHIuei89cyxhLngvPWksYS55Lz1uLGEuei89cyx0aGlzLnRyZWUuYWFiYlF1ZXJ5KGwsZSl9LGkucHJvdG90eXBlLnNldFNjYWxlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc2NhbGUueD09PXRoaXMuc2NhbGUueT09PXRoaXMuc2NhbGUueixvPXQueD09PXQueT09PXQuejtlJiZvfHx0aGlzLnVwZGF0ZU5vcm1hbHMoKSx0aGlzLnNjYWxlLmNvcHkodCksdGhpcy51cGRhdGVBQUJCKCksdGhpcy51cGRhdGVCb3VuZGluZ1NwaGVyZVJhZGl1cygpfSxpLnByb3RvdHlwZS51cGRhdGVOb3JtYWxzPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PWgsZT10aGlzLm5vcm1hbHMsbz0wO288dGhpcy5pbmRpY2VzLmxlbmd0aC8zO28rKyl7dmFyIG49MypvLHM9dGhpcy5pbmRpY2VzW25dLHI9dGhpcy5pbmRpY2VzW24rMV0sYT10aGlzLmluZGljZXNbbisyXTt0aGlzLmdldFZlcnRleChzLHYpLHRoaXMuZ2V0VmVydGV4KHIsZiksdGhpcy5nZXRWZXJ0ZXgoYSxtKSxpLmNvbXB1dGVOb3JtYWwoZix2LG0sdCksZVtuXT10LngsZVtuKzFdPXQueSxlW24rMl09dC56fX0saS5wcm90b3R5cGUudXBkYXRlRWRnZXM9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9e30sZT1mdW5jdGlvbihlLG8pe3RbbjxzP24rXCJfXCIrczpzK1wiX1wiK25dPSEwfSxvPTA7bzx0aGlzLmluZGljZXMubGVuZ3RoLzM7bysrKXt2YXIgaT0zKm8sbj10aGlzLmluZGljZXNbaV0scz10aGlzLmluZGljZXNbaSsxXTt0aGlzLmluZGljZXNbaSsyXTtlKCksZSgpLGUoKX12YXIgcj1PYmplY3Qua2V5cyh0KTt0aGlzLmVkZ2VzPW5ldyBJbnQxNkFycmF5KDIqci5sZW5ndGgpO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXt2YXIgYT1yW29dLnNwbGl0KFwiX1wiKTt0aGlzLmVkZ2VzWzIqb109cGFyc2VJbnQoYVswXSwxMCksdGhpcy5lZGdlc1syKm8rMV09cGFyc2VJbnQoYVsxXSwxMCl9fSxpLnByb3RvdHlwZS5nZXRFZGdlVmVydGV4PWZ1bmN0aW9uKHQsZSxvKXt2YXIgaT10aGlzLmVkZ2VzWzIqdCsoZT8xOjApXTt0aGlzLmdldFZlcnRleChpLG8pfTt2YXIgdT1uZXcgcyxwPW5ldyBzO2kucHJvdG90eXBlLmdldEVkZ2VWZWN0b3I9ZnVuY3Rpb24odCxlKXt2YXIgbz11LGk9cDt0aGlzLmdldEVkZ2VWZXJ0ZXgodCwwLG8pLHRoaXMuZ2V0RWRnZVZlcnRleCh0LDEsaSksaS52c3ViKG8sZSl9O3ZhciBkPW5ldyBzLHk9bmV3IHM7aS5jb21wdXRlTm9ybWFsPWZ1bmN0aW9uKHQsZSxvLGkpe2UudnN1Yih0LHkpLG8udnN1YihlLGQpLGQuY3Jvc3MoeSxpKSxpLmlzWmVybygpfHxpLm5vcm1hbGl6ZSgpfTt2YXIgdj1uZXcgcyxmPW5ldyBzLG09bmV3IHM7aS5wcm90b3R5cGUuZ2V0VmVydGV4PWZ1bmN0aW9uKHQsZSl7dmFyIG89dGhpcy5zY2FsZTtyZXR1cm4gdGhpcy5fZ2V0VW5zY2FsZWRWZXJ0ZXgodCxlKSxlLngqPW8ueCxlLnkqPW8ueSxlLnoqPW8ueixlfSxpLnByb3RvdHlwZS5fZ2V0VW5zY2FsZWRWZXJ0ZXg9ZnVuY3Rpb24odCxlKXt2YXIgbz0zKnQsaT10aGlzLnZlcnRpY2VzO3JldHVybiBlLnNldChpW29dLGlbbysxXSxpW28rMl0pfSxpLnByb3RvdHlwZS5nZXRXb3JsZFZlcnRleD1mdW5jdGlvbih0LGUsbyxpKXtyZXR1cm4gdGhpcy5nZXRWZXJ0ZXgodCxpKSxyLnBvaW50VG9Xb3JsZEZyYW1lKGUsbyxpLGkpLGl9LGkucHJvdG90eXBlLmdldFRyaWFuZ2xlVmVydGljZXM9ZnVuY3Rpb24odCxlLG8saSl7dmFyIG49Myp0O3RoaXMuZ2V0VmVydGV4KHRoaXMuaW5kaWNlc1tuXSxlKSx0aGlzLmdldFZlcnRleCh0aGlzLmluZGljZXNbbisxXSxvKSx0aGlzLmdldFZlcnRleCh0aGlzLmluZGljZXNbbisyXSxpKX0saS5wcm90b3R5cGUuZ2V0Tm9ybWFsPWZ1bmN0aW9uKHQsZSl7dmFyIG89Myp0O3JldHVybiBlLnNldCh0aGlzLm5vcm1hbHNbb10sdGhpcy5ub3JtYWxzW28rMV0sdGhpcy5ub3JtYWxzW28rMl0pfTt2YXIgZz1uZXcgYTtpLnByb3RvdHlwZS5jYWxjdWxhdGVMb2NhbEluZXJ0aWE9ZnVuY3Rpb24odCxlKXt0aGlzLmNvbXB1dGVMb2NhbEFBQkIoZyk7dmFyIG89Zy51cHBlckJvdW5kLngtZy5sb3dlckJvdW5kLngsaT1nLnVwcGVyQm91bmQueS1nLmxvd2VyQm91bmQueSxuPWcudXBwZXJCb3VuZC56LWcubG93ZXJCb3VuZC56O3JldHVybiBlLnNldCgxLzEyKnQqKDIqaSoyKmkrMipuKjIqbiksMS8xMip0KigyKm8qMipvKzIqbioyKm4pLDEvMTIqdCooMippKjIqaSsyKm8qMipvKSl9O3ZhciB3PW5ldyBzO2kucHJvdG90eXBlLmNvbXB1dGVMb2NhbEFBQkI9ZnVuY3Rpb24odCl7dmFyIGU9dC5sb3dlckJvdW5kLG89dC51cHBlckJvdW5kLGk9dGhpcy52ZXJ0aWNlcy5sZW5ndGgsbj0odGhpcy52ZXJ0aWNlcyx3KTt0aGlzLmdldFZlcnRleCgwLG4pLGUuY29weShuKSxvLmNvcHkobik7Zm9yKHZhciBzPTA7cyE9PWk7cysrKXRoaXMuZ2V0VmVydGV4KHMsbiksbi54PGUueD9lLng9bi54Om4ueD5vLngmJihvLng9bi54KSxuLnk8ZS55P2UueT1uLnk6bi55Pm8ueSYmKG8ueT1uLnkpLG4uejxlLno/ZS56PW4uejpuLno+by56JiYoby56PW4ueil9LGkucHJvdG90eXBlLnVwZGF0ZUFBQkI9ZnVuY3Rpb24oKXt0aGlzLmNvbXB1dGVMb2NhbEFBQkIodGhpcy5hYWJiKX0saS5wcm90b3R5cGUudXBkYXRlQm91bmRpbmdTcGhlcmVSYWRpdXM9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPXRoaXMudmVydGljZXMsbz1uZXcgcyxpPTAsbj1lLmxlbmd0aC8zO2khPT1uO2krKyl7dGhpcy5nZXRWZXJ0ZXgoaSxvKTt2YXIgcj1vLm5vcm0yKCk7cj50JiYodD1yKX10aGlzLmJvdW5kaW5nU3BoZXJlUmFkaXVzPU1hdGguc3FydCh0KX07dmFyIHg9KG5ldyBzLG5ldyByKSxiPW5ldyBhO2kucHJvdG90eXBlLmNhbGN1bGF0ZVdvcmxkQUFCQj1mdW5jdGlvbih0LGUsbyxpKXt2YXIgbj14LHM9YjtuLnBvc2l0aW9uPXQsbi5xdWF0ZXJuaW9uPWUsdGhpcy5hYWJiLnRvV29ybGRGcmFtZShuLHMpLG8uY29weShzLmxvd2VyQm91bmQpLGkuY29weShzLnVwcGVyQm91bmQpfSxpLnByb3RvdHlwZS52b2x1bWU9ZnVuY3Rpb24oKXtyZXR1cm4gNCpNYXRoLlBJKnRoaXMuYm91bmRpbmdTcGhlcmVSYWRpdXMvM30saS5jcmVhdGVUb3J1cz1mdW5jdGlvbih0LGUsbyxuLHMpe3Q9dHx8MSxlPWV8fC41LG89b3x8OCxuPW58fDYscz1zfHwyKk1hdGguUEk7Zm9yKHZhciByPVtdLGE9W10sYz0wO2M8PW87YysrKWZvcih2YXIgaD0wO2g8PW47aCsrKXt2YXIgbD1oL24qcyx1PWMvbypNYXRoLlBJKjIscD0odCtlKk1hdGguY29zKHUpKSpNYXRoLmNvcyhsKSxkPSh0K2UqTWF0aC5jb3ModSkpKk1hdGguc2luKGwpLHk9ZSpNYXRoLnNpbih1KTtyLnB1c2gocCxkLHkpfWZvcih2YXIgYz0xO2M8PW87YysrKWZvcih2YXIgaD0xO2g8PW47aCsrKXt2YXIgdj0obisxKSpjK2gtMSxmPShuKzEpKihjLTEpK2gtMSxtPShuKzEpKihjLTEpK2gsZz0obisxKSpjK2g7YS5wdXNoKHYsZixnKSxhLnB1c2goZixtLGcpfXJldHVybiBuZXcgaShyLGEpfX0se1wiLi4vY29sbGlzaW9uL0FBQkJcIjoxOCxcIi4uL21hdGgvUXVhdGVybmlvblwiOjQ0LFwiLi4vbWF0aC9UcmFuc2Zvcm1cIjo0NSxcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi4vdXRpbHMvT2N0cmVlXCI6NjYsXCIuL1NoYXBlXCI6NTl9XSw2MjpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXtuLmNhbGwodGhpcyksdGhpcy5pdGVyYXRpb25zPTEwLHRoaXMudG9sZXJhbmNlPTFlLTd9ZS5leHBvcnRzPWk7dmFyIG49KHQoXCIuLi9tYXRoL1ZlYzNcIiksdChcIi4uL21hdGgvUXVhdGVybmlvblwiKSx0KFwiLi9Tb2x2ZXJcIikpO2kucHJvdG90eXBlPW5ldyBuO3ZhciBzPVtdLHI9W10sYT1bXTtpLnByb3RvdHlwZS5zb2x2ZT1mdW5jdGlvbih0LGUpe3ZhciBvLGksbixjLGgsbCx1PTAscD10aGlzLml0ZXJhdGlvbnMsZD10aGlzLnRvbGVyYW5jZSp0aGlzLnRvbGVyYW5jZSx5PXRoaXMuZXF1YXRpb25zLHY9eS5sZW5ndGgsZj1lLmJvZGllcyxtPWYubGVuZ3RoLGc9dDtpZigwIT09dilmb3IodmFyIHc9MDt3IT09bTt3KyspZlt3XS51cGRhdGVTb2x2ZU1hc3NQcm9wZXJ0aWVzKCk7dmFyIHg9cixiPWEsRT1zO3gubGVuZ3RoPXYsYi5sZW5ndGg9dixFLmxlbmd0aD12O2Zvcih2YXIgdz0wO3chPT12O3crKyl7dmFyIEE9eVt3XTtFW3ddPTAsYlt3XT1BLmNvbXB1dGVCKGcpLHhbd109MS9BLmNvbXB1dGVDKCl9aWYoMCE9PXYpe2Zvcih2YXIgdz0wO3chPT1tO3crKyl7dmFyIEI9Zlt3XSxDPUIudmxhbWJkYSxTPUIud2xhbWJkYTtDLnNldCgwLDAsMCksUy5zZXQoMCwwLDApfWZvcih1PTA7dSE9PXA7dSsrKXtjPTA7Zm9yKHZhciBSPTA7UiE9PXY7UisrKXt2YXIgQT15W1JdO289YltSXSxpPXhbUl0sbD1FW1JdLGg9QS5jb21wdXRlR1dsYW1iZGEoKSxuPWkqKG8taC1BLmVwcypsKSxsK248QS5taW5Gb3JjZT9uPUEubWluRm9yY2UtbDpsK24+QS5tYXhGb3JjZSYmKG49QS5tYXhGb3JjZS1sKSxFW1JdKz1uLGMrPW4+MD9uOi1uLEEuYWRkVG9XbGFtYmRhKG4pfWlmKGMqYzxkKWJyZWFrfWZvcih2YXIgdz0wO3chPT1tO3crKyl7dmFyIEI9Zlt3XSxNPUIudmVsb2NpdHksVD1CLmFuZ3VsYXJWZWxvY2l0eTtCLnZsYW1iZGEudm11bChCLmxpbmVhckZhY3RvcixCLnZsYW1iZGEpLE0udmFkZChCLnZsYW1iZGEsTSksQi53bGFtYmRhLnZtdWwoQi5hbmd1bGFyRmFjdG9yLEIud2xhbWJkYSksVC52YWRkKEIud2xhbWJkYSxUKX1mb3IodmFyIHo9eS5sZW5ndGgsaz0xL2c7ei0tOyl5W3pdLm11bHRpcGxpZXI9RVt6XSprfXJldHVybiB1fX0se1wiLi4vbWF0aC9RdWF0ZXJuaW9uXCI6NDQsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4vU29sdmVyXCI6NjN9XSw2MzpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXt0aGlzLmVxdWF0aW9ucz1bXX1lLmV4cG9ydHM9aSxpLnByb3RvdHlwZS5zb2x2ZT1mdW5jdGlvbih0LGUpe3JldHVybiAwfSxpLnByb3RvdHlwZS5hZGRFcXVhdGlvbj1mdW5jdGlvbih0KXt0LmVuYWJsZWQmJnRoaXMuZXF1YXRpb25zLnB1c2godCl9LGkucHJvdG90eXBlLnJlbW92ZUVxdWF0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZXF1YXRpb25zLG89ZS5pbmRleE9mKHQpOy0xIT09byYmZS5zcGxpY2UobywxKX0saS5wcm90b3R5cGUucmVtb3ZlQWxsRXF1YXRpb25zPWZ1bmN0aW9uKCl7dGhpcy5lcXVhdGlvbnMubGVuZ3RoPTB9fSx7fV0sNjQ6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQpe2ZvcihjLmNhbGwodGhpcyksdGhpcy5pdGVyYXRpb25zPTEwLHRoaXMudG9sZXJhbmNlPTFlLTcsdGhpcy5zdWJzb2x2ZXI9dCx0aGlzLm5vZGVzPVtdLHRoaXMubm9kZVBvb2w9W107dGhpcy5ub2RlUG9vbC5sZW5ndGg8MTI4Oyl0aGlzLm5vZGVQb29sLnB1c2godGhpcy5jcmVhdGVOb2RlKCkpfWZ1bmN0aW9uIG4odCl7Zm9yKHZhciBlPXQubGVuZ3RoLG89MDtvIT09ZTtvKyspe3ZhciBpPXRbb107aWYoIShpLnZpc2l0ZWR8fGkuYm9keS50eXBlJmQpKXJldHVybiBpfXJldHVybiExfWZ1bmN0aW9uIHModCxlLG8saSl7Zm9yKHkucHVzaCh0KSx0LnZpc2l0ZWQ9ITAsZSh0LG8saSk7eS5sZW5ndGg7KWZvcih2YXIgcyxyPXkucG9wKCk7cz1uKHIuY2hpbGRyZW4pOylzLnZpc2l0ZWQ9ITAsZShzLG8saSkseS5wdXNoKHMpfWZ1bmN0aW9uIHIodCxlLG8pe2UucHVzaCh0LmJvZHkpO2Zvcih2YXIgaT10LmVxcy5sZW5ndGgsbj0wO24hPT1pO24rKyl7dmFyIHM9dC5lcXNbbl07LTE9PT1vLmluZGV4T2YocykmJm8ucHVzaChzKX19ZnVuY3Rpb24gYSh0LGUpe3JldHVybiBlLmlkLXQuaWR9ZS5leHBvcnRzPWk7dmFyIGM9KHQoXCIuLi9tYXRoL1ZlYzNcIiksdChcIi4uL21hdGgvUXVhdGVybmlvblwiKSx0KFwiLi9Tb2x2ZXJcIikpLGg9dChcIi4uL29iamVjdHMvQm9keVwiKTtpLnByb3RvdHlwZT1uZXcgYzt2YXIgbD1bXSx1PVtdLHA9e2JvZGllczpbXX0sZD1oLlNUQVRJQyx5PVtdO2kucHJvdG90eXBlLmNyZWF0ZU5vZGU9ZnVuY3Rpb24oKXtyZXR1cm57Ym9keTpudWxsLGNoaWxkcmVuOltdLGVxczpbXSx2aXNpdGVkOiExfX0saS5wcm90b3R5cGUuc29sdmU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG89bCxpPXRoaXMubm9kZVBvb2wsYz1lLmJvZGllcyxoPXRoaXMuZXF1YXRpb25zLGQ9aC5sZW5ndGgseT1jLmxlbmd0aCx2PXRoaXMuc3Vic29sdmVyO2kubGVuZ3RoPHk7KWkucHVzaCh0aGlzLmNyZWF0ZU5vZGUoKSk7by5sZW5ndGg9eTtmb3IodmFyIGY9MDtmPHk7ZisrKW9bZl09aVtmXTtmb3IodmFyIGY9MDtmIT09eTtmKyspe3ZhciBtPW9bZl07bS5ib2R5PWNbZl0sbS5jaGlsZHJlbi5sZW5ndGg9MCxtLmVxcy5sZW5ndGg9MCxtLnZpc2l0ZWQ9ITF9Zm9yKHZhciBnPTA7ZyE9PWQ7ZysrKXt2YXIgdz1oW2ddLGY9Yy5pbmRleE9mKHcuYmkpLHg9Yy5pbmRleE9mKHcuYmopLGI9b1tmXSxFPW9beF07Yi5jaGlsZHJlbi5wdXNoKEUpLGIuZXFzLnB1c2godyksRS5jaGlsZHJlbi5wdXNoKGIpLEUuZXFzLnB1c2godyl9dmFyIEEsQj0wLEM9dTt2LnRvbGVyYW5jZT10aGlzLnRvbGVyYW5jZSx2Lml0ZXJhdGlvbnM9dGhpcy5pdGVyYXRpb25zO2Zvcih2YXIgUz1wO0E9bihvKTspe0MubGVuZ3RoPTAsUy5ib2RpZXMubGVuZ3RoPTAscyhBLHIsUy5ib2RpZXMsQyk7dmFyIFI9Qy5sZW5ndGg7Qz1DLnNvcnQoYSk7Zm9yKHZhciBmPTA7ZiE9PVI7ZisrKXYuYWRkRXF1YXRpb24oQ1tmXSk7di5zb2x2ZSh0LFMpO3YucmVtb3ZlQWxsRXF1YXRpb25zKCksQisrfXJldHVybiBCfX0se1wiLi4vbWF0aC9RdWF0ZXJuaW9uXCI6NDQsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4uL29iamVjdHMvQm9keVwiOjQ3LFwiLi9Tb2x2ZXJcIjo2M31dLDY1OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9ZnVuY3Rpb24oKXt9O2UuZXhwb3J0cz1pLGkucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjppLGFkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24odCxlKXt2b2lkIDA9PT10aGlzLl9saXN0ZW5lcnMmJih0aGlzLl9saXN0ZW5lcnM9e30pO3ZhciBvPXRoaXMuX2xpc3RlbmVycztyZXR1cm4gdm9pZCAwPT09b1t0XSYmKG9bdF09W10pLC0xPT09b1t0XS5pbmRleE9mKGUpJiZvW3RdLnB1c2goZSksdGhpc30saGFzRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbih0LGUpe2lmKHZvaWQgMD09PXRoaXMuX2xpc3RlbmVycylyZXR1cm4hMTt2YXIgbz10aGlzLl9saXN0ZW5lcnM7cmV0dXJuIHZvaWQgMCE9PW9bdF0mJi0xIT09b1t0XS5pbmRleE9mKGUpfSxoYXNBbnlFdmVudExpc3RlbmVyOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDAhPT10aGlzLl9saXN0ZW5lcnMmJnZvaWQgMCE9PXRoaXMuX2xpc3RlbmVyc1t0XX0scmVtb3ZlRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbih0LGUpe2lmKHZvaWQgMD09PXRoaXMuX2xpc3RlbmVycylyZXR1cm4gdGhpczt2YXIgbz10aGlzLl9saXN0ZW5lcnM7aWYodm9pZCAwPT09b1t0XSlyZXR1cm4gdGhpczt2YXIgaT1vW3RdLmluZGV4T2YoZSk7cmV0dXJuLTEhPT1pJiZvW3RdLnNwbGljZShpLDEpLHRoaXN9LGRpc3BhdGNoRXZlbnQ6ZnVuY3Rpb24odCl7aWYodm9pZCAwPT09dGhpcy5fbGlzdGVuZXJzKXJldHVybiB0aGlzO3ZhciBlPXRoaXMuX2xpc3RlbmVycyxvPWVbdC50eXBlXTtpZih2b2lkIDAhPT1vKXt0LnRhcmdldD10aGlzO2Zvcih2YXIgaT0wLG49by5sZW5ndGg7aTxuO2krKylvW2ldLmNhbGwodGhpcyx0KX1yZXR1cm4gdGhpc319fSx7fV0sNjY6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQpe3Q9dHx8e30sdGhpcy5yb290PXQucm9vdHx8bnVsbCx0aGlzLmFhYmI9dC5hYWJiP3QuYWFiYi5jbG9uZSgpOm5ldyBzLHRoaXMuZGF0YT1bXSx0aGlzLmNoaWxkcmVuPVtdfWZ1bmN0aW9uIG4odCxlKXtlPWV8fHt9LGUucm9vdD1udWxsLGUuYWFiYj10LGkuY2FsbCh0aGlzLGUpLHRoaXMubWF4RGVwdGg9dm9pZCAwIT09ZS5tYXhEZXB0aD9lLm1heERlcHRoOjh9dmFyIHM9dChcIi4uL2NvbGxpc2lvbi9BQUJCXCIpLHI9dChcIi4uL21hdGgvVmVjM1wiKTtlLmV4cG9ydHM9bixuLnByb3RvdHlwZT1uZXcgaSxpLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbih0LGUpe3RoaXMuY2hpbGRyZW4ubGVuZ3RoPXRoaXMuZGF0YS5sZW5ndGg9MH0saS5wcm90b3R5cGUuaW5zZXJ0PWZ1bmN0aW9uKHQsZSxvKXt2YXIgaT10aGlzLmRhdGE7aWYobz1vfHwwLCF0aGlzLmFhYmIuY29udGFpbnModCkpcmV0dXJuITE7dmFyIG49dGhpcy5jaGlsZHJlbjtpZihvPCh0aGlzLm1heERlcHRofHx0aGlzLnJvb3QubWF4RGVwdGgpKXt2YXIgcz0hMTtuLmxlbmd0aHx8KHRoaXMuc3ViZGl2aWRlKCkscz0hMCk7Zm9yKHZhciByPTA7OCE9PXI7cisrKWlmKG5bcl0uaW5zZXJ0KHQsZSxvKzEpKXJldHVybiEwO3MmJihuLmxlbmd0aD0wKX1yZXR1cm4gaS5wdXNoKGUpLCEwfTt2YXIgYT1uZXcgcjtpLnByb3RvdHlwZS5zdWJkaXZpZGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmFhYmIsZT10Lmxvd2VyQm91bmQsbz10LnVwcGVyQm91bmQsbj10aGlzLmNoaWxkcmVuO24ucHVzaChuZXcgaSh7YWFiYjpuZXcgcyh7bG93ZXJCb3VuZDpuZXcgcigwLDAsMCl9KX0pLG5ldyBpKHthYWJiOm5ldyBzKHtsb3dlckJvdW5kOm5ldyByKDEsMCwwKX0pfSksbmV3IGkoe2FhYmI6bmV3IHMoe2xvd2VyQm91bmQ6bmV3IHIoMSwxLDApfSl9KSxuZXcgaSh7YWFiYjpuZXcgcyh7bG93ZXJCb3VuZDpuZXcgcigxLDEsMSl9KX0pLG5ldyBpKHthYWJiOm5ldyBzKHtsb3dlckJvdW5kOm5ldyByKDAsMSwxKX0pfSksbmV3IGkoe2FhYmI6bmV3IHMoe2xvd2VyQm91bmQ6bmV3IHIoMCwwLDEpfSl9KSxuZXcgaSh7YWFiYjpuZXcgcyh7bG93ZXJCb3VuZDpuZXcgcigxLDAsMSl9KX0pLG5ldyBpKHthYWJiOm5ldyBzKHtsb3dlckJvdW5kOm5ldyByKDAsMSwwKX0pfSkpLG8udnN1YihlLGEpLGEuc2NhbGUoLjUsYSk7Zm9yKHZhciBjPXRoaXMucm9vdHx8dGhpcyxoPTA7OCE9PWg7aCsrKXt2YXIgbD1uW2hdO2wucm9vdD1jO3ZhciB1PWwuYWFiYi5sb3dlckJvdW5kO3UueCo9YS54LHUueSo9YS55LHUueio9YS56LHUudmFkZChlLHUpLHUudmFkZChhLGwuYWFiYi51cHBlckJvdW5kKX19LGkucHJvdG90eXBlLmFhYmJRdWVyeT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbz0odGhpcy5kYXRhLHRoaXMuY2hpbGRyZW4sW3RoaXNdKTtvLmxlbmd0aDspe3ZhciBpPW8ucG9wKCk7aS5hYWJiLm92ZXJsYXBzKHQpJiZBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShlLGkuZGF0YSksQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkobyxpLmNoaWxkcmVuKX1yZXR1cm4gZX07dmFyIGM9bmV3IHM7aS5wcm90b3R5cGUucmF5UXVlcnk9ZnVuY3Rpb24odCxlLG8pe3JldHVybiB0LmdldEFBQkIoYyksYy50b0xvY2FsRnJhbWUoZSxjKSx0aGlzLmFhYmJRdWVyeShjLG8pLG99LGkucHJvdG90eXBlLnJlbW92ZUVtcHR5Tm9kZXM9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W3RoaXNdO3QubGVuZ3RoOyl7Zm9yKHZhciBlPXQucG9wKCksbz1lLmNoaWxkcmVuLmxlbmd0aC0xO28+PTA7by0tKWUuY2hpbGRyZW5bb10uZGF0YS5sZW5ndGh8fGUuY2hpbGRyZW4uc3BsaWNlKG8sMSk7QXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkodCxlLmNoaWxkcmVuKX19fSx7XCIuLi9jb2xsaXNpb24vQUFCQlwiOjE4LFwiLi4vbWF0aC9WZWMzXCI6NDZ9XSw2NzpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXt0aGlzLm9iamVjdHM9W10sdGhpcy50eXBlPU9iamVjdH1lLmV4cG9ydHM9aSxpLnByb3RvdHlwZS5yZWxlYXNlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsZT0wO2UhPT10O2UrKyl0aGlzLm9iamVjdHMucHVzaChhcmd1bWVudHNbZV0pO3JldHVybiB0aGlzfSxpLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMub2JqZWN0cy5sZW5ndGg/dGhpcy5jb25zdHJ1Y3RPYmplY3QoKTp0aGlzLm9iamVjdHMucG9wKCl9LGkucHJvdG90eXBlLmNvbnN0cnVjdE9iamVjdD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcImNvbnN0cnVjdE9iamVjdCgpIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIFBvb2wgc3ViY2xhc3MgeWV0IVwiKX0saS5wcm90b3R5cGUucmVzaXplPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLm9iamVjdHM7ZS5sZW5ndGg+dDspZS5wb3AoKTtmb3IoO2UubGVuZ3RoPHQ7KWUucHVzaCh0aGlzLmNvbnN0cnVjdE9iamVjdCgpKTtyZXR1cm4gdGhpc319LHt9XSw2ODpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkoKXt0aGlzLmRhdGE9e2tleXM6W119fWUuZXhwb3J0cz1pLGkucHJvdG90eXBlLmdldD1mdW5jdGlvbih0LGUpe2lmKHQ+ZSl7dmFyIG89ZTtlPXQsdD1vfXJldHVybiB0aGlzLmRhdGFbdCtcIi1cIitlXX0saS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSxvKXtpZih0PmUpe3ZhciBpPWU7ZT10LHQ9aX12YXIgbj10K1wiLVwiK2U7dGhpcy5nZXQodCxlKXx8dGhpcy5kYXRhLmtleXMucHVzaChuKSx0aGlzLmRhdGFbbl09b30saS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpcy5kYXRhLGU9dC5rZXlzO2UubGVuZ3RoPjA7KXtkZWxldGUgdFtlLnBvcCgpXX19fSx7fV0sNjk6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKCl7fWUuZXhwb3J0cz1pLGkuZGVmYXVsdHM9ZnVuY3Rpb24odCxlKXt0PXR8fHt9O2Zvcih2YXIgbyBpbiBlKW8gaW4gdHx8KHRbb109ZVtvXSk7cmV0dXJuIHR9fSx7fV0sNzA6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKCl7cy5jYWxsKHRoaXMpLHRoaXMudHlwZT1ufWUuZXhwb3J0cz1pO3ZhciBuPXQoXCIuLi9tYXRoL1ZlYzNcIikscz10KFwiLi9Qb29sXCIpO2kucHJvdG90eXBlPW5ldyBzLGkucHJvdG90eXBlLmNvbnN0cnVjdE9iamVjdD1mdW5jdGlvbigpe3JldHVybiBuZXcgbn19LHtcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi9Qb29sXCI6Njd9XSw3MTpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCl7dGhpcy5jb250YWN0UG9pbnRQb29sPVtdLHRoaXMuZnJpY3Rpb25FcXVhdGlvblBvb2w9W10sdGhpcy5yZXN1bHQ9W10sdGhpcy5mcmljdGlvblJlc3VsdD1bXSx0aGlzLnYzcG9vbD1uZXcgcCx0aGlzLndvcmxkPXQsdGhpcy5jdXJyZW50Q29udGFjdE1hdGVyaWFsPW51bGwsdGhpcy5lbmFibGVGcmljdGlvblJlZHVjdGlvbj0hMX1mdW5jdGlvbiBuKHQsZSxvKXtmb3IodmFyIGk9bnVsbCxuPXQubGVuZ3RoLHM9MDtzIT09bjtzKyspe3ZhciByPXRbc10sYT1XO3RbKHMrMSklbl0udnN1YihyLGEpO3ZhciBjPUg7YS5jcm9zcyhlLGMpO3ZhciBoPUs7by52c3ViKHIsaCk7dmFyIGw9Yy5kb3QoaCk7aWYoIShudWxsPT09aXx8bD4wJiYhMD09PWl8fGw8PTAmJiExPT09aSkpcmV0dXJuITE7bnVsbD09PWkmJihpPWw+MCl9cmV0dXJuITB9ZS5leHBvcnRzPWk7dmFyIHM9dChcIi4uL2NvbGxpc2lvbi9BQUJCXCIpLHI9dChcIi4uL29iamVjdHMvQm9keVwiKSxhPXQoXCIuLi9zaGFwZXMvU2hhcGVcIiksYz10KFwiLi4vY29sbGlzaW9uL1JheVwiKSxoPXQoXCIuLi9tYXRoL1ZlYzNcIiksbD10KFwiLi4vbWF0aC9UcmFuc2Zvcm1cIiksdT0odChcIi4uL3NoYXBlcy9Db252ZXhQb2x5aGVkcm9uXCIpLHQoXCIuLi9tYXRoL1F1YXRlcm5pb25cIikpLHA9KHQoXCIuLi9zb2x2ZXIvU29sdmVyXCIpLHQoXCIuLi91dGlscy9WZWMzUG9vbFwiKSksZD10KFwiLi4vZXF1YXRpb25zL0NvbnRhY3RFcXVhdGlvblwiKSx5PXQoXCIuLi9lcXVhdGlvbnMvRnJpY3Rpb25FcXVhdGlvblwiKTtpLnByb3RvdHlwZS5jcmVhdGVDb250YWN0RXF1YXRpb249ZnVuY3Rpb24odCxlLG8saSxuLHMpe3ZhciByO3RoaXMuY29udGFjdFBvaW50UG9vbC5sZW5ndGg/KHI9dGhpcy5jb250YWN0UG9pbnRQb29sLnBvcCgpLHIuYmk9dCxyLmJqPWUpOnI9bmV3IGQodCxlKSxyLmVuYWJsZWQ9dC5jb2xsaXNpb25SZXNwb25zZSYmZS5jb2xsaXNpb25SZXNwb25zZSYmby5jb2xsaXNpb25SZXNwb25zZSYmaS5jb2xsaXNpb25SZXNwb25zZTt2YXIgYT10aGlzLmN1cnJlbnRDb250YWN0TWF0ZXJpYWw7ci5yZXN0aXR1dGlvbj1hLnJlc3RpdHV0aW9uLHIuc2V0U3Bvb2tQYXJhbXMoYS5jb250YWN0RXF1YXRpb25TdGlmZm5lc3MsYS5jb250YWN0RXF1YXRpb25SZWxheGF0aW9uLHRoaXMud29ybGQuZHQpO3ZhciBjPW8ubWF0ZXJpYWx8fHQubWF0ZXJpYWwsaD1pLm1hdGVyaWFsfHxlLm1hdGVyaWFsO3JldHVybiBjJiZoJiZjLnJlc3RpdHV0aW9uPj0wJiZoLnJlc3RpdHV0aW9uPj0wJiYoci5yZXN0aXR1dGlvbj1jLnJlc3RpdHV0aW9uKmgucmVzdGl0dXRpb24pLHIuc2k9bnx8byxyLnNqPXN8fGkscn0saS5wcm90b3R5cGUuY3JlYXRlRnJpY3Rpb25FcXVhdGlvbnNGcm9tQ29udGFjdD1mdW5jdGlvbih0LGUpe3ZhciBvPXQuYmksaT10LmJqLG49dC5zaSxzPXQuc2oscj10aGlzLndvcmxkLGE9dGhpcy5jdXJyZW50Q29udGFjdE1hdGVyaWFsLGM9YS5mcmljdGlvbixoPW4ubWF0ZXJpYWx8fG8ubWF0ZXJpYWwsbD1zLm1hdGVyaWFsfHxpLm1hdGVyaWFsO2lmKGgmJmwmJmguZnJpY3Rpb24+PTAmJmwuZnJpY3Rpb24+PTAmJihjPWguZnJpY3Rpb24qbC5mcmljdGlvbiksYz4wKXt2YXIgdT1jKnIuZ3Jhdml0eS5sZW5ndGgoKSxwPW8uaW52TWFzcytpLmludk1hc3M7cD4wJiYocD0xL3ApO3ZhciBkPXRoaXMuZnJpY3Rpb25FcXVhdGlvblBvb2wsdj1kLmxlbmd0aD9kLnBvcCgpOm5ldyB5KG8saSx1KnApLGY9ZC5sZW5ndGg/ZC5wb3AoKTpuZXcgeShvLGksdSpwKTtyZXR1cm4gdi5iaT1mLmJpPW8sdi5iaj1mLmJqPWksdi5taW5Gb3JjZT1mLm1pbkZvcmNlPS11KnAsdi5tYXhGb3JjZT1mLm1heEZvcmNlPXUqcCx2LnJpLmNvcHkodC5yaSksdi5yai5jb3B5KHQucmopLGYucmkuY29weSh0LnJpKSxmLnJqLmNvcHkodC5yaiksdC5uaS50YW5nZW50cyh2LnQsZi50KSx2LnNldFNwb29rUGFyYW1zKGEuZnJpY3Rpb25FcXVhdGlvblN0aWZmbmVzcyxhLmZyaWN0aW9uRXF1YXRpb25SZWxheGF0aW9uLHIuZHQpLGYuc2V0U3Bvb2tQYXJhbXMoYS5mcmljdGlvbkVxdWF0aW9uU3RpZmZuZXNzLGEuZnJpY3Rpb25FcXVhdGlvblJlbGF4YXRpb24sci5kdCksdi5lbmFibGVkPWYuZW5hYmxlZD10LmVuYWJsZWQsZS5wdXNoKHYsZiksITB9cmV0dXJuITF9O3ZhciB2PW5ldyBoLGY9bmV3IGgsbT1uZXcgaDtpLnByb3RvdHlwZS5jcmVhdGVGcmljdGlvbkZyb21BdmVyYWdlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucmVzdWx0W3RoaXMucmVzdWx0Lmxlbmd0aC0xXTtpZih0aGlzLmNyZWF0ZUZyaWN0aW9uRXF1YXRpb25zRnJvbUNvbnRhY3QoZSx0aGlzLmZyaWN0aW9uUmVzdWx0KSYmMSE9PXQpe3ZhciBvPXRoaXMuZnJpY3Rpb25SZXN1bHRbdGhpcy5mcmljdGlvblJlc3VsdC5sZW5ndGgtMl0saT10aGlzLmZyaWN0aW9uUmVzdWx0W3RoaXMuZnJpY3Rpb25SZXN1bHQubGVuZ3RoLTFdO3Yuc2V0WmVybygpLGYuc2V0WmVybygpLG0uc2V0WmVybygpO2Zvcih2YXIgbj1lLmJpLHM9KGUuYmosMCk7cyE9PXQ7cysrKWU9dGhpcy5yZXN1bHRbdGhpcy5yZXN1bHQubGVuZ3RoLTEtc10sZS5ib2R5QSE9PW4/KHYudmFkZChlLm5pLHYpLGYudmFkZChlLnJpLGYpLG0udmFkZChlLnJqLG0pKToodi52c3ViKGUubmksdiksZi52YWRkKGUucmosZiksbS52YWRkKGUucmksbSkpO3ZhciByPTEvdDtmLnNjYWxlKHIsby5yaSksbS5zY2FsZShyLG8ucmopLGkucmkuY29weShvLnJpKSxpLnJqLmNvcHkoby5yaiksdi5ub3JtYWxpemUoKSx2LnRhbmdlbnRzKG8udCxpLnQpfX07dmFyIGc9bmV3IGgsdz1uZXcgaCx4PW5ldyB1LGI9bmV3IHU7aS5wcm90b3R5cGUuZ2V0Q29udGFjdHM9ZnVuY3Rpb24odCxlLG8saSxuLHMsYSl7dGhpcy5jb250YWN0UG9pbnRQb29sPW4sdGhpcy5mcmljdGlvbkVxdWF0aW9uUG9vbD1hLHRoaXMucmVzdWx0PWksdGhpcy5mcmljdGlvblJlc3VsdD1zO2Zvcih2YXIgYz14LGg9YixsPWcsdT13LHA9MCxkPXQubGVuZ3RoO3AhPT1kO3ArKyl7dmFyIHk9dFtwXSx2PWVbcF0sZj1udWxsO3kubWF0ZXJpYWwmJnYubWF0ZXJpYWwmJihmPW8uZ2V0Q29udGFjdE1hdGVyaWFsKHkubWF0ZXJpYWwsdi5tYXRlcmlhbCl8fG51bGwpO2Zvcih2YXIgbT15LnR5cGUmci5LSU5FTUFUSUMmJnYudHlwZSZyLlNUQVRJQ3x8eS50eXBlJnIuU1RBVElDJiZ2LnR5cGUmci5LSU5FTUFUSUN8fHkudHlwZSZyLktJTkVNQVRJQyYmdi50eXBlJnIuS0lORU1BVElDLEU9MDtFPHkuc2hhcGVzLmxlbmd0aDtFKyspe3kucXVhdGVybmlvbi5tdWx0KHkuc2hhcGVPcmllbnRhdGlvbnNbRV0sYykseS5xdWF0ZXJuaW9uLnZtdWx0KHkuc2hhcGVPZmZzZXRzW0VdLGwpLGwudmFkZCh5LnBvc2l0aW9uLGwpO2Zvcih2YXIgQT15LnNoYXBlc1tFXSxCPTA7Qjx2LnNoYXBlcy5sZW5ndGg7QisrKXt2LnF1YXRlcm5pb24ubXVsdCh2LnNoYXBlT3JpZW50YXRpb25zW0JdLGgpLHYucXVhdGVybmlvbi52bXVsdCh2LnNoYXBlT2Zmc2V0c1tCXSx1KSx1LnZhZGQodi5wb3NpdGlvbix1KTt2YXIgQz12LnNoYXBlc1tCXTtpZighKGwuZGlzdGFuY2VUbyh1KT5BLmJvdW5kaW5nU3BoZXJlUmFkaXVzK0MuYm91bmRpbmdTcGhlcmVSYWRpdXMpKXt2YXIgUz1udWxsO0EubWF0ZXJpYWwmJkMubWF0ZXJpYWwmJihTPW8uZ2V0Q29udGFjdE1hdGVyaWFsKEEubWF0ZXJpYWwsQy5tYXRlcmlhbCl8fG51bGwpLHRoaXMuY3VycmVudENvbnRhY3RNYXRlcmlhbD1TfHxmfHxvLmRlZmF1bHRDb250YWN0TWF0ZXJpYWw7dmFyIFI9dGhpc1tBLnR5cGV8Qy50eXBlXTtpZihSKXt2YXIgTT0hMTtNPUEudHlwZTxDLnR5cGU/Ui5jYWxsKHRoaXMsQSxDLGwsdSxjLGgseSx2LEEsQyxtKTpSLmNhbGwodGhpcyxDLEEsdSxsLGgsYyx2LHksQSxDLG0pLE0mJm0mJihvLnNoYXBlT3ZlcmxhcEtlZXBlci5zZXQoQS5pZCxDLmlkKSxvLmJvZHlPdmVybGFwS2VlcGVyLnNldCh5LmlkLHYuaWQpKX19fX19fTtpLnByb3RvdHlwZVthLnR5cGVzLkJPWHxhLnR5cGVzLkJPWF09aS5wcm90b3R5cGUuYm94Qm94PWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCl7cmV0dXJuIHQuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLm1hdGVyaWFsPXQubWF0ZXJpYWwsZS5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb24ubWF0ZXJpYWw9ZS5tYXRlcmlhbCx0LmNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbi5jb2xsaXNpb25SZXNwb25zZT10LmNvbGxpc2lvblJlc3BvbnNlLGUuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLmNvbGxpc2lvblJlc3BvbnNlPWUuY29sbGlzaW9uUmVzcG9uc2UsdGhpcy5jb252ZXhDb252ZXgodC5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb24sZS5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb24sbyxpLG4scyxyLGEsdCxlLGwpfSxpLnByb3RvdHlwZVthLnR5cGVzLkJPWHxhLnR5cGVzLkNPTlZFWFBPTFlIRURST05dPWkucHJvdG90eXBlLmJveENvbnZleD1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyxoLGwpe3JldHVybiB0LmNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbi5tYXRlcmlhbD10Lm1hdGVyaWFsLHQuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLmNvbGxpc2lvblJlc3BvbnNlPXQuY29sbGlzaW9uUmVzcG9uc2UsdGhpcy5jb252ZXhDb252ZXgodC5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb24sZSxvLGksbixzLHIsYSx0LGUsbCl9LGkucHJvdG90eXBlW2EudHlwZXMuQk9YfGEudHlwZXMuUEFSVElDTEVdPWkucHJvdG90eXBlLmJveFBhcnRpY2xlPWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCl7cmV0dXJuIHQuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLm1hdGVyaWFsPXQubWF0ZXJpYWwsdC5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb24uY29sbGlzaW9uUmVzcG9uc2U9dC5jb2xsaXNpb25SZXNwb25zZSx0aGlzLmNvbnZleFBhcnRpY2xlKHQuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLGUsbyxpLG4scyxyLGEsdCxlLGwpfSxpLnByb3RvdHlwZVthLnR5cGVzLlNQSEVSRV09aS5wcm90b3R5cGUuc3BoZXJlU3BoZXJlPWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCl7aWYobClyZXR1cm4gby5kaXN0YW5jZVNxdWFyZWQoaSk8TWF0aC5wb3codC5yYWRpdXMrZS5yYWRpdXMsMik7dmFyIHU9dGhpcy5jcmVhdGVDb250YWN0RXF1YXRpb24ocixhLHQsZSxjLGgpO2kudnN1YihvLHUubmkpLHUubmkubm9ybWFsaXplKCksdS5yaS5jb3B5KHUubmkpLHUucmouY29weSh1Lm5pKSx1LnJpLm11bHQodC5yYWRpdXMsdS5yaSksdS5yai5tdWx0KC1lLnJhZGl1cyx1LnJqKSx1LnJpLnZhZGQobyx1LnJpKSx1LnJpLnZzdWIoci5wb3NpdGlvbix1LnJpKSx1LnJqLnZhZGQoaSx1LnJqKSx1LnJqLnZzdWIoYS5wb3NpdGlvbix1LnJqKSx0aGlzLnJlc3VsdC5wdXNoKHUpLHRoaXMuY3JlYXRlRnJpY3Rpb25FcXVhdGlvbnNGcm9tQ29udGFjdCh1LHRoaXMuZnJpY3Rpb25SZXN1bHQpfTt2YXIgRT1uZXcgaCxBPW5ldyBoLEI9bmV3IGg7aS5wcm90b3R5cGVbYS50eXBlcy5QTEFORXxhLnR5cGVzLlRSSU1FU0hdPWkucHJvdG90eXBlLnBsYW5lVHJpbWVzaD1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyx1LHApe3ZhciBkPW5ldyBoLHk9RTt5LnNldCgwLDAsMSksbi52bXVsdCh5LHkpO2Zvcih2YXIgdj0wO3Y8ZS52ZXJ0aWNlcy5sZW5ndGgvMzt2Kyspe2UuZ2V0VmVydGV4KHYsZCk7dmFyIGY9bmV3IGg7Zi5jb3B5KGQpLGwucG9pbnRUb1dvcmxkRnJhbWUoaSxzLGYsZCk7dmFyIG09QTtkLnZzdWIobyxtKTtpZih5LmRvdChtKTw9MCl7aWYocClyZXR1cm4hMDt2YXIgZz10aGlzLmNyZWF0ZUNvbnRhY3RFcXVhdGlvbihyLGEsdCxlLGMsdSk7Zy5uaS5jb3B5KHkpO3ZhciB3PUI7eS5zY2FsZShtLmRvdCh5KSx3KSxkLnZzdWIodyx3KSxnLnJpLmNvcHkodyksZy5yaS52c3ViKHIucG9zaXRpb24sZy5yaSksZy5yai5jb3B5KGQpLGcucmoudnN1YihhLnBvc2l0aW9uLGcucmopLHRoaXMucmVzdWx0LnB1c2goZyksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KGcsdGhpcy5mcmljdGlvblJlc3VsdCl9fX07dmFyIEM9bmV3IGgsUz1uZXcgaCxSPShuZXcgaCxuZXcgaCksTT1uZXcgaCxUPW5ldyBoLHo9bmV3IGgsaz1uZXcgaCxQPW5ldyBoLHE9bmV3IGgsTD1uZXcgaCxWPW5ldyBoLEY9bmV3IGgsTj1uZXcgaCxJPW5ldyBzLGo9W107aS5wcm90b3R5cGVbYS50eXBlcy5TUEhFUkV8YS50eXBlcy5UUklNRVNIXT1pLnByb3RvdHlwZS5zcGhlcmVUcmltZXNoPWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxoLHUscCl7dmFyIGQ9VCx5PXosdj1rLGY9UCxtPXEsZz1MLHc9SSx4PU0sYj1TLEU9ajtsLnBvaW50VG9Mb2NhbEZyYW1lKGkscyxvLG0pO3ZhciBBPXQucmFkaXVzO3cubG93ZXJCb3VuZC5zZXQobS54LUEsbS55LUEsbS56LUEpLHcudXBwZXJCb3VuZC5zZXQobS54K0EsbS55K0EsbS56K0EpLGUuZ2V0VHJpYW5nbGVzSW5BQUJCKHcsRSk7Zm9yKHZhciBCPVIsTz10LnJhZGl1cyp0LnJhZGl1cyxEPTA7RDxFLmxlbmd0aDtEKyspZm9yKHZhciBXPTA7VzwzO1crKylpZihlLmdldFZlcnRleChlLmluZGljZXNbMypFW0RdK1ddLEIpLEIudnN1YihtLGIpLGIubm9ybTIoKTw9Tyl7aWYoeC5jb3B5KEIpLGwucG9pbnRUb1dvcmxkRnJhbWUoaSxzLHgsQiksQi52c3ViKG8sYikscClyZXR1cm4hMDt2YXIgSD10aGlzLmNyZWF0ZUNvbnRhY3RFcXVhdGlvbihyLGEsdCxlLGgsdSk7SC5uaS5jb3B5KGIpLEgubmkubm9ybWFsaXplKCksSC5yaS5jb3B5KEgubmkpLEgucmkuc2NhbGUodC5yYWRpdXMsSC5yaSksSC5yaS52YWRkKG8sSC5yaSksSC5yaS52c3ViKHIucG9zaXRpb24sSC5yaSksSC5yai5jb3B5KEIpLEgucmoudnN1YihhLnBvc2l0aW9uLEgucmopLHRoaXMucmVzdWx0LnB1c2goSCksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KEgsdGhpcy5mcmljdGlvblJlc3VsdCl9Zm9yKHZhciBEPTA7RDxFLmxlbmd0aDtEKyspZm9yKHZhciBXPTA7VzwzO1crKyl7ZS5nZXRWZXJ0ZXgoZS5pbmRpY2VzWzMqRVtEXStXXSxkKSxlLmdldFZlcnRleChlLmluZGljZXNbMypFW0RdKyhXKzEpJTNdLHkpLHkudnN1YihkLHYpLG0udnN1Yih5LGcpO3ZhciBLPWcuZG90KHYpO20udnN1YihkLGcpO3ZhciBfPWcuZG90KHYpO2lmKF8+MCYmSzwwKXttLnZzdWIoZCxnKSxmLmNvcHkodiksZi5ub3JtYWxpemUoKSxfPWcuZG90KGYpLGYuc2NhbGUoXyxnKSxnLnZhZGQoZCxnKTt2YXIgVT1nLmRpc3RhbmNlVG8obSk7aWYoVTx0LnJhZGl1cyl7aWYocClyZXR1cm4hMDt2YXIgSD10aGlzLmNyZWF0ZUNvbnRhY3RFcXVhdGlvbihyLGEsdCxlLGgsdSk7Zy52c3ViKG0sSC5uaSksSC5uaS5ub3JtYWxpemUoKSxILm5pLnNjYWxlKHQucmFkaXVzLEgucmkpLGwucG9pbnRUb1dvcmxkRnJhbWUoaSxzLGcsZyksZy52c3ViKGEucG9zaXRpb24sSC5yaiksbC52ZWN0b3JUb1dvcmxkRnJhbWUocyxILm5pLEgubmkpLGwudmVjdG9yVG9Xb3JsZEZyYW1lKHMsSC5yaSxILnJpKSx0aGlzLnJlc3VsdC5wdXNoKEgpLHRoaXMuY3JlYXRlRnJpY3Rpb25FcXVhdGlvbnNGcm9tQ29udGFjdChILHRoaXMuZnJpY3Rpb25SZXN1bHQpfX19Zm9yKHZhciBHPVYsWT1GLFg9TixRPUMsRD0wLFo9RS5sZW5ndGg7RCE9PVo7RCsrKXtlLmdldFRyaWFuZ2xlVmVydGljZXMoRVtEXSxHLFksWCksZS5nZXROb3JtYWwoRVtEXSxRKSxtLnZzdWIoRyxnKTt2YXIgVT1nLmRvdChRKTtpZihRLnNjYWxlKFUsZyksbS52c3ViKGcsZyksVT1nLmRpc3RhbmNlVG8obSksYy5wb2ludEluVHJpYW5nbGUoZyxHLFksWCkmJlU8dC5yYWRpdXMpe2lmKHApcmV0dXJuITA7dmFyIEg9dGhpcy5jcmVhdGVDb250YWN0RXF1YXRpb24ocixhLHQsZSxoLHUpO2cudnN1YihtLEgubmkpLEgubmkubm9ybWFsaXplKCksSC5uaS5zY2FsZSh0LnJhZGl1cyxILnJpKSxsLnBvaW50VG9Xb3JsZEZyYW1lKGkscyxnLGcpLGcudnN1YihhLnBvc2l0aW9uLEgucmopLGwudmVjdG9yVG9Xb3JsZEZyYW1lKHMsSC5uaSxILm5pKSxsLnZlY3RvclRvV29ybGRGcmFtZShzLEgucmksSC5yaSksdGhpcy5yZXN1bHQucHVzaChIKSx0aGlzLmNyZWF0ZUZyaWN0aW9uRXF1YXRpb25zRnJvbUNvbnRhY3QoSCx0aGlzLmZyaWN0aW9uUmVzdWx0KX19RS5sZW5ndGg9MH07dmFyIE89bmV3IGgsRD1uZXcgaDtpLnByb3RvdHlwZVthLnR5cGVzLlNQSEVSRXxhLnR5cGVzLlBMQU5FXT1pLnByb3RvdHlwZS5zcGhlcmVQbGFuZT1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyxoLGwpe3ZhciB1PXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKHIsYSx0LGUsYyxoKTtpZih1Lm5pLnNldCgwLDAsMSkscy52bXVsdCh1Lm5pLHUubmkpLHUubmkubmVnYXRlKHUubmkpLHUubmkubm9ybWFsaXplKCksdS5uaS5tdWx0KHQucmFkaXVzLHUucmkpLG8udnN1YihpLE8pLHUubmkubXVsdCh1Lm5pLmRvdChPKSxEKSxPLnZzdWIoRCx1LnJqKSwtTy5kb3QodS5uaSk8PXQucmFkaXVzKXtpZihsKXJldHVybiEwO3ZhciBwPXUucmksZD11LnJqO3AudmFkZChvLHApLHAudnN1YihyLnBvc2l0aW9uLHApLGQudmFkZChpLGQpLGQudnN1YihhLnBvc2l0aW9uLGQpLHRoaXMucmVzdWx0LnB1c2godSksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KHUsdGhpcy5mcmljdGlvblJlc3VsdCl9fTt2YXIgVz1uZXcgaCxIPW5ldyBoLEs9bmV3IGgsXz1uZXcgaCxVPW5ldyBoLEc9bmV3IGgsWT1uZXcgaCxYPVtuZXcgaCxuZXcgaCxuZXcgaCxuZXcgaCxuZXcgaCxuZXcgaF0sUT1uZXcgaCxaPW5ldyBoLEo9bmV3IGgsJD1uZXcgaDtpLnByb3RvdHlwZVthLnR5cGVzLlNQSEVSRXxhLnR5cGVzLkJPWF09aS5wcm90b3R5cGUuc3BoZXJlQm94PWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCl7dmFyIHU9dGhpcy52M3Bvb2wscD1YO28udnN1YihpLF8pLGUuZ2V0U2lkZU5vcm1hbHMocCxzKTtmb3IodmFyIGQ9dC5yYWRpdXMseT0hMSx2PVosZj1KLG09JCxnPW51bGwsdz0wLHg9MCxiPTAsRT1udWxsLEE9MCxCPXAubGVuZ3RoO0EhPT1CJiYhMT09PXk7QSsrKXt2YXIgQz1VO0MuY29weShwW0FdKTt2YXIgUz1DLm5vcm0oKTtDLm5vcm1hbGl6ZSgpO3ZhciBSPV8uZG90KEMpO2lmKFI8UytkJiZSPjApe3ZhciBNPUcsVD1ZO00uY29weShwWyhBKzEpJTNdKSxULmNvcHkocFsoQSsyKSUzXSk7dmFyIHo9TS5ub3JtKCksaz1ULm5vcm0oKTtNLm5vcm1hbGl6ZSgpLFQubm9ybWFsaXplKCk7dmFyIFA9Xy5kb3QoTSkscT1fLmRvdChUKTtpZihQPHomJlA+LXomJnE8ayYmcT4tayl7dmFyIEw9TWF0aC5hYnMoUi1TLWQpO2lmKChudWxsPT09RXx8TDxFKSYmKEU9TCx4PVAsYj1xLGc9Uyx2LmNvcHkoQyksZi5jb3B5KE0pLG0uY29weShUKSx3KyssbCkpcmV0dXJuITB9fX1pZih3KXt5PSEwO3ZhciBWPXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKHIsYSx0LGUsYyxoKTt2Lm11bHQoLWQsVi5yaSksVi5uaS5jb3B5KHYpLFYubmkubmVnYXRlKFYubmkpLHYubXVsdChnLHYpLGYubXVsdCh4LGYpLHYudmFkZChmLHYpLG0ubXVsdChiLG0pLHYudmFkZChtLFYucmopLFYucmkudmFkZChvLFYucmkpLFYucmkudnN1YihyLnBvc2l0aW9uLFYucmkpLFYucmoudmFkZChpLFYucmopLFYucmoudnN1YihhLnBvc2l0aW9uLFYucmopLHRoaXMucmVzdWx0LnB1c2goViksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KFYsdGhpcy5mcmljdGlvblJlc3VsdCl9Zm9yKHZhciBGPXUuZ2V0KCksTj1RLEk9MDsyIT09SSYmIXk7SSsrKWZvcih2YXIgaj0wOzIhPT1qJiYheTtqKyspZm9yKHZhciBPPTA7MiE9PU8mJiF5O08rKylpZihGLnNldCgwLDAsMCksST9GLnZhZGQocFswXSxGKTpGLnZzdWIocFswXSxGKSxqP0YudmFkZChwWzFdLEYpOkYudnN1YihwWzFdLEYpLE8/Ri52YWRkKHBbMl0sRik6Ri52c3ViKHBbMl0sRiksaS52YWRkKEYsTiksTi52c3ViKG8sTiksTi5ub3JtMigpPGQqZCl7aWYobClyZXR1cm4hMDt5PSEwO3ZhciBWPXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKHIsYSx0LGUsYyxoKTtWLnJpLmNvcHkoTiksVi5yaS5ub3JtYWxpemUoKSxWLm5pLmNvcHkoVi5yaSksVi5yaS5tdWx0KGQsVi5yaSksVi5yai5jb3B5KEYpLFYucmkudmFkZChvLFYucmkpLFYucmkudnN1YihyLnBvc2l0aW9uLFYucmkpLFYucmoudmFkZChpLFYucmopLFYucmoudnN1YihhLnBvc2l0aW9uLFYucmopLHRoaXMucmVzdWx0LnB1c2goViksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KFYsdGhpcy5mcmljdGlvblJlc3VsdCl9dS5yZWxlYXNlKEYpLEY9bnVsbDtmb3IodmFyIEQ9dS5nZXQoKSxXPXUuZ2V0KCksVj11LmdldCgpLEg9dS5nZXQoKSxMPXUuZ2V0KCksSz1wLmxlbmd0aCxJPTA7SSE9PUsmJiF5O0krKylmb3IodmFyIGo9MDtqIT09SyYmIXk7aisrKWlmKEklMyE9aiUzKXtwW2pdLmNyb3NzKHBbSV0sRCksRC5ub3JtYWxpemUoKSxwW0ldLnZhZGQocFtqXSxXKSxWLmNvcHkobyksVi52c3ViKFcsViksVi52c3ViKGksVik7dmFyIHR0PVYuZG90KEQpO0QubXVsdCh0dCxIKTtmb3IodmFyIE89MDtPPT09SSUzfHxPPT09aiUzOylPKys7TC5jb3B5KG8pLEwudnN1YihILEwpLEwudnN1YihXLEwpLEwudnN1YihpLEwpO3ZhciBldD1NYXRoLmFicyh0dCksb3Q9TC5ub3JtKCk7aWYoZXQ8cFtPXS5ub3JtKCkmJm90PGQpe2lmKGwpcmV0dXJuITA7eT0hMDt2YXIgaXQ9dGhpcy5jcmVhdGVDb250YWN0RXF1YXRpb24ocixhLHQsZSxjLGgpO1cudmFkZChILGl0LnJqKSxpdC5yai5jb3B5KGl0LnJqKSxMLm5lZ2F0ZShpdC5uaSksaXQubmkubm9ybWFsaXplKCksaXQucmkuY29weShpdC5yaiksaXQucmkudmFkZChpLGl0LnJpKSxpdC5yaS52c3ViKG8saXQucmkpLGl0LnJpLm5vcm1hbGl6ZSgpLGl0LnJpLm11bHQoZCxpdC5yaSksaXQucmkudmFkZChvLGl0LnJpKSxpdC5yaS52c3ViKHIucG9zaXRpb24saXQucmkpLGl0LnJqLnZhZGQoaSxpdC5yaiksaXQucmoudnN1YihhLnBvc2l0aW9uLGl0LnJqKSx0aGlzLnJlc3VsdC5wdXNoKGl0KSx0aGlzLmNyZWF0ZUZyaWN0aW9uRXF1YXRpb25zRnJvbUNvbnRhY3QoaXQsdGhpcy5mcmljdGlvblJlc3VsdCl9fXUucmVsZWFzZShELFcsVixILEwpfTt2YXIgdHQ9bmV3IGgsZXQ9bmV3IGgsb3Q9bmV3IGgsaXQ9bmV3IGgsbnQ9bmV3IGgsc3Q9bmV3IGgscnQ9bmV3IGgsYXQ9bmV3IGgsY3Q9bmV3IGgsaHQ9bmV3IGg7aS5wcm90b3R5cGVbYS50eXBlcy5TUEhFUkV8YS50eXBlcy5DT05WRVhQT0xZSEVEUk9OXT1pLnByb3RvdHlwZS5zcGhlcmVDb252ZXg9ZnVuY3Rpb24odCxlLG8saSxzLHIsYSxjLGgsbCx1KXt2YXIgcD10aGlzLnYzcG9vbDtvLnZzdWIoaSx0dCk7Zm9yKHZhciBkPWUuZmFjZU5vcm1hbHMseT1lLmZhY2VzLHY9ZS52ZXJ0aWNlcyxmPXQucmFkaXVzLG09MDttIT09di5sZW5ndGg7bSsrKXt2YXIgZz12W21dLHc9bnQ7ci52bXVsdChnLHcpLGkudmFkZCh3LHcpO3ZhciB4PWl0O2lmKHcudnN1YihvLHgpLHgubm9ybTIoKTxmKmYpe2lmKHUpcmV0dXJuITA7RT0hMDt2YXIgYj10aGlzLmNyZWF0ZUNvbnRhY3RFcXVhdGlvbihhLGMsdCxlLGgsbCk7cmV0dXJuIGIucmkuY29weSh4KSxiLnJpLm5vcm1hbGl6ZSgpLGIubmkuY29weShiLnJpKSxiLnJpLm11bHQoZixiLnJpKSx3LnZzdWIoaSxiLnJqKSxiLnJpLnZhZGQobyxiLnJpKSxiLnJpLnZzdWIoYS5wb3NpdGlvbixiLnJpKSxiLnJqLnZhZGQoaSxiLnJqKSxiLnJqLnZzdWIoYy5wb3NpdGlvbixiLnJqKSx0aGlzLnJlc3VsdC5wdXNoKGIpLHZvaWQgdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KGIsdGhpcy5mcmljdGlvblJlc3VsdCl9fWZvcih2YXIgRT0hMSxtPTAsQT15Lmxlbmd0aDttIT09QSYmITE9PT1FO20rKyl7dmFyIEI9ZFttXSxDPXlbbV0sUz1zdDtyLnZtdWx0KEIsUyk7dmFyIFI9cnQ7ci52bXVsdCh2W0NbMF1dLFIpLFIudmFkZChpLFIpO3ZhciBNPWF0O1MubXVsdCgtZixNKSxvLnZhZGQoTSxNKTt2YXIgVD1jdDtNLnZzdWIoUixUKTt2YXIgej1ULmRvdChTKSxrPWh0O2lmKG8udnN1YihSLGspLHo8MCYmay5kb3QoUyk+MCl7Zm9yKHZhciBQPVtdLHE9MCxMPUMubGVuZ3RoO3EhPT1MO3ErKyl7dmFyIFY9cC5nZXQoKTtyLnZtdWx0KHZbQ1txXV0sViksaS52YWRkKFYsViksUC5wdXNoKFYpfWlmKG4oUCxTLG8pKXtpZih1KXJldHVybiEwO0U9ITA7dmFyIGI9dGhpcy5jcmVhdGVDb250YWN0RXF1YXRpb24oYSxjLHQsZSxoLGwpO1MubXVsdCgtZixiLnJpKSxTLm5lZ2F0ZShiLm5pKTt2YXIgRj1wLmdldCgpO1MubXVsdCgteixGKTt2YXIgTj1wLmdldCgpO1MubXVsdCgtZixOKSxvLnZzdWIoaSxiLnJqKSxiLnJqLnZhZGQoTixiLnJqKSxiLnJqLnZhZGQoRixiLnJqKSxiLnJqLnZhZGQoaSxiLnJqKSxiLnJqLnZzdWIoYy5wb3NpdGlvbixiLnJqKSxiLnJpLnZhZGQobyxiLnJpKSxiLnJpLnZzdWIoYS5wb3NpdGlvbixiLnJpKSxwLnJlbGVhc2UoRikscC5yZWxlYXNlKE4pLHRoaXMucmVzdWx0LnB1c2goYiksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KGIsdGhpcy5mcmljdGlvblJlc3VsdCk7Zm9yKHZhciBxPTAsST1QLmxlbmd0aDtxIT09STtxKyspcC5yZWxlYXNlKFBbcV0pO3JldHVybn1mb3IodmFyIHE9MDtxIT09Qy5sZW5ndGg7cSsrKXt2YXIgaj1wLmdldCgpLE89cC5nZXQoKTtyLnZtdWx0KHZbQ1socSsxKSVDLmxlbmd0aF1dLGopLHIudm11bHQodltDWyhxKzIpJUMubGVuZ3RoXV0sTyksaS52YWRkKGosaiksaS52YWRkKE8sTyk7dmFyIEQ9ZXQ7Ty52c3ViKGosRCk7dmFyIFc9b3Q7RC51bml0KFcpO3ZhciBIPXAuZ2V0KCksSz1wLmdldCgpO28udnN1YihqLEspO3ZhciBfPUsuZG90KFcpO1cubXVsdChfLEgpLEgudmFkZChqLEgpO3ZhciBVPXAuZ2V0KCk7aWYoSC52c3ViKG8sVSksXz4wJiZfKl88RC5ub3JtMigpJiZVLm5vcm0yKCk8ZipmKXtpZih1KXJldHVybiEwO3ZhciBiPXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKGEsYyx0LGUsaCxsKTtILnZzdWIoaSxiLnJqKSxILnZzdWIobyxiLm5pKSxiLm5pLm5vcm1hbGl6ZSgpLGIubmkubXVsdChmLGIucmkpLGIucmoudmFkZChpLGIucmopLGIucmoudnN1YihjLnBvc2l0aW9uLGIucmopLGIucmkudmFkZChvLGIucmkpLGIucmkudnN1YihhLnBvc2l0aW9uLGIucmkpLHRoaXMucmVzdWx0LnB1c2goYiksdGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KGIsdGhpcy5mcmljdGlvblJlc3VsdCk7Zm9yKHZhciBxPTAsST1QLmxlbmd0aDtxIT09STtxKyspcC5yZWxlYXNlKFBbcV0pO3JldHVybiBwLnJlbGVhc2UoaikscC5yZWxlYXNlKE8pLHAucmVsZWFzZShIKSxwLnJlbGVhc2UoVSksdm9pZCBwLnJlbGVhc2UoSyl9cC5yZWxlYXNlKGopLHAucmVsZWFzZShPKSxwLnJlbGVhc2UoSCkscC5yZWxlYXNlKFUpLHAucmVsZWFzZShLKX1mb3IodmFyIHE9MCxJPVAubGVuZ3RoO3EhPT1JO3ErKylwLnJlbGVhc2UoUFtxXSl9fX07bmV3IGgsbmV3IGg7aS5wcm90b3R5cGVbYS50eXBlcy5QTEFORXxhLnR5cGVzLkJPWF09aS5wcm90b3R5cGUucGxhbmVCb3g9ZnVuY3Rpb24odCxlLG8saSxuLHMscixhLGMsaCxsKXtyZXR1cm4gZS5jb252ZXhQb2x5aGVkcm9uUmVwcmVzZW50YXRpb24ubWF0ZXJpYWw9ZS5tYXRlcmlhbCxlLmNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbi5jb2xsaXNpb25SZXNwb25zZT1lLmNvbGxpc2lvblJlc3BvbnNlLGUuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLmlkPWUuaWQsdGhpcy5wbGFuZUNvbnZleCh0LGUuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLG8saSxuLHMscixhLHQsZSxsKX07dmFyIGx0PW5ldyBoLHV0PW5ldyBoLHB0PW5ldyBoLGR0PW5ldyBoO2kucHJvdG90eXBlW2EudHlwZXMuUExBTkV8YS50eXBlcy5DT05WRVhQT0xZSEVEUk9OXT1pLnByb3RvdHlwZS5wbGFuZUNvbnZleD1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyxoLGwpe3ZhciB1PWx0LHA9dXQ7cC5zZXQoMCwwLDEpLG4udm11bHQocCxwKTtmb3IodmFyIGQ9MCx5PXB0LHY9MDt2IT09ZS52ZXJ0aWNlcy5sZW5ndGg7disrKXt1LmNvcHkoZS52ZXJ0aWNlc1t2XSkscy52bXVsdCh1LHUpLGkudmFkZCh1LHUpLHUudnN1YihvLHkpO2lmKHAuZG90KHkpPD0wKXtpZihsKXJldHVybiEwO3ZhciBmPXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKHIsYSx0LGUsYyxoKSxtPWR0O3AubXVsdChwLmRvdCh5KSxtKSx1LnZzdWIobSxtKSxtLnZzdWIobyxmLnJpKSxmLm5pLmNvcHkocCksdS52c3ViKGksZi5yaiksZi5yaS52YWRkKG8sZi5yaSksZi5yaS52c3ViKHIucG9zaXRpb24sZi5yaSksZi5yai52YWRkKGksZi5yaiksZi5yai52c3ViKGEucG9zaXRpb24sZi5yaiksdGhpcy5yZXN1bHQucHVzaChmKSxkKyssdGhpcy5lbmFibGVGcmljdGlvblJlZHVjdGlvbnx8dGhpcy5jcmVhdGVGcmljdGlvbkVxdWF0aW9uc0Zyb21Db250YWN0KGYsdGhpcy5mcmljdGlvblJlc3VsdCl9fXRoaXMuZW5hYmxlRnJpY3Rpb25SZWR1Y3Rpb24mJmQmJnRoaXMuY3JlYXRlRnJpY3Rpb25Gcm9tQXZlcmFnZShkKX07dmFyIHl0PW5ldyBoLHZ0PW5ldyBoO2kucHJvdG90eXBlW2EudHlwZXMuQ09OVkVYUE9MWUhFRFJPTl09aS5wcm90b3R5cGUuY29udmV4Q29udmV4PWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCx1LHApe3ZhciBkPXl0O2lmKCEoby5kaXN0YW5jZVRvKGkpPnQuYm91bmRpbmdTcGhlcmVSYWRpdXMrZS5ib3VuZGluZ1NwaGVyZVJhZGl1cykmJnQuZmluZFNlcGFyYXRpbmdBeGlzKGUsbyxuLGkscyxkLHUscCkpe3ZhciB5PVtdLHY9dnQ7dC5jbGlwQWdhaW5zdEh1bGwobyxuLGUsaSxzLGQsLTEwMCwxMDAseSk7Zm9yKHZhciBmPTAsbT0wO20hPT15Lmxlbmd0aDttKyspe2lmKGwpcmV0dXJuITA7dmFyIGc9dGhpcy5jcmVhdGVDb250YWN0RXF1YXRpb24ocixhLHQsZSxjLGgpLHc9Zy5yaSx4PWcucmo7ZC5uZWdhdGUoZy5uaSkseVttXS5ub3JtYWwubmVnYXRlKHYpLHYubXVsdCh5W21dLmRlcHRoLHYpLHlbbV0ucG9pbnQudmFkZCh2LHcpLHguY29weSh5W21dLnBvaW50KSx3LnZzdWIobyx3KSx4LnZzdWIoaSx4KSx3LnZhZGQobyx3KSx3LnZzdWIoci5wb3NpdGlvbix3KSx4LnZhZGQoaSx4KSx4LnZzdWIoYS5wb3NpdGlvbix4KSx0aGlzLnJlc3VsdC5wdXNoKGcpLGYrKyx0aGlzLmVuYWJsZUZyaWN0aW9uUmVkdWN0aW9ufHx0aGlzLmNyZWF0ZUZyaWN0aW9uRXF1YXRpb25zRnJvbUNvbnRhY3QoZyx0aGlzLmZyaWN0aW9uUmVzdWx0KX10aGlzLmVuYWJsZUZyaWN0aW9uUmVkdWN0aW9uJiZmJiZ0aGlzLmNyZWF0ZUZyaWN0aW9uRnJvbUF2ZXJhZ2UoZil9fTt2YXIgZnQ9bmV3IGgsbXQ9bmV3IGgsZ3Q9bmV3IGg7aS5wcm90b3R5cGVbYS50eXBlcy5QTEFORXxhLnR5cGVzLlBBUlRJQ0xFXT1pLnByb3RvdHlwZS5wbGFuZVBhcnRpY2xlPWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCl7dmFyIHU9ZnQ7dS5zZXQoMCwwLDEpLHIucXVhdGVybmlvbi52bXVsdCh1LHUpO3ZhciBwPW10O2lmKGkudnN1YihyLnBvc2l0aW9uLHApLHUuZG90KHApPD0wKXtpZihsKXJldHVybiEwO3ZhciBkPXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKGEscixlLHQsYyxoKTtkLm5pLmNvcHkodSksZC5uaS5uZWdhdGUoZC5uaSksZC5yaS5zZXQoMCwwLDApO3ZhciB5PWd0O3UubXVsdCh1LmRvdChpKSx5KSxpLnZzdWIoeSx5KSxkLnJqLmNvcHkoeSksdGhpcy5yZXN1bHQucHVzaChkKSx0aGlzLmNyZWF0ZUZyaWN0aW9uRXF1YXRpb25zRnJvbUNvbnRhY3QoZCx0aGlzLmZyaWN0aW9uUmVzdWx0KX19O3ZhciB3dD1uZXcgaDtpLnByb3RvdHlwZVthLnR5cGVzLlBBUlRJQ0xFfGEudHlwZXMuU1BIRVJFXT1pLnByb3RvdHlwZS5zcGhlcmVQYXJ0aWNsZT1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyxoLGwpe3ZhciB1PXd0O2lmKHUuc2V0KDAsMCwxKSxpLnZzdWIobyx1KSx1Lm5vcm0yKCk8PXQucmFkaXVzKnQucmFkaXVzKXtpZihsKXJldHVybiEwO3ZhciBwPXRoaXMuY3JlYXRlQ29udGFjdEVxdWF0aW9uKGEscixlLHQsYyxoKTt1Lm5vcm1hbGl6ZSgpLHAucmouY29weSh1KSxwLnJqLm11bHQodC5yYWRpdXMscC5yaikscC5uaS5jb3B5KHUpLHAubmkubmVnYXRlKHAubmkpLHAucmkuc2V0KDAsMCwwKSx0aGlzLnJlc3VsdC5wdXNoKHApLHRoaXMuY3JlYXRlRnJpY3Rpb25FcXVhdGlvbnNGcm9tQ29udGFjdChwLHRoaXMuZnJpY3Rpb25SZXN1bHQpfX07dmFyIHh0PW5ldyB1LGJ0PW5ldyBoLEV0PShuZXcgaCxuZXcgaCksQXQ9bmV3IGgsQnQ9bmV3IGg7aS5wcm90b3R5cGVbYS50eXBlcy5QQVJUSUNMRXxhLnR5cGVzLkNPTlZFWFBPTFlIRURST05dPWkucHJvdG90eXBlLmNvbnZleFBhcnRpY2xlPWZ1bmN0aW9uKHQsZSxvLGksbixzLHIsYSxjLGgsbCl7dmFyIHU9LTEscD1FdCxkPUJ0LHk9bnVsbCx2PTAsZj1idDtpZihmLmNvcHkoaSksZi52c3ViKG8sZiksbi5jb25qdWdhdGUoeHQpLHh0LnZtdWx0KGYsZiksdC5wb2ludElzSW5zaWRlKGYpKXt0LndvcmxkVmVydGljZXNOZWVkc1VwZGF0ZSYmdC5jb21wdXRlV29ybGRWZXJ0aWNlcyhvLG4pLHQud29ybGRGYWNlTm9ybWFsc05lZWRzVXBkYXRlJiZ0LmNvbXB1dGVXb3JsZEZhY2VOb3JtYWxzKG4pO2Zvcih2YXIgbT0wLGc9dC5mYWNlcy5sZW5ndGg7bSE9PWc7bSsrKXtcbnZhciB3PVt0LndvcmxkVmVydGljZXNbdC5mYWNlc1ttXVswXV1dLHg9dC53b3JsZEZhY2VOb3JtYWxzW21dO2kudnN1Yih3WzBdLEF0KTt2YXIgYj0teC5kb3QoQXQpO2lmKG51bGw9PT15fHxNYXRoLmFicyhiKTxNYXRoLmFicyh5KSl7aWYobClyZXR1cm4hMDt5PWIsdT1tLHAuY29weSh4KSx2Kyt9fWlmKC0xIT09dSl7dmFyIEU9dGhpcy5jcmVhdGVDb250YWN0RXF1YXRpb24oYSxyLGUsdCxjLGgpO3AubXVsdCh5LGQpLGQudmFkZChpLGQpLGQudnN1YihvLGQpLEUucmouY29weShkKSxwLm5lZ2F0ZShFLm5pKSxFLnJpLnNldCgwLDAsMCk7dmFyIEE9RS5yaSxCPUUucmo7QS52YWRkKGksQSksQS52c3ViKGEucG9zaXRpb24sQSksQi52YWRkKG8sQiksQi52c3ViKHIucG9zaXRpb24sQiksdGhpcy5yZXN1bHQucHVzaChFKSx0aGlzLmNyZWF0ZUZyaWN0aW9uRXF1YXRpb25zRnJvbUNvbnRhY3QoRSx0aGlzLmZyaWN0aW9uUmVzdWx0KX1lbHNlIGNvbnNvbGUud2FybihcIlBvaW50IGZvdW5kIGluc2lkZSBjb252ZXgsIGJ1dCBkaWQgbm90IGZpbmQgcGVuZXRyYXRpbmcgZmFjZSFcIil9fSxpLnByb3RvdHlwZVthLnR5cGVzLkJPWHxhLnR5cGVzLkhFSUdIVEZJRUxEXT1pLnByb3RvdHlwZS5ib3hIZWlnaHRmaWVsZD1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyxoLGwpe3JldHVybiB0LmNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbi5tYXRlcmlhbD10Lm1hdGVyaWFsLHQuY29udmV4UG9seWhlZHJvblJlcHJlc2VudGF0aW9uLmNvbGxpc2lvblJlc3BvbnNlPXQuY29sbGlzaW9uUmVzcG9uc2UsdGhpcy5jb252ZXhIZWlnaHRmaWVsZCh0LmNvbnZleFBvbHloZWRyb25SZXByZXNlbnRhdGlvbixlLG8saSxuLHMscixhLHQsZSxsKX07dmFyIEN0PW5ldyBoLFN0PW5ldyBoLFJ0PVswXTtpLnByb3RvdHlwZVthLnR5cGVzLkNPTlZFWFBPTFlIRURST058YS50eXBlcy5IRUlHSFRGSUVMRF09aS5wcm90b3R5cGUuY29udmV4SGVpZ2h0ZmllbGQ9ZnVuY3Rpb24odCxlLG8saSxuLHMscixhLGMsaCx1KXt2YXIgcD1lLmRhdGEsZD1lLmVsZW1lbnRTaXplLHk9dC5ib3VuZGluZ1NwaGVyZVJhZGl1cyx2PVN0LGY9UnQsbT1DdDtsLnBvaW50VG9Mb2NhbEZyYW1lKGkscyxvLG0pO3ZhciBnPU1hdGguZmxvb3IoKG0ueC15KS9kKS0xLHc9TWF0aC5jZWlsKChtLngreSkvZCkrMSx4PU1hdGguZmxvb3IoKG0ueS15KS9kKS0xLGI9TWF0aC5jZWlsKChtLnkreSkvZCkrMTtpZighKHc8MHx8YjwwfHxnPnAubGVuZ3RofHx4PnBbMF0ubGVuZ3RoKSl7ZzwwJiYoZz0wKSx3PDAmJih3PTApLHg8MCYmKHg9MCksYjwwJiYoYj0wKSxnPj1wLmxlbmd0aCYmKGc9cC5sZW5ndGgtMSksdz49cC5sZW5ndGgmJih3PXAubGVuZ3RoLTEpLGI+PXBbMF0ubGVuZ3RoJiYoYj1wWzBdLmxlbmd0aC0xKSx4Pj1wWzBdLmxlbmd0aCYmKHg9cFswXS5sZW5ndGgtMSk7dmFyIEU9W107ZS5nZXRSZWN0TWluTWF4KGcseCx3LGIsRSk7dmFyIEE9RVswXSxCPUVbMV07aWYoIShtLnoteT5CfHxtLnoreTxBKSlmb3IodmFyIEM9ZztDPHc7QysrKWZvcih2YXIgUz14O1M8YjtTKyspe3ZhciBSPSExO2lmKGUuZ2V0Q29udmV4VHJpYW5nbGVQaWxsYXIoQyxTLCExKSxsLnBvaW50VG9Xb3JsZEZyYW1lKGkscyxlLnBpbGxhck9mZnNldCx2KSxvLmRpc3RhbmNlVG8odik8ZS5waWxsYXJDb252ZXguYm91bmRpbmdTcGhlcmVSYWRpdXMrdC5ib3VuZGluZ1NwaGVyZVJhZGl1cyYmKFI9dGhpcy5jb252ZXhDb252ZXgodCxlLnBpbGxhckNvbnZleCxvLHYsbixzLHIsYSxudWxsLG51bGwsdSxmLG51bGwpKSx1JiZSKXJldHVybiEwO2lmKGUuZ2V0Q29udmV4VHJpYW5nbGVQaWxsYXIoQyxTLCEwKSxsLnBvaW50VG9Xb3JsZEZyYW1lKGkscyxlLnBpbGxhck9mZnNldCx2KSxvLmRpc3RhbmNlVG8odik8ZS5waWxsYXJDb252ZXguYm91bmRpbmdTcGhlcmVSYWRpdXMrdC5ib3VuZGluZ1NwaGVyZVJhZGl1cyYmKFI9dGhpcy5jb252ZXhDb252ZXgodCxlLnBpbGxhckNvbnZleCxvLHYsbixzLHIsYSxudWxsLG51bGwsdSxmLG51bGwpKSx1JiZSKXJldHVybiEwfX19O3ZhciBNdD1uZXcgaCxUdD1uZXcgaDtpLnByb3RvdHlwZVthLnR5cGVzLlNQSEVSRXxhLnR5cGVzLkhFSUdIVEZJRUxEXT1pLnByb3RvdHlwZS5zcGhlcmVIZWlnaHRmaWVsZD1mdW5jdGlvbih0LGUsbyxpLG4scyxyLGEsYyxoLHUpe3ZhciBwPWUuZGF0YSxkPXQucmFkaXVzLHk9ZS5lbGVtZW50U2l6ZSx2PVR0LGY9TXQ7bC5wb2ludFRvTG9jYWxGcmFtZShpLHMsbyxmKTt2YXIgbT1NYXRoLmZsb29yKChmLngtZCkveSktMSxnPU1hdGguY2VpbCgoZi54K2QpL3kpKzEsdz1NYXRoLmZsb29yKChmLnktZCkveSktMSx4PU1hdGguY2VpbCgoZi55K2QpL3kpKzE7aWYoIShnPDB8fHg8MHx8bT5wLmxlbmd0aHx8eD5wWzBdLmxlbmd0aCkpe208MCYmKG09MCksZzwwJiYoZz0wKSx3PDAmJih3PTApLHg8MCYmKHg9MCksbT49cC5sZW5ndGgmJihtPXAubGVuZ3RoLTEpLGc+PXAubGVuZ3RoJiYoZz1wLmxlbmd0aC0xKSx4Pj1wWzBdLmxlbmd0aCYmKHg9cFswXS5sZW5ndGgtMSksdz49cFswXS5sZW5ndGgmJih3PXBbMF0ubGVuZ3RoLTEpO3ZhciBiPVtdO2UuZ2V0UmVjdE1pbk1heChtLHcsZyx4LGIpO3ZhciBFPWJbMF0sQT1iWzFdO2lmKCEoZi56LWQ+QXx8Zi56K2Q8RSkpZm9yKHZhciBCPXRoaXMucmVzdWx0LEM9bTtDPGc7QysrKWZvcih2YXIgUz13O1M8eDtTKyspe3ZhciBSPUIubGVuZ3RoLE09ITE7aWYoZS5nZXRDb252ZXhUcmlhbmdsZVBpbGxhcihDLFMsITEpLGwucG9pbnRUb1dvcmxkRnJhbWUoaSxzLGUucGlsbGFyT2Zmc2V0LHYpLG8uZGlzdGFuY2VUbyh2KTxlLnBpbGxhckNvbnZleC5ib3VuZGluZ1NwaGVyZVJhZGl1cyt0LmJvdW5kaW5nU3BoZXJlUmFkaXVzJiYoTT10aGlzLnNwaGVyZUNvbnZleCh0LGUucGlsbGFyQ29udmV4LG8sdixuLHMscixhLHQsZSx1KSksdSYmTSlyZXR1cm4hMDtpZihlLmdldENvbnZleFRyaWFuZ2xlUGlsbGFyKEMsUywhMCksbC5wb2ludFRvV29ybGRGcmFtZShpLHMsZS5waWxsYXJPZmZzZXQsdiksby5kaXN0YW5jZVRvKHYpPGUucGlsbGFyQ29udmV4LmJvdW5kaW5nU3BoZXJlUmFkaXVzK3QuYm91bmRpbmdTcGhlcmVSYWRpdXMmJihNPXRoaXMuc3BoZXJlQ29udmV4KHQsZS5waWxsYXJDb252ZXgsbyx2LG4scyxyLGEsdCxlLHUpKSx1JiZNKXJldHVybiEwO3ZhciBUPUIubGVuZ3RoLVI7aWYoVD4yKXJldHVybn19fX0se1wiLi4vY29sbGlzaW9uL0FBQkJcIjoxOCxcIi4uL2NvbGxpc2lvbi9SYXlcIjoyNSxcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIjozNSxcIi4uL2VxdWF0aW9ucy9GcmljdGlvbkVxdWF0aW9uXCI6MzcsXCIuLi9tYXRoL1F1YXRlcm5pb25cIjo0NCxcIi4uL21hdGgvVHJhbnNmb3JtXCI6NDUsXCIuLi9tYXRoL1ZlYzNcIjo0NixcIi4uL29iamVjdHMvQm9keVwiOjQ3LFwiLi4vc2hhcGVzL0NvbnZleFBvbHloZWRyb25cIjo1NCxcIi4uL3NoYXBlcy9TaGFwZVwiOjU5LFwiLi4vc29sdmVyL1NvbHZlclwiOjYzLFwiLi4vdXRpbHMvVmVjM1Bvb2xcIjo3MH1dLDcyOltmdW5jdGlvbih0LGUsbyl7ZnVuY3Rpb24gaSh0KXt0PXR8fHt9LGMuYXBwbHkodGhpcyksdGhpcy5kdD0tMSx0aGlzLmFsbG93U2xlZXA9ISF0LmFsbG93U2xlZXAsdGhpcy5jb250YWN0cz1bXSx0aGlzLmZyaWN0aW9uRXF1YXRpb25zPVtdLHRoaXMucXVhdE5vcm1hbGl6ZVNraXA9dm9pZCAwIT09dC5xdWF0Tm9ybWFsaXplU2tpcD90LnF1YXROb3JtYWxpemVTa2lwOjAsdGhpcy5xdWF0Tm9ybWFsaXplRmFzdD12b2lkIDAhPT10LnF1YXROb3JtYWxpemVGYXN0JiZ0LnF1YXROb3JtYWxpemVGYXN0LHRoaXMudGltZT0wLHRoaXMuc3RlcG51bWJlcj0wLHRoaXMuZGVmYXVsdF9kdD0xLzYwLHRoaXMubmV4dElkPTAsdGhpcy5ncmF2aXR5PW5ldyBuLHQuZ3Jhdml0eSYmdGhpcy5ncmF2aXR5LmNvcHkodC5ncmF2aXR5KSx0aGlzLmJyb2FkcGhhc2U9dm9pZCAwIT09dC5icm9hZHBoYXNlP3QuYnJvYWRwaGFzZTpuZXcgZyx0aGlzLmJvZGllcz1bXSx0aGlzLnNvbHZlcj12b2lkIDAhPT10LnNvbHZlcj90LnNvbHZlcjpuZXcgcix0aGlzLmNvbnN0cmFpbnRzPVtdLHRoaXMubmFycm93cGhhc2U9bmV3IGEodGhpcyksdGhpcy5jb2xsaXNpb25NYXRyaXg9bmV3IGgsdGhpcy5jb2xsaXNpb25NYXRyaXhQcmV2aW91cz1uZXcgaCx0aGlzLmJvZHlPdmVybGFwS2VlcGVyPW5ldyBsLHRoaXMuc2hhcGVPdmVybGFwS2VlcGVyPW5ldyBsLHRoaXMubWF0ZXJpYWxzPVtdLHRoaXMuY29udGFjdG1hdGVyaWFscz1bXSx0aGlzLmNvbnRhY3RNYXRlcmlhbFRhYmxlPW5ldyB5LHRoaXMuZGVmYXVsdE1hdGVyaWFsPW5ldyB1KFwiZGVmYXVsdFwiKSx0aGlzLmRlZmF1bHRDb250YWN0TWF0ZXJpYWw9bmV3IHAodGhpcy5kZWZhdWx0TWF0ZXJpYWwsdGhpcy5kZWZhdWx0TWF0ZXJpYWwse2ZyaWN0aW9uOi4zLHJlc3RpdHV0aW9uOjB9KSx0aGlzLmRvUHJvZmlsaW5nPSExLHRoaXMucHJvZmlsZT17c29sdmU6MCxtYWtlQ29udGFjdENvbnN0cmFpbnRzOjAsYnJvYWRwaGFzZTowLGludGVncmF0ZTowLG5hcnJvd3BoYXNlOjB9LHRoaXMuYWNjdW11bGF0b3I9MCx0aGlzLnN1YnN5c3RlbXM9W10sdGhpcy5hZGRCb2R5RXZlbnQ9e3R5cGU6XCJhZGRCb2R5XCIsYm9keTpudWxsfSx0aGlzLnJlbW92ZUJvZHlFdmVudD17dHlwZTpcInJlbW92ZUJvZHlcIixib2R5Om51bGx9LHRoaXMuaWRUb0JvZHlNYXA9e30sdGhpcy5icm9hZHBoYXNlLnNldFdvcmxkKHRoaXMpfWUuZXhwb3J0cz1pO3ZhciBuPSh0KFwiLi4vc2hhcGVzL1NoYXBlXCIpLHQoXCIuLi9tYXRoL1ZlYzNcIikpLHM9dChcIi4uL21hdGgvUXVhdGVybmlvblwiKSxyPXQoXCIuLi9zb2x2ZXIvR1NTb2x2ZXJcIiksYT0odChcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIiksdChcIi4uL2VxdWF0aW9ucy9GcmljdGlvbkVxdWF0aW9uXCIpLHQoXCIuL05hcnJvd3BoYXNlXCIpKSxjPXQoXCIuLi91dGlscy9FdmVudFRhcmdldFwiKSxoPXQoXCIuLi9jb2xsaXNpb24vQXJyYXlDb2xsaXNpb25NYXRyaXhcIiksbD10KFwiLi4vY29sbGlzaW9uL092ZXJsYXBLZWVwZXJcIiksdT10KFwiLi4vbWF0ZXJpYWwvTWF0ZXJpYWxcIikscD10KFwiLi4vbWF0ZXJpYWwvQ29udGFjdE1hdGVyaWFsXCIpLGQ9dChcIi4uL29iamVjdHMvQm9keVwiKSx5PXQoXCIuLi91dGlscy9UdXBsZURpY3Rpb25hcnlcIiksdj10KFwiLi4vY29sbGlzaW9uL1JheWNhc3RSZXN1bHRcIiksZj10KFwiLi4vY29sbGlzaW9uL0FBQkJcIiksbT10KFwiLi4vY29sbGlzaW9uL1JheVwiKSxnPXQoXCIuLi9jb2xsaXNpb24vTmFpdmVCcm9hZHBoYXNlXCIpO2kucHJvdG90eXBlPW5ldyBjO3ZhciB3PShuZXcgZixuZXcgbSk7aWYoaS5wcm90b3R5cGUuZ2V0Q29udGFjdE1hdGVyaWFsPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY29udGFjdE1hdGVyaWFsVGFibGUuZ2V0KHQuaWQsZS5pZCl9LGkucHJvdG90eXBlLm51bU9iamVjdHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ib2RpZXMubGVuZ3RofSxpLnByb3RvdHlwZS5jb2xsaXNpb25NYXRyaXhUaWNrPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb2xsaXNpb25NYXRyaXhQcmV2aW91czt0aGlzLmNvbGxpc2lvbk1hdHJpeFByZXZpb3VzPXRoaXMuY29sbGlzaW9uTWF0cml4LHRoaXMuY29sbGlzaW9uTWF0cml4PXQsdGhpcy5jb2xsaXNpb25NYXRyaXgucmVzZXQoKSx0aGlzLmJvZHlPdmVybGFwS2VlcGVyLnRpY2soKSx0aGlzLnNoYXBlT3ZlcmxhcEtlZXBlci50aWNrKCl9LGkucHJvdG90eXBlLmFkZD1pLnByb3RvdHlwZS5hZGRCb2R5PWZ1bmN0aW9uKHQpey0xPT09dGhpcy5ib2RpZXMuaW5kZXhPZih0KSYmKHQuaW5kZXg9dGhpcy5ib2RpZXMubGVuZ3RoLHRoaXMuYm9kaWVzLnB1c2godCksdC53b3JsZD10aGlzLHQuaW5pdFBvc2l0aW9uLmNvcHkodC5wb3NpdGlvbiksdC5pbml0VmVsb2NpdHkuY29weSh0LnZlbG9jaXR5KSx0LnRpbWVMYXN0U2xlZXB5PXRoaXMudGltZSx0IGluc3RhbmNlb2YgZCYmKHQuaW5pdEFuZ3VsYXJWZWxvY2l0eS5jb3B5KHQuYW5ndWxhclZlbG9jaXR5KSx0LmluaXRRdWF0ZXJuaW9uLmNvcHkodC5xdWF0ZXJuaW9uKSksdGhpcy5jb2xsaXNpb25NYXRyaXguc2V0TnVtT2JqZWN0cyh0aGlzLmJvZGllcy5sZW5ndGgpLHRoaXMuYWRkQm9keUV2ZW50LmJvZHk9dCx0aGlzLmlkVG9Cb2R5TWFwW3QuaWRdPXQsdGhpcy5kaXNwYXRjaEV2ZW50KHRoaXMuYWRkQm9keUV2ZW50KSl9LGkucHJvdG90eXBlLmFkZENvbnN0cmFpbnQ9ZnVuY3Rpb24odCl7dGhpcy5jb25zdHJhaW50cy5wdXNoKHQpfSxpLnByb3RvdHlwZS5yZW1vdmVDb25zdHJhaW50PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY29uc3RyYWludHMuaW5kZXhPZih0KTstMSE9PWUmJnRoaXMuY29uc3RyYWludHMuc3BsaWNlKGUsMSl9LGkucHJvdG90eXBlLnJheVRlc3Q9ZnVuY3Rpb24odCxlLG8pe28gaW5zdGFuY2VvZiB2P3RoaXMucmF5Y2FzdENsb3Nlc3QodCxlLHtza2lwQmFja2ZhY2VzOiEwfSxvKTp0aGlzLnJheWNhc3RBbGwodCxlLHtza2lwQmFja2ZhY2VzOiEwfSxvKX0saS5wcm90b3R5cGUucmF5Y2FzdEFsbD1mdW5jdGlvbih0LGUsbyxpKXtyZXR1cm4gby5tb2RlPW0uQUxMLG8uZnJvbT10LG8udG89ZSxvLmNhbGxiYWNrPWksdy5pbnRlcnNlY3RXb3JsZCh0aGlzLG8pfSxpLnByb3RvdHlwZS5yYXljYXN0QW55PWZ1bmN0aW9uKHQsZSxvLGkpe3JldHVybiBvLm1vZGU9bS5BTlksby5mcm9tPXQsby50bz1lLG8ucmVzdWx0PWksdy5pbnRlcnNlY3RXb3JsZCh0aGlzLG8pfSxpLnByb3RvdHlwZS5yYXljYXN0Q2xvc2VzdD1mdW5jdGlvbih0LGUsbyxpKXtyZXR1cm4gby5tb2RlPW0uQ0xPU0VTVCxvLmZyb209dCxvLnRvPWUsby5yZXN1bHQ9aSx3LmludGVyc2VjdFdvcmxkKHRoaXMsbyl9LGkucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbih0KXt0LndvcmxkPW51bGw7dmFyIGU9dGhpcy5ib2RpZXMubGVuZ3RoLTEsbz10aGlzLmJvZGllcyxpPW8uaW5kZXhPZih0KTtpZigtMSE9PWkpe28uc3BsaWNlKGksMSk7Zm9yKHZhciBuPTA7biE9PW8ubGVuZ3RoO24rKylvW25dLmluZGV4PW47dGhpcy5jb2xsaXNpb25NYXRyaXguc2V0TnVtT2JqZWN0cyhlKSx0aGlzLnJlbW92ZUJvZHlFdmVudC5ib2R5PXQsZGVsZXRlIHRoaXMuaWRUb0JvZHlNYXBbdC5pZF0sdGhpcy5kaXNwYXRjaEV2ZW50KHRoaXMucmVtb3ZlQm9keUV2ZW50KX19LGkucHJvdG90eXBlLnJlbW92ZUJvZHk9aS5wcm90b3R5cGUucmVtb3ZlLGkucHJvdG90eXBlLmdldEJvZHlCeUlkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmlkVG9Cb2R5TWFwW3RdfSxpLnByb3RvdHlwZS5nZXRTaGFwZUJ5SWQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuYm9kaWVzLG89MCxpPWUubGVuZ3RoO288aTtvKyspZm9yKHZhciBuPWVbb10uc2hhcGVzLHM9MCxyPW4ubGVuZ3RoO3M8cjtzKyspe3ZhciBhPW5bc107aWYoYS5pZD09PXQpcmV0dXJuIGF9fSxpLnByb3RvdHlwZS5hZGRNYXRlcmlhbD1mdW5jdGlvbih0KXt0aGlzLm1hdGVyaWFscy5wdXNoKHQpfSxpLnByb3RvdHlwZS5hZGRDb250YWN0TWF0ZXJpYWw9ZnVuY3Rpb24odCl7dGhpcy5jb250YWN0bWF0ZXJpYWxzLnB1c2godCksdGhpcy5jb250YWN0TWF0ZXJpYWxUYWJsZS5zZXQodC5tYXRlcmlhbHNbMF0uaWQsdC5tYXRlcmlhbHNbMV0uaWQsdCl9LFwidW5kZWZpbmVkXCI9PXR5cGVvZiBwZXJmb3JtYW5jZSYmKHBlcmZvcm1hbmNlPXt9KSwhcGVyZm9ybWFuY2Uubm93KXt2YXIgeD1EYXRlLm5vdygpO3BlcmZvcm1hbmNlLnRpbWluZyYmcGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCYmKHg9cGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCkscGVyZm9ybWFuY2Uubm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCkteH19bmV3IG47aS5wcm90b3R5cGUuc3RlcD1mdW5jdGlvbih0LGUsbyl7aWYobz1vfHwxMCwwPT09KGU9ZXx8MCkpdGhpcy5pbnRlcm5hbFN0ZXAodCksdGhpcy50aW1lKz10O2Vsc2V7dGhpcy5hY2N1bXVsYXRvcis9ZTtmb3IodmFyIGk9MDt0aGlzLmFjY3VtdWxhdG9yPj10JiZpPG87KXRoaXMuaW50ZXJuYWxTdGVwKHQpLHRoaXMuYWNjdW11bGF0b3ItPXQsaSsrO2Zvcih2YXIgbj10aGlzLmFjY3VtdWxhdG9yJXQvdCxzPTA7cyE9PXRoaXMuYm9kaWVzLmxlbmd0aDtzKyspe3ZhciByPXRoaXMuYm9kaWVzW3NdO3IucHJldmlvdXNQb3NpdGlvbi5sZXJwKHIucG9zaXRpb24sbixyLmludGVycG9sYXRlZFBvc2l0aW9uKSxyLnByZXZpb3VzUXVhdGVybmlvbi5zbGVycChyLnF1YXRlcm5pb24sbixyLmludGVycG9sYXRlZFF1YXRlcm5pb24pLHIucHJldmlvdXNRdWF0ZXJuaW9uLm5vcm1hbGl6ZSgpfXRoaXMudGltZSs9ZX19O3ZhciBiPXt0eXBlOlwicG9zdFN0ZXBcIn0sRT17dHlwZTpcInByZVN0ZXBcIn0sQT17dHlwZTpkLkNPTExJREVfRVZFTlRfTkFNRSxib2R5Om51bGwsY29udGFjdDpudWxsfSxCPVtdLEM9W10sUz1bXSxSPVtdO25ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBuLG5ldyBzLG5ldyBzLG5ldyBzLG5ldyBuO2kucHJvdG90eXBlLmludGVybmFsU3RlcD1mdW5jdGlvbih0KXt0aGlzLmR0PXQ7dmFyIGUsbz10aGlzLmNvbnRhY3RzLGk9UyxuPVIscz10aGlzLm51bU9iamVjdHMoKSxyPXRoaXMuYm9kaWVzLGE9dGhpcy5zb2x2ZXIsYz10aGlzLmdyYXZpdHksaD10aGlzLmRvUHJvZmlsaW5nLGw9dGhpcy5wcm9maWxlLHU9ZC5EWU5BTUlDLHA9dGhpcy5jb25zdHJhaW50cyx5PUMsdj0oYy5ub3JtKCksYy54KSxmPWMueSxtPWMueixnPTA7Zm9yKGgmJihlPXBlcmZvcm1hbmNlLm5vdygpKSxnPTA7ZyE9PXM7ZysrKXt2YXIgdz1yW2ddO2lmKHcudHlwZT09PXUpe3ZhciB4PXcuZm9yY2UsTT13Lm1hc3M7eC54Kz1NKnYseC55Kz1NKmYseC56Kz1NKm19fWZvcih2YXIgZz0wLFQ9dGhpcy5zdWJzeXN0ZW1zLmxlbmd0aDtnIT09VDtnKyspdGhpcy5zdWJzeXN0ZW1zW2ddLnVwZGF0ZSgpO2gmJihlPXBlcmZvcm1hbmNlLm5vdygpKSxpLmxlbmd0aD0wLG4ubGVuZ3RoPTAsdGhpcy5icm9hZHBoYXNlLmNvbGxpc2lvblBhaXJzKHRoaXMsaSxuKSxoJiYobC5icm9hZHBoYXNlPXBlcmZvcm1hbmNlLm5vdygpLWUpO3ZhciB6PXAubGVuZ3RoO2ZvcihnPTA7ZyE9PXo7ZysrKXt2YXIgaz1wW2ddO2lmKCFrLmNvbGxpZGVDb25uZWN0ZWQpZm9yKHZhciBQPWkubGVuZ3RoLTE7UD49MDtQLT0xKShrLmJvZHlBPT09aVtQXSYmay5ib2R5Qj09PW5bUF18fGsuYm9keUI9PT1pW1BdJiZrLmJvZHlBPT09bltQXSkmJihpLnNwbGljZShQLDEpLG4uc3BsaWNlKFAsMSkpfXRoaXMuY29sbGlzaW9uTWF0cml4VGljaygpLGgmJihlPXBlcmZvcm1hbmNlLm5vdygpKTt2YXIgcT1CLEw9by5sZW5ndGg7Zm9yKGc9MDtnIT09TDtnKyspcS5wdXNoKG9bZ10pO28ubGVuZ3RoPTA7dmFyIFY9dGhpcy5mcmljdGlvbkVxdWF0aW9ucy5sZW5ndGg7Zm9yKGc9MDtnIT09VjtnKyspeS5wdXNoKHRoaXMuZnJpY3Rpb25FcXVhdGlvbnNbZ10pO3RoaXMuZnJpY3Rpb25FcXVhdGlvbnMubGVuZ3RoPTAsdGhpcy5uYXJyb3dwaGFzZS5nZXRDb250YWN0cyhpLG4sdGhpcyxvLHEsdGhpcy5mcmljdGlvbkVxdWF0aW9ucyx5KSxoJiYobC5uYXJyb3dwaGFzZT1wZXJmb3JtYW5jZS5ub3coKS1lKSxoJiYoZT1wZXJmb3JtYW5jZS5ub3coKSk7Zm9yKHZhciBnPTA7Zzx0aGlzLmZyaWN0aW9uRXF1YXRpb25zLmxlbmd0aDtnKyspYS5hZGRFcXVhdGlvbih0aGlzLmZyaWN0aW9uRXF1YXRpb25zW2ddKTtmb3IodmFyIEY9by5sZW5ndGgsTj0wO04hPT1GO04rKyl7dmFyIEksaz1vW05dLHc9ay5iaSxqPWsuYmosTz1rLnNpLEQ9ay5zajtJPXcubWF0ZXJpYWwmJmoubWF0ZXJpYWw/dGhpcy5nZXRDb250YWN0TWF0ZXJpYWwody5tYXRlcmlhbCxqLm1hdGVyaWFsKXx8dGhpcy5kZWZhdWx0Q29udGFjdE1hdGVyaWFsOnRoaXMuZGVmYXVsdENvbnRhY3RNYXRlcmlhbDtJLmZyaWN0aW9uO2lmKHcubWF0ZXJpYWwmJmoubWF0ZXJpYWwmJih3Lm1hdGVyaWFsLmZyaWN0aW9uPj0wJiZqLm1hdGVyaWFsLmZyaWN0aW9uPj0wJiZ3Lm1hdGVyaWFsLmZyaWN0aW9uKmoubWF0ZXJpYWwuZnJpY3Rpb24sdy5tYXRlcmlhbC5yZXN0aXR1dGlvbj49MCYmai5tYXRlcmlhbC5yZXN0aXR1dGlvbj49MCYmKGsucmVzdGl0dXRpb249dy5tYXRlcmlhbC5yZXN0aXR1dGlvbipqLm1hdGVyaWFsLnJlc3RpdHV0aW9uKSksYS5hZGRFcXVhdGlvbihrKSx3LmFsbG93U2xlZXAmJncudHlwZT09PWQuRFlOQU1JQyYmdy5zbGVlcFN0YXRlPT09ZC5TTEVFUElORyYmai5zbGVlcFN0YXRlPT09ZC5BV0FLRSYmai50eXBlIT09ZC5TVEFUSUMpe2oudmVsb2NpdHkubm9ybTIoKStqLmFuZ3VsYXJWZWxvY2l0eS5ub3JtMigpPj0yKk1hdGgucG93KGouc2xlZXBTcGVlZExpbWl0LDIpJiYody5fd2FrZVVwQWZ0ZXJOYXJyb3dwaGFzZT0hMCl9aWYoai5hbGxvd1NsZWVwJiZqLnR5cGU9PT1kLkRZTkFNSUMmJmouc2xlZXBTdGF0ZT09PWQuU0xFRVBJTkcmJncuc2xlZXBTdGF0ZT09PWQuQVdBS0UmJncudHlwZSE9PWQuU1RBVElDKXt3LnZlbG9jaXR5Lm5vcm0yKCkrdy5hbmd1bGFyVmVsb2NpdHkubm9ybTIoKT49MipNYXRoLnBvdyh3LnNsZWVwU3BlZWRMaW1pdCwyKSYmKGouX3dha2VVcEFmdGVyTmFycm93cGhhc2U9ITApfXRoaXMuY29sbGlzaW9uTWF0cml4LnNldCh3LGosITApLHRoaXMuY29sbGlzaW9uTWF0cml4UHJldmlvdXMuZ2V0KHcsail8fChBLmJvZHk9aixBLmNvbnRhY3Q9ayx3LmRpc3BhdGNoRXZlbnQoQSksQS5ib2R5PXcsai5kaXNwYXRjaEV2ZW50KEEpKSx0aGlzLmJvZHlPdmVybGFwS2VlcGVyLnNldCh3LmlkLGouaWQpLHRoaXMuc2hhcGVPdmVybGFwS2VlcGVyLnNldChPLmlkLEQuaWQpfWZvcih0aGlzLmVtaXRDb250YWN0RXZlbnRzKCksaCYmKGwubWFrZUNvbnRhY3RDb25zdHJhaW50cz1wZXJmb3JtYW5jZS5ub3coKS1lLGU9cGVyZm9ybWFuY2Uubm93KCkpLGc9MDtnIT09cztnKyspe3ZhciB3PXJbZ107dy5fd2FrZVVwQWZ0ZXJOYXJyb3dwaGFzZSYmKHcud2FrZVVwKCksdy5fd2FrZVVwQWZ0ZXJOYXJyb3dwaGFzZT0hMSl9dmFyIHo9cC5sZW5ndGg7Zm9yKGc9MDtnIT09ejtnKyspe3ZhciBrPXBbZ107ay51cGRhdGUoKTtmb3IodmFyIFA9MCxXPWsuZXF1YXRpb25zLmxlbmd0aDtQIT09VztQKyspe3ZhciBIPWsuZXF1YXRpb25zW1BdO2EuYWRkRXF1YXRpb24oSCl9fWEuc29sdmUodCx0aGlzKSxoJiYobC5zb2x2ZT1wZXJmb3JtYW5jZS5ub3coKS1lKSxhLnJlbW92ZUFsbEVxdWF0aW9ucygpO3ZhciBLPU1hdGgucG93O2ZvcihnPTA7ZyE9PXM7ZysrKXt2YXIgdz1yW2ddO2lmKHcudHlwZSZ1KXt2YXIgXz1LKDEtdy5saW5lYXJEYW1waW5nLHQpLFU9dy52ZWxvY2l0eTtVLm11bHQoXyxVKTt2YXIgRz13LmFuZ3VsYXJWZWxvY2l0eTtpZihHKXt2YXIgWT1LKDEtdy5hbmd1bGFyRGFtcGluZyx0KTtHLm11bHQoWSxHKX19fWZvcih0aGlzLmRpc3BhdGNoRXZlbnQoRSksZz0wO2chPT1zO2crKyl7dmFyIHc9cltnXTt3LnByZVN0ZXAmJncucHJlU3RlcC5jYWxsKHcpfWgmJihlPXBlcmZvcm1hbmNlLm5vdygpKTt2YXIgWD10aGlzLnN0ZXBudW1iZXIsUT1YJSh0aGlzLnF1YXROb3JtYWxpemVTa2lwKzEpPT0wLFo9dGhpcy5xdWF0Tm9ybWFsaXplRmFzdDtmb3IoZz0wO2chPT1zO2crKylyW2ddLmludGVncmF0ZSh0LFEsWik7Zm9yKHRoaXMuY2xlYXJGb3JjZXMoKSx0aGlzLmJyb2FkcGhhc2UuZGlydHk9ITAsaCYmKGwuaW50ZWdyYXRlPXBlcmZvcm1hbmNlLm5vdygpLWUpLHRoaXMudGltZSs9dCx0aGlzLnN0ZXBudW1iZXIrPTEsdGhpcy5kaXNwYXRjaEV2ZW50KGIpLGc9MDtnIT09cztnKyspe3ZhciB3PXJbZ10sSj13LnBvc3RTdGVwO0omJkouY2FsbCh3KX1pZih0aGlzLmFsbG93U2xlZXApZm9yKGc9MDtnIT09cztnKyspcltnXS5zbGVlcFRpY2sodGhpcy50aW1lKX0saS5wcm90b3R5cGUuZW1pdENvbnRhY3RFdmVudHM9ZnVuY3Rpb24oKXt2YXIgdD1bXSxlPVtdLG89e3R5cGU6XCJiZWdpbkNvbnRhY3RcIixib2R5QTpudWxsLGJvZHlCOm51bGx9LGk9e3R5cGU6XCJlbmRDb250YWN0XCIsYm9keUE6bnVsbCxib2R5QjpudWxsfSxuPXt0eXBlOlwiYmVnaW5TaGFwZUNvbnRhY3RcIixib2R5QTpudWxsLGJvZHlCOm51bGwsc2hhcGVBOm51bGwsc2hhcGVCOm51bGx9LHM9e3R5cGU6XCJlbmRTaGFwZUNvbnRhY3RcIixib2R5QTpudWxsLGJvZHlCOm51bGwsc2hhcGVBOm51bGwsc2hhcGVCOm51bGx9O3JldHVybiBmdW5jdGlvbigpe3ZhciByPXRoaXMuaGFzQW55RXZlbnRMaXN0ZW5lcihcImJlZ2luQ29udGFjdFwiKSxhPXRoaXMuaGFzQW55RXZlbnRMaXN0ZW5lcihcImVuZENvbnRhY3RcIik7aWYoKHJ8fGEpJiZ0aGlzLmJvZHlPdmVybGFwS2VlcGVyLmdldERpZmYodCxlKSxyKXtmb3IodmFyIGM9MCxoPXQubGVuZ3RoO2M8aDtjKz0yKW8uYm9keUE9dGhpcy5nZXRCb2R5QnlJZCh0W2NdKSxvLmJvZHlCPXRoaXMuZ2V0Qm9keUJ5SWQodFtjKzFdKSx0aGlzLmRpc3BhdGNoRXZlbnQobyk7by5ib2R5QT1vLmJvZHlCPW51bGx9aWYoYSl7Zm9yKHZhciBjPTAsaD1lLmxlbmd0aDtjPGg7Yys9MilpLmJvZHlBPXRoaXMuZ2V0Qm9keUJ5SWQoZVtjXSksaS5ib2R5Qj10aGlzLmdldEJvZHlCeUlkKGVbYysxXSksdGhpcy5kaXNwYXRjaEV2ZW50KGkpO2kuYm9keUE9aS5ib2R5Qj1udWxsfXQubGVuZ3RoPWUubGVuZ3RoPTA7dmFyIGw9dGhpcy5oYXNBbnlFdmVudExpc3RlbmVyKFwiYmVnaW5TaGFwZUNvbnRhY3RcIiksdT10aGlzLmhhc0FueUV2ZW50TGlzdGVuZXIoXCJlbmRTaGFwZUNvbnRhY3RcIik7aWYoKGx8fHUpJiZ0aGlzLnNoYXBlT3ZlcmxhcEtlZXBlci5nZXREaWZmKHQsZSksbCl7Zm9yKHZhciBjPTAsaD10Lmxlbmd0aDtjPGg7Yys9Mil7dmFyIHA9dGhpcy5nZXRTaGFwZUJ5SWQodFtjXSksZD10aGlzLmdldFNoYXBlQnlJZCh0W2MrMV0pO24uc2hhcGVBPXAsbi5zaGFwZUI9ZCxuLmJvZHlBPXAuYm9keSxuLmJvZHlCPWQuYm9keSx0aGlzLmRpc3BhdGNoRXZlbnQobil9bi5ib2R5QT1uLmJvZHlCPW4uc2hhcGVBPW4uc2hhcGVCPW51bGx9aWYodSl7Zm9yKHZhciBjPTAsaD1lLmxlbmd0aDtjPGg7Yys9Mil7dmFyIHA9dGhpcy5nZXRTaGFwZUJ5SWQoZVtjXSksZD10aGlzLmdldFNoYXBlQnlJZChlW2MrMV0pO3Muc2hhcGVBPXAscy5zaGFwZUI9ZCxzLmJvZHlBPXAuYm9keSxzLmJvZHlCPWQuYm9keSx0aGlzLmRpc3BhdGNoRXZlbnQocyl9cy5ib2R5QT1zLmJvZHlCPXMuc2hhcGVBPXMuc2hhcGVCPW51bGx9fX0oKSxpLnByb3RvdHlwZS5jbGVhckZvcmNlcz1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmJvZGllcyxlPXQubGVuZ3RoLG89MDtvIT09ZTtvKyspe3ZhciBpPXRbb107aS5mb3JjZSxpLnRvcnF1ZTtpLmZvcmNlLnNldCgwLDAsMCksaS50b3JxdWUuc2V0KDAsMCwwKX19fSx7XCIuLi9jb2xsaXNpb24vQUFCQlwiOjE4LFwiLi4vY29sbGlzaW9uL0FycmF5Q29sbGlzaW9uTWF0cml4XCI6MTksXCIuLi9jb2xsaXNpb24vTmFpdmVCcm9hZHBoYXNlXCI6MjIsXCIuLi9jb2xsaXNpb24vT3ZlcmxhcEtlZXBlclwiOjI0LFwiLi4vY29sbGlzaW9uL1JheVwiOjI1LFwiLi4vY29sbGlzaW9uL1JheWNhc3RSZXN1bHRcIjoyNixcIi4uL2VxdWF0aW9ucy9Db250YWN0RXF1YXRpb25cIjozNSxcIi4uL2VxdWF0aW9ucy9GcmljdGlvbkVxdWF0aW9uXCI6MzcsXCIuLi9tYXRlcmlhbC9Db250YWN0TWF0ZXJpYWxcIjo0MCxcIi4uL21hdGVyaWFsL01hdGVyaWFsXCI6NDEsXCIuLi9tYXRoL1F1YXRlcm5pb25cIjo0NCxcIi4uL21hdGgvVmVjM1wiOjQ2LFwiLi4vb2JqZWN0cy9Cb2R5XCI6NDcsXCIuLi9zaGFwZXMvU2hhcGVcIjo1OSxcIi4uL3NvbHZlci9HU1NvbHZlclwiOjYyLFwiLi4vdXRpbHMvRXZlbnRUYXJnZXRcIjo2NSxcIi4uL3V0aWxzL1R1cGxlRGljdGlvbmFyeVwiOjY4LFwiLi9OYXJyb3dwaGFzZVwiOjcxfV0sNzM6W2Z1bmN0aW9uKHQsZSxvKXtmdW5jdGlvbiBpKHQpe2lmKCF5KHQpLmxlbmd0aClyZXR1cm4gbnVsbDt0LmNvbXB1dGVCb3VuZGluZ0JveCgpO3ZhciBlPXQuYm91bmRpbmdCb3g7cmV0dXJuIG5ldyBmLkJveChuZXcgZi5WZWMzKChlLm1heC54LWUubWluLngpLzIsKGUubWF4LnktZS5taW4ueSkvMiwoZS5tYXguei1lLm1pbi56KS8yKSl9ZnVuY3Rpb24gbih0KXt2YXIgZSxvLGksbj1uZXcgVEhSRUUuQm94MztyZXR1cm4gbi5zZXRGcm9tT2JqZWN0KHQpLGlzRmluaXRlKG4ubWluLmxlbmd0aFNxKCkpPyhlPW5ldyBmLkJveChuZXcgZi5WZWMzKChuLm1heC54LW4ubWluLngpLzIsKG4ubWF4Lnktbi5taW4ueSkvMiwobi5tYXguei1uLm1pbi56KS8yKSksdC51cGRhdGVNYXRyaXhXb3JsZCgpLGk9bmV3IFRIUkVFLlZlY3RvcjMsaS5zZXRGcm9tTWF0cml4UG9zaXRpb24odC5tYXRyaXhXb3JsZCksbz1uLnRyYW5zbGF0ZShpLm5lZ2F0ZSgpKS5nZXRDZW50ZXIoKSxvLmxlbmd0aFNxKCkmJihlLm9mZnNldD1vKSxlKTpudWxsfWZ1bmN0aW9uIHModCl7dmFyIGUsbyxpLG4scz1kKHQpO2lmKCFzfHwhcy52ZXJ0aWNlcy5sZW5ndGgpcmV0dXJuIG51bGw7Zm9yKGU9MDtlPHMudmVydGljZXMubGVuZ3RoO2UrKylzLnZlcnRpY2VzW2VdLngrPTFlLTQqKE1hdGgucmFuZG9tKCktLjUpLHMudmVydGljZXNbZV0ueSs9MWUtNCooTWF0aC5yYW5kb20oKS0uNSkscy52ZXJ0aWNlc1tlXS56Kz0xZS00KihNYXRoLnJhbmRvbSgpLS41KTtmb3Iobj1tKHMpLG89bmV3IEFycmF5KG4udmVydGljZXMubGVuZ3RoKSxlPTA7ZTxuLnZlcnRpY2VzLmxlbmd0aDtlKyspb1tlXT1uZXcgZi5WZWMzKG4udmVydGljZXNbZV0ueCxuLnZlcnRpY2VzW2VdLnksbi52ZXJ0aWNlc1tlXS56KTtmb3IoaT1uZXcgQXJyYXkobi5mYWNlcy5sZW5ndGgpLGU9MDtlPG4uZmFjZXMubGVuZ3RoO2UrKylpW2VdPVtuLmZhY2VzW2VdLmEsbi5mYWNlc1tlXS5iLG4uZmFjZXNbZV0uY107cmV0dXJuIG5ldyBmLkNvbnZleFBvbHloZWRyb24obyxpKX1mdW5jdGlvbiByKHQpe3ZhciBlLG89dC5tZXRhZGF0YT90Lm1ldGFkYXRhLnBhcmFtZXRlcnM6dC5wYXJhbWV0ZXJzO3JldHVybiBlPW5ldyBmLkN5bGluZGVyKG8ucmFkaXVzVG9wLG8ucmFkaXVzQm90dG9tLG8uaGVpZ2h0LG8ucmFkaWFsU2VnbWVudHMpLGUuX3R5cGU9Zi5TaGFwZS50eXBlcy5DWUxJTkRFUixlLnJhZGl1c1RvcD1vLnJhZGl1c1RvcCxlLnJhZGl1c0JvdHRvbT1vLnJhZGl1c0JvdHRvbSxlLmhlaWdodD1vLmhlaWdodCxlLm51bVNlZ21lbnRzPW8ucmFkaWFsU2VnbWVudHMsZS5vcmllbnRhdGlvbj1uZXcgZi5RdWF0ZXJuaW9uLGUub3JpZW50YXRpb24uc2V0RnJvbUV1bGVyKFRIUkVFLk1hdGguZGVnVG9SYWQoLTkwKSwwLDAsXCJYWVpcIikubm9ybWFsaXplKCksZX1mdW5jdGlvbiBhKHQsZSl7dmFyIG8saSxuLHM9ZCh0KSxyPVtcInhcIixcInlcIixcInpcIl0sYT1lLmN5bGluZGVyQXhpc3x8XCJ5XCIsYz1yLnNwbGljZShyLmluZGV4T2YoYSksMSkmJnI7cmV0dXJuIHMuY29tcHV0ZUJvdW5kaW5nQm94KCkscy5jb21wdXRlQm91bmRpbmdTcGhlcmUoKSxpPXMuYm91bmRpbmdCb3gubWF4W2FdLXMuYm91bmRpbmdCb3gubWluW2FdLG49LjUqTWF0aC5tYXgocy5ib3VuZGluZ0JveC5tYXhbY1swXV0tcy5ib3VuZGluZ0JveC5taW5bY1swXV0scy5ib3VuZGluZ0JveC5tYXhbY1sxXV0tcy5ib3VuZGluZ0JveC5taW5bY1sxXV0pLG89bmV3IGYuQ3lsaW5kZXIobixuLGksMTIpLG8uX3R5cGU9Zi5TaGFwZS50eXBlcy5DWUxJTkRFUixvLnJhZGl1c1RvcD1uLG8ucmFkaXVzQm90dG9tPW4sby5oZWlnaHQ9aSxvLm51bVNlZ21lbnRzPTEyLG8ub3JpZW50YXRpb249bmV3IGYuUXVhdGVybmlvbixvLm9yaWVudGF0aW9uLnNldEZyb21FdWxlcihcInlcIj09PWE/ZzowLFwielwiPT09YT9nOjAsMCxcIlhZWlwiKS5ub3JtYWxpemUoKSxvfWZ1bmN0aW9uIGModCl7dC5jb21wdXRlQm91bmRpbmdCb3goKTt2YXIgZT10LmJvdW5kaW5nQm94O3JldHVybiBuZXcgZi5Cb3gobmV3IGYuVmVjMygoZS5tYXgueC1lLm1pbi54KS8yfHwuMSwoZS5tYXgueS1lLm1pbi55KS8yfHwuMSwoZS5tYXguei1lLm1pbi56KS8yfHwuMSkpfWZ1bmN0aW9uIGgodCl7dmFyIGU9dC5tZXRhZGF0YT90Lm1ldGFkYXRhLnBhcmFtZXRlcnM6dC5wYXJhbWV0ZXJzO3JldHVybiBuZXcgZi5TcGhlcmUoZS5yYWRpdXMpfWZ1bmN0aW9uIGwodCxlKXtpZihlLnNwaGVyZVJhZGl1cylyZXR1cm4gbmV3IGYuU3BoZXJlKGUuc3BoZXJlUmFkaXVzKTt2YXIgbz1kKHQpO3JldHVybiBvPyhvLmNvbXB1dGVCb3VuZGluZ1NwaGVyZSgpLG5ldyBmLlNwaGVyZShvLmJvdW5kaW5nU3BoZXJlLnJhZGl1cykpOm51bGx9ZnVuY3Rpb24gdSh0KXt2YXIgZT1uZXcgVEhSRUUuQnVmZmVyR2VvbWV0cnk7cmV0dXJuIGUuZnJvbUdlb21ldHJ5KHQpLHAoZSl9ZnVuY3Rpb24gcCh0KXt2YXIgZSxvPXkodCk7cmV0dXJuIG8ubGVuZ3RoPyhlPU9iamVjdC5rZXlzKG8pLm1hcChOdW1iZXIpLG5ldyBmLlRyaW1lc2gobyxlKSk6bnVsbH1mdW5jdGlvbiBkKHQpe3ZhciBlLG8saT12KHQpLG49bmV3IFRIUkVFLkdlb21ldHJ5LHM9bmV3IFRIUkVFLkdlb21ldHJ5O2lmKDA9PT1pLmxlbmd0aClyZXR1cm4gbnVsbDtpZigxPT09aS5sZW5ndGgpe3ZhciByPW5ldyBUSFJFRS5WZWN0b3IzLGE9bmV3IFRIUkVFLlF1YXRlcm5pb24sYz1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gbj1pWzBdLmdlb21ldHJ5LmNsb25lKCksbi5tZXRhZGF0YT1pWzBdLmdlb21ldHJ5Lm1ldGFkYXRhLGlbMF0udXBkYXRlTWF0cml4V29ybGQoKSxpWzBdLm1hdHJpeFdvcmxkLmRlY29tcG9zZShyLGEsYyksbi5zY2FsZShjLngsYy55LGMueil9Zm9yKDtvPWkucG9wKCk7KW8udXBkYXRlTWF0cml4V29ybGQoKSxvLmdlb21ldHJ5IGluc3RhbmNlb2YgVEhSRUUuQnVmZmVyR2VvbWV0cnk/KG4uZnJvbUJ1ZmZlckdlb21ldHJ5KG8uZ2VvbWV0cnkpLHMubWVyZ2UobixvLm1hdHJpeFdvcmxkKSk6cy5tZXJnZShvLmdlb21ldHJ5LG8ubWF0cml4V29ybGQpO3JldHVybiBlPW5ldyBUSFJFRS5NYXRyaXg0LGUuc2NhbGUodC5zY2FsZSkscy5hcHBseU1hdHJpeChlKSxzfWZ1bmN0aW9uIHkodCl7cmV0dXJuIHQuYXR0cmlidXRlc3x8KHQ9KG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSkuZnJvbUdlb21ldHJ5KHQpKSwodC5hdHRyaWJ1dGVzLnBvc2l0aW9ufHx7fSkuYXJyYXl8fFtdfWZ1bmN0aW9uIHYodCl7dmFyIGU9W107cmV0dXJuIHQudHJhdmVyc2UoZnVuY3Rpb24odCl7XCJNZXNoXCI9PT10LnR5cGUmJmUucHVzaCh0KX0pLGV9dmFyIGY9dChcImNhbm5vblwiKSxtPXQoXCIuL2xpYi9USFJFRS5xdWlja2h1bGxcIiksZz1NYXRoLlBJLzIsdz17Qk9YOlwiQm94XCIsQ1lMSU5ERVI6XCJDeWxpbmRlclwiLFNQSEVSRTpcIlNwaGVyZVwiLEhVTEw6XCJDb252ZXhQb2x5aGVkcm9uXCJ9O2UuZXhwb3J0cz1mLm1lc2gyc2hhcGU9ZnVuY3Rpb24odCxlKXtpZihlPWV8fHt9LGUudHlwZT09PXcuQk9YKXJldHVybiBuKHQpO2lmKGUudHlwZT09PXcuQ1lMSU5ERVIpcmV0dXJuIGEodCxlKTtpZihlLnR5cGU9PT13LlNQSEVSRSlyZXR1cm4gbCh0LGUpO2lmKGUudHlwZT09PXcuSFVMTClyZXR1cm4gcyh0KTtpZihlLnR5cGUpdGhyb3cgbmV3IEVycm9yKCdbQ0FOTk9OLm1lc2gyc2hhcGVdIEludmFsaWQgdHlwZSBcIiVzXCIuJyxlLnR5cGUpO3ZhciBvPWQodCk7aWYoIW8pcmV0dXJuIG51bGw7c3dpdGNoKG8ubWV0YWRhdGE/by5tZXRhZGF0YS50eXBlOm8udHlwZSl7Y2FzZVwiQm94R2VvbWV0cnlcIjpjYXNlXCJCb3hCdWZmZXJHZW9tZXRyeVwiOnJldHVybiBpKG8pO2Nhc2VcIkN5bGluZGVyR2VvbWV0cnlcIjpjYXNlXCJDeWxpbmRlckJ1ZmZlckdlb21ldHJ5XCI6cmV0dXJuIHIobyk7Y2FzZVwiUGxhbmVHZW9tZXRyeVwiOmNhc2VcIlBsYW5lQnVmZmVyR2VvbWV0cnlcIjpyZXR1cm4gYyhvKTtjYXNlXCJTcGhlcmVHZW9tZXRyeVwiOmNhc2VcIlNwaGVyZUJ1ZmZlckdlb21ldHJ5XCI6cmV0dXJuIGgobyk7Y2FzZVwiVHViZUdlb21ldHJ5XCI6cmV0dXJuIHUobyk7Y2FzZVwiR2VvbWV0cnlcIjpjYXNlXCJCdWZmZXJHZW9tZXRyeVwiOnJldHVybiBwKG8pO2RlZmF1bHQ6cmV0dXJuIGNvbnNvbGUud2FybignVW5yZWNvZ25pemVkIGdlb21ldHJ5OiBcIiVzXCIuIFVzaW5nIGJvdW5kaW5nIGJveCBhcyBzaGFwZS4nLG8udHlwZSksaShvKX19LGYubWVzaDJzaGFwZS5UeXBlPXd9LHtcIi4vbGliL1RIUkVFLnF1aWNraHVsbFwiOjc0LGNhbm5vbjoxN31dLDc0OltmdW5jdGlvbih0LGUsbyl7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3Y9bmV3IFRIUkVFLlZlY3RvcjMsZj1uZXcgVEhSRUUuVmVjdG9yMyxtPW5ldyBUSFJFRS5WZWN0b3IzLGc9bmV3IFRIUkVFLlZlY3RvcjMsdz1uZXcgVEhSRUUuVmVjdG9yMyx4PW5ldyBUSFJFRS5WZWN0b3IzLGI9bmV3IFRIUkVFLlZlY3RvcjMsRT1uZXcgVEhSRUUuVmVjdG9yMyxBPW5ldyBUSFJFRS5WZWN0b3IzLEI9bmV3IFRIUkVFLlZlY3RvcjN9ZnVuY3Rpb24gZSh0KXtmb3IoO1MubGVuZ3RoPjA7KW4oUy5zaGlmdCgpLHQpfWZ1bmN0aW9uIG8odCxlKXtpZih2b2lkIDAhPT10Lm5vcm1hbClyZXR1cm4gdC5ub3JtYWw7dmFyIG89ZVt0WzBdXSxpPWVbdFsxXV0sbj1lW3RbMl1dO3JldHVybiB2LnN1YlZlY3RvcnMoaSxvKSxmLnN1YlZlY3RvcnMobixvKSx4LmNyb3NzVmVjdG9ycyhmLHYpLHgubm9ybWFsaXplKCksdC5ub3JtYWw9eC5jbG9uZSgpfWZ1bmN0aW9uIGkodCxlLGkpe3ZhciBuPWlbdFswXV0scz1bXSxyPW8odCxpKTtlLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gc1t0LngvM109dm9pZCAwIT09c1t0LngvM10/c1t0LngvM106ci5kb3QoZy5zdWJWZWN0b3JzKHQsbikpLHNbZS54LzNdPXZvaWQgMCE9PXNbZS54LzNdP3NbZS54LzNdOnIuZG90KHcuc3ViVmVjdG9ycyhlLG4pKSxzW3QueC8zXS1zW2UueC8zXX0pO3ZhciBhPWUubGVuZ3RoO2ZvcigxPT09YSYmKHNbZVswXS54LzNdPXIuZG90KGcuc3ViVmVjdG9ycyhlWzBdLG4pKSk7YS0tID4wJiZzW2VbYV0ueC8zXT4wOyk7YSsxPGUubGVuZ3RoJiZzW2VbYSsxXS54LzNdPjAmJih0LnZpc2libGVQb2ludHM9ZS5zcGxpY2UoYSsxKSl9ZnVuY3Rpb24gbih0LGUpe2Zvcih2YXIgbixzPUMubGVuZ3RoLHI9W3RdLGE9ZS5pbmRleE9mKHQudmlzaWJsZVBvaW50cy5wb3AoKSk7cy0tID4wOykobj1DW3NdKSE9PXQmJm8obixlKS5kb3QoYi5zdWJWZWN0b3JzKGVbYV0sZVtuWzBdXSkpPjAmJnIucHVzaChuKTt2YXIgYyxoLGwsdSxwPXM9ci5sZW5ndGgsZD0xPT09cyx5PVtdLHY9MCxmPVtdO3JbMF1bMF0sclswXVsxXSxyWzBdWzFdLHJbMF1bMl0sclswXVsyXSxyWzBdWzBdO2lmKDE9PT1yLmxlbmd0aCluPXJbMF0seT1bblswXSxuWzFdLG5bMV0sblsyXSxuWzJdLG5bMF1dLFMuaW5kZXhPZihuKT4tMSYmUy5zcGxpY2UoUy5pbmRleE9mKG4pLDEpLG4udmlzaWJsZVBvaW50cyYmKGY9Zi5jb25jYXQobi52aXNpYmxlUG9pbnRzKSksQy5zcGxpY2UoQy5pbmRleE9mKG4pLDEpO2Vsc2UgZm9yKDtzLS0gPjA7KXtuPXJbc10sUy5pbmRleE9mKG4pPi0xJiZTLnNwbGljZShTLmluZGV4T2YobiksMSksbi52aXNpYmxlUG9pbnRzJiYoZj1mLmNvbmNhdChuLnZpc2libGVQb2ludHMpKSxDLnNwbGljZShDLmluZGV4T2YobiksMSk7dmFyIG07Zm9yKGNFZGdlSW5kZXg9MDtjRWRnZUluZGV4PDM7KXtmb3IobT0hMSxwPXIubGVuZ3RoLGw9bltjRWRnZUluZGV4XSx1PW5bKGNFZGdlSW5kZXgrMSklM107cC0tID4wJiYhbTspaWYoYz1yW3BdLHY9MCxjIT09bilmb3IoO3Y8MyYmIW07KWg9disxLG09Y1t2XT09PWwmJmNbaCUzXT09PXV8fGNbdl09PT11JiZjW2glM109PT1sLHYrKzttJiYhZHx8KHkucHVzaChsKSx5LnB1c2godSkpLGNFZGdlSW5kZXgrK319cz0wO2Zvcih2YXIgZyx3PXkubGVuZ3RoLzI7czx3OylnPVt5WzIqcysxXSxhLHlbMipzXV0saShnLGYsZSksQy5wdXNoKGcpLHZvaWQgMCE9PWcudmlzaWJsZVBvaW50cyYmUy5wdXNoKGcpLHMrK312YXIgcyxyLGEsYyxoLGwsdSxwLGQseSx2LGYsbSxnLHcseCxiLEUsQSxCLEM9W10sUz1bXSxSPTAsTT1mdW5jdGlvbigpe3ZhciB0PW5ldyBUSFJFRS5WZWN0b3IzLGU9bmV3IFRIUkVFLlZlY3RvcjMsbz1uZXcgVEhSRUUuVmVjdG9yMztyZXR1cm4gZnVuY3Rpb24oaSxuLHMpe3JldHVybiB0LnN1YlZlY3RvcnMocyxpKSxlLnN1YlZlY3RvcnMobixpKSxvLmNyb3NzVmVjdG9ycyh0LGUpLG8ubm9ybWFsaXplKCl9fSgpLFQ9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgVEhSRUUuVmVjdG9yMyxlPW5ldyBUSFJFRS5WZWN0b3IzLG89bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIGZ1bmN0aW9uKGksbixzKXt0LnN1YlZlY3RvcnMobixpKSxlLnN1YlZlY3RvcnMocyxpKSxvLnN1YlZlY3RvcnMocyxuKTt2YXIgcj1lLmRvdCh0KTtpZihyPDApcmV0dXJuIGUuZG90KGUpO3ZhciBhPXQuZG90KHQpO3JldHVybiByPj1hP28uZG90KG8pOmUuZG90KGUpLXIqci9hfX0oKTtyZXR1cm4gZnVuY3Rpb24obyl7Zm9yKHQoKSxwb2ludHM9by52ZXJ0aWNlcyxDPVtdLFM9W10seD1zPXBvaW50cy5sZW5ndGgscj1wb2ludHMuc2xpY2UoMCw2KSxSPTA7eC0tID4wOylwb2ludHNbeF0ueDxyWzBdLngmJihyWzBdPXBvaW50c1t4XSkscG9pbnRzW3hdLng+clsxXS54JiYoclsxXT1wb2ludHNbeF0pLHBvaW50c1t4XS55PHJbMl0ueSYmKHJbMl09cG9pbnRzW3hdKSxwb2ludHNbeF0ueTxyWzNdLnkmJihyWzNdPXBvaW50c1t4XSkscG9pbnRzW3hdLno8cls0XS56JiYocls0XT1wb2ludHNbeF0pLHBvaW50c1t4XS56PHJbNV0ueiYmKHJbNV09cG9pbnRzW3hdKTtmb3IoYz14PTY7eC0tID4wOylmb3IoYz14LTE7Yy0tID4wOylSPChhPXJbeF0uZGlzdGFuY2VUb1NxdWFyZWQocltjXSkpJiYoUj1hLGg9clt4XSxsPXJbY10pO2Zvcih4PTYsUj0wO3gtLSA+MDspYT1UKGgsbCxyW3hdKSxSPGEmJihSPWEsdT1yW3hdKTtmb3IoZD1NKGgsbCx1KSx5PWQuZG90KGgpLFI9MCx4PXM7eC0tID4wOylhPU1hdGguYWJzKHBvaW50c1t4XS5kb3QoZCkteSksUjxhJiYoUj1hLHA9cG9pbnRzW3hdKTt2YXIgbj1wb2ludHMuaW5kZXhPZihoKSx2PXBvaW50cy5pbmRleE9mKGwpLGY9cG9pbnRzLmluZGV4T2YodSksbT1wb2ludHMuaW5kZXhPZihwKSxnPVtbZix2LG5dLFt2LG0sbl0sW2YsbSx2XSxbbixtLGZdXTtFLnN1YlZlY3RvcnMobCxoKS5ub3JtYWxpemUoKSxBLnN1YlZlY3RvcnModSxoKS5ub3JtYWxpemUoKSxCLnN1YlZlY3RvcnMocCxoKS5ub3JtYWxpemUoKSxCLmRvdCgobmV3IFRIUkVFLlZlY3RvcjMpLmNyb3NzVmVjdG9ycyhBLEUpKTwwJiYoZ1swXS5yZXZlcnNlKCksZ1sxXS5yZXZlcnNlKCksZ1syXS5yZXZlcnNlKCksZ1szXS5yZXZlcnNlKCkpO3ZhciB3PXBvaW50cy5zbGljZSgpO3cuc3BsaWNlKHcuaW5kZXhPZihoKSwxKSx3LnNwbGljZSh3LmluZGV4T2YobCksMSksdy5zcGxpY2Uody5pbmRleE9mKHUpLDEpLHcuc3BsaWNlKHcuaW5kZXhPZihwKSwxKTtmb3IodmFyIHg9Zy5sZW5ndGg7eC0tID4wOylpKGdbeF0sdyxwb2ludHMpLHZvaWQgMCE9PWdbeF0udmlzaWJsZVBvaW50cyYmUy5wdXNoKGdbeF0pLEMucHVzaChnW3hdKTtlKHBvaW50cyk7Zm9yKHZhciBiPUMubGVuZ3RoO2ItLSA+MDspby5mYWNlc1tiXT1uZXcgVEhSRUUuRmFjZTMoQ1tiXVsyXSxDW2JdWzFdLENbYl1bMF0sQ1tiXS5ub3JtYWwpO3JldHVybiBvLm5vcm1hbHNOZWVkVXBkYXRlPSEwLG99fSgpfSx7fV0sNzU6W2Z1bmN0aW9uKHQsZSxvKXtlLmV4cG9ydHM9e3NjaGVtYTp7ZW5hYmxlZDp7ZGVmYXVsdDohMH0sbW9kZTp7ZGVmYXVsdDpcInRlbGVwb3J0XCIsb25lT2Y6W1widGVsZXBvcnRcIixcImFuaW1hdGVcIl19LGFuaW1hdGVTcGVlZDp7ZGVmYXVsdDozfX0saW5pdDpmdW5jdGlvbigpe3RoaXMuYWN0aXZlPSEwLHRoaXMuY2hlY2twb2ludD1udWxsLHRoaXMub2Zmc2V0PW5ldyBUSFJFRS5WZWN0b3IzLHRoaXMucG9zaXRpb249bmV3IFRIUkVFLlZlY3RvcjMsdGhpcy50YXJnZXRQb3NpdGlvbj1uZXcgVEhSRUUuVmVjdG9yM30scGxheTpmdW5jdGlvbigpe3RoaXMuYWN0aXZlPSEwfSxwYXVzZTpmdW5jdGlvbigpe3RoaXMuYWN0aXZlPSExfSxzZXRDaGVja3BvaW50OmZ1bmN0aW9uKHQpe3RoaXMuYWN0aXZlJiYodGhpcy5jaGVja3BvaW50PXQsXCJ0ZWxlcG9ydFwiPT09dGhpcy5kYXRhLm1vZGUmJih0aGlzLnN5bmMoKSx0aGlzLmVsLnNldEF0dHJpYnV0ZShcInBvc2l0aW9uXCIsdGhpcy50YXJnZXRQb3NpdGlvbikpKX0saXNWZWxvY2l0eUFjdGl2ZTpmdW5jdGlvbigpe3JldHVybiEoIXRoaXMuYWN0aXZlfHwhdGhpcy5jaGVja3BvaW50KX0sZ2V0VmVsb2NpdHk6ZnVuY3Rpb24oKXtpZih0aGlzLmFjdGl2ZSl7dmFyIHQ9dGhpcy5kYXRhLGU9dGhpcy5vZmZzZXQsbz10aGlzLnBvc2l0aW9uLGk9dGhpcy50YXJnZXRQb3NpdGlvbjtyZXR1cm4gdGhpcy5zeW5jKCksby5kaXN0YW5jZVRvKGkpPC4xPyh0aGlzLmNoZWNrcG9pbnQ9bnVsbCxlLnNldCgwLDAsMCkpOihlLnNldExlbmd0aCh0LmFuaW1hdGVTcGVlZCksZSl9fSxzeW5jOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vZmZzZXQsZT10aGlzLnBvc2l0aW9uLG89dGhpcy50YXJnZXRQb3NpdGlvbjtlLmNvcHkodGhpcy5lbC5nZXRBdHRyaWJ1dGUoXCJwb3NpdGlvblwiKSksby5jb3B5KHRoaXMuY2hlY2twb2ludC5vYmplY3QzRC5nZXRXb3JsZFBvc2l0aW9uKCkpLG8uYWRkKHRoaXMuY2hlY2twb2ludC5jb21wb25lbnRzLmNoZWNrcG9pbnQuZ2V0T2Zmc2V0KCkpLHQuY29weShvKS5zdWIoZSl9fX0se31dLDc2OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9dChcIi4uLy4uL2xpYi9HYW1lcGFkQnV0dG9uXCIpLG49dChcIi4uLy4uL2xpYi9HYW1lcGFkQnV0dG9uRXZlbnRcIik7ZS5leHBvcnRzPXtHYW1lcGFkQnV0dG9uOmksc2NoZW1hOntjb250cm9sbGVyOntkZWZhdWx0OjAsb25lT2Y6WzAsMSwyLDNdfSxlbmFibGVkOntkZWZhdWx0OiEwfSxkZWJ1Zzp7ZGVmYXVsdDohMX19LGluaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLnNjZW5lRWw7dGhpcy5wcmV2VGltZT13aW5kb3cucGVyZm9ybWFuY2Uubm93KCksdGhpcy5idXR0b25zPXt9LHQuYWRkQmVoYXZpb3IodGhpcyl9LHVwZGF0ZTpmdW5jdGlvbigpe3RoaXMudGljaygpfSx0aWNrOmZ1bmN0aW9uKCl7dGhpcy51cGRhdGVCdXR0b25TdGF0ZSgpfSxyZW1vdmU6ZnVuY3Rpb24oKXt9LGlzVmVsb2NpdHlBY3RpdmU6ZnVuY3Rpb24oKXtpZighdGhpcy5kYXRhLmVuYWJsZWR8fCF0aGlzLmlzQ29ubmVjdGVkKCkpcmV0dXJuITE7dmFyIHQ9dGhpcy5nZXREcGFkKCksZT10aGlzLmdldEpveXN0aWNrKDApLG89dC54fHxlLngsaT10Lnl8fGUueTtyZXR1cm4gTWF0aC5hYnMobyk+LjJ8fE1hdGguYWJzKGkpPi4yfSxnZXRWZWxvY2l0eURlbHRhOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXREcGFkKCksZT10aGlzLmdldEpveXN0aWNrKDApLG89dC54fHxlLngsaT10Lnl8fGUueSxuPW5ldyBUSFJFRS5WZWN0b3IzO3JldHVybiBNYXRoLmFicyhvKT4uMiYmKG4ueCs9byksTWF0aC5hYnMoaSk+LjImJihuLnorPWkpLG59LGlzUm90YXRpb25BY3RpdmU6ZnVuY3Rpb24oKXtpZighdGhpcy5kYXRhLmVuYWJsZWR8fCF0aGlzLmlzQ29ubmVjdGVkKCkpcmV0dXJuITE7dmFyIHQ9dGhpcy5nZXRKb3lzdGljaygxKTtyZXR1cm4gTWF0aC5hYnModC54KT4uMnx8TWF0aC5hYnModC55KT4uMn0sZ2V0Um90YXRpb25EZWx0YTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0Sm95c3RpY2soMSk7cmV0dXJuIE1hdGguYWJzKHQueCk8PS4yJiYodC54PTApLE1hdGguYWJzKHQueSk8PS4yJiYodC55PTApLHR9LHVwZGF0ZUJ1dHRvblN0YXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRHYW1lcGFkKCk7aWYodGhpcy5kYXRhLmVuYWJsZWQmJnQpZm9yKHZhciBlPTA7ZTx0LmJ1dHRvbnMubGVuZ3RoO2UrKyl0LmJ1dHRvbnNbZV0ucHJlc3NlZCYmIXRoaXMuYnV0dG9uc1tlXT90aGlzLmVtaXQobmV3IG4oXCJnYW1lcGFkYnV0dG9uZG93blwiLGUsdC5idXR0b25zW2VdKSk6IXQuYnV0dG9uc1tlXS5wcmVzc2VkJiZ0aGlzLmJ1dHRvbnNbZV0mJnRoaXMuZW1pdChuZXcgbihcImdhbWVwYWRidXR0b251cFwiLGUsdC5idXR0b25zW2VdKSksdGhpcy5idXR0b25zW2VdPXQuYnV0dG9uc1tlXS5wcmVzc2VkO2Vsc2UgT2JqZWN0LmtleXModGhpcy5idXR0b25zKSYmKHRoaXMuYnV0dG9ucz17fSl9LGVtaXQ6ZnVuY3Rpb24odCl7dGhpcy5lbC5lbWl0KHQudHlwZSx0KSx0aGlzLmVsLmVtaXQodC50eXBlK1wiOlwiK3QuaW5kZXgsbmV3IG4odC50eXBlLHQuaW5kZXgsdCkpfSxnZXRHYW1lcGFkOmZ1bmN0aW9uKCl7dmFyIHQ9bmF2aWdhdG9yLmdldEdhbWVwYWRzJiZuYXZpZ2F0b3IuZ2V0R2FtZXBhZHMoKVt0aGlzLmRhdGEuY29udHJvbGxlcl0sZT10aGlzLmVsLnNjZW5lRWwuY29tcG9uZW50c1tcInByb3h5LWNvbnRyb2xzXCJdO3JldHVybiBlJiZlLmlzQ29ubmVjdGVkKCkmJmUuZ2V0R2FtZXBhZCh0aGlzLmRhdGEuY29udHJvbGxlcil8fHR9LGdldEJ1dHRvbjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nZXRHYW1lcGFkKCkuYnV0dG9uc1t0XX0sZ2V0QXhpczpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nZXRHYW1lcGFkKCkuYXhlc1t0XX0sZ2V0Sm95c3RpY2s6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRHYW1lcGFkKCk7c3dpdGNoKHQpe2Nhc2UgMDpyZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjIoZS5heGVzWzBdLGUuYXhlc1sxXSk7Y2FzZSAxOnJldHVybiBuZXcgVEhSRUUuVmVjdG9yMihlLmF4ZXNbMl0sZS5heGVzWzNdKTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCBqb3lzdGljayBpbmRleCBcIiVkXCIuJyx0KX19LGdldERwYWQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldEdhbWVwYWQoKTtyZXR1cm4gdC5idXR0b25zW2kuRFBBRF9SSUdIVF0/bmV3IFRIUkVFLlZlY3RvcjIoKHQuYnV0dG9uc1tpLkRQQURfUklHSFRdLnByZXNzZWQ/MTowKSsodC5idXR0b25zW2kuRFBBRF9MRUZUXS5wcmVzc2VkPy0xOjApLCh0LmJ1dHRvbnNbaS5EUEFEX1VQXS5wcmVzc2VkPy0xOjApKyh0LmJ1dHRvbnNbaS5EUEFEX0RPV05dLnByZXNzZWQ/MTowKSk6bmV3IFRIUkVFLlZlY3RvcjJ9LGlzQ29ubmVjdGVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRHYW1lcGFkKCk7cmV0dXJuISghdHx8IXQuY29ubmVjdGVkKX0sZ2V0SUQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRHYW1lcGFkKCkuaWR9fX0se1wiLi4vLi4vbGliL0dhbWVwYWRCdXR0b25cIjoyLFwiLi4vLi4vbGliL0dhbWVwYWRCdXR0b25FdmVudFwiOjN9XSw3NzpbZnVuY3Rpb24odCxlLG8pe2Z1bmN0aW9uIGkodCl7cmV0dXJuIDA9PT10LngmJjA9PT10LnkmJjA9PT10Lnp9dmFyIG49VEhSRUUuTWF0aC5yYWRUb0RlZyxzPUFGUkFNRS51dGlscy5kZXZpY2UuaXNNb2JpbGUoKTtlLmV4cG9ydHM9e3NjaGVtYTp7ZW5hYmxlZDp7ZGVmYXVsdDohMH0sc3RhbmRpbmc6e2RlZmF1bHQ6ITB9fSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5pc1Bvc2l0aW9uQ2FsaWJyYXRlZD0hMSx0aGlzLmRvbGx5PW5ldyBUSFJFRS5PYmplY3QzRCx0aGlzLmhtZEV1bGVyPW5ldyBUSFJFRS5FdWxlcix0aGlzLnByZXZpb3VzSE1EUG9zaXRpb249bmV3IFRIUkVFLlZlY3RvcjMsdGhpcy5kZWx0YUhNRFBvc2l0aW9uPW5ldyBUSFJFRS5WZWN0b3IzLHRoaXMudnJDb250cm9scz1uZXcgVEhSRUUuVlJDb250cm9scyh0aGlzLmRvbGx5KSx0aGlzLnJvdGF0aW9uPW5ldyBUSFJFRS5WZWN0b3IzfSx1cGRhdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRhdGEsZT10aGlzLnZyQ29udHJvbHM7ZS5zdGFuZGluZz10LnN0YW5kaW5nLGUudXBkYXRlKCl9LHRpY2s6ZnVuY3Rpb24oKXt0aGlzLnZyQ29udHJvbHMudXBkYXRlKCl9LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMudnJDb250cm9scy5kaXNwb3NlKCl9LGlzUm90YXRpb25BY3RpdmU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmhtZEV1bGVyO3JldHVybiEoIXRoaXMuZGF0YS5lbmFibGVkfHwhdGhpcy5lbC5zY2VuZUVsLmlzKFwidnItbW9kZVwiKSYmIXMpJiYodC5zZXRGcm9tUXVhdGVybmlvbih0aGlzLmRvbGx5LnF1YXRlcm5pb24sXCJZWFpcIiksIWkodCkpfSxnZXRSb3RhdGlvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuaG1kRXVsZXI7cmV0dXJuIHRoaXMucm90YXRpb24uc2V0KG4odC54KSxuKHQueSksbih0LnopKX0saXNWZWxvY2l0eUFjdGl2ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZGVsdGFITURQb3NpdGlvbixlPXRoaXMucHJldmlvdXNITURQb3NpdGlvbixvPXRoaXMuY2FsY3VsYXRlSE1EUG9zaXRpb24oKTtyZXR1cm4gdGhpcy5pc1Bvc2l0aW9uQ2FsaWJyYXRlZD10aGlzLmlzUG9zaXRpb25DYWxpYnJhdGVkfHwhaShlKSwhKCF0aGlzLmRhdGEuZW5hYmxlZHx8IXRoaXMuZWwuc2NlbmVFbC5pcyhcInZyLW1vZGVcIil8fHMpJiYodC5jb3B5KG8pLnN1YihlKSxlLmNvcHkobyksdGhpcy5pc1Bvc2l0aW9uQ2FsaWJyYXRlZCYmIWkodCkpfSxnZXRQb3NpdGlvbkRlbHRhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGVsdGFITURQb3NpdGlvbn0sY2FsY3VsYXRlSE1EUG9zaXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRvbGx5LGU9bmV3IFRIUkVFLlZlY3RvcjM7cmV0dXJuIHQudXBkYXRlTWF0cml4KCksZS5zZXRGcm9tTWF0cml4UG9zaXRpb24odC5tYXRyaXgpLGV9fX0se31dLDc4OltmdW5jdGlvbih0LGUsbyl7dmFyIGk9dChcImFmcmFtZS1waHlzaWNzLXN5c3RlbVwiKTtlLmV4cG9ydHM9e1wiY2hlY2twb2ludC1jb250cm9sc1wiOnQoXCIuL2NoZWNrcG9pbnQtY29udHJvbHNcIiksXCJnYW1lcGFkLWNvbnRyb2xzXCI6dChcIi4vZ2FtZXBhZC1jb250cm9sc1wiKSxcImhtZC1jb250cm9sc1wiOnQoXCIuL2htZC1jb250cm9sc1wiKSxcImtleWJvYXJkLWNvbnRyb2xzXCI6dChcIi4va2V5Ym9hcmQtY29udHJvbHNcIiksXCJtb3VzZS1jb250cm9sc1wiOnQoXCIuL21vdXNlLWNvbnRyb2xzXCIpLFwidG91Y2gtY29udHJvbHNcIjp0KFwiLi90b3VjaC1jb250cm9sc1wiKSxcInVuaXZlcnNhbC1jb250cm9sc1wiOnQoXCIuL3VuaXZlcnNhbC1jb250cm9sc1wiKSxyZWdpc3RlckFsbDpmdW5jdGlvbih0KXt0aGlzLl9yZWdpc3RlcmVkfHwodD10fHx3aW5kb3cuQUZSQU1FLGkucmVnaXN0ZXJBbGwoKSx0LmNvbXBvbmVudHNbXCJjaGVja3BvaW50LWNvbnRyb2xzXCJdfHx0LnJlZ2lzdGVyQ29tcG9uZW50KFwiY2hlY2twb2ludC1jb250cm9sc1wiLHRoaXNbXCJjaGVja3BvaW50LWNvbnRyb2xzXCJdKSx0LmNvbXBvbmVudHNbXCJnYW1lcGFkLWNvbnRyb2xzXCJdfHx0LnJlZ2lzdGVyQ29tcG9uZW50KFwiZ2FtZXBhZC1jb250cm9sc1wiLHRoaXNbXCJnYW1lcGFkLWNvbnRyb2xzXCJdKSx0LmNvbXBvbmVudHNbXCJobWQtY29udHJvbHNcIl18fHQucmVnaXN0ZXJDb21wb25lbnQoXCJobWQtY29udHJvbHNcIix0aGlzW1wiaG1kLWNvbnRyb2xzXCJdKSx0LmNvbXBvbmVudHNbXCJrZXlib2FyZC1jb250cm9sc1wiXXx8dC5yZWdpc3RlckNvbXBvbmVudChcImtleWJvYXJkLWNvbnRyb2xzXCIsdGhpc1tcImtleWJvYXJkLWNvbnRyb2xzXCJdKSx0LmNvbXBvbmVudHNbXCJtb3VzZS1jb250cm9sc1wiXXx8dC5yZWdpc3RlckNvbXBvbmVudChcIm1vdXNlLWNvbnRyb2xzXCIsdGhpc1tcIm1vdXNlLWNvbnRyb2xzXCJdKSx0LmNvbXBvbmVudHNbXCJ0b3VjaC1jb250cm9sc1wiXXx8dC5yZWdpc3RlckNvbXBvbmVudChcInRvdWNoLWNvbnRyb2xzXCIsdGhpc1tcInRvdWNoLWNvbnRyb2xzXCJdKSx0LmNvbXBvbmVudHNbXCJ1bml2ZXJzYWwtY29udHJvbHNcIl18fHQucmVnaXN0ZXJDb21wb25lbnQoXCJ1bml2ZXJzYWwtY29udHJvbHNcIix0aGlzW1widW5pdmVyc2FsLWNvbnRyb2xzXCJdKSx0aGlzLl9yZWdpc3RlcmVkPSEwKX19fSx7XCIuL2NoZWNrcG9pbnQtY29udHJvbHNcIjo3NSxcIi4vZ2FtZXBhZC1jb250cm9sc1wiOjc2LFwiLi9obWQtY29udHJvbHNcIjo3NyxcIi4va2V5Ym9hcmQtY29udHJvbHNcIjo3OSxcIi4vbW91c2UtY29udHJvbHNcIjo4MCxcIi4vdG91Y2gtY29udHJvbHNcIjo4MSxcIi4vdW5pdmVyc2FsLWNvbnRyb2xzXCI6ODIsXCJhZnJhbWUtcGh5c2ljcy1zeXN0ZW1cIjo1fV0sNzk6W2Z1bmN0aW9uKHQsZSxvKXt0KFwiLi4vLi4vbGliL2tleWJvYXJkLnBvbHlmaWxsXCIpO3ZhciBpPXdpbmRvdy5LZXlib2FyZEV2ZW50O2UuZXhwb3J0cz17c2NoZW1hOntlbmFibGVkOntkZWZhdWx0OiEwfSxkZWJ1Zzp7ZGVmYXVsdDohMX19LGluaXQ6ZnVuY3Rpb24oKXt0aGlzLmRWZWxvY2l0eT1uZXcgVEhSRUUuVmVjdG9yMyx0aGlzLmxvY2FsS2V5cz17fSx0aGlzLmxpc3RlbmVycz17a2V5ZG93bjp0aGlzLm9uS2V5RG93bi5iaW5kKHRoaXMpLGtleXVwOnRoaXMub25LZXlVcC5iaW5kKHRoaXMpLGJsdXI6dGhpcy5vbkJsdXIuYmluZCh0aGlzKX0sdGhpcy5hdHRhY2hFdmVudExpc3RlbmVycygpfSxpc1ZlbG9jaXR5QWN0aXZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YS5lbmFibGVkJiYhIU9iamVjdC5rZXlzKHRoaXMuZ2V0S2V5cygpKS5sZW5ndGh9LGdldFZlbG9jaXR5RGVsdGE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRhdGEsZT10aGlzLmdldEtleXMoKTtyZXR1cm4gdGhpcy5kVmVsb2NpdHkuc2V0KDAsMCwwKSx0LmVuYWJsZWQmJigoZS5LZXlXfHxlLkFycm93VXApJiYodGhpcy5kVmVsb2NpdHkuei09MSksKGUuS2V5QXx8ZS5BcnJvd0xlZnQpJiYodGhpcy5kVmVsb2NpdHkueC09MSksKGUuS2V5U3x8ZS5BcnJvd0Rvd24pJiYodGhpcy5kVmVsb2NpdHkueis9MSksKGUuS2V5RHx8ZS5BcnJvd1JpZ2h0KSYmKHRoaXMuZFZlbG9jaXR5LngrPTEpKSx0aGlzLmRWZWxvY2l0eS5jbG9uZSgpfSxwbGF5OmZ1bmN0aW9uKCl7dGhpcy5hdHRhY2hFdmVudExpc3RlbmVycygpfSxwYXVzZTpmdW5jdGlvbigpe3RoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5wYXVzZSgpfSxhdHRhY2hFdmVudExpc3RlbmVyczpmdW5jdGlvbigpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLHRoaXMubGlzdGVuZXJzLmtleWRvd24sITEpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIix0aGlzLmxpc3RlbmVycy5rZXl1cCwhMSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsdGhpcy5saXN0ZW5lcnMuYmx1ciwhMSl9LHJlbW92ZUV2ZW50TGlzdGVuZXJzOmZ1bmN0aW9uKCl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsdGhpcy5saXN0ZW5lcnMua2V5ZG93biksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLHRoaXMubGlzdGVuZXJzLmtleXVwKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImJsdXJcIix0aGlzLmxpc3RlbmVycy5ibHVyKX0sb25LZXlEb3duOmZ1bmN0aW9uKHQpe0FGUkFNRS51dGlscy5zaG91bGRDYXB0dXJlS2V5RXZlbnQodCkmJih0aGlzLmxvY2FsS2V5c1t0LmNvZGVdPSEwLHRoaXMuZW1pdCh0KSl9LG9uS2V5VXA6ZnVuY3Rpb24odCl7QUZSQU1FLnV0aWxzLnNob3VsZENhcHR1cmVLZXlFdmVudCh0KSYmKGRlbGV0ZSB0aGlzLmxvY2FsS2V5c1t0LmNvZGVdLHRoaXMuZW1pdCh0KSl9LG9uQmx1cjpmdW5jdGlvbigpe2Zvcih2YXIgdCBpbiB0aGlzLmxvY2FsS2V5cyl0aGlzLmxvY2FsS2V5cy5oYXNPd25Qcm9wZXJ0eSh0KSYmZGVsZXRlIHRoaXMubG9jYWxLZXlzW3RdfSxlbWl0OmZ1bmN0aW9uKHQpe1wiX19rZXlib2FyZC1jb250cm9scy1wcm94eVwiaW4gdCYmdGhpcy5lbC5lbWl0KHQudHlwZSx0KSx0aGlzLmVsLmVtaXQodC50eXBlK1wiOlwiK3QuY29kZSxuZXcgaSh0LnR5cGUsdCkpLHRoaXMuZGF0YS5kZWJ1ZyYmY29uc29sZS5sb2codC50eXBlK1wiOlwiK3QuY29kZSl9LGlzUHJlc3NlZDpmdW5jdGlvbih0KXtyZXR1cm4gdCBpbiB0aGlzLmdldEtleXMoKX0sZ2V0S2V5czpmdW5jdGlvbigpe3JldHVybiB0aGlzLmlzUHJveGllZCgpP3RoaXMuZWwuc2NlbmVFbC5jb21wb25lbnRzW1wicHJveHktY29udHJvbHNcIl0uZ2V0S2V5Ym9hcmQoKTp0aGlzLmxvY2FsS2V5c30saXNQcm94aWVkOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbC5zY2VuZUVsLmNvbXBvbmVudHNbXCJwcm94eS1jb250cm9sc1wiXTtyZXR1cm4gdCYmdC5pc0Nvbm5lY3RlZCgpfX19LHtcIi4uLy4uL2xpYi9rZXlib2FyZC5wb2x5ZmlsbFwiOjR9XSw4MDpbZnVuY3Rpb24odCxlLG8pe2RvY3VtZW50LmV4aXRQb2ludGVyTG9jaz1kb2N1bWVudC5leGl0UG9pbnRlckxvY2t8fGRvY3VtZW50Lm1vekV4aXRQb2ludGVyTG9jayxlLmV4cG9ydHM9e3NjaGVtYTp7ZW5hYmxlZDp7ZGVmYXVsdDohMH0scG9pbnRlcmxvY2tFbmFibGVkOntkZWZhdWx0OiEwfSxzZW5zaXRpdml0eTp7ZGVmYXVsdDouMDR9fSxpbml0OmZ1bmN0aW9uKCl7dGhpcy5tb3VzZURvd249ITEsdGhpcy5wb2ludGVyTG9ja2VkPSExLHRoaXMubG9va1ZlY3Rvcj1uZXcgVEhSRUUuVmVjdG9yMix0aGlzLmJpbmRNZXRob2RzKCl9LHVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmRhdGE7dC5wb2ludGVybG9ja0VuYWJsZWQmJiFlLnBvaW50ZXJsb2NrRW5hYmxlZCYmdGhpcy5wb2ludGVyTG9ja2VkJiZkb2N1bWVudC5leGl0UG9pbnRlckxvY2soKX0scGxheTpmdW5jdGlvbigpe3RoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKX0scGF1c2U6ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCksdGhpcy5sb29rVmVjdG9yLnNldCgwLDApfSxyZW1vdmU6ZnVuY3Rpb24oKXt0aGlzLnBhdXNlKCl9LGJpbmRNZXRob2RzOmZ1bmN0aW9uKCl7dGhpcy5vbk1vdXNlRG93bj10aGlzLm9uTW91c2VEb3duLmJpbmQodGhpcyksdGhpcy5vbk1vdXNlTW92ZT10aGlzLm9uTW91c2VNb3ZlLmJpbmQodGhpcyksdGhpcy5vbk1vdXNlVXA9dGhpcy5vbk1vdXNlVXAuYmluZCh0aGlzKSx0aGlzLm9uTW91c2VVcD10aGlzLm9uTW91c2VVcC5iaW5kKHRoaXMpLHRoaXMub25Qb2ludGVyTG9ja0NoYW5nZT10aGlzLm9uUG9pbnRlckxvY2tDaGFuZ2UuYmluZCh0aGlzKSx0aGlzLm9uUG9pbnRlckxvY2tDaGFuZ2U9dGhpcy5vblBvaW50ZXJMb2NrQ2hhbmdlLmJpbmQodGhpcyksdGhpcy5vblBvaW50ZXJMb2NrQ2hhbmdlPXRoaXMub25Qb2ludGVyTG9ja0NoYW5nZS5iaW5kKHRoaXMpfSxhZGRFdmVudExpc3RlbmVyczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWwuc2NlbmVFbCxlPXQuY2FudmFzLG89dGhpcy5kYXRhO2lmKCFlKXJldHVybiB2b2lkIHQuYWRkRXZlbnRMaXN0ZW5lcihcInJlbmRlci10YXJnZXQtbG9hZGVkXCIsdGhpcy5hZGRFdmVudExpc3RlbmVycy5iaW5kKHRoaXMpKTtlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIix0aGlzLm9uTW91c2VEb3duLCExKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIix0aGlzLm9uTW91c2VNb3ZlLCExKSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsdGhpcy5vbk1vdXNlVXAsITEpLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsdGhpcy5vbk1vdXNlVXAsITEpLG8ucG9pbnRlcmxvY2tFbmFibGVkJiYoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJsb2NrY2hhbmdlXCIsdGhpcy5vblBvaW50ZXJMb2NrQ2hhbmdlLCExKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwibW96cG9pbnRlcmxvY2tjaGFuZ2VcIix0aGlzLm9uUG9pbnRlckxvY2tDaGFuZ2UsITEpLGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVybG9ja2Vycm9yXCIsdGhpcy5vblBvaW50ZXJMb2NrRXJyb3IsITEpKX0scmVtb3ZlRXZlbnRMaXN0ZW5lcnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLnNjZW5lRWwmJnRoaXMuZWwuc2NlbmVFbC5jYW52YXM7dCYmKHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLHRoaXMub25Nb3VzZURvd24sITEpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHRoaXMub25Nb3VzZU1vdmUsITEpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIix0aGlzLm9uTW91c2VVcCwhMSksdC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIix0aGlzLm9uTW91c2VVcCwhMSkpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVybG9ja2NoYW5nZVwiLHRoaXMub25Qb2ludGVyTG9ja0NoYW5nZSwhMSksXG5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW96cG9pbnRlcmxvY2tjaGFuZ2VcIix0aGlzLm9uUG9pbnRlckxvY2tDaGFuZ2UsITEpLGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVybG9ja2Vycm9yXCIsdGhpcy5vblBvaW50ZXJMb2NrRXJyb3IsITEpfSxpc1JvdGF0aW9uQWN0aXZlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YS5lbmFibGVkJiYodGhpcy5tb3VzZURvd258fHRoaXMucG9pbnRlckxvY2tlZCl9LGdldFJvdGF0aW9uRGVsdGE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmxvb2tWZWN0b3IuY2xvbmUoKS5tdWx0aXBseVNjYWxhcih0aGlzLmRhdGEuc2Vuc2l0aXZpdHkpO3JldHVybiB0aGlzLmxvb2tWZWN0b3Iuc2V0KDAsMCksdH0sb25Nb3VzZU1vdmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wcmV2aW91c01vdXNlRXZlbnQ7aWYodGhpcy5kYXRhLmVuYWJsZWQmJih0aGlzLm1vdXNlRG93bnx8dGhpcy5wb2ludGVyTG9ja2VkKSl7dmFyIG89dC5tb3ZlbWVudFh8fHQubW96TW92ZW1lbnRYfHwwLGk9dC5tb3ZlbWVudFl8fHQubW96TW92ZW1lbnRZfHwwO3RoaXMucG9pbnRlckxvY2tlZHx8KG89dC5zY3JlZW5YLWUuc2NyZWVuWCxpPXQuc2NyZWVuWS1lLnNjcmVlblkpLHRoaXMubG9va1ZlY3Rvci54Kz1vLHRoaXMubG9va1ZlY3Rvci55Kz1pLHRoaXMucHJldmlvdXNNb3VzZUV2ZW50PXR9fSxvbk1vdXNlRG93bjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmVsLnNjZW5lRWwuY2FudmFzLG89KEFGUkFNRS5JTlNQRUNUT1J8fHt9KS5vcGVuZWQ7dGhpcy5tb3VzZURvd249ITAsdGhpcy5wcmV2aW91c01vdXNlRXZlbnQ9dCwhdGhpcy5kYXRhLnBvaW50ZXJsb2NrRW5hYmxlZHx8dGhpcy5wb2ludGVyTG9ja2VkfHxvfHwoZS5yZXF1ZXN0UG9pbnRlckxvY2s/ZS5yZXF1ZXN0UG9pbnRlckxvY2soKTplLm1velJlcXVlc3RQb2ludGVyTG9jayYmZS5tb3pSZXF1ZXN0UG9pbnRlckxvY2soKSl9LG9uTW91c2VVcDpmdW5jdGlvbigpe3RoaXMubW91c2VEb3duPSExfSxvblBvaW50ZXJMb2NrQ2hhbmdlOmZ1bmN0aW9uKCl7dGhpcy5wb2ludGVyTG9ja2VkPSEoIWRvY3VtZW50LnBvaW50ZXJMb2NrRWxlbWVudCYmIWRvY3VtZW50Lm1velBvaW50ZXJMb2NrRWxlbWVudCl9LG9uUG9pbnRlckxvY2tFcnJvcjpmdW5jdGlvbigpe3RoaXMucG9pbnRlckxvY2tlZD0hMX19fSx7fV0sODE6W2Z1bmN0aW9uKHQsZSxvKXtlLmV4cG9ydHM9e3NjaGVtYTp7ZW5hYmxlZDp7ZGVmYXVsdDohMH19LGluaXQ6ZnVuY3Rpb24oKXt0aGlzLmRWZWxvY2l0eT1uZXcgVEhSRUUuVmVjdG9yMyx0aGlzLmJpbmRNZXRob2RzKCl9LHBsYXk6ZnVuY3Rpb24oKXt0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCl9LHBhdXNlOmZ1bmN0aW9uKCl7dGhpcy5yZW1vdmVFdmVudExpc3RlbmVycygpLHRoaXMuZFZlbG9jaXR5LnNldCgwLDAsMCl9LHJlbW92ZTpmdW5jdGlvbigpe3RoaXMucGF1c2UoKX0sYWRkRXZlbnRMaXN0ZW5lcnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsLnNjZW5lRWwsZT10LmNhbnZhcztpZighZSlyZXR1cm4gdm9pZCB0LmFkZEV2ZW50TGlzdGVuZXIoXCJyZW5kZXItdGFyZ2V0LWxvYWRlZFwiLHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMuYmluZCh0aGlzKSk7ZS5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLHRoaXMub25Ub3VjaFN0YXJ0KSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLHRoaXMub25Ub3VjaEVuZCl9LHJlbW92ZUV2ZW50TGlzdGVuZXJzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbC5zY2VuZUVsJiZ0aGlzLmVsLnNjZW5lRWwuY2FudmFzO3QmJih0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsdGhpcy5vblRvdWNoU3RhcnQpLHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsdGhpcy5vblRvdWNoRW5kKSl9LGlzVmVsb2NpdHlBY3RpdmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kYXRhLmVuYWJsZWQmJnRoaXMuaXNNb3Zpbmd9LGdldFZlbG9jaXR5RGVsdGE6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kVmVsb2NpdHkuej10aGlzLmlzTW92aW5nPy0xOjAsdGhpcy5kVmVsb2NpdHkuY2xvbmUoKX0sYmluZE1ldGhvZHM6ZnVuY3Rpb24oKXt0aGlzLm9uVG91Y2hTdGFydD10aGlzLm9uVG91Y2hTdGFydC5iaW5kKHRoaXMpLHRoaXMub25Ub3VjaEVuZD10aGlzLm9uVG91Y2hFbmQuYmluZCh0aGlzKX0sb25Ub3VjaFN0YXJ0OmZ1bmN0aW9uKHQpe3RoaXMuaXNNb3Zpbmc9ITAsdC5wcmV2ZW50RGVmYXVsdCgpfSxvblRvdWNoRW5kOmZ1bmN0aW9uKHQpe3RoaXMuaXNNb3Zpbmc9ITEsdC5wcmV2ZW50RGVmYXVsdCgpfX19LHt9XSw4MjpbZnVuY3Rpb24odCxlLG8pe3ZhciBpPU1hdGguUEkvMjtlLmV4cG9ydHM9e2RlcGVuZGVuY2llczpbXCJ2ZWxvY2l0eVwiLFwicm90YXRpb25cIl0sc2NoZW1hOntlbmFibGVkOntkZWZhdWx0OiEwfSxtb3ZlbWVudEVuYWJsZWQ6e2RlZmF1bHQ6ITB9LG1vdmVtZW50Q29udHJvbHM6e2RlZmF1bHQ6W1wiZ2FtZXBhZFwiLFwia2V5Ym9hcmRcIixcInRvdWNoXCIsXCJobWRcIl19LHJvdGF0aW9uRW5hYmxlZDp7ZGVmYXVsdDohMH0scm90YXRpb25Db250cm9sczp7ZGVmYXVsdDpbXCJobWRcIixcImdhbWVwYWRcIixcIm1vdXNlXCJdfSxtb3ZlbWVudFNwZWVkOntkZWZhdWx0OjV9LG1vdmVtZW50RWFzaW5nOntkZWZhdWx0OjE1fSxtb3ZlbWVudEVhc2luZ1k6e2RlZmF1bHQ6MH0sbW92ZW1lbnRBY2NlbGVyYXRpb246e2RlZmF1bHQ6ODB9LHJvdGF0aW9uU2Vuc2l0aXZpdHk6e2RlZmF1bHQ6LjA1fSxmbHk6e2RlZmF1bHQ6ITF9fSxpbml0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbC5nZXRBdHRyaWJ1dGUoXCJyb3RhdGlvblwiKTt0aGlzLmVsLmhhc0F0dHJpYnV0ZShcImxvb2stY29udHJvbHNcIikmJnRoaXMuZGF0YS5yb3RhdGlvbkVuYWJsZWQmJmNvbnNvbGUuZXJyb3IoXCJbdW5pdmVyc2FsLWNvbnRyb2xzXSBUaGUgYHVuaXZlcnNhbC1jb250cm9sc2AgY29tcG9uZW50IGlzIGEgcmVwbGFjZW1lbnQgZm9yIGBsb29rLWNvbnRyb2xzYCwgYW5kIGNhbm5vdCBiZSB1c2VkIGluIGNvbWJpbmF0aW9uIHdpdGggaXQuXCIpLHRoaXMudmVsb2NpdHk9bmV3IFRIUkVFLlZlY3RvcjMsdGhpcy5waXRjaD1uZXcgVEhSRUUuT2JqZWN0M0QsdGhpcy5waXRjaC5yb3RhdGlvbi54PVRIUkVFLk1hdGguZGVnVG9SYWQodC54KSx0aGlzLnlhdz1uZXcgVEhSRUUuT2JqZWN0M0QsdGhpcy55YXcucG9zaXRpb24ueT0xMCx0aGlzLnlhdy5yb3RhdGlvbi55PVRIUkVFLk1hdGguZGVnVG9SYWQodC55KSx0aGlzLnlhdy5hZGQodGhpcy5waXRjaCksdGhpcy5oZWFkaW5nPW5ldyBUSFJFRS5FdWxlcigwLDAsMCxcIllYWlwiKSx0aGlzLmVsLnNjZW5lRWwuaGFzTG9hZGVkP3RoaXMuaW5qZWN0Q29udHJvbHMoKTp0aGlzLmVsLnNjZW5lRWwuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRlZFwiLHRoaXMuaW5qZWN0Q29udHJvbHMuYmluZCh0aGlzKSl9LHVwZGF0ZTpmdW5jdGlvbigpe3RoaXMuZWwuc2NlbmVFbC5oYXNMb2FkZWQmJnRoaXMuaW5qZWN0Q29udHJvbHMoKX0saW5qZWN0Q29udHJvbHM6ZnVuY3Rpb24oKXt2YXIgdCxlLG89dGhpcy5kYXRhO2Zvcih0PTA7dDxvLm1vdmVtZW50Q29udHJvbHMubGVuZ3RoO3QrKyllPW8ubW92ZW1lbnRDb250cm9sc1t0XStcIi1jb250cm9sc1wiLHRoaXMuZWwuY29tcG9uZW50c1tlXXx8dGhpcy5lbC5zZXRBdHRyaWJ1dGUoZSxcIlwiKTtmb3IodD0wO3Q8by5yb3RhdGlvbkNvbnRyb2xzLmxlbmd0aDt0KyspZT1vLnJvdGF0aW9uQ29udHJvbHNbdF0rXCItY29udHJvbHNcIix0aGlzLmVsLmNvbXBvbmVudHNbZV18fHRoaXMuZWwuc2V0QXR0cmlidXRlKGUsXCJcIil9LHRpY2s6ZnVuY3Rpb24odCxlKXtlJiYodGhpcy5kYXRhLnJvdGF0aW9uRW5hYmxlZCYmdGhpcy51cGRhdGVSb3RhdGlvbihlKSx0aGlzLmRhdGEubW92ZW1lbnRFbmFibGVkJiZlLzFlMz4uMj8odGhpcy52ZWxvY2l0eS5zZXQoMCwwLDApLHRoaXMuZWwuc2V0QXR0cmlidXRlKFwidmVsb2NpdHlcIix0aGlzLnZlbG9jaXR5KSk6dGhpcy51cGRhdGVWZWxvY2l0eShlKSl9LHVwZGF0ZVJvdGF0aW9uOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxvLG49dGhpcy5kYXRhLHM9MCxyPW4ucm90YXRpb25Db250cm9scy5sZW5ndGg7czxyO3MrKylpZigoZT10aGlzLmVsLmNvbXBvbmVudHNbbi5yb3RhdGlvbkNvbnRyb2xzW3NdK1wiLWNvbnRyb2xzXCJdKSYmZS5pc1JvdGF0aW9uQWN0aXZlKCkpe2lmKGUuZ2V0Um90YXRpb25EZWx0YSlvPWUuZ2V0Um90YXRpb25EZWx0YSh0KSxvLm11bHRpcGx5U2NhbGFyKG4ucm90YXRpb25TZW5zaXRpdml0eSksdGhpcy55YXcucm90YXRpb24ueS09by54LHRoaXMucGl0Y2gucm90YXRpb24ueC09by55LHRoaXMucGl0Y2gucm90YXRpb24ueD1NYXRoLm1heCgtaSxNYXRoLm1pbihpLHRoaXMucGl0Y2gucm90YXRpb24ueCkpLHRoaXMuZWwuc2V0QXR0cmlidXRlKFwicm90YXRpb25cIix7eDpUSFJFRS5NYXRoLnJhZFRvRGVnKHRoaXMucGl0Y2gucm90YXRpb24ueCkseTpUSFJFRS5NYXRoLnJhZFRvRGVnKHRoaXMueWF3LnJvdGF0aW9uLnkpLHo6MH0pO2Vsc2V7aWYoIWUuZ2V0Um90YXRpb24pdGhyb3cgbmV3IEVycm9yKFwiSW5jb21wYXRpYmxlIHJvdGF0aW9uIGNvbnRyb2xzOiAlc1wiLG4ucm90YXRpb25Db250cm9sc1tzXSk7dGhpcy5lbC5zZXRBdHRyaWJ1dGUoXCJyb3RhdGlvblwiLGUuZ2V0Um90YXRpb24oKSl9YnJlYWt9fSx1cGRhdGVWZWxvY2l0eTpmdW5jdGlvbih0KXt2YXIgZSxvLGk9dGhpcy52ZWxvY2l0eSxuPXRoaXMuZGF0YTtpZihuLm1vdmVtZW50RW5hYmxlZClmb3IodmFyIHM9MCxyPW4ubW92ZW1lbnRDb250cm9scy5sZW5ndGg7czxyO3MrKylpZigoZT10aGlzLmVsLmNvbXBvbmVudHNbbi5tb3ZlbWVudENvbnRyb2xzW3NdK1wiLWNvbnRyb2xzXCJdKSYmZS5pc1ZlbG9jaXR5QWN0aXZlKCkpe2lmKCFlLmdldFZlbG9jaXR5RGVsdGEpe2lmKGUuZ2V0VmVsb2NpdHkpcmV0dXJuIHZvaWQgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoXCJ2ZWxvY2l0eVwiLGUuZ2V0VmVsb2NpdHkoKSk7aWYoZS5nZXRQb3NpdGlvbkRlbHRhKXJldHVybiBpLmNvcHkoZS5nZXRQb3NpdGlvbkRlbHRhKHQpLm11bHRpcGx5U2NhbGFyKDFlMy90KSksdm9pZCB0aGlzLmVsLnNldEF0dHJpYnV0ZShcInZlbG9jaXR5XCIsaSk7dGhyb3cgbmV3IEVycm9yKFwiSW5jb21wYXRpYmxlIG1vdmVtZW50IGNvbnRyb2xzOiBcIixuLm1vdmVtZW50Q29udHJvbHNbc10pfW89ZS5nZXRWZWxvY2l0eURlbHRhKHQpO2JyZWFrfWlmKGkuY29weSh0aGlzLmVsLmdldEF0dHJpYnV0ZShcInZlbG9jaXR5XCIpKSxpLngtPWkueCpuLm1vdmVtZW50RWFzaW5nKnQvMWUzLGkueS09aS55Km4ubW92ZW1lbnRFYXNpbmdZKnQvMWUzLGkuei09aS56Km4ubW92ZW1lbnRFYXNpbmcqdC8xZTMsbyYmbi5tb3ZlbWVudEVuYWJsZWQpe28ubGVuZ3RoKCk+MT9vLnNldExlbmd0aCh0aGlzLmRhdGEubW92ZW1lbnRBY2NlbGVyYXRpb24qdC8xZTMpOm8ubXVsdGlwbHlTY2FsYXIodGhpcy5kYXRhLm1vdmVtZW50QWNjZWxlcmF0aW9uKnQvMWUzKTt2YXIgYT10aGlzLmVsLmdldEF0dHJpYnV0ZShcInJvdGF0aW9uXCIpO2EmJih0aGlzLmhlYWRpbmcuc2V0KG4uZmx5P1RIUkVFLk1hdGguZGVnVG9SYWQoYS54KTowLFRIUkVFLk1hdGguZGVnVG9SYWQoYS55KSwwKSxvLmFwcGx5RXVsZXIodGhpcy5oZWFkaW5nKSksaS5hZGQobyl9dGhpcy5lbC5zZXRBdHRyaWJ1dGUoXCJ2ZWxvY2l0eVwiLGkpfX19LHt9XX0se30sWzFdKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9saWIvYWZyYW1lL2FmcmFtZS1leHRyYXMuY29udHJvbHMubWluLmpzXG4vLyBtb2R1bGUgaWQgPSAxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9')},function(module,exports){eval('!function(t){function e(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var o={};return e.m=t,e.c=o,e.p="",e(0)}([function(t,e){var o=AFRAME.utils.debug,n=AFRAME.utils.coordinates,r=o("components:look-at:warn"),i=n.isCoordinates;delete AFRAME.components["look-at"],AFRAME.registerComponent("look-at",{schema:{default:"",parse:function(t){return i(t)||"object"==typeof t?n.parse(t):t},stringify:function(t){return"object"==typeof t?n.stringify(t):t}},init:function(){this.target3D=null,this.vector=new THREE.Vector3},update:function(){var t,e=this,o=e.data,n=e.el.object3D;return!o||"object"==typeof o&&!Object.keys(o).length?e.remove():"object"==typeof o?n.lookAt(new THREE.Vector3(o.x,o.y,o.z)):(t=e.el.sceneEl.querySelector(o),t?t.hasLoaded?e.beginTracking(t):t.addEventListener("loaded",function(){e.beginTracking(t)}):void r(\'"\'+o+\'" does not point to a valid entity to look-at\'))},tick:function(t){var e=this.target3D;if(e){var o=this.el.object3D.parent.worldToLocal(e.getWorldPosition());return this.el.object3D.lookAt(o)}},beginTracking:function(t){this.target3D=t.object3D}})}]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2FmcmFtZS9hZnJhbWUtbG9vay1hdC1jb21wb25lbnQubWluLmpzP2MxOWYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxjQUFjLDRCQUE0QixZQUFZLFVBQVUsaUJBQWlCLGdFQUFnRSxTQUFTLCtCQUErQixnQkFBZ0IscUdBQXFHLHdFQUF3RSxRQUFRLDZCQUE2Qiw2Q0FBNkMsdUJBQXVCLDJDQUEyQyxpQkFBaUIsaURBQWlELG1CQUFtQixzQ0FBc0MscU9BQXFPLG1CQUFtQixpRUFBaUUsa0JBQWtCLG9CQUFvQixNQUFNLGlFQUFpRSxtQ0FBbUMsMkJBQTJCLDBCQUEwQixFQUFFIiwiZmlsZSI6IjEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUobil7aWYob1tuXSlyZXR1cm4gb1tuXS5leHBvcnRzO3ZhciByPW9bbl09e2V4cG9ydHM6e30saWQ6bixsb2FkZWQ6ITF9O3JldHVybiB0W25dLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLGUpLHIubG9hZGVkPSEwLHIuZXhwb3J0c312YXIgbz17fTtyZXR1cm4gZS5tPXQsZS5jPW8sZS5wPVwiXCIsZSgwKX0oW2Z1bmN0aW9uKHQsZSl7dmFyIG89QUZSQU1FLnV0aWxzLmRlYnVnLG49QUZSQU1FLnV0aWxzLmNvb3JkaW5hdGVzLHI9byhcImNvbXBvbmVudHM6bG9vay1hdDp3YXJuXCIpLGk9bi5pc0Nvb3JkaW5hdGVzO2RlbGV0ZSBBRlJBTUUuY29tcG9uZW50c1tcImxvb2stYXRcIl0sQUZSQU1FLnJlZ2lzdGVyQ29tcG9uZW50KFwibG9vay1hdFwiLHtzY2hlbWE6e2RlZmF1bHQ6XCJcIixwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gaSh0KXx8XCJvYmplY3RcIj09dHlwZW9mIHQ/bi5wYXJzZSh0KTp0fSxzdHJpbmdpZnk6ZnVuY3Rpb24odCl7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIHQ/bi5zdHJpbmdpZnkodCk6dH19LGluaXQ6ZnVuY3Rpb24oKXt0aGlzLnRhcmdldDNEPW51bGwsdGhpcy52ZWN0b3I9bmV3IFRIUkVFLlZlY3RvcjN9LHVwZGF0ZTpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxvPWUuZGF0YSxuPWUuZWwub2JqZWN0M0Q7cmV0dXJuIW98fFwib2JqZWN0XCI9PXR5cGVvZiBvJiYhT2JqZWN0LmtleXMobykubGVuZ3RoP2UucmVtb3ZlKCk6XCJvYmplY3RcIj09dHlwZW9mIG8/bi5sb29rQXQobmV3IFRIUkVFLlZlY3RvcjMoby54LG8ueSxvLnopKToodD1lLmVsLnNjZW5lRWwucXVlcnlTZWxlY3RvcihvKSx0P3QuaGFzTG9hZGVkP2UuYmVnaW5UcmFja2luZyh0KTp0LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkZWRcIixmdW5jdGlvbigpe2UuYmVnaW5UcmFja2luZyh0KX0pOnZvaWQgcignXCInK28rJ1wiIGRvZXMgbm90IHBvaW50IHRvIGEgdmFsaWQgZW50aXR5IHRvIGxvb2stYXQnKSl9LHRpY2s6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy50YXJnZXQzRDtpZihlKXt2YXIgbz10aGlzLmVsLm9iamVjdDNELnBhcmVudC53b3JsZFRvTG9jYWwoZS5nZXRXb3JsZFBvc2l0aW9uKCkpO3JldHVybiB0aGlzLmVsLm9iamVjdDNELmxvb2tBdChvKX19LGJlZ2luVHJhY2tpbmc6ZnVuY3Rpb24odCl7dGhpcy50YXJnZXQzRD10Lm9iamVjdDNEfX0pfV0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2xpYi9hZnJhbWUvYWZyYW1lLWxvb2stYXQtY29tcG9uZW50Lm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, setImmediate) {var require;var require;(function(f){if(true){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.AFRAME = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return require(o,!0);var f=new Error("Cannot find module \'"+o+"\'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nfunction anArray(r){return r.BYTES_PER_ELEMENT&&"[object ArrayBuffer]"===str.call(r.buffer)||Array.isArray(r)}var str=Object.prototype.toString;module.exports=anArray;\n},{}],2:[function(_dereq_,module,exports){\nmodule.exports=function(e,n){return"number"==typeof e?e:"number"==typeof n?n:0};\n},{}],3:[function(_dereq_,module,exports){\n"use strict";function placeHoldersCount(o){var r=o.length;if(r%4>0)throw new Error("Invalid string. Length must be a multiple of 4");return"="===o[r-2]?2:"="===o[r-1]?1:0}function byteLength(o){return 3*o.length/4-placeHoldersCount(o)}function toByteArray(o){var r,e,t,u,n,p,a=o.length;n=placeHoldersCount(o),p=new Arr(3*a/4-n),t=n>0?a-4:a;var l=0;for(r=0,e=0;r<t;r+=4,e+=3)u=revLookup[o.charCodeAt(r)]<<18|revLookup[o.charCodeAt(r+1)]<<12|revLookup[o.charCodeAt(r+2)]<<6|revLookup[o.charCodeAt(r+3)],p[l++]=u>>16&255,p[l++]=u>>8&255,p[l++]=255&u;return 2===n?(u=revLookup[o.charCodeAt(r)]<<2|revLookup[o.charCodeAt(r+1)]>>4,p[l++]=255&u):1===n&&(u=revLookup[o.charCodeAt(r)]<<10|revLookup[o.charCodeAt(r+1)]<<4|revLookup[o.charCodeAt(r+2)]>>2,p[l++]=u>>8&255,p[l++]=255&u),p}function tripletToBase64(o){return lookup[o>>18&63]+lookup[o>>12&63]+lookup[o>>6&63]+lookup[63&o]}function encodeChunk(o,r,e){for(var t,u=[],n=r;n<e;n+=3)t=(o[n]<<16)+(o[n+1]<<8)+o[n+2],u.push(tripletToBase64(t));return u.join("")}function fromByteArray(o){for(var r,e=o.length,t=e%3,u="",n=[],p=16383,a=0,l=e-t;a<l;a+=p)n.push(encodeChunk(o,a,a+p>l?l:a+p));return 1===t?(r=o[e-1],u+=lookup[r>>2],u+=lookup[r<<4&63],u+="=="):2===t&&(r=(o[e-2]<<8)+o[e-1],u+=lookup[r>>10],u+=lookup[r>>4&63],u+=lookup[r<<2&63],u+="="),n.push(u),n.join("")}exports.byteLength=byteLength,exports.toByteArray=toByteArray,exports.fromByteArray=fromByteArray;for(var lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i)lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63;\n},{}],4:[function(_dereq_,module,exports){\n"use strict";module.exports={createLink:function(e,t){var a=document.head||document.getElementsByTagName("head")[0],n=document.createElement("link");n.href=e,n.rel="stylesheet";for(var d in t)if(t.hasOwnProperty(d)){var r=t[d];n.setAttribute("data-"+d,r)}a.appendChild(n)},createStyle:function(e,t){var a=document.head||document.getElementsByTagName("head")[0],n=document.createElement("style");n.type="text/css";for(var d in t)if(t.hasOwnProperty(d)){var r=t[d];n.setAttribute("data-"+d,r)}n.sheet?(n.innerHTML=e,n.sheet.cssText=e,a.appendChild(n)):n.styleSheet?(a.appendChild(n),n.styleSheet.cssText=e):(n.appendChild(document.createTextNode(e)),a.appendChild(n))}};\n},{}],5:[function(_dereq_,module,exports){\nvar Buffer=_dereq_("buffer").Buffer;module.exports=function(f,e){if(Buffer.isBuffer(f)&&Buffer.isBuffer(e)){if("function"==typeof f.equals)return f.equals(e);if(f.length!==e.length)return!1;for(var r=0;r<f.length;r++)if(f[r]!==e[r])return!1;return!0}};\n},{"buffer":6}],6:[function(_dereq_,module,exports){\n(function (global){\n"use strict";function typedArraySupport(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function createBuffer(t,e){if(kMaxLength()<e)throw new RangeError("Invalid typed array length");return Buffer.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e),t.__proto__=Buffer.prototype):(null===t&&(t=new Buffer(e)),t.length=e),t}function Buffer(t,e,r){if(!(Buffer.TYPED_ARRAY_SUPPORT||this instanceof Buffer))return new Buffer(t,e,r);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return allocUnsafe(this,t)}return from(this,t,e,r)}function from(t,e,r,n){if("number"==typeof e)throw new TypeError(\'"value" argument must not be a number\');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?fromArrayBuffer(t,e,r,n):"string"==typeof e?fromString(t,e,r):fromObject(t,e)}function assertSize(t){if("number"!=typeof t)throw new TypeError(\'"size" argument must be a number\');if(t<0)throw new RangeError(\'"size" argument must not be negative\')}function alloc(t,e,r,n){return assertSize(e),e<=0?createBuffer(t,e):void 0!==r?"string"==typeof n?createBuffer(t,e).fill(r,n):createBuffer(t,e).fill(r):createBuffer(t,e)}function allocUnsafe(t,e){if(assertSize(e),t=createBuffer(t,e<0?0:0|checked(e)),!Buffer.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function fromString(t,e,r){if("string"==typeof r&&""!==r||(r="utf8"),!Buffer.isEncoding(r))throw new TypeError(\'"encoding" must be a valid string encoding\');var n=0|byteLength(e,r);t=createBuffer(t,n);var f=t.write(e,r);return f!==n&&(t=t.slice(0,f)),t}function fromArrayLike(t,e){var r=e.length<0?0:0|checked(e.length);t=createBuffer(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function fromArrayBuffer(t,e,r,n){if(e.byteLength,r<0||e.byteLength<r)throw new RangeError("\'offset\' is out of bounds");if(e.byteLength<r+(n||0))throw new RangeError("\'length\' is out of bounds");return e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n),Buffer.TYPED_ARRAY_SUPPORT?(t=e,t.__proto__=Buffer.prototype):t=fromArrayLike(t,e),t}function fromObject(t,e){if(Buffer.isBuffer(e)){var r=0|checked(e.length);return t=createBuffer(t,r),0===t.length?t:(e.copy(t,0,0,r),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||isnan(e.length)?createBuffer(t,0):fromArrayLike(t,e);if("Buffer"===e.type&&isArray(e.data))return fromArrayLike(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}function checked(t){if(t>=kMaxLength())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+kMaxLength().toString(16)+" bytes");return 0|t}function SlowBuffer(t){return+t!=t&&(t=0),Buffer.alloc(+t)}function byteLength(t,e){if(Buffer.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return utf8ToBytes(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return base64ToBytes(t).length;default:if(n)return utf8ToBytes(t).length;e=(""+e).toLowerCase(),n=!0}}function slowToString(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if(r>>>=0,e>>>=0,r<=e)return"";for(t||(t="utf8");;)switch(t){case"hex":return hexSlice(this,e,r);case"utf8":case"utf-8":return utf8Slice(this,e,r);case"ascii":return asciiSlice(this,e,r);case"latin1":case"binary":return latin1Slice(this,e,r);case"base64":return base64Slice(this,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return utf16leSlice(this,e,r);default:if(n)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),n=!0}}function swap(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function bidirectionalIndexOf(t,e,r,n,f){if(0===t.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=f?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(f)return-1;r=t.length-1}else if(r<0){if(!f)return-1;r=0}if("string"==typeof e&&(e=Buffer.from(e,n)),Buffer.isBuffer(e))return 0===e.length?-1:arrayIndexOf(t,e,r,n,f);if("number"==typeof e)return e&=255,Buffer.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?f?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):arrayIndexOf(t,[e],r,n,f);throw new TypeError("val must be string, number or Buffer")}function arrayIndexOf(t,e,r,n,f){function i(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}var o=1,u=t.length,s=e.length;if(void 0!==n&&(n=String(n).toLowerCase(),"ucs2"===n||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(t.length<2||e.length<2)return-1;o=2,u/=2,s/=2,r/=2}var a;if(f){var h=-1;for(a=r;a<u;a++)if(i(t,a)===i(e,h===-1?0:a-h)){if(h===-1&&(h=a),a-h+1===s)return h*o}else h!==-1&&(a-=a-h),h=-1}else for(r+s>u&&(r=u-s),a=r;a>=0;a--){for(var c=!0,l=0;l<s;l++)if(i(t,a+l)!==i(e,l)){c=!1;break}if(c)return a}return-1}function hexWrite(t,e,r,n){r=Number(r)||0;var f=t.length-r;n?(n=Number(n),n>f&&(n=f)):n=f;var i=e.length;if(i%2!==0)throw new TypeError("Invalid hex string");n>i/2&&(n=i/2);for(var o=0;o<n;++o){var u=parseInt(e.substr(2*o,2),16);if(isNaN(u))return o;t[r+o]=u}return o}function utf8Write(t,e,r,n){return blitBuffer(utf8ToBytes(e,t.length-r),t,r,n)}function asciiWrite(t,e,r,n){return blitBuffer(asciiToBytes(e),t,r,n)}function latin1Write(t,e,r,n){return asciiWrite(t,e,r,n)}function base64Write(t,e,r,n){return blitBuffer(base64ToBytes(e),t,r,n)}function ucs2Write(t,e,r,n){return blitBuffer(utf16leToBytes(e,t.length-r),t,r,n)}function base64Slice(t,e,r){return 0===e&&r===t.length?base64.fromByteArray(t):base64.fromByteArray(t.slice(e,r))}function utf8Slice(t,e,r){r=Math.min(t.length,r);for(var n=[],f=e;f<r;){var i=t[f],o=null,u=i>239?4:i>223?3:i>191?2:1;if(f+u<=r){var s,a,h,c;switch(u){case 1:i<128&&(o=i);break;case 2:s=t[f+1],128===(192&s)&&(c=(31&i)<<6|63&s,c>127&&(o=c));break;case 3:s=t[f+1],a=t[f+2],128===(192&s)&&128===(192&a)&&(c=(15&i)<<12|(63&s)<<6|63&a,c>2047&&(c<55296||c>57343)&&(o=c));break;case 4:s=t[f+1],a=t[f+2],h=t[f+3],128===(192&s)&&128===(192&a)&&128===(192&h)&&(c=(15&i)<<18|(63&s)<<12|(63&a)<<6|63&h,c>65535&&c<1114112&&(o=c))}}null===o?(o=65533,u=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),f+=u}return decodeCodePointsArray(n)}function decodeCodePointsArray(t){var e=t.length;if(e<=MAX_ARGUMENTS_LENGTH)return String.fromCharCode.apply(String,t);for(var r="",n=0;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=MAX_ARGUMENTS_LENGTH));return r}function asciiSlice(t,e,r){var n="";r=Math.min(t.length,r);for(var f=e;f<r;++f)n+=String.fromCharCode(127&t[f]);return n}function latin1Slice(t,e,r){var n="";r=Math.min(t.length,r);for(var f=e;f<r;++f)n+=String.fromCharCode(t[f]);return n}function hexSlice(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var f="",i=e;i<r;++i)f+=toHex(t[i]);return f}function utf16leSlice(t,e,r){for(var n=t.slice(e,r),f="",i=0;i<n.length;i+=2)f+=String.fromCharCode(n[i]+256*n[i+1]);return f}function checkOffset(t,e,r){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>r)throw new RangeError("Trying to access beyond buffer length")}function checkInt(t,e,r,n,f,i){if(!Buffer.isBuffer(t))throw new TypeError(\'"buffer" argument must be a Buffer instance\');if(e>f||e<i)throw new RangeError(\'"value" argument is out of bounds\');if(r+n>t.length)throw new RangeError("Index out of range")}function objectWriteUInt16(t,e,r,n){e<0&&(e=65535+e+1);for(var f=0,i=Math.min(t.length-r,2);f<i;++f)t[r+f]=(e&255<<8*(n?f:1-f))>>>8*(n?f:1-f)}function objectWriteUInt32(t,e,r,n){e<0&&(e=4294967295+e+1);for(var f=0,i=Math.min(t.length-r,4);f<i;++f)t[r+f]=e>>>8*(n?f:3-f)&255}function checkIEEE754(t,e,r,n,f,i){if(r+n>t.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function writeFloat(t,e,r,n,f){return f||checkIEEE754(t,e,r,4,3.4028234663852886e38,-3.4028234663852886e38),ieee754.write(t,e,r,n,23,4),r+4}function writeDouble(t,e,r,n,f){return f||checkIEEE754(t,e,r,8,1.7976931348623157e308,-1.7976931348623157e308),ieee754.write(t,e,r,n,52,8),r+8}function base64clean(t){if(t=stringtrim(t).replace(INVALID_BASE64_RE,""),t.length<2)return"";for(;t.length%4!==0;)t+="=";return t}function stringtrim(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,"")}function toHex(t){return t<16?"0"+t.toString(16):t.toString(16)}function utf8ToBytes(t,e){e=e||1/0;for(var r,n=t.length,f=null,i=[],o=0;o<n;++o){if(r=t.charCodeAt(o),r>55295&&r<57344){if(!f){if(r>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(o+1===n){(e-=3)>-1&&i.push(239,191,189);continue}f=r;continue}if(r<56320){(e-=3)>-1&&i.push(239,191,189),f=r;continue}r=(f-55296<<10|r-56320)+65536}else f&&(e-=3)>-1&&i.push(239,191,189);if(f=null,r<128){if((e-=1)<0)break;i.push(r)}else if(r<2048){if((e-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function asciiToBytes(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}function utf16leToBytes(t,e){for(var r,n,f,i=[],o=0;o<t.length&&!((e-=2)<0);++o)r=t.charCodeAt(o),n=r>>8,f=r%256,i.push(f),i.push(n);return i}function base64ToBytes(t){return base64.toByteArray(base64clean(t))}function blitBuffer(t,e,r,n){for(var f=0;f<n&&!(f+r>=e.length||f>=t.length);++f)e[f+r]=t[f];return f}function isnan(t){return t!==t}var base64=_dereq_("base64-js"),ieee754=_dereq_("ieee754"),isArray=_dereq_("isarray");exports.Buffer=Buffer,exports.SlowBuffer=SlowBuffer,exports.INSPECT_MAX_BYTES=50,Buffer.TYPED_ARRAY_SUPPORT=void 0!==global.TYPED_ARRAY_SUPPORT?global.TYPED_ARRAY_SUPPORT:typedArraySupport(),exports.kMaxLength=kMaxLength(),Buffer.poolSize=8192,Buffer._augment=function(t){return t.__proto__=Buffer.prototype,t},Buffer.from=function(t,e,r){return from(null,t,e,r)},Buffer.TYPED_ARRAY_SUPPORT&&(Buffer.prototype.__proto__=Uint8Array.prototype,Buffer.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&Buffer[Symbol.species]===Buffer&&Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:!0})),Buffer.alloc=function(t,e,r){return alloc(null,t,e,r)},Buffer.allocUnsafe=function(t){return allocUnsafe(null,t)},Buffer.allocUnsafeSlow=function(t){return allocUnsafe(null,t)},Buffer.isBuffer=function(t){return!(null==t||!t._isBuffer)},Buffer.compare=function(t,e){if(!Buffer.isBuffer(t)||!Buffer.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var r=t.length,n=e.length,f=0,i=Math.min(r,n);f<i;++f)if(t[f]!==e[f]){r=t[f],n=e[f];break}return r<n?-1:n<r?1:0},Buffer.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Buffer.concat=function(t,e){if(!isArray(t))throw new TypeError(\'"list" argument must be an Array of Buffers\');if(0===t.length)return Buffer.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var n=Buffer.allocUnsafe(e),f=0;for(r=0;r<t.length;++r){var i=t[r];if(!Buffer.isBuffer(i))throw new TypeError(\'"list" argument must be an Array of Buffers\');i.copy(n,f),f+=i.length}return n},Buffer.byteLength=byteLength,Buffer.prototype._isBuffer=!0,Buffer.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)swap(this,e,e+1);return this},Buffer.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)swap(this,e,e+3),swap(this,e+1,e+2);return this},Buffer.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)swap(this,e,e+7),swap(this,e+1,e+6),swap(this,e+2,e+5),swap(this,e+3,e+4);return this},Buffer.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?utf8Slice(this,0,t):slowToString.apply(this,arguments)},Buffer.prototype.equals=function(t){if(!Buffer.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===Buffer.compare(this,t)},Buffer.prototype.inspect=function(){var t="",e=exports.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(t+=" ... ")),"<Buffer "+t+">"},Buffer.prototype.compare=function(t,e,r,n,f){if(!Buffer.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===f&&(f=this.length),e<0||r>t.length||n<0||f>this.length)throw new RangeError("out of range index");if(n>=f&&e>=r)return 0;if(n>=f)return-1;if(e>=r)return 1;if(e>>>=0,r>>>=0,n>>>=0,f>>>=0,this===t)return 0;for(var i=f-n,o=r-e,u=Math.min(i,o),s=this.slice(n,f),a=t.slice(e,r),h=0;h<u;++h)if(s[h]!==a[h]){i=s[h],o=a[h];break}return i<o?-1:o<i?1:0},Buffer.prototype.includes=function(t,e,r){return this.indexOf(t,e,r)!==-1},Buffer.prototype.indexOf=function(t,e,r){return bidirectionalIndexOf(this,t,e,r,!0)},Buffer.prototype.lastIndexOf=function(t,e,r){return bidirectionalIndexOf(this,t,e,r,!1)},Buffer.prototype.write=function(t,e,r,n){if(void 0===e)n="utf8",r=this.length,e=0;else if(void 0===r&&"string"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var f=this.length-e;if((void 0===r||r>f)&&(r=f),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=!1;;)switch(n){case"hex":return hexWrite(this,t,e,r);case"utf8":case"utf-8":return utf8Write(this,t,e,r);case"ascii":return asciiWrite(this,t,e,r);case"latin1":case"binary":return latin1Write(this,t,e,r);case"base64":return base64Write(this,t,e,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ucs2Write(this,t,e,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},Buffer.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var MAX_ARGUMENTS_LENGTH=4096;Buffer.prototype.slice=function(t,e){var r=this.length;t=~~t,e=void 0===e?r:~~e,t<0?(t+=r,t<0&&(t=0)):t>r&&(t=r),e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),e<t&&(e=t);var n;if(Buffer.TYPED_ARRAY_SUPPORT)n=this.subarray(t,e),n.__proto__=Buffer.prototype;else{var f=e-t;n=new Buffer(f,void 0);for(var i=0;i<f;++i)n[i]=this[i+t]}return n},Buffer.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=this[t],f=1,i=0;++i<e&&(f*=256);)n+=this[t+i]*f;return n},Buffer.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=this[t+--e],f=1;e>0&&(f*=256);)n+=this[t+--e]*f;return n},Buffer.prototype.readUInt8=function(t,e){return e||checkOffset(t,1,this.length),this[t]},Buffer.prototype.readUInt16LE=function(t,e){return e||checkOffset(t,2,this.length),this[t]|this[t+1]<<8},Buffer.prototype.readUInt16BE=function(t,e){return e||checkOffset(t,2,this.length),this[t]<<8|this[t+1]},Buffer.prototype.readUInt32LE=function(t,e){return e||checkOffset(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Buffer.prototype.readUInt32BE=function(t,e){return e||checkOffset(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Buffer.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=this[t],f=1,i=0;++i<e&&(f*=256);)n+=this[t+i]*f;return f*=128,n>=f&&(n-=Math.pow(2,8*e)),n},Buffer.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||checkOffset(t,e,this.length);for(var n=e,f=1,i=this[t+--n];n>0&&(f*=256);)i+=this[t+--n]*f;return f*=128,i>=f&&(i-=Math.pow(2,8*e)),i},Buffer.prototype.readInt8=function(t,e){return e||checkOffset(t,1,this.length),128&this[t]?(255-this[t]+1)*-1:this[t]},Buffer.prototype.readInt16LE=function(t,e){e||checkOffset(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},Buffer.prototype.readInt16BE=function(t,e){e||checkOffset(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},Buffer.prototype.readInt32LE=function(t,e){return e||checkOffset(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Buffer.prototype.readInt32BE=function(t,e){return e||checkOffset(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Buffer.prototype.readFloatLE=function(t,e){return e||checkOffset(t,4,this.length),ieee754.read(this,t,!0,23,4)},Buffer.prototype.readFloatBE=function(t,e){return e||checkOffset(t,4,this.length),ieee754.read(this,t,!1,23,4)},Buffer.prototype.readDoubleLE=function(t,e){return e||checkOffset(t,8,this.length),ieee754.read(this,t,!0,52,8)},Buffer.prototype.readDoubleBE=function(t,e){return e||checkOffset(t,8,this.length),ieee754.read(this,t,!1,52,8)},Buffer.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e|=0,r|=0,!n){var f=Math.pow(2,8*r)-1;checkInt(this,t,e,r,f,0)}var i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},Buffer.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e|=0,r|=0,!n){var f=Math.pow(2,8*r)-1;checkInt(this,t,e,r,f,0)}var i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},Buffer.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,1,255,0),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},Buffer.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):objectWriteUInt16(this,t,e,!0),e+2},Buffer.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,65535,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):objectWriteUInt16(this,t,e,!1),e+2},Buffer.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):objectWriteUInt32(this,t,e,!0),e+4},Buffer.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,4294967295,0),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):objectWriteUInt32(this,t,e,!1),e+4},Buffer.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e|=0,!n){var f=Math.pow(2,8*r-1);checkInt(this,t,e,r,f-1,-f)}var i=0,o=1,u=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===u&&0!==this[e+i-1]&&(u=1),this[e+i]=(t/o>>0)-u&255;return e+r},Buffer.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e|=0,!n){var f=Math.pow(2,8*r-1);checkInt(this,t,e,r,f-1,-f)}var i=r-1,o=1,u=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===u&&0!==this[e+i+1]&&(u=1),this[e+i]=(t/o>>0)-u&255;return e+r},Buffer.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,1,127,-128),Buffer.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},Buffer.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):objectWriteUInt16(this,t,e,!0),e+2},Buffer.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,2,32767,-32768),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):objectWriteUInt16(this,t,e,!1),e+2},Buffer.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,2147483647,-2147483648),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):objectWriteUInt32(this,t,e,!0),e+4},Buffer.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||checkInt(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),Buffer.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):objectWriteUInt32(this,t,e,!1),e+4},Buffer.prototype.writeFloatLE=function(t,e,r){return writeFloat(this,t,e,!0,r)},Buffer.prototype.writeFloatBE=function(t,e,r){return writeFloat(this,t,e,!1,r)},Buffer.prototype.writeDoubleLE=function(t,e,r){return writeDouble(this,t,e,!0,r)},Buffer.prototype.writeDoubleBE=function(t,e,r){return writeDouble(this,t,e,!1,r)},Buffer.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var f,i=n-r;if(this===t&&r<e&&e<n)for(f=i-1;f>=0;--f)t[f+e]=this[f+r];else if(i<1e3||!Buffer.TYPED_ARRAY_SUPPORT)for(f=0;f<i;++f)t[f+e]=this[f+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+i),e);return i},Buffer.prototype.fill=function(t,e,r,n){if("string"==typeof t){if("string"==typeof e?(n=e,e=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===t.length){var f=t.charCodeAt(0);f<256&&(t=f)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!Buffer.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<r)throw new RangeError("Out of range index");if(r<=e)return this;e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0);var i;if("number"==typeof t)for(i=e;i<r;++i)this[i]=t;else{var o=Buffer.isBuffer(t)?t:utf8ToBytes(new Buffer(t,n).toString()),u=o.length;for(i=0;i<r-e;++i)this[i+e]=o[i%u]}return this};var INVALID_BASE64_RE=/[^+\\/0-9A-Za-z-_]/g;\n}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})\n\n},{"base64-js":3,"ieee754":15,"isarray":21}],7:[function(_dereq_,module,exports){\nfunction useColors(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31}function formatArgs(){var o=arguments,e=this.useColors;if(o[0]=(e?"%c":"")+this.namespace+(e?" %c":" ")+o[0]+(e?"%c ":" "),!e)return o;var r="color: "+this.color;o=[o[0],r,"color: inherit"].concat(Array.prototype.slice.call(o,1));var t=0,s=0;return o[0].replace(/%[a-z%]/g,function(o){"%%"!==o&&(t++,"%c"===o&&(s=t))}),o.splice(s,0,r),o}function log(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function save(o){try{null==o?exports.storage.removeItem("debug"):exports.storage.debug=o}catch(o){}}function load(){var o;try{o=exports.storage.debug}catch(o){}return o}function localstorage(){try{return window.localStorage}catch(o){}}exports=module.exports=_dereq_("./debug"),exports.log=log,exports.formatArgs=formatArgs,exports.save=save,exports.load=load,exports.useColors=useColors,exports.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:localstorage(),exports.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],exports.formatters.j=function(o){return JSON.stringify(o)},exports.enable(load());\n},{"./debug":8}],8:[function(_dereq_,module,exports){\nfunction selectColor(){return exports.colors[prevColor++%exports.colors.length]}function debug(e){function r(){}function o(){var e=o;null==e.useColors&&(e.useColors=exports.useColors()),null==e.color&&e.useColors&&(e.color=selectColor());var r=Array.prototype.slice.call(arguments);r[0]=exports.coerce(r[0]),"string"!=typeof r[0]&&(r=["%o"].concat(r));var s=0;r[0]=r[0].replace(/%([a-z%])/g,function(o,t){if("%%"===o)return o;s++;var n=exports.formatters[t];if("function"==typeof n){var l=r[s];o=n.call(e,l),r.splice(s,1),s--}return o}),"function"==typeof exports.formatArgs&&(r=exports.formatArgs.apply(e,r));var t=o.log||exports.log||console.log.bind(console);t.apply(e,r)}r.enabled=!1,o.enabled=!0;var s=exports.enabled(e)?o:r;return s.namespace=e,s}function enable(e){exports.save(e);for(var r=(e||"").split(/[\\s,]+/),o=r.length,s=0;s<o;s++)r[s]&&(e=r[s].replace(/\\*/g,".*?"),"-"===e[0]?exports.skips.push(new RegExp("^"+e.substr(1)+"$")):exports.names.push(new RegExp("^"+e+"$")))}function disable(){exports.enable("")}function enabled(e){var r,o;for(r=0,o=exports.skips.length;r<o;r++)if(exports.skips[r].test(e))return!1;for(r=0,o=exports.names.length;r<o;r++)if(exports.names[r].test(e))return!0;return!1}function coerce(e){return e instanceof Error?e.stack||e.message:e}exports=module.exports=debug,exports.coerce=coerce,exports.disable=disable,exports.enable=enable,exports.enabled=enabled,exports.names=[],exports.skips=[],exports.formatters={};var prevColor=0;\n},{}],9:[function(_dereq_,module,exports){\n"use strict";function toObject(r){if(null===r||void 0===r)throw new TypeError("Sources cannot be null or undefined");return Object(r)}function assignKey(r,e,n){var t=e[n];if(void 0!==t&&null!==t){if(hasOwnProperty.call(r,n)&&(void 0===r[n]||null===r[n]))throw new TypeError("Cannot convert undefined or null to object ("+n+")");hasOwnProperty.call(r,n)&&isObj(t)?r[n]=assign(Object(r[n]),e[n]):r[n]=t}}function assign(r,e){if(r===e)return r;e=Object(e);for(var n in e)hasOwnProperty.call(e,n)&&assignKey(r,e,n);if(Object.getOwnPropertySymbols)for(var t=Object.getOwnPropertySymbols(e),o=0;o<t.length;o++)propIsEnumerable.call(e,t[o])&&assignKey(r,e,t[o]);return r}var isObj=_dereq_("is-obj"),hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=function(r){r=toObject(r);for(var e=1;e<arguments.length;e++)assign(r,arguments[e]);return r};\n},{"is-obj":20}],10:[function(_dereq_,module,exports){\n!function(t,r,n,a){"use strict";function l(e,t){for(var r=0,n=e.length;r<n;r++)m(e[r],t)}function i(e){for(var t,r=0,n=e.length;r<n;r++)t=e[r],y(t,H[u(t)])}function o(e){return function(t){ae(t)&&(m(t,e),l(t.querySelectorAll(x),e))}}function u(e){var t=oe.call(e,"is"),r=e.nodeName.toUpperCase(),n=G.call(U,t?k+t.toUpperCase():_+r);return t&&-1<n&&!c(r,t)?-1:n}function c(e,t){return-1<x.indexOf(e+\'[is="\'+t+\'"]\')}function s(e){var t=e.currentTarget,r=e.attrChange,n=e.attrName,a=e.target;me&&(!a||a===t)&&t.attributeChangedCallback&&"style"!==n&&e.prevValue!==e.newValue&&t.attributeChangedCallback(n,r===e[F]?null:e.prevValue,r===e[I]?null:e.newValue)}function d(e){var t=o(e);return function(e){g.push(t,e.target)}}function f(e){be&&(be=!1,e.currentTarget.removeEventListener(P,f)),l((e.target||r).querySelectorAll(x),e.detail===T?T:L),ne&&p()}function h(e,t){var r=this;ue.call(r,e,t),C.call(r,{target:r})}function v(e,t){ee(e,t),O?O.observe(e,de):(pe&&(e.setAttribute=h,e[w]=E(e),e.addEventListener(R,C)),e.addEventListener(D,s)),e.createdCallback&&me&&(e.created=!0,e.createdCallback(),e.created=!1)}function p(){for(var e,t=0,r=le.length;t<r;t++)e=le[t],Z.contains(e)||(r--,le.splice(t--,1),m(e,T))}function b(e){throw new Error("A "+e+" type is already registered")}function m(e,t){var r,n=u(e);-1<n&&(N(e,H[n]),n=0,t!==L||e[L]?t===T&&!e[T]&&(e[L]=!1,e[T]=!0,n=1):(e[T]=!1,e[L]=!0,n=1,ne&&G.call(le,e)<0&&le.push(e)),n&&(r=e[t+"Callback"])&&r.call(e))}if(!(a in r)){var g,C,A,E,O,N,y,w="__"+a+(1e5*Math.random()>>0),L="attached",T="detached",M="extends",F="ADDITION",V="MODIFICATION",I="REMOVAL",D="DOMAttrModified",P="DOMContentLoaded",R="DOMSubtreeModified",_="<",k="=",q=/^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,S=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],U=[],H=[],x="",Z=r.documentElement,G=U.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},j=n.prototype,z=j.hasOwnProperty,K=j.isPrototypeOf,W=n.defineProperty,X=n.getOwnPropertyDescriptor,Y=n.getOwnPropertyNames,$=n.getPrototypeOf,B=n.setPrototypeOf,J=!!n.__proto__,Q=n.create||function e(t){return t?(e.prototype=t,new e):this},ee=B||(J?function(e,t){return e.__proto__=t,e}:Y&&X?function(){function e(e,t){for(var r,n=Y(t),a=0,l=n.length;a<l;a++)r=n[a],z.call(e,r)||W(e,r,X(t,r))}return function(t,r){do e(t,r);while((r=$(r))&&!K.call(r,t));return t}}():function(e,t){for(var r in t)e[r]=t[r];return e}),te=t.MutationObserver||t.WebKitMutationObserver,re=(t.HTMLElement||t.Element||t.Node).prototype,ne=!K.call(re,Z),ae=ne?function(e){return 1===e.nodeType}:function(e){return K.call(re,e)},le=ne&&[],ie=re.cloneNode,oe=re.getAttribute,ue=re.setAttribute,ce=re.removeAttribute,se=r.createElement,de=te&&{attributes:!0,characterData:!0,attributeOldValue:!0},fe=te||function(e){pe=!1,Z.removeEventListener(D,fe)},he=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.msRequestAnimationFrame||function(e){setTimeout(e,10)},ve=!1,pe=!0,be=!0,me=!0;B||J?(N=function(e,t){K.call(t,e)||v(e,t)},y=v):(N=function(e,t){e[w]||(e[w]=n(!0),v(e,t))},y=N),ne?(pe=!1,function(){var t=X(re,"addEventListener"),r=t.value,n=function(e){var t=new CustomEvent(D,{bubbles:!0});t.attrName=e,t.prevValue=oe.call(this,e),t.newValue=null,t[I]=t.attrChange=2,ce.call(this,e),this.dispatchEvent(t)},a=function(t,r){var n=this.hasAttribute(t),a=n&&oe.call(this,t);e=new CustomEvent(D,{bubbles:!0}),ue.call(this,t,r),e.attrName=t,e.prevValue=n?a:null,e.newValue=r,n?e[V]=e.attrChange=1:e[F]=e.attrChange=0,this.dispatchEvent(e)},l=function(e){var t,r=e.currentTarget,n=r[w],a=e.propertyName;n.hasOwnProperty(a)&&(n=n[a],t=new CustomEvent(D,{bubbles:!0}),t.attrName=n.name,t.prevValue=n.value||null,t.newValue=n.value=r[a]||null,null==t.prevValue?t[F]=t.attrChange=0:t[V]=t.attrChange=1,r.dispatchEvent(t))};t.value=function(e,t,i){e===D&&this.attributeChangedCallback&&this.setAttribute!==a&&(this[w]={className:{name:"class",value:this.className}},this.setAttribute=a,this.removeAttribute=n,r.call(this,"propertychange",l)),r.call(this,e,t,i)},W(re,"addEventListener",t)}()):te||(Z.addEventListener(D,fe),Z.setAttribute(w,1),Z.removeAttribute(w),pe&&(C=function(e){var t,r,n,a=this;if(a===e.target){t=a[w],a[w]=r=E(a);for(n in r){if(!(n in t))return A(0,a,n,t[n],r[n],F);if(r[n]!==t[n])return A(1,a,n,t[n],r[n],V)}for(n in t)if(!(n in r))return A(2,a,n,t[n],r[n],I)}},A=function(e,t,r,n,a,l){var i={attrChange:e,currentTarget:t,attrName:r,prevValue:n,newValue:a};i[l]=e,s(i)},E=function(e){for(var t,r,n={},a=e.attributes,l=0,i=a.length;l<i;l++)t=a[l],r=t.name,"setAttribute"!==r&&(n[r]=t.value);return n})),r[a]=function(e,t){if(n=e.toUpperCase(),ve||(ve=!0,te?(O=function(e,t){function r(e,t){for(var r=0,n=e.length;r<n;t(e[r++]));}return new te(function(n){for(var a,l,i,o=0,u=n.length;o<u;o++)a=n[o],"childList"===a.type?(r(a.addedNodes,e),r(a.removedNodes,t)):(l=a.target,me&&l.attributeChangedCallback&&"style"!==a.attributeName&&(i=oe.call(l,a.attributeName),i!==a.oldValue&&l.attributeChangedCallback(a.attributeName,a.oldValue,i)))})}(o(L),o(T)),O.observe(r,{childList:!0,subtree:!0})):(g=[],he(function e(){for(;g.length;)g.shift().call(null,g.shift());he(e)}),r.addEventListener("DOMNodeInserted",d(L)),r.addEventListener("DOMNodeRemoved",d(T))),r.addEventListener(P,f),r.addEventListener("readystatechange",f),r.createElement=function(e,t){var n=se.apply(r,arguments),a=""+e,l=G.call(U,(t?k:_)+(t||a).toUpperCase()),i=-1<l;return t&&(n.setAttribute("is",t=t.toLowerCase()),i&&(i=c(a.toUpperCase(),t))),me=!r.createElement.innerHTMLHelper,i&&y(n,H[l]),n},re.cloneNode=function(e){var t=ie.call(this,!!e),r=u(t);return-1<r&&y(t,H[r]),e&&i(t.querySelectorAll(x)),t}),-2<G.call(U,k+n)+G.call(U,_+n)&&b(e),!q.test(n)||-1<G.call(S,n))throw new Error("The type "+e+" is invalid");var n,a,s=function(){return v?r.createElement(p,n):r.createElement(p)},h=t||j,v=z.call(h,M),p=v?t[M].toUpperCase():n;return v&&-1<G.call(U,_+p)&&b(p),a=U.push((v?k:_)+n)-1,x=x.concat(x.length?",":"",v?p+\'[is="\'+e.toLowerCase()+\'"]\':p),s.prototype=H[a]=z.call(h,"prototype")?h.prototype:Q(re),l(r.querySelectorAll(x),L),s}}}(window,document,Object,"registerElement");\n},{}],11:[function(_dereq_,module,exports){\nmodule.exports=function(r){switch(r){case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"uint8":return Uint8Array;case"uint16":return Uint16Array;case"uint32":return Uint32Array;case"float32":return Float32Array;case"float64":return Float64Array;case"array":return Array;case"uint8_clamped":return Uint8ClampedArray}};\n},{}],12:[function(_dereq_,module,exports){\nfunction flattenVertexData(e,t,r){if(!e)throw new TypeError("must specify data as first parameter");if(r=0|+(r||0),Array.isArray(e)&&Array.isArray(e[0])){var a=e[0].length,n=e.length*a;t&&"string"!=typeof t||(t=new(dtype(t||"float32"))(n+r));var o=t.length-r;if(n!==o)throw new Error("source length "+n+" ("+a+"x"+e.length+") does not match destination length "+o);for(var s=0,f=r;s<e.length;s++)for(var l=0;l<a;l++)t[f++]=e[s][l]}else if(t&&"string"!=typeof t)t.set(e,r);else{var i=dtype(t||"float32");0===r?t=new i(e):(t=new i(e.length+r),t.set(e,r))}return t}var dtype=_dereq_("dtype");module.exports=flattenVertexData;\n},{"dtype":11}],13:[function(_dereq_,module,exports){\nfunction forEach(r,t,o){if(!isFunction(t))throw new TypeError("iterator must be a function");arguments.length<3&&(o=this),"[object Array]"===toString.call(r)?forEachArray(r,t,o):"string"==typeof r?forEachString(r,t,o):forEachObject(r,t,o)}function forEachArray(r,t,o){for(var n=0,a=r.length;n<a;n++)hasOwnProperty.call(r,n)&&t.call(o,r[n],n,r)}function forEachString(r,t,o){for(var n=0,a=r.length;n<a;n++)t.call(o,r.charAt(n),n,r)}function forEachObject(r,t,o){for(var n in r)hasOwnProperty.call(r,n)&&t.call(o,r[n],n,r)}var isFunction=_dereq_("is-function");module.exports=forEach;var toString=Object.prototype.toString,hasOwnProperty=Object.prototype.hasOwnProperty;\n},{"is-function":19}],14:[function(_dereq_,module,exports){\n(function (global){\n"undefined"!=typeof window?module.exports=window:"undefined"!=typeof global?module.exports=global:"undefined"!=typeof self?module.exports=self:module.exports={};\n}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})\n\n},{}],15:[function(_dereq_,module,exports){\nexports.read=function(a,o,t,r,h){var M,p,w=8*h-r-1,f=(1<<w)-1,e=f>>1,i=-7,N=t?h-1:0,n=t?-1:1,s=a[o+N];for(N+=n,M=s&(1<<-i)-1,s>>=-i,i+=w;i>0;M=256*M+a[o+N],N+=n,i-=8);for(p=M&(1<<-i)-1,M>>=-i,i+=r;i>0;p=256*p+a[o+N],N+=n,i-=8);if(0===M)M=1-e;else{if(M===f)return p?NaN:(s?-1:1)*(1/0);p+=Math.pow(2,r),M-=e}return(s?-1:1)*p*Math.pow(2,M-r)},exports.write=function(a,o,t,r,h,M){var p,w,f,e=8*M-h-1,i=(1<<e)-1,N=i>>1,n=23===h?Math.pow(2,-24)-Math.pow(2,-77):0,s=r?0:M-1,u=r?1:-1,l=o<0||0===o&&1/o<0?1:0;for(o=Math.abs(o),isNaN(o)||o===1/0?(w=isNaN(o)?1:0,p=i):(p=Math.floor(Math.log(o)/Math.LN2),o*(f=Math.pow(2,-p))<1&&(p--,f*=2),o+=p+N>=1?n/f:n*Math.pow(2,1-N),o*f>=2&&(p++,f/=2),p+N>=i?(w=0,p=i):p+N>=1?(w=(o*f-1)*Math.pow(2,h),p+=N):(w=o*Math.pow(2,N-1)*Math.pow(2,h),p=0));h>=8;a[t+s]=255&w,s+=u,w/=256,h-=8);for(p=p<<h|w,e+=h;e>0;a[t+s]=255&p,s+=u,p/=256,e-=8);a[t+s-u]|=128*l};\n},{}],16:[function(_dereq_,module,exports){\nmodule.exports=function(r){if(!r||"string"!=typeof r)throw new Error("must specify property for indexof search");return new Function("array","value","start",["start = start || 0","for (var i=start; i<array.length; i++)",\'  if (array[i]["\'+r+\'"] === value)\',"      return i","return -1"].join("\\n"))};\n},{}],17:[function(_dereq_,module,exports){\n"function"==typeof Object.create?module.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:module.exports=function(t,e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t};\n},{}],18:[function(_dereq_,module,exports){\nfunction isBuffer(f){return!!f.constructor&&"function"==typeof f.constructor.isBuffer&&f.constructor.isBuffer(f)}function isSlowBuffer(f){return"function"==typeof f.readFloatLE&&"function"==typeof f.slice&&isBuffer(f.slice(0,0))}module.exports=function(f){return null!=f&&(isBuffer(f)||isSlowBuffer(f)||!!f._isBuffer)};\n},{}],19:[function(_dereq_,module,exports){\nfunction isFunction(o){var t=toString.call(o);return"[object Function]"===t||"function"==typeof o&&"[object RegExp]"!==t||"undefined"!=typeof window&&(o===window.setTimeout||o===window.alert||o===window.confirm||o===window.prompt)}module.exports=isFunction;var toString=Object.prototype.toString;\n},{}],20:[function(_dereq_,module,exports){\n"use strict";module.exports=function(t){var e=typeof t;return null!==t&&("object"===e||"function"===e)};\n},{}],21:[function(_dereq_,module,exports){\nvar toString={}.toString;module.exports=Array.isArray||function(r){return"[object Array]"==toString.call(r)};\n},{}],22:[function(_dereq_,module,exports){\nfunction TextLayout(t){this.glyphs=[],this._measure=this.computeMetrics.bind(this),this.update(t)}function addGetter(t){Object.defineProperty(TextLayout.prototype,t,{get:wrapper(t),configurable:!0})}function wrapper(t){return new Function(["return function "+t+"() {","  return this._"+t,"}"].join("\\n"))()}function getGlyphById(t,e){if(!t.chars||0===t.chars.length)return null;var r=findChar(t.chars,e);return r>=0?t.chars[r]:null}function getXHeight(t){for(var e=0;e<X_HEIGHTS.length;e++){var r=X_HEIGHTS[e].charCodeAt(0),i=findChar(t.chars,r);if(i>=0)return t.chars[i].height}return 0}function getMGlyph(t){for(var e=0;e<M_WIDTHS.length;e++){var r=M_WIDTHS[e].charCodeAt(0),i=findChar(t.chars,r);if(i>=0)return t.chars[i]}return 0}function getCapHeight(t){for(var e=0;e<CAP_HEIGHTS.length;e++){var r=CAP_HEIGHTS[e].charCodeAt(0),i=findChar(t.chars,r);if(i>=0)return t.chars[i].height}return 0}function getKerning(t,e,r){if(!t.kernings||0===t.kernings.length)return 0;for(var i=t.kernings,n=0;n<i.length;n++){var a=i[n];if(a.first===e&&a.second===r)return a.amount}return 0}function getAlignType(t){return"center"===t?ALIGN_CENTER:"right"===t?ALIGN_RIGHT:ALIGN_LEFT}var wordWrap=_dereq_("word-wrapper"),xtend=_dereq_("xtend"),findChar=_dereq_("indexof-property")("id"),number=_dereq_("as-number"),X_HEIGHTS=["x","e","a","o","n","s","r","c","u","m","v","w","z"],M_WIDTHS=["m","w"],CAP_HEIGHTS=["H","I","N","E","F","K","L","T","U","V","W","X","Y","Z"],TAB_ID="\\t".charCodeAt(0),SPACE_ID=" ".charCodeAt(0),ALIGN_LEFT=0,ALIGN_CENTER=1,ALIGN_RIGHT=2;module.exports=function(t){return new TextLayout(t)},TextLayout.prototype.update=function(t){if(t=xtend({measure:this._measure},t),this._opt=t,this._opt.tabSize=number(this._opt.tabSize,4),!t.font)throw new Error("must provide a valid bitmap font");var e=this.glyphs,r=t.text||"",i=t.font;this._setupSpaceGlyphs(i);var n=wordWrap.lines(r,t),a=t.width||0;e.length=0;var h=n.reduce(function(t,e){return Math.max(t,e.width,a)},0),o=0,s=0,c=number(t.lineHeight,i.common.lineHeight),u=i.common.base,l=c-u,p=t.letterSpacing||0,d=c*n.length-l,f=getAlignType(this._opt.align);s-=d,this._width=h,this._height=d,this._descender=c-u,this._baseline=u,this._xHeight=getXHeight(i),this._capHeight=getCapHeight(i),this._lineHeight=c,this._ascender=c-l-this._xHeight;var g=this;n.forEach(function(t,n){for(var a,u=t.start,l=t.end,d=t.width,_=u;_<l;_++){var y=r.charCodeAt(_),G=g.getGlyph(i,y);if(G){a&&(o+=getKerning(i,a.id,G.id));var T=o;f===ALIGN_CENTER?T+=(h-d)/2:f===ALIGN_RIGHT&&(T+=h-d),e.push({position:[T,s],data:G,index:_,line:n}),o+=G.xadvance+p,a=G}}s+=c,o=0}),this._linesTotal=n.length},TextLayout.prototype._setupSpaceGlyphs=function(t){if(this._fallbackSpaceGlyph=null,this._fallbackTabGlyph=null,t.chars&&0!==t.chars.length){var e=getGlyphById(t,SPACE_ID)||getMGlyph(t)||t.chars[0],r=this._opt.tabSize*e.xadvance;this._fallbackSpaceGlyph=e,this._fallbackTabGlyph=xtend(e,{x:0,y:0,xadvance:r,id:TAB_ID,xoffset:0,yoffset:0,width:0,height:0})}},TextLayout.prototype.getGlyph=function(t,e){var r=getGlyphById(t,e);return r?r:e===TAB_ID?this._fallbackTabGlyph:e===SPACE_ID?this._fallbackSpaceGlyph:null},TextLayout.prototype.computeMetrics=function(t,e,r,i){var n,a,h=this._opt.letterSpacing||0,o=this._opt.font,s=0,c=0,u=0;if(!o.chars||0===o.chars.length)return{start:e,end:e,width:0};r=Math.min(t.length,r);for(var l=e;l<r;l++){var p=t.charCodeAt(l),n=this.getGlyph(o,p);if(n){var d=(n.xoffset,a?getKerning(o,a.id,n.id):0);s+=d;var f=s+n.xadvance+h,g=s+n.width;if(g>=i||f>=i)break;s=f,c=g,a=n}u++}return a&&(c+=a.xoffset),{start:e,end:e+u,width:c}},["width","height","descender","ascender","xHeight","baseline","capHeight","lineHeight"].forEach(addGetter);\n},{"as-number":2,"indexof-property":16,"word-wrapper":50,"xtend":53}],23:[function(_dereq_,module,exports){\n(function (Buffer){\nfunction isArrayBuffer(r){var e=Object.prototype.toString;return"[object ArrayBuffer]"===e.call(r)}function getBinaryOpts(r){if(xml2)return xtend(r,{responseType:"arraybuffer"});if("undefined"==typeof window.XMLHttpRequest)throw new Error("your browser does not support XHR loading");var e=new window.XMLHttpRequest;return e.overrideMimeType("text/plain; charset=x-user-defined"),xtend({xhr:e},r)}var xhr=_dereq_("xhr"),noop=function(){},parseASCII=_dereq_("parse-bmfont-ascii"),parseXML=_dereq_("parse-bmfont-xml"),readBinary=_dereq_("parse-bmfont-binary"),isBinaryFormat=_dereq_("./lib/is-binary"),xtend=_dereq_("xtend"),xml2=function(){return window.XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}();module.exports=function(r,e){e="function"==typeof e?e:noop,"string"==typeof r?r={uri:r}:r||(r={});var t=r.binary;t&&(r=getBinaryOpts(r)),xhr(r,function(t,n,i){if(t)return e(t);if(!/^2/.test(n.statusCode))return e(new Error("http status code: "+n.statusCode));if(!i)return e(new Error("no body result"));var o=!1;if(isArrayBuffer(i)){var a=new Uint8Array(i);i=new Buffer(a,"binary")}isBinaryFormat(i)&&(o=!0,"string"==typeof i&&(i=new Buffer(i,"binary"))),o||(Buffer.isBuffer(i)&&(i=i.toString(r.encoding)),i=i.trim());var s;try{var u=n.headers["content-type"];s=o?readBinary(i):/json/.test(u)||"{"===i.charAt(0)?JSON.parse(i):/xml/.test(u)||"<"===i.charAt(0)?parseXML(i):parseASCII(i)}catch(r){e(new Error("error parsing font "+r.message)),e=noop}e(null,s)})};\n}).call(this,_dereq_("buffer").Buffer)\n\n},{"./lib/is-binary":24,"buffer":6,"parse-bmfont-ascii":26,"parse-bmfont-binary":27,"parse-bmfont-xml":28,"xhr":51,"xtend":53}],24:[function(_dereq_,module,exports){\n(function (Buffer){\nvar equal=_dereq_("buffer-equal"),HEADER=new Buffer([66,77,70,3]);module.exports=function(e){return"string"==typeof e?"BMF"===e.substring(0,3):e.length>4&&equal(e.slice(0,4),HEADER)};\n}).call(this,_dereq_("buffer").Buffer)\n\n},{"buffer":6,"buffer-equal":5}],25:[function(_dereq_,module,exports){\n"use strict";function toObject(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function shouldUseNative(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r["_"+String.fromCharCode(t)]=t;var n=Object.getOwnPropertyNames(r).map(function(e){return r[e]});if("0123456789"!==n.join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(e){o[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(e){return!1}}var hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=shouldUseNative()?Object.assign:function(e,r){for(var t,n,o=toObject(e),a=1;a<arguments.length;a++){t=Object(arguments[a]);for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);if(Object.getOwnPropertySymbols){n=Object.getOwnPropertySymbols(t);for(var s=0;s<n.length;s++)propIsEnumerable.call(t,n[s])&&(o[n[s]]=t[n[s]])}}return o};\n},{}],26:[function(_dereq_,module,exports){\nfunction splitLine(e,r){if(e=e.replace(/\\t+/g," ").trim(),!e)return null;var t=e.indexOf(" ");if(t===-1)throw new Error("no named row at line "+r);var a=e.substring(0,t);e=e.substring(t+1),e=e.replace(/letter=[\\\'\\"]\\S+[\\\'\\"]/gi,""),e=e.split("="),e=e.map(function(e){return e.trim().match(/(".*?"|[^"\\s]+)+(?=\\s*|\\s*$)/g)});for(var n=[],i=0;i<e.length;i++){var s=e[i];0===i?n.push({key:s[0],data:""}):i===e.length-1?n[n.length-1].data=parseData(s[0]):(n[n.length-1].data=parseData(s[0]),n.push({key:s[1],data:""}))}var o={key:a,data:{}};return n.forEach(function(e){o.data[e.key]=e.data}),o}function parseData(e){return e&&0!==e.length?0===e.indexOf(\'"\')||0===e.indexOf("\'")?e.substring(1,e.length-1):e.indexOf(",")!==-1?parseIntList(e):parseInt(e,10):""}function parseIntList(e){return e.split(",").map(function(e){return parseInt(e,10)})}module.exports=function(e){if(!e)throw new Error("no data provided");e=e.toString().trim();var r={pages:[],chars:[],kernings:[]},t=e.split(/\\r\\n?|\\n/g);if(0===t.length)throw new Error("no data in BMFont file");for(var a=0;a<t.length;a++){var n=splitLine(t[a],a);if(n)if("page"===n.key){if("number"!=typeof n.data.id)throw new Error("malformed file at line "+a+" -- needs page id=N");if("string"!=typeof n.data.file)throw new Error("malformed file at line "+a+\' -- needs page file="path"\');r.pages[n.data.id]=n.data.file}else"chars"===n.key||"kernings"===n.key||("char"===n.key?r.chars.push(n.data):"kerning"===n.key?r.kernings.push(n.data):r[n.key]=n.data)}return r};\n},{}],27:[function(_dereq_,module,exports){\nfunction readBlock(r,e,n){if(n>e.length-1)return 0;var a=e.readUInt8(n++),t=e.readInt32LE(n);switch(n+=4,a){case 1:r.info=readInfo(e,n);break;case 2:r.common=readCommon(e,n);break;case 3:r.pages=readPages(e,n,t);break;case 4:r.chars=readChars(e,n,t);break;case 5:r.kernings=readKernings(e,n,t)}return 5+t}function readInfo(r,e){var n={};n.size=r.readInt16LE(e);var a=r.readUInt8(e+2);return n.smooth=a>>7&1,n.unicode=a>>6&1,n.italic=a>>5&1,n.bold=a>>4&1,a>>3&1&&(n.fixedHeight=1),n.charset=r.readUInt8(e+3)||"",n.stretchH=r.readUInt16LE(e+4),n.aa=r.readUInt8(e+6),n.padding=[r.readInt8(e+7),r.readInt8(e+8),r.readInt8(e+9),r.readInt8(e+10)],n.spacing=[r.readInt8(e+11),r.readInt8(e+12)],n.outline=r.readUInt8(e+13),n.face=readStringNT(r,e+14),n}function readCommon(r,e){var n={};n.lineHeight=r.readUInt16LE(e),n.base=r.readUInt16LE(e+2),n.scaleW=r.readUInt16LE(e+4),n.scaleH=r.readUInt16LE(e+6),n.pages=r.readUInt16LE(e+8);r.readUInt8(e+10);return n.packed=0,n.alphaChnl=r.readUInt8(e+11),n.redChnl=r.readUInt8(e+12),n.greenChnl=r.readUInt8(e+13),n.blueChnl=r.readUInt8(e+14),n}function readPages(r,e,n){for(var a=[],t=readNameNT(r,e),d=t.length+1,o=n/d,i=0;i<o;i++)a[i]=r.slice(e,e+t.length).toString("utf8"),e+=d;return a}function readChars(r,e,n){for(var a=[],t=n/20,d=0;d<t;d++){var o={},i=20*d;o.id=r.readUInt32LE(e+0+i),o.x=r.readUInt16LE(e+4+i),o.y=r.readUInt16LE(e+6+i),o.width=r.readUInt16LE(e+8+i),o.height=r.readUInt16LE(e+10+i),o.xoffset=r.readInt16LE(e+12+i),o.yoffset=r.readInt16LE(e+14+i),o.xadvance=r.readInt16LE(e+16+i),o.page=r.readUInt8(e+18+i),o.chnl=r.readUInt8(e+19+i),a[d]=o}return a}function readKernings(r,e,n){for(var a=[],t=n/10,d=0;d<t;d++){var o={},i=10*d;o.first=r.readUInt32LE(e+0+i),o.second=r.readUInt32LE(e+4+i),o.amount=r.readInt16LE(e+8+i),a[d]=o}return a}function readNameNT(r,e){for(var n=e;n<r.length&&0!==r[n];n++);return r.slice(e,n)}function readStringNT(r,e){return readNameNT(r,e).toString("utf8")}var HEADER=[66,77,70];module.exports=function(r){if(r.length<6)throw new Error("invalid buffer length for BMFont");var e=HEADER.every(function(e,n){return r.readUInt8(n)===e});if(!e)throw new Error("BMFont missing BMF byte header");var n=3,a=r.readUInt8(n++);if(a>3)throw new Error("Only supports BMFont Binary v3 (BMFont App v1.10)");for(var t={kernings:[],chars:[]},d=0;d<5;d++)n+=readBlock(t,r,n);return t};\n},{}],28:[function(_dereq_,module,exports){\nfunction getAttribs(e){var t=getAttribList(e);return t.reduce(function(e,t){var r=mapName(t.nodeName);return e[r]=t.nodeValue,e},{})}function getAttribList(e){for(var t=[],r=0;r<e.attributes.length;r++)t.push(e.attributes[r]);return t}function mapName(e){return NAME_MAP[e.toLowerCase()]||e}var parseAttributes=_dereq_("./parse-attribs"),parseFromString=_dereq_("xml-parse-from-string"),NAME_MAP={scaleh:"scaleH",scalew:"scaleW",stretchh:"stretchH",lineheight:"lineHeight",alphachnl:"alphaChnl",redchnl:"redChnl",greenchnl:"greenChnl",bluechnl:"blueChnl"};module.exports=function(e){e=e.toString();var t=parseFromString(e),r={pages:[],chars:[],kernings:[]};["info","common"].forEach(function(e){var a=t.getElementsByTagName(e)[0];a&&(r[e]=parseAttributes(getAttribs(a)))});var a=t.getElementsByTagName("pages")[0];if(!a)throw new Error("malformed file -- no <pages> element");for(var n=a.getElementsByTagName("page"),i=0;i<n.length;i++){var s=n[i],g=parseInt(s.getAttribute("id"),10),l=s.getAttribute("file");if(isNaN(g))throw new Error(\'malformed file -- page "id" attribute is NaN\');if(!l)throw new Error(\'malformed file -- needs page "file" attribute\');r.pages[parseInt(g,10)]=l}return["chars","kernings"].forEach(function(e){var a=t.getElementsByTagName(e)[0];if(a)for(var n=e.substring(0,e.length-1),i=a.getElementsByTagName(n),s=0;s<i.length;s++){var g=i[s];r[e].push(parseAttributes(getAttribs(g)))}}),r};\n},{"./parse-attribs":29,"xml-parse-from-string":52}],29:[function(_dereq_,module,exports){\nfunction parseIntList(t){return t.split(",").map(function(t){return parseInt(t,10)})}var GLYPH_DESIGNER_ERROR="chasrset";module.exports=function(t){GLYPH_DESIGNER_ERROR in t&&(t.charset=t[GLYPH_DESIGNER_ERROR],delete t[GLYPH_DESIGNER_ERROR]);for(var n in t)"face"!==n&&"charset"!==n&&("padding"===n||"spacing"===n?t[n]=parseIntList(t[n]):t[n]=parseInt(t[n],10));return t};\n},{}],30:[function(_dereq_,module,exports){\nvar trim=_dereq_("trim"),forEach=_dereq_("for-each"),isArray=function(r){return"[object Array]"===Object.prototype.toString.call(r)};module.exports=function(r){if(!r)return{};var e={};return forEach(trim(r).split("\\n"),function(r){var t=r.indexOf(":"),i=trim(r.slice(0,t)).toLowerCase(),o=trim(r.slice(t+1));"undefined"==typeof e[i]?e[i]=o:isArray(e[i])?e[i].push(o):e[i]=[e[i],o]}),e};\n},{"for-each":13,"trim":47}],31:[function(_dereq_,module,exports){\n(function (process){\nfunction normalizeArray(r,t){for(var e=0,n=r.length-1;n>=0;n--){var s=r[n];"."===s?r.splice(n,1):".."===s?(r.splice(n,1),e++):e&&(r.splice(n,1),e--)}if(t)for(;e--;e)r.unshift("..");return r}function filter(r,t){if(r.filter)return r.filter(t);for(var e=[],n=0;n<r.length;n++)t(r[n],n,r)&&e.push(r[n]);return e}var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/,splitPath=function(r){return splitPathRe.exec(r).slice(1)};exports.resolve=function(){for(var r="",t=!1,e=arguments.length-1;e>=-1&&!t;e--){var n=e>=0?arguments[e]:process.cwd();if("string"!=typeof n)throw new TypeError("Arguments to path.resolve must be strings");n&&(r=n+"/"+r,t="/"===n.charAt(0))}return r=normalizeArray(filter(r.split("/"),function(r){return!!r}),!t).join("/"),(t?"/":"")+r||"."},exports.normalize=function(r){var t=exports.isAbsolute(r),e="/"===substr(r,-1);return r=normalizeArray(filter(r.split("/"),function(r){return!!r}),!t).join("/"),r||t||(r="."),r&&e&&(r+="/"),(t?"/":"")+r},exports.isAbsolute=function(r){return"/"===r.charAt(0)},exports.join=function(){var r=Array.prototype.slice.call(arguments,0);return exports.normalize(filter(r,function(r,t){if("string"!=typeof r)throw new TypeError("Arguments to path.join must be strings");return r}).join("/"))},exports.relative=function(r,t){function e(r){for(var t=0;t<r.length&&""===r[t];t++);for(var e=r.length-1;e>=0&&""===r[e];e--);return t>e?[]:r.slice(t,e-t+1)}r=exports.resolve(r).substr(1),t=exports.resolve(t).substr(1);for(var n=e(r.split("/")),s=e(t.split("/")),i=Math.min(n.length,s.length),o=i,u=0;u<i;u++)if(n[u]!==s[u]){o=u;break}for(var l=[],u=o;u<n.length;u++)l.push("..");return l=l.concat(s.slice(o)),l.join("/")},exports.sep="/",exports.delimiter=":",exports.dirname=function(r){var t=splitPath(r),e=t[0],n=t[1];return e||n?(n&&(n=n.substr(0,n.length-1)),e+n):"."},exports.basename=function(r,t){var e=splitPath(r)[2];return t&&e.substr(-1*t.length)===t&&(e=e.substr(0,e.length-t.length)),e},exports.extname=function(r){return splitPath(r)[3]};var substr="b"==="ab".substr(-1)?function(r,t,e){return r.substr(t,e)}:function(r,t,e){return t<0&&(t=r.length+t),r.substr(t,e)};\n}).call(this,_dereq_(\'_process\'))\n\n},{"_process":33}],32:[function(_dereq_,module,exports){\n(function (global){\nvar performance=global.performance||{},present=function(){for(var e=["now","webkitNow","msNow","mozNow","oNow"];e.length;){var n=e.shift();if(n in performance)return performance[n].bind(performance)}var r=Date.now||function(){return(new Date).getTime()},o=(performance.timing||{}).navigationStart||r();return function(){return r()-o}}();present.performanceNow=performance.now,present.noConflict=function(){performance.now=present.performanceNow},present.conflict=function(){performance.now=present},present.conflict(),module.exports=present;\n}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})\n\n},{}],33:[function(_dereq_,module,exports){\nfunction defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}function runTimeout(e){if(cachedSetTimeout===setTimeout)return setTimeout(e,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(e,0);try{return cachedSetTimeout(e,0)}catch(t){try{return cachedSetTimeout.call(null,e,0)}catch(t){return cachedSetTimeout.call(this,e,0)}}}function runClearTimeout(e){if(cachedClearTimeout===clearTimeout)return clearTimeout(e);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(e);try{return cachedClearTimeout(e)}catch(t){try{return cachedClearTimeout.call(null,e)}catch(t){return cachedClearTimeout.call(this,e)}}}function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var e=runTimeout(cleanUpNextTick);draining=!0;for(var t=queue.length;t;){for(currentQueue=queue,queue=[];++queueIndex<t;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,t=queue.length}currentQueue=null,draining=!1,runClearTimeout(e)}}function Item(e,t){this.fun=e,this.array=t}function noop(){}var process=module.exports={},cachedSetTimeout,cachedClearTimeout;!function(){try{cachedSetTimeout="function"==typeof setTimeout?setTimeout:defaultSetTimout}catch(e){cachedSetTimeout=defaultSetTimout}try{cachedClearTimeout="function"==typeof clearTimeout?clearTimeout:defaultClearTimeout}catch(e){cachedClearTimeout=defaultClearTimeout}}();var queue=[],draining=!1,currentQueue,queueIndex=-1;process.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var u=1;u<arguments.length;u++)t[u-1]=arguments[u];queue.push(new Item(e,t)),1!==queue.length||draining||runTimeout(drainQueue)},Item.prototype.run=function(){this.fun.apply(null,this.array)},process.title="browser",process.browser=!0,process.env={},process.argv=[],process.version="",process.versions={},process.on=noop,process.addListener=noop,process.once=noop,process.off=noop,process.removeListener=noop,process.removeAllListeners=noop,process.emit=noop,process.binding=function(e){throw new Error("process.binding is not supported")},process.cwd=function(){return"/"},process.chdir=function(e){throw new Error("process.chdir is not supported")},process.umask=function(){return 0};\n},{}],34:[function(_dereq_,module,exports){\n!function(t){function e(t,e){return function(){t.apply(e,arguments)}}function n(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=null,this._value=null,this._deferreds=[],f(t,e(r,this),e(i,this))}function o(t){var e=this;return null===this._state?void this._deferreds.push(t):void l(function(){var n=e._state?t.onFulfilled:t.onRejected;if(null===n)return void(e._state?t.resolve:t.reject)(e._value);var o;try{o=n(e._value)}catch(e){return void t.reject(e)}t.resolve(o)})}function r(t){try{if(t===this)throw new TypeError("A promise cannot be resolved with itself.");if(t&&("object"==typeof t||"function"==typeof t)){var n=t.then;if("function"==typeof n)return void f(e(n,t),e(r,this),e(i,this))}this._state=!0,this._value=t,u.call(this)}catch(t){i.call(this,t)}}function i(t){this._state=!1,this._value=t,u.call(this)}function u(){for(var t=0,e=this._deferreds.length;t<e;t++)o.call(this,this._deferreds[t]);this._deferreds=null}function c(t,e,n,o){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.resolve=n,this.reject=o}function f(t,e,n){var o=!1;try{t(function(t){o||(o=!0,e(t))},function(t){o||(o=!0,n(t))})}catch(t){if(o)return;o=!0,n(t)}}var s=setTimeout,l="function"==typeof setImmediate&&setImmediate||function(t){s(t,1)},h=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};n.prototype.catch=function(t){return this.then(null,t)},n.prototype.then=function(t,e){var r=this;return new n(function(n,i){o.call(r,new c(t,e,n,i))})},n.all=function(){var t=Array.prototype.slice.call(1===arguments.length&&h(arguments[0])?arguments[0]:arguments);return new n(function(e,n){function o(i,u){try{if(u&&("object"==typeof u||"function"==typeof u)){var c=u.then;if("function"==typeof c)return void c.call(u,function(t){o(i,t)},n)}t[i]=u,0===--r&&e(t)}catch(t){n(t)}}if(0===t.length)return e([]);for(var r=t.length,i=0;i<t.length;i++)o(i,t[i])})},n.resolve=function(t){return t&&"object"==typeof t&&t.constructor===n?t:new n(function(e){e(t)})},n.reject=function(t){return new n(function(e,n){n(t)})},n.race=function(t){return new n(function(e,n){for(var o=0,r=t.length;o<r;o++)t[o].then(e,n)})},n._setImmediateFn=function(t){l=t},"undefined"!=typeof module&&module.exports?module.exports=n:t.Promise||(t.Promise=n)}(this);\n},{}],35:[function(_dereq_,module,exports){\nvar dtype=_dereq_("dtype"),anArray=_dereq_("an-array"),isBuffer=_dereq_("is-buffer"),CW=[0,2,3],CCW=[2,1,3];module.exports=function(r,e){r&&(anArray(r)||isBuffer(r))||(e=r||{},r=null),e="number"==typeof e?{count:e}:e||{};for(var t="string"==typeof e.type?e.type:"uint16",u="number"==typeof e.count?e.count:1,n=e.start||0,a=e.clockwise!==!1?CW:CCW,f=a[0],o=a[1],y=a[2],i=6*u,p=r||new(dtype(t))(i),s=0,c=0;s<i;s+=6,c+=4){var C=s+n;p[C+0]=c+0,p[C+1]=c+1,p[C+2]=c+2,p[C+3]=c+f,p[C+4]=c+o,p[C+5]=c+y}return p};\n},{"an-array":1,"dtype":11,"is-buffer":18}],36:[function(_dereq_,module,exports){\nfunction parse(r){var n=function(r){return r.trim()},e={};return getKeyValueChunks(r).map(n).filter(Boolean).forEach(function(r){var n=r.indexOf(":"),t=r.substr(0,n).trim(),i=r.substr(n+1).trim();e[t]=i}),e}function getKeyValueChunks(r){for(var n,e=[],t=0,i=";",u=/url\\([^\\)]+$/,s="";t<r.length;)n=r.indexOf(i,t),n===-1&&(n=r.length),s+=r.substring(t,n),u.test(s)?(s+=";",t=n+1):(e.push(s),s="",t=n+1);return e}function stringify(r){return Object.keys(r).map(function(n){return n+":"+r[n]}).join(";")}function normalize(r){return stringify(parse(r))}module.exports.parse=parse,module.exports.stringify=stringify,module.exports.normalize=normalize;\n},{}],37:[function(_dereq_,module,exports){\nfunction TextGeometry(e){Base.call(this),"string"==typeof e&&(e={text:e}),this._opt=assign({},e),e&&this.update(e)}var createLayout=_dereq_("layout-bmfont-text"),inherits=_dereq_("inherits"),createIndices=_dereq_("quad-indices"),buffer=_dereq_("three-buffer-vertex-data"),assign=_dereq_("object-assign"),vertices=_dereq_("./lib/vertices"),utils=_dereq_("./lib/utils"),Base=THREE.BufferGeometry;module.exports=function(e){return new TextGeometry(e)},inherits(TextGeometry,Base),TextGeometry.prototype.update=function(e){if("string"==typeof e&&(e={text:e}),e=assign({},this._opt,e),!e.font)throw new TypeError("must specify a { font } in options");this.layout=createLayout(e);var t=e.flipY!==!1,i=e.font,r=i.common.scaleW,o=i.common.scaleH,s=this.layout.glyphs.filter(function(e){var t=e.data;return t.width*t.height>0});this.visibleGlyphs=s;var n=vertices.positions(s),u=vertices.uvs(s,r,o,t),a=createIndices({clockwise:!0,type:"uint16",count:s.length});if(buffer.index(this,a,1,"uint16"),buffer.attr(this,"position",n,2),buffer.attr(this,"uv",u,2),!e.multipage&&"page"in this.attributes)this.removeAttribute("page");else if(e.multipage){var h=vertices.pages(s);buffer.attr(this,"page",h,1)}},TextGeometry.prototype.computeBoundingSphere=function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array,t=this.attributes.position.itemSize;return!e||!t||e.length<2?(this.boundingSphere.radius=0,void this.boundingSphere.center.set(0,0,0)):(utils.computeSphere(e,this.boundingSphere),void(isNaN(this.boundingSphere.radius)&&console.error(\'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.\')))},TextGeometry.prototype.computeBoundingBox=function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.boundingBox,t=this.attributes.position.array,i=this.attributes.position.itemSize;return!t||!i||t.length<2?void e.makeEmpty():void utils.computeBox(t,e)};\n},{"./lib/utils":38,"./lib/vertices":39,"inherits":17,"layout-bmfont-text":22,"object-assign":25,"quad-indices":35,"three-buffer-vertex-data":40}],38:[function(_dereq_,module,exports){\nfunction bounds(x){var m=x.length/itemSize;box.min[0]=x[0],box.min[1]=x[1],box.max[0]=x[0],box.max[1]=x[1];for(var o=0;o<m;o++){var i=x[o*itemSize+0],a=x[o*itemSize+1];box.min[0]=Math.min(i,box.min[0]),box.min[1]=Math.min(a,box.min[1]),box.max[0]=Math.max(i,box.max[0]),box.max[1]=Math.max(a,box.max[1])}}var itemSize=2,box={min:[0,0],max:[0,0]};module.exports.computeBox=function(x,m){bounds(x),m.min.set(box.min[0],box.min[1],0),m.max.set(box.max[0],box.max[1],0)},module.exports.computeSphere=function(x,m){bounds(x);var o=box.min[0],i=box.min[1],a=box.max[0],n=box.max[1],b=a-o,e=n-i,t=Math.sqrt(b*b+e*e);m.center.set(o+b/2,i+e/2,0),m.radius=t/2};\n},{}],39:[function(_dereq_,module,exports){\nmodule.exports.pages=function t(o){var t=new Float32Array(4*o.length*1),n=0;return o.forEach(function(o){var r=o.data.page||0;t[n++]=r,t[n++]=r,t[n++]=r,t[n++]=r}),t},module.exports.uvs=function t(o,n,r,a){var t=new Float32Array(4*o.length*2),e=0;return o.forEach(function(o){var i=o.data,f=i.x+i.width,u=i.y+i.height,h=i.x/n,s=i.y/r,c=f/n,l=u/r;a&&(s=(r-i.y)/r,l=(r-u)/r),t[e++]=h,t[e++]=s,t[e++]=h,t[e++]=l,t[e++]=c,t[e++]=l,t[e++]=c,t[e++]=s}),t},module.exports.positions=function t(o){var t=new Float32Array(4*o.length*2),n=0;return o.forEach(function(o){var r=o.data,a=o.position[0]+r.xoffset,e=o.position[1]+r.yoffset,i=r.width,f=r.height;t[n++]=a,t[n++]=e,t[n++]=a,t[n++]=e+f,t[n++]=a+i,t[n++]=e+f,t[n++]=a+i,t[n++]=e}),t};\n},{}],40:[function(_dereq_,module,exports){\nfunction setIndex(e,t,r,n){"number"!=typeof r&&(r=1),"string"!=typeof n&&(n="uint16");var i=!e.index&&"function"!=typeof e.setIndex,a=i?e.getAttribute("index"):e.index,u=updateAttribute(a,t,r,n);u&&(i?e.addAttribute("index",u):e.index=u)}function setAttribute(e,t,r,n,i){if("number"!=typeof n&&(n=3),"string"!=typeof i&&(i="float32"),Array.isArray(r)&&Array.isArray(r[0])&&r[0].length!==n)throw new Error("Nested vertex array has unexpected size; expected "+n+" but found "+r[0].length);var a=e.getAttribute(t),u=updateAttribute(a,r,n,i);u&&e.addAttribute(t,u)}function updateAttribute(e,t,r,n){if(t=t||[],!e||rebuildAttribute(e,t,r)){t=flatten(t,n);var i=e&&"function"!=typeof e.setArray;return e&&!i||(i&&!warned&&(warned=!0,console.warn(["A WebGL buffer is being updated with a new size or itemSize, ","however this version of ThreeJS only supports fixed-size buffers.","\\nThe old buffer may still be kept in memory.\\n","To avoid memory leaks, it is recommended that you dispose ","your geometries and create new ones, or update to ThreeJS r82 or newer.\\n","See here for discussion:\\n","https://github.com/mrdoob/three.js/pull/9631"].join(""))),e=new THREE.BufferAttribute(t,r)),e.itemSize=r,e.needsUpdate=!0,"function"==typeof e.setArray&&e.setArray(t),e}return flatten(t,e.array),e.needsUpdate=!0,null}function rebuildAttribute(e,t,r){if(e.itemSize!==r)return!0;if(!e.array)return!0;var n=e.array.length;return Array.isArray(t)&&Array.isArray(t[0])?n!==t.length*r:n!==t.length}var flatten=_dereq_("flatten-vertex-data"),warned=!1;module.exports.attr=setAttribute,module.exports.index=setIndex;\n},{"flatten-vertex-data":12}],41:[function(_dereq_,module,exports){\n!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.THREE=t.THREE||{})}(this,function(t){"use strict";function e(){}function i(t,e){this.x=t||0,this.y=e||0}function n(t,e,r,a,o,s,c,h,l,u){Object.defineProperty(this,"id",{value:ps++}),this.uuid=us.generateUUID(),this.name="",this.image=void 0!==t?t:n.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:n.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:ao,this.wrapT=void 0!==a?a:ao,this.magFilter=void 0!==o?o:lo,this.minFilter=void 0!==s?s:po,this.anisotropy=void 0!==l?l:1,this.format=void 0!==c?c:Lo,this.type=void 0!==h?h:fo,this.offset=new i(0,0),this.repeat=new i(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==u?u:es,this.version=0,this.onUpdate=null}function r(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}function a(t,e,i){this.uuid=us.generateUUID(),this.width=t,this.height=e,this.scissor=new r(0,0,t,e),this.scissorTest=!1,this.viewport=new r(0,0,t,e),i=i||{},void 0===i.minFilter&&(i.minFilter=lo),this.texture=new n(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function o(t,e,i){a.call(this,t,e,i),this.activeCubeFace=0,this.activeMipMapLevel=0}function s(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}function c(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}function h(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function l(t,e,i,r,a,o,s,c,h,l){t=void 0!==t?t:[],e=void 0!==e?e:Qa,n.call(this,t,e,i,r,a,o,s,c,h,l),this.flipY=!1}function u(){this.seq=[],this.map={}}function p(t,e,i){var n=t[0];if(n<=0||n>0)return t;var r=e*i,a=ms[r];if(void 0===a&&(a=new Float32Array(r),ms[r]=a),0!==e){n.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=i,t[o].toArray(a,s)}return a}function d(t,e){var i=gs[e];void 0===i&&(i=new Int32Array(e),gs[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocTextureUnit();return i}function f(t,e){t.uniform1f(this.addr,e)}function m(t,e){t.uniform1i(this.addr,e)}function g(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function v(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function y(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function x(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function _(t,e){t.uniformMatrix3fv(this.addr,!1,e.elements||e)}function b(t,e){t.uniformMatrix4fv(this.addr,!1,e.elements||e)}function w(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTexture2D(e||ds,n)}function M(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTextureCube(e||fs,n)}function E(t,e){t.uniform2iv(this.addr,e)}function T(t,e){t.uniform3iv(this.addr,e)}function S(t,e){t.uniform4iv(this.addr,e)}function A(t){switch(t){case 5126:return f;case 35664:return g;case 35665:return v;case 35666:return y;case 35674:return x;case 35675:return _;case 35676:return b;case 35678:return w;case 35680:return M;case 5124:case 35670:return m;case 35667:case 35671:return E;case 35668:case 35672:return T;case 35669:case 35673:return S}}function L(t,e){t.uniform1fv(this.addr,e)}function R(t,e){t.uniform1iv(this.addr,e)}function P(t,e){t.uniform2fv(this.addr,p(e,this.size,2))}function C(t,e){t.uniform3fv(this.addr,p(e,this.size,3))}function I(t,e){t.uniform4fv(this.addr,p(e,this.size,4))}function U(t,e){t.uniformMatrix2fv(this.addr,!1,p(e,this.size,4))}function N(t,e){t.uniformMatrix3fv(this.addr,!1,p(e,this.size,9))}function D(t,e){t.uniformMatrix4fv(this.addr,!1,p(e,this.size,16))}function O(t,e,i){var n=e.length,r=d(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTexture2D(e[a]||ds,r[a])}function B(t,e,i){var n=e.length,r=d(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTextureCube(e[a]||fs,r[a])}function F(t){switch(t){case 5126:return L;case 35664:return P;case 35665:return C;case 35666:return I;case 35674:return U;case 35675:return N;case 35676:return D;case 35678:return O;case 35680:return B;case 5124:case 35670:return R;case 35667:case 35671:return E;case 35668:case 35672:return T;case 35669:case 35673:return S}}function z(t,e,i){this.id=t,this.addr=i,this.setValue=A(e.type)}function G(t,e,i){this.id=t,this.addr=i,this.size=e.size,this.setValue=F(e.type)}function H(t){this.id=t,u.call(this)}function V(t,e){t.seq.push(e),t.map[e.id]=e}function k(t,e,i){var n=t.name,r=n.length;for(vs.lastIndex=0;;){var a=vs.exec(n),o=vs.lastIndex,s=a[1],c="]"===a[2],h=a[3];if(c&&(s|=0),void 0===h||"["===h&&o+2===r){V(i,void 0===h?new z(s,t,e):new G(s,t,e));break}var l=i.map,u=l[s];void 0===u&&(u=new H(s),V(i,u)),i=u}}function j(t,e,i){u.call(this),this.renderer=i;for(var n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<n;++r){var a=t.getActiveUniform(e,r),o=a.name,s=t.getUniformLocation(e,o);k(a,s,this)}}function W(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}function X(t,e,i,r,a,o,s,c,h,l,u,p){n.call(this,null,o,s,c,h,l,r,a,u,p),this.image={data:t,width:e,height:i},this.magFilter=void 0!==h?h:so,this.minFilter=void 0!==l?l:so,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function q(t,e){this.min=void 0!==t?t:new i(+(1/0),+(1/0)),this.max=void 0!==e?e:new i(-(1/0),-(1/0))}function Y(t,e){function n(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),e=new Uint16Array([0,1,2,0,2,3]);a=f.createBuffer(),o=f.createBuffer(),f.bindBuffer(f.ARRAY_BUFFER,a),f.bufferData(f.ARRAY_BUFFER,t,f.STATIC_DRAW),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,o),f.bufferData(f.ELEMENT_ARRAY_BUFFER,e,f.STATIC_DRAW),p=f.createTexture(),d=f.createTexture(),m.bindTexture(f.TEXTURE_2D,p),f.texImage2D(f.TEXTURE_2D,0,f.RGB,16,16,0,f.RGB,f.UNSIGNED_BYTE,null),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),m.bindTexture(f.TEXTURE_2D,d),f.texImage2D(f.TEXTURE_2D,0,f.RGBA,16,16,0,f.RGBA,f.UNSIGNED_BYTE,null),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),s={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\\n")},h=r(s),l={vertex:f.getAttribLocation(h,"position"),uv:f.getAttribLocation(h,"uv")},u={renderType:f.getUniformLocation(h,"renderType"),map:f.getUniformLocation(h,"map"),occlusionMap:f.getUniformLocation(h,"occlusionMap"),opacity:f.getUniformLocation(h,"opacity"),color:f.getUniformLocation(h,"color"),scale:f.getUniformLocation(h,"scale"),rotation:f.getUniformLocation(h,"rotation"),screenPosition:f.getUniformLocation(h,"screenPosition")}}function r(e){var i=f.createProgram(),n=f.createShader(f.FRAGMENT_SHADER),r=f.createShader(f.VERTEX_SHADER),a="precision "+t.getPrecision()+" float;\\n";return f.shaderSource(n,a+e.fragmentShader),f.shaderSource(r,a+e.vertexShader),f.compileShader(n),f.compileShader(r),f.attachShader(i,n),f.attachShader(i,r),f.linkProgram(i),i}var a,o,s,h,l,u,p,d,f=t.context,m=t.state;this.render=function(r,s,g){if(0!==e.length){var v=new c,y=g.w/g.z,x=.5*g.z,_=.5*g.w,b=16/g.w,w=new i(b*y,b),M=new c(1,1,0),E=new i(1,1),T=new q;T.min.set(g.x,g.y),T.max.set(g.x+(g.z-16),g.y+(g.w-16)),void 0===h&&n(),f.useProgram(h),m.initAttributes(),m.enableAttribute(l.vertex),m.enableAttribute(l.uv),m.disableUnusedAttributes(),f.uniform1i(u.occlusionMap,0),f.uniform1i(u.map,1),f.bindBuffer(f.ARRAY_BUFFER,a),f.vertexAttribPointer(l.vertex,2,f.FLOAT,!1,16,0),f.vertexAttribPointer(l.uv,2,f.FLOAT,!1,16,8),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,o),m.disable(f.CULL_FACE),m.setDepthWrite(!1);for(var S=0,A=e.length;S<A;S++){b=16/g.w,w.set(b*y,b);var L=e[S];if(v.set(L.matrixWorld.elements[12],L.matrixWorld.elements[13],L.matrixWorld.elements[14]),v.applyMatrix4(s.matrixWorldInverse),v.applyMatrix4(s.projectionMatrix),M.copy(v),E.x=g.x+M.x*x+x-8,E.y=g.y+M.y*_+_-8,T.containsPoint(E)===!0){m.activeTexture(f.TEXTURE0),m.bindTexture(f.TEXTURE_2D,null),m.activeTexture(f.TEXTURE1),m.bindTexture(f.TEXTURE_2D,p),f.copyTexImage2D(f.TEXTURE_2D,0,f.RGB,E.x,E.y,16,16,0),f.uniform1i(u.renderType,0),f.uniform2f(u.scale,w.x,w.y),f.uniform3f(u.screenPosition,M.x,M.y,M.z),m.disable(f.BLEND),m.enable(f.DEPTH_TEST),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),m.activeTexture(f.TEXTURE0),m.bindTexture(f.TEXTURE_2D,d),f.copyTexImage2D(f.TEXTURE_2D,0,f.RGBA,E.x,E.y,16,16,0),f.uniform1i(u.renderType,1),m.disable(f.DEPTH_TEST),m.activeTexture(f.TEXTURE1),m.bindTexture(f.TEXTURE_2D,p),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),L.positionScreen.copy(M),L.customUpdateCallback?L.customUpdateCallback(L):L.updateLensFlares(),f.uniform1i(u.renderType,2),m.enable(f.BLEND);for(var R=0,P=L.lensFlares.length;R<P;R++){var C=L.lensFlares[R];C.opacity>.001&&C.scale>.001&&(M.x=C.x,M.y=C.y,M.z=C.z,b=C.size*C.scale/g.w,w.x=b*y,w.y=b,f.uniform3f(u.screenPosition,M.x,M.y,M.z),f.uniform2f(u.scale,w.x,w.y),f.uniform1f(u.rotation,C.rotation),f.uniform1f(u.opacity,C.opacity),f.uniform3f(u.color,C.color.r,C.color.g,C.color.b),m.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),t.setTexture2D(C.texture,1),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0))}}}m.enable(f.CULL_FACE),m.enable(f.DEPTH_TEST),m.setDepthWrite(!0),t.resetGLState()}}}function Z(t,e){function i(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),e=new Uint16Array([0,1,2,0,2,3]);o=f.createBuffer(),h=f.createBuffer(),f.bindBuffer(f.ARRAY_BUFFER,o),f.bufferData(f.ARRAY_BUFFER,t,f.STATIC_DRAW),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,h),f.bufferData(f.ELEMENT_ARRAY_BUFFER,e,f.STATIC_DRAW),l=r(),u={position:f.getAttribLocation(l,"position"),uv:f.getAttribLocation(l,"uv")},p={uvOffset:f.getUniformLocation(l,"uvOffset"),uvScale:f.getUniformLocation(l,"uvScale"),rotation:f.getUniformLocation(l,"rotation"),scale:f.getUniformLocation(l,"scale"),color:f.getUniformLocation(l,"color"),map:f.getUniformLocation(l,"map"),opacity:f.getUniformLocation(l,"opacity"),modelViewMatrix:f.getUniformLocation(l,"modelViewMatrix"),projectionMatrix:f.getUniformLocation(l,"projectionMatrix"),fogType:f.getUniformLocation(l,"fogType"),fogDensity:f.getUniformLocation(l,"fogDensity"),fogNear:f.getUniformLocation(l,"fogNear"),fogFar:f.getUniformLocation(l,"fogFar"),fogColor:f.getUniformLocation(l,"fogColor"),alphaTest:f.getUniformLocation(l,"alphaTest")};var i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");i.width=8,i.height=8;var a=i.getContext("2d");a.fillStyle="white",a.fillRect(0,0,8,8),d=new n(i),d.needsUpdate=!0}function r(){var e=f.createProgram(),i=f.createShader(f.VERTEX_SHADER),n=f.createShader(f.FRAGMENT_SHADER);return f.shaderSource(i,["precision "+t.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\\n")),f.shaderSource(n,["precision "+t.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\\n")),f.compileShader(i),f.compileShader(n),f.attachShader(e,i),f.attachShader(e,n),f.linkProgram(e),e}function a(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}var o,h,l,u,p,d,f=t.context,m=t.state,g=new c,v=new s,y=new c;this.render=function(n,r){if(0!==e.length){void 0===l&&i(),f.useProgram(l),m.initAttributes(),m.enableAttribute(u.position),m.enableAttribute(u.uv),m.disableUnusedAttributes(),m.disable(f.CULL_FACE),m.enable(f.BLEND),f.bindBuffer(f.ARRAY_BUFFER,o),f.vertexAttribPointer(u.position,2,f.FLOAT,!1,16,0),f.vertexAttribPointer(u.uv,2,f.FLOAT,!1,16,8),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,h),f.uniformMatrix4fv(p.projectionMatrix,!1,r.projectionMatrix.elements),m.activeTexture(f.TEXTURE0),f.uniform1i(p.map,0);var s=0,c=0,x=n.fog;x?(f.uniform3f(p.fogColor,x.color.r,x.color.g,x.color.b),x.isFog?(f.uniform1f(p.fogNear,x.near),f.uniform1f(p.fogFar,x.far),f.uniform1i(p.fogType,1),s=1,c=1):x.isFogExp2&&(f.uniform1f(p.fogDensity,x.density),f.uniform1i(p.fogType,2),s=2,c=2)):(f.uniform1i(p.fogType,0),s=0,c=0);for(var _=0,b=e.length;_<b;_++){var w=e[_];w.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,w.matrixWorld),w.z=-w.modelViewMatrix.elements[14]}e.sort(a);for(var M=[],_=0,b=e.length;_<b;_++){var w=e[_],E=w.material;if(E.visible!==!1){f.uniform1f(p.alphaTest,E.alphaTest),f.uniformMatrix4fv(p.modelViewMatrix,!1,w.modelViewMatrix.elements),w.matrixWorld.decompose(g,v,y),M[0]=y.x,M[1]=y.y;var T=0;n.fog&&E.fog&&(T=c),s!==T&&(f.uniform1i(p.fogType,T),s=T),null!==E.map?(f.uniform2f(p.uvOffset,E.map.offset.x,E.map.offset.y),f.uniform2f(p.uvScale,E.map.repeat.x,E.map.repeat.y)):(f.uniform2f(p.uvOffset,0,0),f.uniform2f(p.uvScale,1,1)),f.uniform1f(p.opacity,E.opacity),f.uniform3f(p.color,E.color.r,E.color.g,E.color.b),f.uniform1f(p.rotation,E.rotation),f.uniform2fv(p.scale,M),m.setBlending(E.blending,E.blendEquation,E.blendSrc,E.blendDst),m.setDepthTest(E.depthTest),m.setDepthWrite(E.depthWrite),E.map?t.setTexture2D(E.map,0):t.setTexture2D(d,0),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0)}}m.enable(f.CULL_FACE),t.resetGLState()}}}function J(){Object.defineProperty(this,"id",{value:Mh++}),this.uuid=us.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=da,this.side=ra,this.shading=ca,this.vertexColors=ha,this.opacity=1,this.transparent=!1,this.blendSrc=Aa,this.blendDst=La,this.blendEquation=ya,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ba,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0}function Q(t){J.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}",this.fragmentShader="void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function K(t){J.call(this),this.type="MeshDepthMaterial",this.depthPacking=hs,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function $(t,e){this.min=void 0!==t?t:new c(+(1/0),+(1/0),+(1/0)),this.max=void 0!==e?e:new c(-(1/0),-(1/0),-(1/0))}function tt(t,e){this.center=void 0!==t?t:new c,this.radius=void 0!==e?e:0}function et(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function it(t,e){this.normal=void 0!==t?t:new c(1,0,0),this.constant=void 0!==e?e:0}function nt(t,e,i,n,r,a){this.planes=[void 0!==t?t:new it,void 0!==e?e:new it,void 0!==i?i:new it,void 0!==n?n:new it,void 0!==r?r:new it,void 0!==a?a:new it]}function rt(t,e,n,o){function s(e,i,n,r){var a=e.geometry,o=null,s=E,c=e.customDepthMaterial;if(n&&(s=T,c=e.customDistanceMaterial),c)o=c;else{var h=!1;i.morphTargets&&(a&&a.isBufferGeometry?h=a.morphAttributes&&a.morphAttributes.position&&a.morphAttributes.position.length>0:a&&a.isGeometry&&(h=a.morphTargets&&a.morphTargets.length>0));var l=e.isSkinnedMesh&&i.skinning,u=0;h&&(u|=b),l&&(u|=w),o=s[u]}if(t.localClippingEnabled&&i.clipShadows===!0&&0!==i.clippingPlanes.length){var p=o.uuid,d=i.uuid,f=S[p];void 0===f&&(f={},S[p]=f);var m=f[d];void 0===m&&(m=o.clone(),f[d]=m),o=m}o.visible=i.visible,o.wireframe=i.wireframe;var g=i.side;return F.renderSingleSided&&g==oa&&(g=ra),F.renderReverseSided&&(g===ra?g=aa:g===aa&&(g=ra)),o.side=g,o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,n&&void 0!==o.uniforms.lightPos&&o.uniforms.lightPos.value.copy(r),o}function l(t,e,i){if(t.visible!==!1){var n=0!==(t.layers.mask&e.layers.mask);if(n&&(t.isMesh||t.isLine||t.isPoints)&&t.castShadow&&(t.frustumCulled===!1||d.intersectsObject(t)===!0)){var r=t.material;r.visible===!0&&(t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),_.push(t))}for(var a=t.children,o=0,s=a.length;o<s;o++)l(a[o],e,i)}}var u=t.context,p=t.state,d=new nt,f=new h,m=e.shadows,g=new i,v=new i(o.maxTextureSize,o.maxTextureSize),y=new c,x=new c,_=[],b=1,w=2,M=(b|w)+1,E=new Array(M),T=new Array(M),S={},A=[new c(1,0,0),new c(-1,0,0),new c(0,0,1),new c(0,0,-1),new c(0,1,0),new c(0,-1,0)],L=[new c(0,1,0),new c(0,1,0),new c(0,1,0),new c(0,1,0),new c(0,0,1),new c(0,0,-1)],R=[new r,new r,new r,new r,new r,new r],P=new K;P.depthPacking=ls,P.clipping=!0;for(var C=wh.distanceRGBA,I=ys.clone(C.uniforms),U=0;U!==M;++U){var N=0!==(U&b),D=0!==(U&w),O=P.clone();O.morphTargets=N,O.skinning=D,E[U]=O;var B=new Q({defines:{USE_SHADOWMAP:""},uniforms:I,vertexShader:C.vertexShader,fragmentShader:C.fragmentShader,morphTargets:N,skinning:D,clipping:!0});T[U]=B}var F=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ia,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(e,i){if(F.enabled!==!1&&(F.autoUpdate!==!1||F.needsUpdate!==!1)&&0!==m.length){p.buffers.color.setClear(1,1,1,1),p.disable(u.BLEND),p.setDepthTest(!0),p.setScissorTest(!1);for(var r,o,c=0,h=m.length;c<h;c++){var b=m[c],w=b.shadow;if(void 0!==w){var M=w.camera;if(g.copy(w.mapSize),g.min(v),b&&b.isPointLight){r=6,o=!0;var E=g.x,T=g.y;R[0].set(2*E,T,E,T),R[1].set(0,T,E,T),R[2].set(3*E,T,E,T),R[3].set(E,T,E,T),R[4].set(3*E,0,E,T),R[5].set(E,0,E,T),g.x*=4,g.y*=2}else r=1,o=!1;if(null===w.map){var S={minFilter:so,magFilter:so,format:Lo};w.map=new a(g.x,g.y,S),M.updateProjectionMatrix()}w.isSpotLightShadow&&w.update(b),w&&w.isRectAreaLightShadow&&w.update(b);var P=w.map,C=w.matrix;x.setFromMatrixPosition(b.matrixWorld),M.position.copy(x),t.setRenderTarget(P),t.clear();for(var I=0;I<r;I++){if(o){y.copy(M.position),y.add(A[I]),M.up.copy(L[I]),M.lookAt(y);var U=R[I];p.viewport(U)}else y.setFromMatrixPosition(b.target.matrixWorld),M.lookAt(y);M.updateMatrixWorld(),M.matrixWorldInverse.getInverse(M.matrixWorld),C.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),C.multiply(M.projectionMatrix),C.multiply(M.matrixWorldInverse),f.multiplyMatrices(M.projectionMatrix,M.matrixWorldInverse),d.setFromMatrix(f),_.length=0,l(e,i,M);for(var N=0,D=_.length;N<D;N++){var O=_[N],B=n.update(O),z=O.material;if(z&&z.isMultiMaterial)for(var G=B.groups,H=z.materials,V=0,k=G.length;V<k;V++){var j=G[V],W=H[j.materialIndex];if(W.visible===!0){var X=s(O,W,o,x);t.renderBufferDirect(M,null,B,X,O,j)}}else{var X=s(O,z,o,x);t.renderBufferDirect(M,null,B,X,O,null)}}}}else console.warn("THREE.WebGLShadowMap:",b,"has no shadow.")}var q=t.getClearColor(),Y=t.getClearAlpha();t.setClearColor(q,Y),F.needsUpdate=!1}}}function at(t,e){this.origin=void 0!==t?t:new c,this.direction=void 0!==e?e:new c}function ot(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||ot.DefaultOrder}function st(){this.mask=1}function ct(){function t(){r.setFromEuler(n,!1)}function e(){n.setFromQuaternion(r,void 0,!1)}Object.defineProperty(this,"id",{value:Eh++}),this.uuid=us.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ct.DefaultUp.clone();var i=new c,n=new ot,r=new s,a=new c(1,1,1);n.onChange(t),r.onChange(e),Object.defineProperties(this,{position:{enumerable:!0,value:i},rotation:{enumerable:!0,value:n},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:a},modelViewMatrix:{value:new h},normalMatrix:{value:new et}}),this.matrix=new h,this.matrixWorld=new h,this.matrixAutoUpdate=ct.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new st,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={},this.onBeforeRender=function(){},this.onAfterRender=function(){}}function ht(t,e){this.start=void 0!==t?t:new c,this.end=void 0!==e?e:new c}function lt(t,e,i){this.a=void 0!==t?t:new c,this.b=void 0!==e?e:new c,this.c=void 0!==i?i:new c}function ut(t,e,i,n,r,a){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new c,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new W,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==a?a:0}function pt(t){J.call(this),this.type="MeshBasicMaterial",this.color=new W(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Va,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function dt(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=us.generateUUID(),this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=i===!0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function ft(t,e){dt.call(this,new Int8Array(t),e)}function mt(t,e){dt.call(this,new Uint8Array(t),e)}function gt(t,e){dt.call(this,new Uint8ClampedArray(t),e)}function vt(t,e){dt.call(this,new Int16Array(t),e)}function yt(t,e){dt.call(this,new Uint16Array(t),e)}function xt(t,e){dt.call(this,new Int32Array(t),e)}function _t(t,e){dt.call(this,new Uint32Array(t),e)}function bt(t,e){dt.call(this,new Float32Array(t),e)}function wt(t,e){dt.call(this,new Float64Array(t),e)}function Mt(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function Et(t){for(var e=t.length,i=-(1/0);e--;)t[e]>i&&(i=t[e]);return i}function Tt(){return Th++}function St(){Object.defineProperty(this,"id",{value:Tt()}),this.uuid=us.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function At(){Object.defineProperty(this,"id",{value:Tt()}),this.uuid=us.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function Lt(t,e){ct.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new At,this.material=void 0!==e?e:new pt({color:16777215*Math.random()}),this.drawMode=Ko,this.updateMorphTargets()}function Rt(t,e,i,n,r,a){St.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new Pt(t,e,i,n,r,a)),this.mergeVertices()}function Pt(t,e,i,n,r,a){function o(t,e,i,n,r,a,o,m,g,v,y){var x,_,b=a/g,w=o/v,M=a/2,E=o/2,T=m/2,S=g+1,A=v+1,L=0,R=0,P=new c;for(_=0;_<A;_++){var C=_*w-E;for(x=0;x<S;x++){var I=x*b-M;P[t]=I*n,P[e]=C*r,P[i]=T,l.push(P.x,P.y,P.z),P[t]=0,P[e]=0,P[i]=m>0?1:-1,u.push(P.x,P.y,P.z),p.push(x/g),p.push(1-_/v),L+=1}}for(_=0;_<v;_++)for(x=0;x<g;x++){var U=d+x+S*_,N=d+x+S*(_+1),D=d+(x+1)+S*(_+1),O=d+(x+1)+S*_;h.push(U,N,O),h.push(N,D,O),R+=6}s.addGroup(f,R,y),f+=R,d+=L}At.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};var s=this;n=Math.floor(n)||1,r=Math.floor(r)||1,a=Math.floor(a)||1;var h=[],l=[],u=[],p=[],d=0,f=0;o("z","y","x",-1,-1,i,e,t,a,r,0),o("z","y","x",1,-1,i,e,-t,a,r,1),o("x","z","y",1,1,t,i,e,n,a,2),o("x","z","y",1,-1,t,i,-e,n,a,3),o("x","y","z",1,-1,t,e,i,n,r,4),o("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(h),this.addAttribute("position",new bt(l,3)),this.addAttribute("normal",new bt(u,3)),this.addAttribute("uv",new bt(p,2))}function Ct(t,e,i,n){St.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new It(t,e,i,n))}function It(t,e,i,n){At.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r,a,o=t/2,s=e/2,c=Math.floor(i)||1,h=Math.floor(n)||1,l=c+1,u=h+1,p=t/c,d=e/h,f=[],m=[],g=[],v=[];for(a=0;a<u;a++){var y=a*d-s;for(r=0;r<l;r++){var x=r*p-o;m.push(x,-y,0),g.push(0,0,1),v.push(r/c),v.push(1-a/h)}}for(a=0;a<h;a++)for(r=0;r<c;r++){var _=r+l*a,b=r+l*(a+1),w=r+1+l*(a+1),M=r+1+l*a;f.push(_,b,M),f.push(b,w,M)}this.setIndex(f),this.addAttribute("position",new bt(m,3)),this.addAttribute("normal",new bt(g,3)),this.addAttribute("uv",new bt(v,2))}function Ut(){ct.call(this),this.type="Camera",this.matrixWorldInverse=new h,this.projectionMatrix=new h}function Nt(t,e,i,n){Ut.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Dt(t,e,i,n,r,a){Ut.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=void 0!==r?r:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function Ot(t,e,i){function n(t){s=t}function r(i){i.array instanceof Uint32Array&&e.get("OES_element_index_uint")?(c=t.UNSIGNED_INT,h=4):i.array instanceof Uint16Array?(c=t.UNSIGNED_SHORT,h=2):(c=t.UNSIGNED_BYTE,h=1)}function a(e,n){t.drawElements(s,n,c,e*h),i.calls++,i.vertices+=n,s===t.TRIANGLES&&(i.faces+=n/3)}function o(n,r,a){var o=e.get("ANGLE_instanced_arrays");return null===o?void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."):(o.drawElementsInstancedANGLE(s,a,c,r*h,n.maxInstancedCount),i.calls++,i.vertices+=a*n.maxInstancedCount,void(s===t.TRIANGLES&&(i.faces+=n.maxInstancedCount*a/3)))}var s,c,h;return{setMode:n,setIndex:r,render:a,renderInstances:o}}function Bt(t,e,i){function n(t){o=t}function r(e,n){t.drawArrays(o,e,n),i.calls++,i.vertices+=n,o===t.TRIANGLES&&(i.faces+=n/3)}function a(n){var r=e.get("ANGLE_instanced_arrays");if(null===r)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var a=n.attributes.position,s=0;a.isInterleavedBufferAttribute?(s=a.data.count,r.drawArraysInstancedANGLE(o,0,s,n.maxInstancedCount)):(s=a.count,r.drawArraysInstancedANGLE(o,0,s,n.maxInstancedCount)),i.calls++,i.vertices+=s*n.maxInstancedCount,o===t.TRIANGLES&&(i.faces+=n.maxInstancedCount*s/3)}var o;return{setMode:n,render:r,renderInstances:a}}function Ft(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new c,color:new W,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"SpotLight":n={position:new c,direction:new c,color:new W,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"PointLight":n={position:new c,color:new W,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"HemisphereLight":n={direction:new c,\nskyColor:new W,groundColor:new W};break;case"RectAreaLight":n={color:new W,position:new c,halfWidth:new c,halfHeight:new c}}return t[e.id]=n,n}}}function zt(t){for(var e=t.split("\\n"),i=0;i<e.length;i++)e[i]=i+1+": "+e[i];return e.join("\\n")}function Gt(t,e,i){var n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),t.getShaderParameter(n,t.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn\'t compile."),""!==t.getShaderInfoLog(n)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(n),zt(i)),n}function Ht(t){switch(t){case es:return["Linear","( value )"];case is:return["sRGB","( value )"];case rs:return["RGBE","( value )"];case os:return["RGBM","( value, 7.0 )"];case ss:return["RGBM","( value, 16.0 )"];case cs:return["RGBD","( value, 256.0 )"];case ns:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function Vt(t,e){var i=Ht(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function kt(t,e){var i=Ht(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function jt(t,e){var i;switch(e){case Xa:i="Linear";break;case qa:i="Reinhard";break;case Ya:i="Uncharted2";break;case Za:i="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function Wt(t,e,i){t=t||{};var n=[t.derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return n.filter(Yt).join("\\n")}function Xt(t){var e=[];for(var i in t){var n=t[i];n!==!1&&e.push("#define "+i+" "+n)}return e.join("\\n")}function qt(t,e,i){for(var n={},r=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),a=0;a<r;a++){var o=t.getActiveAttrib(e,a),s=o.name;n[s]=t.getAttribLocation(e,s)}return n}function Yt(t){return""!==t}function Zt(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function Jt(t){function e(t,e){var i=xh[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return Jt(i)}var i=/#include +<([\\w\\d.]+)>/g;return t.replace(i,e)}function Qt(t){function e(t,e,i,n){for(var r="",a=parseInt(e);a<parseInt(i);a++)r+=n.replace(/\\[ i \\]/g,"[ "+a+" ]");return r}var i=/for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;return t.replace(i,e)}function Kt(t,e,i,n){var r=t.context,a=i.extensions,o=i.defines,s=i.__webglShader.vertexShader,c=i.__webglShader.fragmentShader,h="SHADOWMAP_TYPE_BASIC";n.shadowMapType===ia?h="SHADOWMAP_TYPE_PCF":n.shadowMapType===na&&(h="SHADOWMAP_TYPE_PCF_SOFT");var l="ENVMAP_TYPE_CUBE",u="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(n.envMap){switch(i.envMap.mapping){case Qa:case Ka:l="ENVMAP_TYPE_CUBE";break;case io:case no:l="ENVMAP_TYPE_CUBE_UV";break;case $a:case to:l="ENVMAP_TYPE_EQUIREC";break;case eo:l="ENVMAP_TYPE_SPHERE"}switch(i.envMap.mapping){case Ka:case to:u="ENVMAP_MODE_REFRACTION"}switch(i.combine){case Va:p="ENVMAP_BLENDING_MULTIPLY";break;case ka:p="ENVMAP_BLENDING_MIX";break;case ja:p="ENVMAP_BLENDING_ADD"}}var d,f,m=t.gammaFactor>0?t.gammaFactor:1,g=Wt(a,n,t.extensions),v=Xt(o),y=r.createProgram();i.isRawShaderMaterial?(d=[v,"\\n"].filter(Yt).join("\\n"),f=[g,v,"\\n"].filter(Yt).join("\\n")):(d=["precision "+n.precision+" float;","precision "+n.precision+" int;","#define SHADER_NAME "+i.__webglShader.name,v,n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+m,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+n.numClippingPlanes,n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&t.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\\tattribute vec3 morphTarget0;","\\tattribute vec3 morphTarget1;","\\tattribute vec3 morphTarget2;","\\tattribute vec3 morphTarget3;","\\t#ifdef USE_MORPHNORMALS","\\t\\tattribute vec3 morphNormal0;","\\t\\tattribute vec3 morphNormal1;","\\t\\tattribute vec3 morphNormal2;","\\t\\tattribute vec3 morphNormal3;","\\t#else","\\t\\tattribute vec3 morphTarget4;","\\t\\tattribute vec3 morphTarget5;","\\t\\tattribute vec3 morphTarget6;","\\t\\tattribute vec3 morphTarget7;","\\t#endif","#endif","#ifdef USE_SKINNING","\\tattribute vec4 skinIndex;","\\tattribute vec4 skinWeight;","#endif","\\n"].filter(Yt).join("\\n"),f=[g,"precision "+n.precision+" float;","precision "+n.precision+" int;","#define SHADER_NAME "+i.__webglShader.name,v,n.alphaTest?"#define ALPHATEST "+n.alphaTest:"","#define GAMMA_FACTOR "+m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+u:"",n.envMap?"#define "+p:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexColors?"#define USE_COLOR":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+n.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(n.numClippingPlanes-n.numClipIntersection),n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&t.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",n.envMap&&t.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",n.toneMapping!==Wa?"#define TONE_MAPPING":"",n.toneMapping!==Wa?xh.tonemapping_pars_fragment:"",n.toneMapping!==Wa?jt("toneMapping",n.toneMapping):"",n.outputEncoding||n.mapEncoding||n.envMapEncoding||n.emissiveMapEncoding?xh.encodings_pars_fragment:"",n.mapEncoding?Vt("mapTexelToLinear",n.mapEncoding):"",n.envMapEncoding?Vt("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMapEncoding?Vt("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.outputEncoding?kt("linearToOutputTexel",n.outputEncoding):"",n.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\\n"].filter(Yt).join("\\n")),s=Jt(s,n),s=Zt(s,n),c=Jt(c,n),c=Zt(c,n),i.isShaderMaterial||(s=Qt(s),c=Qt(c));var x=d+s,_=f+c,b=Gt(r,r.VERTEX_SHADER,x),w=Gt(r,r.FRAGMENT_SHADER,_);r.attachShader(y,b),r.attachShader(y,w),void 0!==i.index0AttributeName?r.bindAttribLocation(y,0,i.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y);var M=r.getProgramInfoLog(y),E=r.getShaderInfoLog(b),T=r.getShaderInfoLog(w),S=!0,A=!0;r.getProgramParameter(y,r.LINK_STATUS)===!1?(S=!1,console.error("THREE.WebGLProgram: shader error: ",r.getError(),"gl.VALIDATE_STATUS",r.getProgramParameter(y,r.VALIDATE_STATUS),"gl.getProgramInfoLog",M,E,T)):""!==M?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",M):""!==E&&""!==T||(A=!1),A&&(this.diagnostics={runnable:S,material:i,programLog:M,vertexShader:{log:E,prefix:d},fragmentShader:{log:T,prefix:f}}),r.deleteShader(b),r.deleteShader(w);var L;this.getUniforms=function(){return void 0===L&&(L=new j(r,y,t)),L};var R;return this.getAttributes=function(){return void 0===R&&(R=qt(r,y)),R},this.destroy=function(){r.deleteProgram(y),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=Sh++,this.code=e,this.usedTimes=1,this.program=y,this.vertexShader=b,this.fragmentShader=w,this}function $t(t,e){function i(t){if(e.floatVertexTextures&&t&&t.skeleton&&t.skeleton.useVertexTexture)return 1024;var i=e.maxVertexUniforms,n=Math.floor((i-20)/4),r=n;return void 0!==t&&t&&t.isSkinnedMesh&&(r=Math.min(t.skeleton.bones.length,r),r<t.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+t.skeleton.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)")),r}function n(t,e){var i;return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don\'t use render targets as textures. Use their .texture property instead."),i=t.texture.encoding):i=es,i===es&&e&&(i=ns),i}var r=[],a={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking"];this.getParameters=function(r,o,s,c,h,l){var u=a[r.type],p=i(l),d=t.getPrecision();null!==r.precision&&(d=e.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead."));var f=t.getCurrentRenderTarget(),m={shaderID:u,precision:d,supportsVertexTextures:e.vertexTextures,outputEncoding:n(f?f.texture:null,t.gammaOutput),map:!!r.map,mapEncoding:n(r.map,t.gammaInput),envMap:!!r.envMap,envMapMode:r.envMap&&r.envMap.mapping,envMapEncoding:n(r.envMap,t.gammaInput),envMapCubeUV:!!r.envMap&&(r.envMap.mapping===io||r.envMap.mapping===no),lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:n(r.emissiveMap,t.gammaInput),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,combine:r.combine,vertexColors:r.vertexColors,fog:!!s,useFog:r.fog,fogExp:s&&s.isFogExp2,flatShading:r.shading===sa,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:e.logarithmicDepthBuffer,skinning:r.skinning,maxBones:p,useVertexTexture:e.floatVertexTextures&&l&&l.skeleton&&l.skeleton.useVertexTexture,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numClippingPlanes:c,numClipIntersection:h,shadowMapEnabled:t.shadowMap.enabled&&l.receiveShadow&&o.shadows.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===oa,flipSided:r.side===aa,depthPacking:void 0!==r.depthPacking&&r.depthPacking};return m},this.getProgramCode=function(t,e){var i=[];if(e.shaderID?i.push(e.shaderID):(i.push(t.fragmentShader),i.push(t.vertexShader)),void 0!==t.defines)for(var n in t.defines)i.push(n),i.push(t.defines[n]);for(var r=0;r<o.length;r++)i.push(e[o[r]]);return i.join()},this.acquireProgram=function(e,i,n){for(var a,o=0,s=r.length;o<s;o++){var c=r[o];if(c.code===n){a=c,++a.usedTimes;break}}return void 0===a&&(a=new Kt(t,n,e,i),r.push(a)),a},this.releaseProgram=function(t){if(0===--t.usedTimes){var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),t.destroy()}},this.programs=r}function te(t,e,i){function n(t){var r=t.target,s=c[r.id];null!==s.index&&a(s.index),o(s.attributes),r.removeEventListener("dispose",n),delete c[r.id];var h=e.get(r);h.wireframe&&a(h.wireframe),e.delete(r);var l=e.get(s);l.wireframe&&a(l.wireframe),e.delete(s),i.memory.geometries--}function r(t){return t.isInterleavedBufferAttribute?e.get(t.data).__webglBuffer:e.get(t).__webglBuffer}function a(e){var i=r(e);void 0!==i&&(t.deleteBuffer(i),s(e))}function o(t){for(var e in t)a(t[e])}function s(t){t.isInterleavedBufferAttribute?e.delete(t.data):e.delete(t)}var c={};return{get:function(t){var e=t.geometry;if(void 0!==c[e.id])return c[e.id];e.addEventListener("dispose",n);var r;return e.isBufferGeometry?r=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new At).setFromObject(t)),r=e._bufferGeometry),c[e.id]=r,i.memory.geometries++,r}}}function ee(t,e,i){function n(e){var i=l.get(e);e.geometry.isGeometry&&i.updateFromObject(e);var n=i.index,a=i.attributes;null!==n&&r(n,t.ELEMENT_ARRAY_BUFFER);for(var o in a)r(a[o],t.ARRAY_BUFFER);var s=i.morphAttributes;for(var o in s)for(var c=s[o],h=0,u=c.length;h<u;h++)r(c[h],t.ARRAY_BUFFER);return i}function r(t,i){var n=t.isInterleavedBufferAttribute?t.data:t,r=e.get(n);void 0===r.__webglBuffer?a(r,n,i):r.version!==n.version&&o(r,n,i)}function a(e,i,n){e.__webglBuffer=t.createBuffer(),t.bindBuffer(n,e.__webglBuffer);var r=i.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW;t.bufferData(n,i.array,r);var a=t.FLOAT,o=i.array;o instanceof Float32Array?a=t.FLOAT:o instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array"):o instanceof Uint16Array?a=t.UNSIGNED_SHORT:o instanceof Int16Array?a=t.SHORT:o instanceof Uint32Array?a=t.UNSIGNED_INT:o instanceof Int32Array?a=t.INT:o instanceof Int8Array?a=t.BYTE:o instanceof Uint8Array&&(a=t.UNSIGNED_BYTE),e.bytesPerElement=o.BYTES_PER_ELEMENT,e.type=a,e.version=i.version,i.onUploadCallback()}function o(e,i,n){t.bindBuffer(n,e.__webglBuffer),i.dynamic===!1?t.bufferData(n,i.array,t.STATIC_DRAW):i.updateRange.count===-1?t.bufferSubData(n,0,i.array):0===i.updateRange.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(n,i.updateRange.offset*i.array.BYTES_PER_ELEMENT,i.array.subarray(i.updateRange.offset,i.updateRange.offset+i.updateRange.count)),i.updateRange.count=0),e.version=i.version}function s(t){return t.isInterleavedBufferAttribute?e.get(t.data).__webglBuffer:e.get(t).__webglBuffer}function c(t){return t.isInterleavedBufferAttribute?e.get(t.data):e.get(t)}function h(i){var n=e.get(i);if(void 0!==n.wireframe)return n.wireframe;var a=[],o=i.index,s=i.attributes;if(null!==o)for(var c=o.array,h=0,l=c.length;h<l;h+=3){var u=c[h+0],p=c[h+1],d=c[h+2];a.push(u,p,p,d,d,u)}else for(var c=s.position.array,h=0,l=c.length/3-1;h<l;h+=3){var u=h+0,p=h+1,d=h+2;a.push(u,p,p,d,d,u)}var f=new(Et(a)>65535?_t:yt)(a,1);return r(f,t.ELEMENT_ARRAY_BUFFER),n.wireframe=f,f}var l=new te(t,e,i);return{getAttributeBuffer:s,getAttributeProperties:c,getWireframeAttribute:h,update:n}}function ie(t,e,i,n,r,a,o){function s(t,e){if(t.width>e||t.height>e){var i=e/Math.max(t.width,t.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=Math.floor(t.width*i),n.height=Math.floor(t.height*i);var r=n.getContext("2d");return r.drawImage(t,0,0,t.width,t.height,0,0,n.width,n.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+n.width+"x"+n.height,t),n}return t}function c(t){return us.isPowerOfTwo(t.width)&&us.isPowerOfTwo(t.height)}function h(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");e.width=us.nearestPowerOfTwo(t.width),e.height=us.nearestPowerOfTwo(t.height);var i=e.getContext("2d");return i.drawImage(t,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}function l(t){return t.wrapS!==ao||t.wrapT!==ao||t.minFilter!==so&&t.minFilter!==lo}function u(e){return e===so||e===co||e===ho?t.NEAREST:t.LINEAR}function p(t){var e=t.target;e.removeEventListener("dispose",p),f(e),A.textures--}function d(t){var e=t.target;e.removeEventListener("dispose",d),m(e),A.textures--}function f(e){var i=n.get(e);if(e.image&&i.__image__webglTextureCube)t.deleteTexture(i.__image__webglTextureCube);else{if(void 0===i.__webglInit)return;t.deleteTexture(i.__webglTexture)}n.delete(e)}function m(e){var i=n.get(e),r=n.get(e.texture);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(i.__webglFramebuffer[a]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[a]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);n.delete(e.texture),n.delete(e)}}function g(e,r){var a=n.get(e);if(e.version>0&&a.__version!==e.version){var o=e.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);else{if(o.complete!==!1)return void _(a,e,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e)}}i.activeTexture(t.TEXTURE0+r),i.bindTexture(t.TEXTURE_2D,a.__webglTexture)}function v(e,o){var h=n.get(e);if(6===e.image.length)if(e.version>0&&h.__version!==e.version){h.__image__webglTextureCube||(e.addEventListener("dispose",p),h.__image__webglTextureCube=t.createTexture(),A.textures++),i.activeTexture(t.TEXTURE0+o),i.bindTexture(t.TEXTURE_CUBE_MAP,h.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var l=e&&e.isCompressedTexture,u=e.image[0]&&e.image[0].isDataTexture,d=[],f=0;f<6;f++)l||u?d[f]=u?e.image[f].image:e.image[f]:d[f]=s(e.image[f],r.maxCubemapSize);var m=d[0],g=c(m),v=a(e.format),y=a(e.type);x(t.TEXTURE_CUBE_MAP,e,g);for(var f=0;f<6;f++)if(l)for(var _,b=d[f].mipmaps,w=0,M=b.length;w<M;w++)_=b[w],e.format!==Lo&&e.format!==Ao?i.getCompressedTextureFormats().indexOf(v)>-1?i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+f,w,v,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+f,w,v,_.width,_.height,0,v,y,_.data);else u?i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,v,d[f].width,d[f].height,0,v,y,d[f].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,v,v,y,d[f]);e.generateMipmaps&&g&&t.generateMipmap(t.TEXTURE_CUBE_MAP),h.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(t.TEXTURE0+o),i.bindTexture(t.TEXTURE_CUBE_MAP,h.__image__webglTextureCube)}function y(e,r){i.activeTexture(t.TEXTURE0+r),i.bindTexture(t.TEXTURE_CUBE_MAP,n.get(e).__webglTexture)}function x(i,o,s){var c;if(s?(t.texParameteri(i,t.TEXTURE_WRAP_S,a(o.wrapS)),t.texParameteri(i,t.TEXTURE_WRAP_T,a(o.wrapT)),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a(o.minFilter))):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),o.wrapS===ao&&o.wrapT===ao||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),t.texParameteri(i,t.TEXTURE_MAG_FILTER,u(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,u(o.minFilter)),o.minFilter!==so&&o.minFilter!==lo&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),c=e.get("EXT_texture_filter_anisotropic")){if(o.type===_o&&null===e.get("OES_texture_float_linear"))return;if(o.type===bo&&null===e.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(i,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function _(e,n,o){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",p),e.__webglTexture=t.createTexture(),A.textures++),i.activeTexture(t.TEXTURE0+o),i.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment);var u=s(n.image,r.maxTextureSize);l(n)&&c(u)===!1&&(u=h(u));var d=c(u),f=a(n.format),m=a(n.type);x(t.TEXTURE_2D,n,d);var g,v=n.mipmaps;if(n.isDepthTexture){var y=t.DEPTH_COMPONENT;if(n.type===_o){if(!L)throw new Error("Float Depth Texture only supported in WebGL2.0");y=t.DEPTH_COMPONENT32F}else L&&(y=t.DEPTH_COMPONENT16);n.format===Io&&y===t.DEPTH_COMPONENT&&n.type!==vo&&n.type!==xo&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=vo,m=a(n.type)),n.format===Uo&&(y=t.DEPTH_STENCIL,n.type!==To&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=To,m=a(n.type))),i.texImage2D(t.TEXTURE_2D,0,y,u.width,u.height,0,f,m,null)}else if(n.isDataTexture)if(v.length>0&&d){for(var _=0,b=v.length;_<b;_++)g=v[_],i.texImage2D(t.TEXTURE_2D,_,f,g.width,g.height,0,f,m,g.data);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,f,u.width,u.height,0,f,m,u.data);else if(n.isCompressedTexture)for(var _=0,b=v.length;_<b;_++)g=v[_],n.format!==Lo&&n.format!==Ao?i.getCompressedTextureFormats().indexOf(f)>-1?i.compressedTexImage2D(t.TEXTURE_2D,_,f,g.width,g.height,0,g.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(t.TEXTURE_2D,_,f,g.width,g.height,0,f,m,g.data);else if(v.length>0&&d){for(var _=0,b=v.length;_<b;_++)g=v[_],i.texImage2D(t.TEXTURE_2D,_,f,f,m,g);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,f,f,m,u);n.generateMipmaps&&d&&t.generateMipmap(t.TEXTURE_2D),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function b(e,r,o,s){var c=a(r.texture.format),h=a(r.texture.type);i.texImage2D(s,0,c,r.width,r.height,0,c,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function w(e,i){t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}function M(e,i){var r=i&&i.isWebGLRenderTargetCube;if(r)throw new Error("Depth Texture with cube render targets is not supported!");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),g(i.depthTexture,0);var a=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===Io)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(i.depthTexture.format!==Uo)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}function E(e){var i=n.get(e),r=e.isWebGLRenderTargetCube===!0;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");M(i.__webglFramebuffer,e)}else if(r){i.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=t.createRenderbuffer(),w(i.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),w(i.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}function T(e){var r=n.get(e),a=n.get(e.texture);e.addEventListener("dispose",d),a.__webglTexture=t.createTexture(),A.textures++;var o=e.isWebGLRenderTargetCube===!0,s=c(e);if(o){r.__webglFramebuffer=[];for(var h=0;h<6;h++)r.__webglFramebuffer[h]=t.createFramebuffer()}else r.__webglFramebuffer=t.createFramebuffer();if(o){i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),x(t.TEXTURE_CUBE_MAP,e.texture,s);for(var h=0;h<6;h++)b(r.__webglFramebuffer[h],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+h);e.texture.generateMipmaps&&s&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else i.bindTexture(t.TEXTURE_2D,a.__webglTexture),x(t.TEXTURE_2D,e.texture,s),b(r.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),e.texture.generateMipmaps&&s&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&E(e)}function S(e){var r=e.texture;if(r.generateMipmaps&&c(e)&&r.minFilter!==so&&r.minFilter!==lo){var a=e&&e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=n.get(r).__webglTexture;i.bindTexture(a,o),t.generateMipmap(a),i.bindTexture(a,null)}}var A=o.memory,L="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext;this.setTexture2D=g,this.setTextureCube=v,this.setTextureCubeDynamic=y,this.setupRenderTarget=T,this.updateRenderTargetMipmap=S}function ne(){var t={};return{get:function(e){var i=e.uuid,n=t[i];return void 0===n&&(n={},t[i]=n),n},delete:function(e){delete t[e.uuid]},clear:function(){t={}}}}function re(t,e,i){function n(){var e=!1,i=new r,n=null,a=new r;return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,r,o,s){s===!0&&(e*=o,n*=o,r*=o),i.set(e,n,r,o),a.equals(i)===!1&&(t.clearColor(e,n,r,o),a.copy(i))},reset:function(){e=!1,n=null,a.set(0,0,0,1)}}}function a(){var e=!1,i=null,n=null,r=null;return{setTest:function(e){e?d(t.DEPTH_TEST):f(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case Na:t.depthFunc(t.NEVER);break;case Da:t.depthFunc(t.ALWAYS);break;case Oa:t.depthFunc(t.LESS);break;case Ba:t.depthFunc(t.LEQUAL);break;case Fa:t.depthFunc(t.EQUAL);break;case za:t.depthFunc(t.GEQUAL);break;case Ga:t.depthFunc(t.GREATER);break;case Ha:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,n=null,r=null}}}function o(){var e=!1,i=null,n=null,r=null,a=null,o=null,s=null,c=null,h=null;return{setTest:function(e){e?d(t.STENCIL_TEST):f(t.STENCIL_TEST)},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,o){n===e&&r===i&&a===o||(t.stencilFunc(e,i,o),n=e,r=i,a=o)},setOp:function(e,i,n){o===e&&s===i&&c===n||(t.stencilOp(e,i,n),o=e,s=i,c=n)},setLocked:function(t){e=t},setClear:function(e){h!==e&&(t.clearStencil(e),h=e)},reset:function(){e=!1,i=null,n=null,r=null,a=null,o=null,s=null,c=null,h=null}}}function s(e,i,n){var r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<n;o++)t.texImage2D(i+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}function c(){F.setClear(0,0,0,1),z.setClear(1),G.setClear(0),d(t.DEPTH_TEST),_(Ba),T(!1),S(Jr),d(t.CULL_FACE),d(t.BLEND),g(da)}function h(){for(var t=0,e=V.length;t<e;t++)V[t]=0}function l(i){if(V[i]=1,0===k[i]&&(t.enableVertexAttribArray(i),k[i]=1),0!==j[i]){var n=e.get("ANGLE_instanced_arrays");n.vertexAttribDivisorANGLE(i,0),j[i]=0}}function u(e,i,n){V[e]=1,0===k[e]&&(t.enableVertexAttribArray(e),k[e]=1),j[e]!==i&&(n.vertexAttribDivisorANGLE(e,i),j[e]=i)}function p(){for(var e=0,i=k.length;e!==i;++e)k[e]!==V[e]&&(t.disableVertexAttribArray(e),k[e]=0)}function d(e){W[e]!==!0&&(t.enable(e),W[e]=!0)}function f(e){W[e]!==!1&&(t.disable(e),W[e]=!1)}function m(){if(null===X&&(X=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var i=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),n=0;n<i.length;n++)X.push(i[n]);return X}function g(e,n,r,a,o,s,c,h){e!==pa?d(t.BLEND):f(t.BLEND),e===q&&h===tt||(e===fa?h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE)):e===ma?h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR)):e===ga?h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR)):h?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)),q=e,tt=h),e===va?(o=o||n,s=s||r,c=c||a,n===Y&&o===Q||(t.blendEquationSeparate(i(n),i(o)),Y=n,Q=o),r===Z&&a===J&&s===K&&c===$||(t.blendFuncSeparate(i(r),i(a),i(s),i(c)),Z=r,J=a,K=s,$=c)):(Y=null,Z=null,J=null,Q=null,K=null,$=null)}function v(t){F.setMask(t)}function y(t){z.setTest(t)}function x(t){z.setMask(t)}function _(t){z.setFunc(t)}function b(t){G.setTest(t)}function w(t){G.setMask(t)}function M(t,e,i){G.setFunc(t,e,i)}function E(t,e,i){G.setOp(t,e,i)}function T(e){\net!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),et=e)}function S(e){e!==Zr?(d(t.CULL_FACE),e!==it&&(e===Jr?t.cullFace(t.BACK):e===Qr?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):f(t.CULL_FACE),it=e}function A(e){e!==nt&&(ht&&t.lineWidth(e),nt=e)}function L(e,i,n){e?(d(t.POLYGON_OFFSET_FILL),rt===i&&at===n||(t.polygonOffset(i,n),rt=i,at=n)):f(t.POLYGON_OFFSET_FILL)}function R(){return ot}function P(e){ot=e,e?d(t.SCISSOR_TEST):f(t.SCISSOR_TEST)}function C(e){void 0===e&&(e=t.TEXTURE0+st-1),lt!==e&&(t.activeTexture(e),lt=e)}function I(e,i){null===lt&&C();var n=ut[lt];void 0===n&&(n={type:void 0,texture:void 0},ut[lt]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||ft[e]),n.type=e,n.texture=i)}function U(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error(t)}}function N(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error(t)}}function D(e){pt.equals(e)===!1&&(t.scissor(e.x,e.y,e.z,e.w),pt.copy(e))}function O(e){dt.equals(e)===!1&&(t.viewport(e.x,e.y,e.z,e.w),dt.copy(e))}function B(){for(var e=0;e<k.length;e++)1===k[e]&&(t.disableVertexAttribArray(e),k[e]=0);W={},X=null,lt=null,ut={},q=null,et=null,it=null,F.reset(),z.reset(),G.reset()}var F=new n,z=new a,G=new o,H=t.getParameter(t.MAX_VERTEX_ATTRIBS),V=new Uint8Array(H),k=new Uint8Array(H),j=new Uint8Array(H),W={},X=null,q=null,Y=null,Z=null,J=null,Q=null,K=null,$=null,tt=!1,et=null,it=null,nt=null,rt=null,at=null,ot=null,st=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),ct=parseFloat(/^WebGL\\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),ht=parseFloat(ct)>=1,lt=null,ut={},pt=new r,dt=new r,ft={};return ft[t.TEXTURE_2D]=s(t.TEXTURE_2D,t.TEXTURE_2D,1),ft[t.TEXTURE_CUBE_MAP]=s(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),{buffers:{color:F,depth:z,stencil:G},init:c,initAttributes:h,enableAttribute:l,enableAttributeAndDivisor:u,disableUnusedAttributes:p,enable:d,disable:f,getCompressedTextureFormats:m,setBlending:g,setColorWrite:v,setDepthTest:y,setDepthWrite:x,setDepthFunc:_,setStencilTest:b,setStencilWrite:w,setStencilFunc:M,setStencilOp:E,setFlipSided:T,setCullFace:S,setLineWidth:A,setPolygonOffset:L,getScissorTest:R,setScissorTest:P,activeTexture:C,bindTexture:I,compressedTexImage2D:U,texImage2D:N,scissor:D,viewport:O,reset:B}}function ae(t,e,i){function n(){if(void 0!==a)return a;var i=e.get("EXT_texture_filter_anisotropic");return a=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var a,o=void 0!==i.precision?i.precision:"highp",s=r(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var c=i.logarithmicDepthBuffer===!0&&!!e.get("EXT_frag_depth"),h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),d=t.getParameter(t.MAX_VERTEX_ATTRIBS),f=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),m=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=l>0,y=!!e.get("OES_texture_float"),x=v&&y;return{getMaxAnisotropy:n,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:l,maxTextureSize:u,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:x}}function oe(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=t.getExtension("WEBGL_compressed_texture_etc1");break;default:n=t.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=n,n}}}function se(){function t(){h.value!==n&&(h.value=n,h.needsUpdate=r>0),i.numPlanes=r,i.numIntersection=0}function e(t,e,n,r){var a=null!==t?t.length:0,o=null;if(0!==a){if(o=h.value,r!==!0||null===o){var l=n+4*a,u=e.matrixWorldInverse;c.getNormalMatrix(u),(null===o||o.length<l)&&(o=new Float32Array(l));for(var p=0,d=n;p!==a;++p,d+=4)s.copy(t[p]).applyMatrix4(u,c),s.normal.toArray(o,d),o[d+3]=s.constant}h.value=o,h.needsUpdate=!0}return i.numPlanes=a,o}var i=this,n=null,r=0,a=!1,o=!1,s=new it,c=new et,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,o){var s=0!==t.length||i||0!==r||a;return a=i,n=e(t,o,0),r=t.length,s},this.beginShadows=function(){o=!0,e(null)},this.endShadows=function(){o=!1,t()},this.setState=function(i,s,c,l,u,p){if(!a||null===i||0===i.length||o&&!c)o?e(null):t();else{var d=o?0:r,f=4*d,m=u.clippingState||null;h.value=m,m=e(i,l,f,p);for(var g=0;g!==f;++g)m[g]=n[g];u.clippingState=m,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=d}}}function ce(t){function e(){return null===dt?St:1}function i(){ce.init(),ce.scissor(yt.copy(Rt).multiplyScalar(St)),ce.viewport(_t.copy(Ut).multiplyScalar(St)),ce.buffers.color.setClear(wt.r,wt.g,wt.b,Mt,J)}function n(){ut=null,vt=null,gt="",mt=-1,ce.reset()}function a(t){t.preventDefault(),n(),i(),he.clear()}function o(t){var e=t.target;e.removeEventListener("dispose",o),s(e)}function s(t){l(t),he.delete(t)}function l(t){var e=he.get(t).program;t.program=void 0,void 0!==e&&pe.releaseProgram(e)}function u(t,e,i,n){var r;if(i&&i.isInstancedBufferGeometry&&(r=Kt.get("ANGLE_instanced_arrays"),null===r))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===n&&(n=0),ce.initAttributes();var a=i.attributes,o=e.getAttributes(),s=t.defaultAttributeValues;for(var c in o){var h=o[c];if(h>=0){var l=a[c];if(void 0!==l){var u=l.normalized,p=l.itemSize,d=ue.getAttributeProperties(l),f=d.__webglBuffer,m=d.type,g=d.bytesPerElement;if(l.isInterleavedBufferAttribute){var v=l.data,y=v.stride,x=l.offset;v&&v.isInstancedInterleavedBuffer?(ce.enableAttributeAndDivisor(h,v.meshPerAttribute,r),void 0===i.maxInstancedCount&&(i.maxInstancedCount=v.meshPerAttribute*v.count)):ce.enableAttribute(h),Jt.bindBuffer(Jt.ARRAY_BUFFER,f),Jt.vertexAttribPointer(h,p,m,u,y*g,(n*y+x)*g)}else l.isInstancedBufferAttribute?(ce.enableAttributeAndDivisor(h,l.meshPerAttribute,r),void 0===i.maxInstancedCount&&(i.maxInstancedCount=l.meshPerAttribute*l.count)):ce.enableAttribute(h),Jt.bindBuffer(Jt.ARRAY_BUFFER,f),Jt.vertexAttribPointer(h,p,m,u,0,n*p*g)}else if(void 0!==s){var _=s[c];if(void 0!==_)switch(_.length){case 2:Jt.vertexAttrib2fv(h,_);break;case 3:Jt.vertexAttrib3fv(h,_);break;case 4:Jt.vertexAttrib4fv(h,_);break;default:Jt.vertexAttrib1fv(h,_)}}}}ce.disableUnusedAttributes()}function p(t,e){return Math.abs(e[0])-Math.abs(t[0])}function d(t,e){return t.object.renderOrder!==e.object.renderOrder?t.object.renderOrder-e.object.renderOrder:t.material.program&&e.material.program&&t.material.program!==e.material.program?t.material.program.id-e.material.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function f(t,e){return t.object.renderOrder!==e.object.renderOrder?t.object.renderOrder-e.object.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function m(t,e,i,n,r){var a,o;i.transparent?(a=at,o=++ot):(a=et,o=++it);var s=a[o];void 0!==s?(s.id=t.id,s.object=t,s.geometry=e,s.material=i,s.z=Wt.z,s.group=r):(s={id:t.id,object:t,geometry:e,material:i,z:Wt.z,group:r},a.push(s))}function g(t){var e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),kt.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),y(kt)}function v(t){return kt.center.set(0,0,0),kt.radius=.7071067811865476,kt.applyMatrix4(t.matrixWorld),y(kt)}function y(t){if(!zt.intersectsSphere(t))return!1;var e=Gt.numPlanes;if(0===e)return!0;var i=lt.clippingPlanes,n=t.center,r=-t.radius,a=0;do if(i[a].distanceToPoint(n)<r)return!1;while(++a!==e);return!0}function x(t,e){if(t.visible!==!1){var i=0!==(t.layers.mask&e.layers.mask);if(i)if(t.isLight)$.push(t);else if(t.isSprite)t.frustumCulled!==!1&&v(t)!==!0||ct.push(t);else if(t.isLensFlare)ht.push(t);else if(t.isImmediateRenderObject)lt.sortObjects===!0&&(Wt.setFromMatrixPosition(t.matrixWorld),Wt.applyMatrix4(jt)),m(t,null,t.material,Wt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),t.frustumCulled===!1||g(t)===!0)){var n=t.material;if(n.visible===!0){lt.sortObjects===!0&&(Wt.setFromMatrixPosition(t.matrixWorld),Wt.applyMatrix4(jt));var r=ue.update(t);if(n.isMultiMaterial)for(var a=r.groups,o=n.materials,s=0,c=a.length;s<c;s++){var h=a[s],l=o[h.materialIndex];l.visible===!0&&m(t,r,l,Wt.z,h)}else m(t,r,n,Wt.z,null)}}for(var u=t.children,s=0,c=u.length;s<c;s++)x(u[s],e)}}function _(t,e,i,n){for(var r=0,a=t.length;r<a;r++){var o=t[r],s=o.object,c=o.geometry,h=void 0===n?o.material:n,l=o.group;if(s.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,s.matrixWorld),s.normalMatrix.getNormalMatrix(s.modelViewMatrix),s.onBeforeRender(lt,e,i,c,h,l),s.isImmediateRenderObject){w(h);var u=M(i,e.fog,h,s);gt="",s.render(function(t){lt.renderBufferImmediate(t,u,h)})}else lt.renderBufferDirect(i,e.fog,c,h,s,l);s.onAfterRender(lt,e,i,c,h,l)}}function b(t,e,i){var n=he.get(t),r=pe.getParameters(t,Yt,e,Gt.numPlanes,Gt.numIntersection,i),a=pe.getProgramCode(t,r),s=n.program,c=!0;if(void 0===s)t.addEventListener("dispose",o);else if(s.code!==a)l(t);else{if(void 0!==r.shaderID)return;c=!1}if(c){if(r.shaderID){var h=wh[r.shaderID];n.__webglShader={name:t.type,uniforms:ys.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}}else n.__webglShader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.__webglShader=n.__webglShader,s=pe.acquireProgram(t,r,a),n.program=s,t.program=s}var u=s.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var p=0;p<lt.maxMorphTargets;p++)u["morphTarget"+p]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(var p=0;p<lt.maxMorphNormals;p++)u["morphNormal"+p]>=0&&t.numSupportedMorphNormals++}var d=n.__webglShader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&t.clipping!==!0||(n.numClippingPlanes=Gt.numPlanes,n.numIntersection=Gt.numIntersection,d.clippingPlanes=Gt.uniform),n.fog=e,n.lightsHash=Yt.hash,t.lights&&(d.ambientLightColor.value=Yt.ambient,d.directionalLights.value=Yt.directional,d.spotLights.value=Yt.spot,d.rectAreaLights.value=Yt.rectArea,d.pointLights.value=Yt.point,d.hemisphereLights.value=Yt.hemi,d.directionalShadowMap.value=Yt.directionalShadowMap,d.directionalShadowMatrix.value=Yt.directionalShadowMatrix,d.spotShadowMap.value=Yt.spotShadowMap,d.spotShadowMatrix.value=Yt.spotShadowMatrix,d.pointShadowMap.value=Yt.pointShadowMap,d.pointShadowMatrix.value=Yt.pointShadowMatrix);var f=n.program.getUniforms(),m=j.seqWithValue(f.seq,d);n.uniformsList=m}function w(t){t.side===oa?ce.disable(Jt.CULL_FACE):ce.enable(Jt.CULL_FACE),ce.setFlipSided(t.side===aa),t.transparent===!0?ce.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):ce.setBlending(pa),ce.setDepthFunc(t.depthFunc),ce.setDepthTest(t.depthTest),ce.setDepthWrite(t.depthWrite),ce.setColorWrite(t.colorWrite),ce.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function M(t,e,i,n){bt=0;var r=he.get(i);if(Ht&&(Vt||t!==vt)){var a=t===vt&&i.id===mt;Gt.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,a)}i.needsUpdate===!1&&(void 0===r.program?i.needsUpdate=!0:i.fog&&r.fog!==e?i.needsUpdate=!0:i.lights&&r.lightsHash!==Yt.hash?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===Gt.numPlanes&&r.numIntersection===Gt.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(b(i,e,n),i.needsUpdate=!1);var o=!1,s=!1,c=!1,h=r.program,l=h.getUniforms(),u=r.__webglShader.uniforms;if(h.id!==ut&&(Jt.useProgram(h.program),ut=h.id,o=!0,s=!0,c=!0),i.id!==mt&&(mt=i.id,s=!0),o||t!==vt){if(l.set(Jt,t,"projectionMatrix"),te.logarithmicDepthBuffer&&l.setValue(Jt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),t!==vt&&(vt=t,s=!0,c=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var p=l.map.cameraPosition;void 0!==p&&p.setValue(Jt,Wt.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&l.setValue(Jt,"viewMatrix",t.matrixWorldInverse),l.set(Jt,lt,"toneMappingExposure"),l.set(Jt,lt,"toneMappingWhitePoint")}if(i.skinning){l.setOptional(Jt,n,"bindMatrix"),l.setOptional(Jt,n,"bindMatrixInverse");var d=n.skeleton;d&&(te.floatVertexTextures&&d.useVertexTexture?(l.set(Jt,d,"boneTexture"),l.set(Jt,d,"boneTextureWidth"),l.set(Jt,d,"boneTextureHeight")):l.setOptional(Jt,d,"boneMatrices"))}return s&&(i.lights&&D(u,c),e&&i.fog&&L(u,e),(i.isMeshBasicMaterial||i.isMeshLambertMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.isMeshNormalMaterial||i.isMeshDepthMaterial)&&E(u,i),i.isLineBasicMaterial?T(u,i):i.isLineDashedMaterial?(T(u,i),S(u,i)):i.isPointsMaterial?A(u,i):i.isMeshLambertMaterial?R(u,i):i.isMeshToonMaterial?C(u,i):i.isMeshPhongMaterial?P(u,i):i.isMeshPhysicalMaterial?U(u,i):i.isMeshStandardMaterial?I(u,i):i.isMeshDepthMaterial?i.displacementMap&&(u.displacementMap.value=i.displacementMap,u.displacementScale.value=i.displacementScale,u.displacementBias.value=i.displacementBias):i.isMeshNormalMaterial&&N(u,i),void 0!==u.ltcMat&&(u.ltcMat.value=THREE.UniformsLib.LTC_MAT_TEXTURE),void 0!==u.ltcMag&&(u.ltcMag.value=THREE.UniformsLib.LTC_MAG_TEXTURE),j.upload(Jt,r.uniformsList,u,lt)),l.set(Jt,n,"modelViewMatrix"),l.set(Jt,n,"normalMatrix"),l.setValue(Jt,"modelMatrix",n.matrixWorld),h}function E(t,e){t.opacity.value=e.opacity,t.diffuse.value=e.color,e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),t.map.value=e.map,t.specularMap.value=e.specularMap,t.alphaMap.value=e.alphaMap,e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);var i;if(e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i){i.isWebGLRenderTarget&&(i=i.texture);var n=i.offset,r=i.repeat;t.offsetRepeat.value.set(n.x,n.y,r.x,r.y)}t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio}function T(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function S(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function A(t,e){if(t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*St,t.scale.value=.5*Tt,t.map.value=e.map,null!==e.map){var i=e.map.offset,n=e.map.repeat;t.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}}function L(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}function R(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}function P(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function C(t,e){P(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}function I(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}function U(t,e){t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness,I(t,e)}function N(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function D(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}function O(t){for(var e=0,i=0,n=t.length;i<n;i++){var r=t[i];r.castShadow&&(Yt.shadows[e++]=r)}Yt.shadows.length=e}function B(t,e){var i,n,r,a,o,s,c,l=0,u=0,p=0,d=e.matrixWorldInverse,f=0,m=0,g=0,v=0,y=0;for(i=0,n=t.length;i<n;i++)if(r=t[i],a=r.color,o=r.intensity,s=r.distance,c=r.shadow&&r.shadow.map?r.shadow.map.texture:null,r.isAmbientLight)l+=a.r*o,u+=a.g*o,p+=a.b*o;else if(r.isDirectionalLight){var x=de.get(r);x.color.copy(r.color).multiplyScalar(r.intensity),x.direction.setFromMatrixPosition(r.matrixWorld),Wt.setFromMatrixPosition(r.target.matrixWorld),x.direction.sub(Wt),x.direction.transformDirection(d),x.shadow=r.castShadow,r.castShadow&&(x.shadowBias=r.shadow.bias,x.shadowRadius=r.shadow.radius,x.shadowMapSize=r.shadow.mapSize),Yt.directionalShadowMap[f]=c,Yt.directionalShadowMatrix[f]=r.shadow.matrix,Yt.directional[f++]=x}else if(r.isSpotLight){var x=de.get(r);x.position.setFromMatrixPosition(r.matrixWorld),x.position.applyMatrix4(d),x.color.copy(a).multiplyScalar(o),x.distance=s,x.direction.setFromMatrixPosition(r.matrixWorld),Wt.setFromMatrixPosition(r.target.matrixWorld),x.direction.sub(Wt),x.direction.transformDirection(d),x.coneCos=Math.cos(r.angle),x.penumbraCos=Math.cos(r.angle*(1-r.penumbra)),x.decay=0===r.distance?0:r.decay,x.shadow=r.castShadow,r.castShadow&&(x.shadowBias=r.shadow.bias,x.shadowRadius=r.shadow.radius,x.shadowMapSize=r.shadow.mapSize),Yt.spotShadowMap[g]=c,Yt.spotShadowMatrix[g]=r.shadow.matrix,Yt.spot[g++]=x}else if(r.isRectAreaLight){var x=de.get(r);x.color.copy(a).multiplyScalar(o/(r.width*r.height)),x.position.setFromMatrixPosition(r.matrixWorld),x.position.applyMatrix4(d),qt.identity(),Xt.copy(r.matrixWorld),Xt.premultiply(d),qt.extractRotation(Xt),x.halfWidth.set(.5*r.width,0,0),x.halfHeight.set(0,.5*r.height,0),x.halfWidth.applyMatrix4(qt),x.halfHeight.applyMatrix4(qt),Yt.rectArea[v++]=x}else if(r.isPointLight){var x=de.get(r);x.position.setFromMatrixPosition(r.matrixWorld),x.position.applyMatrix4(d),x.color.copy(r.color).multiplyScalar(r.intensity),x.distance=r.distance,x.decay=0===r.distance?0:r.decay,x.shadow=r.castShadow,r.castShadow&&(x.shadowBias=r.shadow.bias,x.shadowRadius=r.shadow.radius,x.shadowMapSize=r.shadow.mapSize),Yt.pointShadowMap[m]=c,void 0===Yt.pointShadowMatrix[m]&&(Yt.pointShadowMatrix[m]=new h),Wt.setFromMatrixPosition(r.matrixWorld).negate(),Yt.pointShadowMatrix[m].identity().setPosition(Wt),Yt.point[m++]=x}else if(r.isHemisphereLight){var x=de.get(r);x.direction.setFromMatrixPosition(r.matrixWorld),x.direction.transformDirection(d),x.direction.normalize(),x.skyColor.copy(r.color).multiplyScalar(o),x.groundColor.copy(r.groundColor).multiplyScalar(o),Yt.hemi[y++]=x}Yt.ambient[0]=l,Yt.ambient[1]=u,Yt.ambient[2]=p,Yt.directional.length=f,Yt.spot.length=g,Yt.rectArea.length=v,Yt.point.length=m,Yt.hemi.length=y,Yt.hash=f+","+m+","+g+","+v+","+y+","+Yt.shadows.length}function F(){var t=bt;return t>=te.maxTextures&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+te.maxTextures),bt+=1,t}function z(t){var e;if(t===ro)return Jt.REPEAT;if(t===ao)return Jt.CLAMP_TO_EDGE;if(t===oo)return Jt.MIRRORED_REPEAT;if(t===so)return Jt.NEAREST;if(t===co)return Jt.NEAREST_MIPMAP_NEAREST;if(t===ho)return Jt.NEAREST_MIPMAP_LINEAR;if(t===lo)return Jt.LINEAR;if(t===uo)return Jt.LINEAR_MIPMAP_NEAREST;if(t===po)return Jt.LINEAR_MIPMAP_LINEAR;if(t===fo)return Jt.UNSIGNED_BYTE;if(t===wo)return Jt.UNSIGNED_SHORT_4_4_4_4;if(t===Mo)return Jt.UNSIGNED_SHORT_5_5_5_1;if(t===Eo)return Jt.UNSIGNED_SHORT_5_6_5;if(t===mo)return Jt.BYTE;if(t===go)return Jt.SHORT;if(t===vo)return Jt.UNSIGNED_SHORT;if(t===yo)return Jt.INT;if(t===xo)return Jt.UNSIGNED_INT;if(t===_o)return Jt.FLOAT;if(t===bo&&(e=Kt.get("OES_texture_half_float"),null!==e))return e.HALF_FLOAT_OES;if(t===So)return Jt.ALPHA;if(t===Ao)return Jt.RGB;if(t===Lo)return Jt.RGBA;if(t===Ro)return Jt.LUMINANCE;if(t===Po)return Jt.LUMINANCE_ALPHA;if(t===Io)return Jt.DEPTH_COMPONENT;if(t===Uo)return Jt.DEPTH_STENCIL;if(t===ya)return Jt.FUNC_ADD;if(t===xa)return Jt.FUNC_SUBTRACT;if(t===_a)return Jt.FUNC_REVERSE_SUBTRACT;if(t===Ma)return Jt.ZERO;if(t===Ea)return Jt.ONE;if(t===Ta)return Jt.SRC_COLOR;if(t===Sa)return Jt.ONE_MINUS_SRC_COLOR;if(t===Aa)return Jt.SRC_ALPHA;if(t===La)return Jt.ONE_MINUS_SRC_ALPHA;if(t===Ra)return Jt.DST_ALPHA;if(t===Pa)return Jt.ONE_MINUS_DST_ALPHA;if(t===Ca)return Jt.DST_COLOR;if(t===Ia)return Jt.ONE_MINUS_DST_COLOR;if(t===Ua)return Jt.SRC_ALPHA_SATURATE;if((t===No||t===Do||t===Oo||t===Bo)&&(e=Kt.get("WEBGL_compressed_texture_s3tc"),null!==e)){if(t===No)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===Do)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===Oo)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===Bo)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((t===Fo||t===zo||t===Go||t===Ho)&&(e=Kt.get("WEBGL_compressed_texture_pvrtc"),null!==e)){if(t===Fo)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===zo)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===Go)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===Ho)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t===Vo&&(e=Kt.get("WEBGL_compressed_texture_etc1"),null!==e))return e.COMPRESSED_RGB_ETC1_WEBGL;if((t===ba||t===wa)&&(e=Kt.get("EXT_blend_minmax"),null!==e)){if(t===ba)return e.MIN_EXT;if(t===wa)return e.MAX_EXT}return t===To&&(e=Kt.get("WEBGL_depth_texture"),null!==e)?e.UNSIGNED_INT_24_8_WEBGL:0}console.log("THREE.WebGLRenderer",qr),t=t||{};var G=void 0!==t.canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),H=void 0!==t.context?t.context:null,V=void 0!==t.alpha&&t.alpha,k=void 0===t.depth||t.depth,X=void 0===t.stencil||t.stencil,q=void 0!==t.antialias&&t.antialias,J=void 0===t.premultipliedAlpha||t.premultipliedAlpha,K=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,$=[],et=[],it=-1,at=[],ot=-1,st=new Float32Array(8),ct=[],ht=[];this.domElement=G,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Xa,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var lt=this,ut=null,dt=null,ft=null,mt=-1,gt="",vt=null,yt=new r,xt=null,_t=new r,bt=0,wt=new W(0),Mt=0,Et=G.width,Tt=G.height,St=1,Rt=new r(0,0,Et,Tt),Ct=!1,Ut=new r(0,0,Et,Tt),zt=new nt,Gt=new se,Ht=!1,Vt=!1,kt=new tt,jt=new h,Wt=new c,Xt=new h,qt=new h,Yt={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},Zt={calls:0,vertices:0,faces:0,points:0};this.info={render:Zt,memory:{geometries:0,textures:0},programs:null};var Jt;try{var Qt={alpha:V,depth:k,stencil:X,antialias:q,premultipliedAlpha:J,preserveDrawingBuffer:K};if(Jt=H||G.getContext("webgl",Qt)||G.getContext("experimental-webgl",Qt),null===Jt)throw null!==G.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";void 0===Jt.getShaderPrecisionFormat&&(Jt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),G.addEventListener("webglcontextlost",a,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var Kt=new oe(Jt);Kt.get("WEBGL_depth_texture"),Kt.get("OES_texture_float"),Kt.get("OES_texture_float_linear"),Kt.get("OES_texture_half_float"),Kt.get("OES_texture_half_float_linear"),Kt.get("OES_standard_derivatives"),Kt.get("ANGLE_instanced_arrays"),Kt.get("OES_element_index_uint")&&(At.MaxIndex=4294967296);var te=new ae(Jt,Kt,t),ce=new re(Jt,Kt,z),he=new ne,le=new ie(Jt,Kt,ce,he,te,z,this.info),ue=new ee(Jt,he,this.info),pe=new $t(this,te),de=new Ft;this.info.programs=pe.programs;var fe,me,ge,ve,ye=new Bt(Jt,Kt,Zt),xe=new Ot(Jt,Kt,Zt);i(),this.context=Jt,this.capabilities=te,this.extensions=Kt,this.properties=he,this.state=ce;var _e=new rt(this,Yt,ue,te);this.shadowMap=_e;var be=new Z(this,ct),we=new Y(this,ht);this.getContext=function(){return Jt},this.getContextAttributes=function(){return Jt.getContextAttributes()},this.forceContextLoss=function(){Kt.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){return te.getMaxAnisotropy()},this.getPrecision=function(){return te.precision},this.getPixelRatio=function(){return St},this.setPixelRatio=function(t){void 0!==t&&(St=t,this.setSize(Ut.z,Ut.w,!1))},this.getSize=function(){return{width:Et,height:Tt}},this.setSize=function(t,e,i){Et=t,Tt=e,G.width=t*St,G.height=e*St,i!==!1&&(G.style.width=t+"px",G.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,n){ce.viewport(Ut.set(t,e,i,n))},this.setScissor=function(t,e,i,n){ce.scissor(Rt.set(t,e,i,n))},this.setScissorTest=function(t){ce.setScissorTest(Ct=t)},this.getClearColor=function(){return wt},this.setClearColor=function(t,e){wt.set(t),Mt=void 0!==e?e:1,ce.buffers.color.setClear(wt.r,wt.g,wt.b,Mt,J)},this.getClearAlpha=function(){return Mt},this.setClearAlpha=function(t){Mt=t,ce.buffers.color.setClear(wt.r,wt.g,wt.b,Mt,J)},this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=Jt.COLOR_BUFFER_BIT),(void 0===e||e)&&(n|=Jt.DEPTH_BUFFER_BIT),(void 0===i||i)&&(n|=Jt.STENCIL_BUFFER_BIT),Jt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,i,n){this.setRenderTarget(t),this.clear(e,i,n)},this.resetGLState=n,this.dispose=function(){at=[],ot=-1,et=[],it=-1,G.removeEventListener("webglcontextlost",a,!1)},this.renderBufferImmediate=function(t,e,i){ce.initAttributes();var n=he.get(t);t.hasPositions&&!n.position&&(n.position=Jt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=Jt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=Jt.createBuffer()),t.hasColors&&!n.color&&(n.color=Jt.createBuffer());var r=e.getAttributes();if(t.hasPositions&&(Jt.bindBuffer(Jt.ARRAY_BUFFER,n.position),Jt.bufferData(Jt.ARRAY_BUFFER,t.positionArray,Jt.DYNAMIC_DRAW),ce.enableAttribute(r.position),Jt.vertexAttribPointer(r.position,3,Jt.FLOAT,!1,0,0)),t.hasNormals){if(Jt.bindBuffer(Jt.ARRAY_BUFFER,n.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&i.shading===sa)for(var a=0,o=3*t.count;a<o;a+=9){var s=t.normalArray,c=(s[a+0]+s[a+3]+s[a+6])/3,h=(s[a+1]+s[a+4]+s[a+7])/3,l=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=c,s[a+1]=h,s[a+2]=l,s[a+3]=c,s[a+4]=h,s[a+5]=l,s[a+6]=c,s[a+7]=h,s[a+8]=l}Jt.bufferData(Jt.ARRAY_BUFFER,t.normalArray,Jt.DYNAMIC_DRAW),ce.enableAttribute(r.normal),Jt.vertexAttribPointer(r.normal,3,Jt.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(Jt.bindBuffer(Jt.ARRAY_BUFFER,n.uv),Jt.bufferData(Jt.ARRAY_BUFFER,t.uvArray,Jt.DYNAMIC_DRAW),ce.enableAttribute(r.uv),Jt.vertexAttribPointer(r.uv,2,Jt.FLOAT,!1,0,0)),t.hasColors&&i.vertexColors!==ha&&(Jt.bindBuffer(Jt.ARRAY_BUFFER,n.color),Jt.bufferData(Jt.ARRAY_BUFFER,t.colorArray,Jt.DYNAMIC_DRAW),ce.enableAttribute(r.color),Jt.vertexAttribPointer(r.color,3,Jt.FLOAT,!1,0,0)),ce.disableUnusedAttributes(),Jt.drawArrays(Jt.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,i,n,r,a,o){w(r);var s=M(t,i,r,a),c=!1,h=n.id+"_"+s.id+"_"+r.wireframe;h!==gt&&(gt=h,c=!0);var l=a.morphTargetInfluences;if(void 0!==l){for(var d=[],f=0,m=l.length;f<m;f++){var g=l[f];d.push([g,f])}d.sort(p),d.length>8&&(d.length=8);for(var v=n.morphAttributes,f=0,m=d.length;f<m;f++){var g=d[f];if(st[f]=g[0],0!==g[0]){var y=g[1];r.morphTargets===!0&&v.position&&n.addAttribute("morphTarget"+f,v.position[y]),r.morphNormals===!0&&v.normal&&n.addAttribute("morphNormal"+f,v.normal[y])}else r.morphTargets===!0&&n.removeAttribute("morphTarget"+f),r.morphNormals===!0&&n.removeAttribute("morphNormal"+f)}for(var f=d.length,x=st.length;f<x;f++)st[f]=0;s.getUniforms().setValue(Jt,"morphTargetInfluences",st),c=!0}var y=n.index,_=n.attributes.position,b=1;r.wireframe===!0&&(y=ue.getWireframeAttribute(n),b=2);var E;null!==y?(E=xe,E.setIndex(y)):E=ye,c&&(u(r,s,n),null!==y&&Jt.bindBuffer(Jt.ELEMENT_ARRAY_BUFFER,ue.getAttributeBuffer(y)));var T=0;null!==y?T=y.count:void 0!==_&&(T=_.count);var S=n.drawRange.start*b,A=n.drawRange.count*b,L=null!==o?o.start*b:0,R=null!==o?o.count*b:1/0,P=Math.max(S,L),C=Math.min(T,S+A,L+R)-1,I=Math.max(0,C-P+1);if(0!==I){if(a.isMesh)if(r.wireframe===!0)ce.setLineWidth(r.wireframeLinewidth*e()),E.setMode(Jt.LINES);else switch(a.drawMode){case Ko:E.setMode(Jt.TRIANGLES);break;case $o:E.setMode(Jt.TRIANGLE_STRIP);break;case ts:E.setMode(Jt.TRIANGLE_FAN)}else if(a.isLine){var U=r.linewidth;void 0===U&&(U=1),ce.setLineWidth(U*e()),a.isLineSegments?E.setMode(Jt.LINES):E.setMode(Jt.LINE_STRIP)}else a.isPoints&&E.setMode(Jt.POINTS);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&E.renderInstances(n,P,I):E.render(P,I)}},this.render=function(t,e,i,n){if(void 0!==e&&e.isCamera!==!0)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");gt="",mt=-1,vt=null,t.autoUpdate===!0&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),jt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),zt.setFromMatrix(jt),$.length=0,it=-1,ot=-1,ct.length=0,ht.length=0,Vt=this.localClippingEnabled,Ht=Gt.init(this.clippingPlanes,Vt,e),x(t,e),et.length=it+1,at.length=ot+1,lt.sortObjects===!0&&(et.sort(d),at.sort(f)),Ht&&Gt.beginShadows(),O($),_e.render(t,e),B($,e),Ht&&Gt.endShadows(),Zt.calls=0,Zt.vertices=0,Zt.faces=0,Zt.points=0,void 0===i&&(i=null),this.setRenderTarget(i);var r=t.background;if(null===r?ce.buffers.color.setClear(wt.r,wt.g,wt.b,Mt,J):r&&r.isColor&&(ce.buffers.color.setClear(r.r,r.g,r.b,1,J),n=!0),(this.autoClear||n)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),r&&r.isCubeTexture?(void 0===ge&&(ge=new Nt,ve=new Lt(new Pt(5,5,5),new Q({uniforms:wh.cube.uniforms,vertexShader:wh.cube.vertexShader,fragmentShader:wh.cube.fragmentShader,\nside:aa,depthTest:!1,depthWrite:!1,fog:!1}))),ge.projectionMatrix.copy(e.projectionMatrix),ge.matrixWorld.extractRotation(e.matrixWorld),ge.matrixWorldInverse.getInverse(ge.matrixWorld),ve.material.uniforms.tCube.value=r,ve.modelViewMatrix.multiplyMatrices(ge.matrixWorldInverse,ve.matrixWorld),ue.update(ve),lt.renderBufferDirect(ge,null,ve.geometry,ve.material,ve,null)):r&&r.isTexture&&(void 0===fe&&(fe=new Dt(-1,1,1,-1,0,1),me=new Lt(new It(2,2),new pt({depthTest:!1,depthWrite:!1,fog:!1}))),me.material.map=r,ue.update(me),lt.renderBufferDirect(fe,null,me.geometry,me.material,me,null)),t.overrideMaterial){var a=t.overrideMaterial;_(et,t,e,a),_(at,t,e,a)}else ce.setBlending(pa),_(et,t,e),_(at,t,e);be.render(t,e),we.render(t,e,_t),i&&le.updateRenderTargetMipmap(i),ce.setDepthTest(!0),ce.setDepthWrite(!0),ce.setColorWrite(!0)},this.setFaceCulling=function(t,e){ce.setCullFace(t),ce.setFlipSided(e===$r)},this.allocTextureUnit=F,this.setTexture2D=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTarget&&(t||(console.warn("THREE.WebGLRenderer.setTexture2D: don\'t use render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),le.setTexture2D(e,i)}}(),this.setTexture=function(){var t=!1;return function(e,i){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),le.setTexture2D(e,i)}}(),this.setTextureCube=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTargetCube&&(t||(console.warn("THREE.WebGLRenderer.setTextureCube: don\'t use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?le.setTextureCube(e,i):le.setTextureCubeDynamic(e,i)}}(),this.getCurrentRenderTarget=function(){return dt},this.setRenderTarget=function(t){dt=t,t&&void 0===he.get(t).__webglFramebuffer&&le.setupRenderTarget(t);var e,i=t&&t.isWebGLRenderTargetCube;if(t){var n=he.get(t);e=i?n.__webglFramebuffer[t.activeCubeFace]:n.__webglFramebuffer,yt.copy(t.scissor),xt=t.scissorTest,_t.copy(t.viewport)}else e=null,yt.copy(Rt).multiplyScalar(St),xt=Ct,_t.copy(Ut).multiplyScalar(St);if(ft!==e&&(Jt.bindFramebuffer(Jt.FRAMEBUFFER,e),ft=e),ce.scissor(yt),ce.setScissorTest(xt),ce.viewport(_t),i){var r=he.get(t.texture);Jt.framebufferTexture2D(Jt.FRAMEBUFFER,Jt.COLOR_ATTACHMENT0,Jt.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,r.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,i,n,r,a){if((t&&t.isWebGLRenderTarget)===!1)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var o=he.get(t).__webglFramebuffer;if(o){var s=!1;o!==ft&&(Jt.bindFramebuffer(Jt.FRAMEBUFFER,o),s=!0);try{var c=t.texture,h=c.format,l=c.type;if(h!==Lo&&z(h)!==Jt.getParameter(Jt.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(l===fo||z(l)===Jt.getParameter(Jt.IMPLEMENTATION_COLOR_READ_TYPE)||l===_o&&(Kt.get("OES_texture_float")||Kt.get("WEBGL_color_buffer_float"))||l===bo&&Kt.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");Jt.checkFramebufferStatus(Jt.FRAMEBUFFER)===Jt.FRAMEBUFFER_COMPLETE?e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&Jt.readPixels(e,i,n,r,z(h),z(l),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&Jt.bindFramebuffer(Jt.FRAMEBUFFER,ft)}}}}function he(t,e){this.name="",this.color=new W(t),this.density=void 0!==e?e:25e-5}function le(t,e,i){this.name="",this.color=new W(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}function ue(){ct.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function pe(t,e,i,n,r){ct.call(this),this.lensFlares=[],this.positionScreen=new c,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,i,n,r)}function de(t){J.call(this),this.type="SpriteMaterial",this.color=new W(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}function fe(t){ct.call(this),this.type="Sprite",this.material=void 0!==t?t:new de}function me(){ct.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function ge(t,e,i){if(this.useVertexTexture=void 0===i||i,this.identityMatrix=new h,t=t||[],this.bones=t.slice(0),this.useVertexTexture){var n=Math.sqrt(4*this.bones.length);n=us.nextPowerOfTwo(Math.ceil(n)),n=Math.max(n,4),this.boneTextureWidth=n,this.boneTextureHeight=n,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new X(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,Lo,_o)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var r=0,a=this.bones.length;r<a;r++)this.boneInverses.push(new h)}}function ve(){ct.call(this),this.type="Bone"}function ye(t,e,i){Lt.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new h,this.bindMatrixInverse=new h;var n=[];if(this.geometry&&void 0!==this.geometry.bones){for(var r,a,o=0,s=this.geometry.bones.length;o<s;++o)a=this.geometry.bones[o],r=new ve,n.push(r),r.name=a.name,r.position.fromArray(a.pos),r.quaternion.fromArray(a.rotq),void 0!==a.scl&&r.scale.fromArray(a.scl);for(var o=0,s=this.geometry.bones.length;o<s;++o)a=this.geometry.bones[o],a.parent!==-1&&null!==a.parent&&void 0!==n[a.parent]?n[a.parent].add(n[o]):this.add(n[o])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new ge(n,void 0,i),this.matrixWorld)}function xe(t){J.call(this),this.type="LineBasicMaterial",this.color=new W(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}function _e(t,e,i){return 1===i?(console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new be(t,e)):(ct.call(this),this.type="Line",this.geometry=void 0!==t?t:new At,void(this.material=void 0!==e?e:new xe({color:16777215*Math.random()})))}function be(t,e){_e.call(this,t,e),this.type="LineSegments"}function we(t){J.call(this),this.type="PointsMaterial",this.color=new W(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}function Me(t,e){ct.call(this),this.type="Points",this.geometry=void 0!==t?t:new At,this.material=void 0!==e?e:new we({color:16777215*Math.random()})}function Ee(){ct.call(this),this.type="Group"}function Te(t,e,i,r,a,o,s,c,h){function l(){requestAnimationFrame(l),t.readyState>=t.HAVE_CURRENT_DATA&&(u.needsUpdate=!0)}n.call(this,t,e,i,r,a,o,s,c,h),this.generateMipmaps=!1;var u=this;l()}function Se(t,e,i,r,a,o,s,c,h,l,u,p){n.call(this,null,o,s,c,h,l,r,a,u,p),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function Ae(t,e,i,r,a,o,s,c,h){n.call(this,t,e,i,r,a,o,s,c,h),this.needsUpdate=!0}function Le(t,e,i,r,a,o,s,c,h,l){if(l=void 0!==l?l:Io,l!==Io&&l!==Uo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&l===Io&&(i=vo),void 0===i&&l===Uo&&(i=To),n.call(this,null,r,a,o,s,c,l,i,h),this.image={width:t,height:e},this.magFilter=void 0!==s?s:so,this.minFilter=void 0!==c?c:so,this.flipY=!1,this.generateMipmaps=!1}function Re(t){function e(t,e){return t-e}At.call(this),this.type="WireframeGeometry";var i,n,r,a,o,s,h,l,u=[],p=[0,0],d={},f=["a","b","c"];if(t&&t.isGeometry){var m=t.faces;for(i=0,r=m.length;i<r;i++){var g=m[i];for(n=0;n<3;n++)p[0]=g[f[n]],p[1]=g[f[(n+1)%3]],p.sort(e),h=p.toString(),void 0===d[h]&&(d[h]={index1:p[0],index2:p[1]})}for(h in d)s=d[h],l=t.vertices[s.index1],u.push(l.x,l.y,l.z),l=t.vertices[s.index2],u.push(l.x,l.y,l.z)}else if(t&&t.isBufferGeometry){var v,y,x,_,b,w,M,E;if(l=new c,null!==t.index){for(v=t.attributes.position,y=t.index,x=t.groups,0===x.length&&t.addGroup(0,y.count),a=0,o=x.length;a<o;++a)for(_=x[a],b=_.start,w=_.count,i=b,r=b+w;i<r;i+=3)for(n=0;n<3;n++)p[0]=y.getX(i+n),p[1]=y.getX(i+(n+1)%3),p.sort(e),h=p.toString(),void 0===d[h]&&(d[h]={index1:p[0],index2:p[1]});for(h in d)s=d[h],l.fromBufferAttribute(v,s.index1),u.push(l.x,l.y,l.z),l.fromBufferAttribute(v,s.index2),u.push(l.x,l.y,l.z)}else for(v=t.attributes.position,i=0,r=v.count/3;i<r;i++)for(n=0;n<3;n++)M=3*i+n,l.fromBufferAttribute(v,M),u.push(l.x,l.y,l.z),E=3*i+(n+1)%3,l.fromBufferAttribute(v,E),u.push(l.x,l.y,l.z)}this.addAttribute("position",new bt(u,3))}function Pe(t,e,i){St.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new Ce(t,e,i)),this.mergeVertices()}function Ce(t,e,i){At.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};var n,r,a=[],o=[],s=[],c=e+1;for(n=0;n<=i;n++){var h=n/i;for(r=0;r<=e;r++){var l=r/e,u=t(l,h);o.push(u.x,u.y,u.z),s.push(l,h)}}for(n=0;n<i;n++)for(r=0;r<e;r++){var p=n*c+r,d=n*c+r+1,f=(n+1)*c+r+1,m=(n+1)*c+r;a.push(p,d,m),a.push(d,f,m)}this.setIndex(a),this.addAttribute("position",new bt(o,3)),this.addAttribute("uv",new bt(s,2)),this.computeVertexNormals()}function Ie(t,e,i,n){St.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},this.fromBufferGeometry(new Ue(t,e,i,n)),this.mergeVertices()}function Ue(t,e,n,r){function a(t){for(var i=new c,n=new c,r=new c,a=0;a<e.length;a+=3)p(e[a+0],i),p(e[a+1],n),p(e[a+2],r),o(i,n,r,t)}function o(t,e,i,n){var r,a,o=Math.pow(2,n),s=[];for(r=0;r<=o;r++){s[r]=[];var c=t.clone().lerp(i,r/o),h=e.clone().lerp(i,r/o),l=o-r;for(a=0;a<=l;a++)0===a&&r===o?s[r][a]=c:s[r][a]=c.clone().lerp(h,a/l)}for(r=0;r<o;r++)for(a=0;a<2*(o-r)-1;a++){var p=Math.floor(a/2);a%2===0?(u(s[r][p+1]),u(s[r+1][p]),u(s[r][p])):(u(s[r][p+1]),u(s[r+1][p+1]),u(s[r+1][p]))}}function s(t){for(var e=new c,i=0;i<v.length;i+=3)e.x=v[i+0],e.y=v[i+1],e.z=v[i+2],e.normalize().multiplyScalar(t),v[i+0]=e.x,v[i+1]=e.y,v[i+2]=e.z}function h(){for(var t=new c,e=0;e<v.length;e+=3){t.x=v[e+0],t.y=v[e+1],t.z=v[e+2];var i=m(t)/2/Math.PI+.5,n=g(t)/Math.PI+.5;y.push(i,1-n)}d(),l()}function l(){for(var t=0;t<y.length;t+=6){var e=y[t+0],i=y[t+2],n=y[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);r>.9&&a<.1&&(e<.2&&(y[t+0]+=1),i<.2&&(y[t+2]+=1),n<.2&&(y[t+4]+=1))}}function u(t){v.push(t.x,t.y,t.z)}function p(e,i){var n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function d(){for(var t=new c,e=new c,n=new c,r=new c,a=new i,o=new i,s=new i,h=0,l=0;h<v.length;h+=9,l+=6){t.set(v[h+0],v[h+1],v[h+2]),e.set(v[h+3],v[h+4],v[h+5]),n.set(v[h+6],v[h+7],v[h+8]),a.set(y[l+0],y[l+1]),o.set(y[l+2],y[l+3]),s.set(y[l+4],y[l+5]),r.copy(t).add(e).add(n).divideScalar(3);var u=m(r);f(a,l+0,t,u),f(o,l+2,e,u),f(s,l+4,n,u)}}function f(t,e,i,n){n<0&&1===t.x&&(y[e]=t.x-1),0===i.x&&0===i.z&&(y[e]=n/2/Math.PI+.5)}function m(t){return Math.atan2(t.z,-t.x)}function g(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}At.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r},n=n||1,r=r||0;var v=[],y=[];a(r),s(n),h(),this.addAttribute("position",new bt(v,3)),this.addAttribute("normal",new bt(v.slice(),3)),this.addAttribute("uv",new bt(y,2)),this.normalizeNormals()}function Ne(t,e){St.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new De(t,e)),this.mergeVertices()}function De(t,e){var i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];Ue.call(this,i,n,t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Oe(t,e){St.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Be(t,e)),this.mergeVertices()}function Be(t,e){var i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Ue.call(this,i,n,t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Fe(t,e){St.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new ze(t,e)),this.mergeVertices()}function ze(t,e){var i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Ue.call(this,n,r,t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ge(t,e){St.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new He(t,e)),this.mergeVertices()}function He(t,e){var i=(1+Math.sqrt(5))/2,n=1/i,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Ue.call(this,r,a,t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ve(t,e,i,n,r,a){St.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r},void 0!==a&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new ke(t,e,i,n,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function ke(t,e,n,r,a){function o(){for(p=0;p<e;p++)s(p);s(a===!1?e:0),l(),h()}function s(i){var a=t.getPointAt(i/e),o=u.normals[i],s=u.binormals[i];for(d=0;d<=r;d++){var c=d/r*Math.PI*2,h=Math.sin(c),l=-Math.cos(c);m.x=l*o.x+h*s.x,m.y=l*o.y+h*s.y,m.z=l*o.z+h*s.z,m.normalize(),y.push(m.x,m.y,m.z),f.x=a.x+n*m.x,f.y=a.y+n*m.y,f.z=a.z+n*m.z,v.push(f.x,f.y,f.z)}}function h(){for(d=1;d<=e;d++)for(p=1;p<=r;p++){var t=(r+1)*(d-1)+(p-1),i=(r+1)*d+(p-1),n=(r+1)*d+p,a=(r+1)*(d-1)+p;_.push(t,i,a),_.push(i,n,a)}}function l(){for(p=0;p<=e;p++)for(d=0;d<=r;d++)g.x=p/e,g.y=d/r,x.push(g.x,g.y)}At.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:a},e=e||64,n=n||1,r=r||8,a=a||!1;var u=t.computeFrenetFrames(e,a);this.tangents=u.tangents,this.normals=u.normals,this.binormals=u.binormals;var p,d,f=new c,m=new c,g=new i,v=[],y=[],x=[],_=[];o(),this.setIndex(_),this.addAttribute("position",new bt(v,3)),this.addAttribute("normal",new bt(y,3)),this.addAttribute("uv",new bt(x,2))}function je(t,e,i,n,r,a,o){St.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:a},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new We(t,e,i,n,r,a)),this.mergeVertices()}function We(t,e,n,r,a,o){function s(t,e,i,n,r){var a=Math.cos(t),o=Math.sin(t),s=i/e*t,c=Math.cos(s);r.x=n*(2+c)*.5*a,r.y=n*(2+c)*o*.5,r.z=n*Math.sin(s)*.5}At.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:r,p:a,q:o},t=t||100,e=e||40,n=Math.floor(n)||64,r=Math.floor(r)||8,a=a||2,o=o||3;var h,l,u=[],p=[],d=[],f=[],m=new c,g=new c,v=(new i,new c),y=new c,x=new c,_=new c,b=new c;for(h=0;h<=n;++h){var w=h/n*a*Math.PI*2;for(s(w,a,o,t,v),s(w+.01,a,o,t,y),_.subVectors(y,v),b.addVectors(y,v),x.crossVectors(_,b),b.crossVectors(x,_),x.normalize(),b.normalize(),l=0;l<=r;++l){var M=l/r*Math.PI*2,E=-e*Math.cos(M),T=e*Math.sin(M);m.x=v.x+(E*b.x+T*x.x),m.y=v.y+(E*b.y+T*x.y),m.z=v.z+(E*b.z+T*x.z),p.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),d.push(g.x,g.y,g.z),f.push(h/n),f.push(l/r)}}for(l=1;l<=n;l++)for(h=1;h<=r;h++){var S=(r+1)*(l-1)+(h-1),A=(r+1)*l+(h-1),L=(r+1)*l+h,R=(r+1)*(l-1)+h;u.push(S,A,R),u.push(A,L,R)}this.setIndex(u),this.addAttribute("position",new bt(p,3)),this.addAttribute("normal",new bt(d,3)),this.addAttribute("uv",new bt(f,2))}function Xe(t,e,i,n,r){St.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new qe(t,e,i,n,r))}function qe(t,e,i,n,r){At.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},t=t||100,e=e||40,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;var a,o,s=[],h=[],l=[],u=[],p=new c,d=new c,f=new c;for(a=0;a<=i;a++)for(o=0;o<=n;o++){var m=o/n*r,g=a/i*Math.PI*2;d.x=(t+e*Math.cos(g))*Math.cos(m),d.y=(t+e*Math.cos(g))*Math.sin(m),d.z=e*Math.sin(g),h.push(d.x,d.y,d.z),p.x=t*Math.cos(m),p.y=t*Math.sin(m),f.subVectors(d,p).normalize(),l.push(f.x,f.y,f.z),u.push(o/n),u.push(a/i)}for(a=1;a<=i;a++)for(o=1;o<=n;o++){var v=(n+1)*a+o-1,y=(n+1)*(a-1)+o-1,x=(n+1)*(a-1)+o,_=(n+1)*a+o;s.push(v,y,_),s.push(y,x,_)}this.setIndex(s),this.addAttribute("position",new bt(h,3)),this.addAttribute("normal",new bt(l,3)),this.addAttribute("uv",new bt(u,2))}function Ye(t,e){return"undefined"==typeof t?void(t=[]):(St.call(this),this.type="ExtrudeGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),void this.computeFaceNormals())}function Ze(t,e){e=e||{};var i=e.font;if((i&&i.isFont)===!1)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new St;var n=i.generateShapes(t,e.size,e.curveSegments);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),Ye.call(this,n,e),this.type="TextGeometry"}function Je(t,e,i,n,r,a,o){St.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new Qe(t,e,i,n,r,a,o))}function Qe(t,e,i,n,r,a,o){At.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},t=t||50,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI;var s,h,l=a+o,u=0,p=[],d=new c,f=new c,m=[],g=[],v=[],y=[];for(h=0;h<=i;h++){var x=[],_=h/i;for(s=0;s<=e;s++){var b=s/e;d.x=-t*Math.cos(n+b*r)*Math.sin(a+_*o),d.y=t*Math.cos(a+_*o),d.z=t*Math.sin(n+b*r)*Math.sin(a+_*o),g.push(d.x,d.y,d.z),f.set(d.x,d.y,d.z).normalize(),v.push(f.x,f.y,f.z),y.push(b,1-_),x.push(u++)}p.push(x)}for(h=0;h<i;h++)for(s=0;s<e;s++){var w=p[h][s+1],M=p[h][s],E=p[h+1][s],T=p[h+1][s+1];(0!==h||a>0)&&m.push(w,M,T),(h!==i-1||l<Math.PI)&&m.push(M,E,T)}this.setIndex(m),this.addAttribute("position",new bt(g,3)),this.addAttribute("normal",new bt(v,3)),this.addAttribute("uv",new bt(y,2))}function Ke(t,e,i,n,r,a){St.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new $e(t,e,i,n,r,a))}function $e(t,e,n,r,a,o){At.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:a,thetaLength:o},t=t||20,e=e||50,a=void 0!==a?a:0,o=void 0!==o?o:2*Math.PI,n=void 0!==n?Math.max(3,n):8,r=void 0!==r?Math.max(1,r):1;var s,h,l,u=[],p=[],d=[],f=[],m=t,g=(e-t)/r,v=new c,y=new i;for(h=0;h<=r;h++){for(l=0;l<=n;l++)s=a+l/n*o,v.x=m*Math.cos(s),v.y=m*Math.sin(s),p.push(v.x,v.y,v.z),d.push(0,0,1),y.x=(v.x/e+1)/2,y.y=(v.y/e+1)/2,f.push(y.x,y.y);m+=g}for(h=0;h<r;h++){var x=h*(n+1);for(l=0;l<n;l++){s=l+x;var _=s,b=s+n+1,w=s+n+2,M=s+1;u.push(_,b,M),u.push(b,w,M)}}this.setIndex(u),this.addAttribute("position",new bt(p,3)),this.addAttribute("normal",new bt(d,3)),this.addAttribute("uv",new bt(f,2))}function ti(t,e,i,n){St.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},this.fromBufferGeometry(new ei(t,e,i,n)),this.mergeVertices()}function ei(t,e,n,r){At.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e)||12,n=n||0,r=r||2*Math.PI,r=us.clamp(r,0,2*Math.PI);var a,o,s,h=[],l=[],u=[],p=1/e,d=new c,f=new i;for(o=0;o<=e;o++){var m=n+o*p*r,g=Math.sin(m),v=Math.cos(m);for(s=0;s<=t.length-1;s++)d.x=t[s].x*g,d.y=t[s].y,d.z=t[s].x*v,l.push(d.x,d.y,d.z),f.x=o/e,f.y=s/(t.length-1),u.push(f.x,f.y)}for(o=0;o<e;o++)for(s=0;s<t.length-1;s++){a=s+o*t.length;var y=a,x=a+t.length,_=a+t.length+1,b=a+1;h.push(y,x,b),h.push(x,_,b)}if(this.setIndex(h),this.addAttribute("position",new bt(l,3)),this.addAttribute("uv",new bt(u,2)),this.computeVertexNormals(),r===2*Math.PI){var w=this.attributes.normal.array,M=new c,E=new c,T=new c;for(a=e*t.length*3,o=0,s=0;o<t.length;o++,s+=3)M.x=w[s+0],M.y=w[s+1],M.z=w[s+2],E.x=w[a+s+0],E.y=w[a+s+1],E.z=w[a+s+2],T.addVectors(M,E).normalize(),w[s+0]=w[a+s+0]=T.x,w[s+1]=w[a+s+1]=T.y,w[s+2]=w[a+s+2]=T.z}}function ii(t,e){St.call(this),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new ni(t,e)),this.mergeVertices()}function ni(t,e){function i(t){var i,s,h,l=r.length/3,u=t.extractPoints(e),p=u.shape,d=u.holes;if(Ah.isClockWise(p)===!1)for(p=p.reverse(),i=0,s=d.length;i<s;i++)h=d[i],Ah.isClockWise(h)===!0&&(d[i]=h.reverse());var f=Ah.triangulateShape(p,d);for(i=0,s=d.length;i<s;i++)h=d[i],p=p.concat(h);for(i=0,s=p.length;i<s;i++){var m=p[i];r.push(m.x,m.y,0),a.push(0,0,1),o.push(m.x,m.y)}for(i=0,s=f.length;i<s;i++){var g=f[i],v=g[0]+l,y=g[1]+l,x=g[2]+l;n.push(v,y,x),c+=3}}At.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],r=[],a=[],o=[],s=0,c=0;if(Array.isArray(t)===!1)i(t);else for(var h=0;h<t.length;h++)i(t[h]),this.addGroup(s,c,h),s+=c,c=0;this.setIndex(n),this.addAttribute("position",new bt(r,3)),this.addAttribute("normal",new bt(a,3)),this.addAttribute("uv",new bt(o,2))}function ri(t,e){function i(t,e){return t-e}At.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var n,r,a=[],o=Math.cos(us.DEG2RAD*e),s=[0,0],c={},h=["a","b","c"];t.isBufferGeometry?(r=new St,r.fromBufferGeometry(t)):r=t.clone(),r.mergeVertices(),r.computeFaceNormals();for(var l=r.vertices,u=r.faces,p=0,d=u.length;p<d;p++)for(var f=u[p],m=0;m<3;m++)s[0]=f[h[m]],s[1]=f[h[(m+1)%3]],s.sort(i),n=s.toString(),void 0===c[n]?c[n]={index1:s[0],index2:s[1],face1:p,face2:void 0}:c[n].face2=p;for(n in c){var g=c[n];if(void 0===g.face2||u[g.face1].normal.dot(u[g.face2].normal)<=o){var v=l[g.index1];a.push(v.x,v.y,v.z),v=l[g.index2],a.push(v.x,v.y,v.z)}}this.addAttribute("position",new bt(a,3))}function ai(t,e,i,n,r,a,o,s){St.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new oi(t,e,i,n,r,a,o,s)),this.mergeVertices()}function oi(t,e,n,r,a,o,s,h){function l(){var i,o,l=new c,u=new c,b=0,w=(e-t)/n;for(o=0;o<=a;o++){var M=[],E=o/a,T=E*(e-t)+t;for(i=0;i<=r;i++){var S=i/r,A=S*h+s,L=Math.sin(A),R=Math.cos(A);u.x=T*L,u.y=-E*n+x,u.z=T*R,f.push(u.x,u.y,u.z),l.set(L,w,R).normalize(),m.push(l.x,l.y,l.z),g.push(S,1-E),M.push(v++)}y.push(M)}for(i=0;i<r;i++)for(o=0;o<a;o++){var P=y[o][i],C=y[o+1][i],I=y[o+1][i+1],U=y[o][i+1];d.push(P,C,U),d.push(C,I,U),b+=6}p.addGroup(_,b,0),_+=b}function u(n){var a,o,l,u=new i,y=new c,b=0,w=n===!0?t:e,M=n===!0?1:-1;for(o=v,a=1;a<=r;a++)f.push(0,x*M,0),m.push(0,M,0),g.push(.5,.5),v++;for(l=v,a=0;a<=r;a++){var E=a/r,T=E*h+s,S=Math.cos(T),A=Math.sin(T);y.x=w*A,y.y=x*M,y.z=w*S,f.push(y.x,y.y,y.z),m.push(0,M,0),u.x=.5*S+.5,u.y=.5*A*M+.5,g.push(u.x,u.y),v++}for(a=0;a<r;a++){var L=o+a,R=l+a;n===!0?d.push(R,R+1,L):d.push(R+1,R,L),b+=3}p.addGroup(_,b,n===!0?1:2),_+=b}At.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:a,openEnded:o,thetaStart:s,thetaLength:h};var p=this;t=void 0!==t?t:20,e=void 0!==e?e:20,n=void 0!==n?n:100,r=Math.floor(r)||8,a=Math.floor(a)||1,o=void 0!==o&&o,s=void 0!==s?s:0,h=void 0!==h?h:2*Math.PI;var d=[],f=[],m=[],g=[],v=0,y=[],x=n/2,_=0;l(),o===!1&&(t>0&&u(!0),e>0&&u(!1)),this.setIndex(d),this.addAttribute("position",new bt(f,3)),this.addAttribute("normal",new bt(m,3)),this.addAttribute("uv",new bt(g,2))}function si(t,e,i,n,r,a,o){ai.call(this,0,t,e,i,n,r,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}function ci(t,e,i,n,r,a,o){oi.call(this,0,t,e,i,n,r,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}function hi(t,e,i,n){St.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new li(t,e,i,n))}function li(t,e,n,r){At.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},t=t||50,e=void 0!==e?Math.max(3,e):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var a,o,s=[],h=[],l=[],u=[],p=new c,d=new i;for(h.push(0,0,0),l.push(0,0,1),u.push(.5,.5),o=0,a=3;o<=e;o++,a+=3){var f=n+o/e*r;p.x=t*Math.cos(f),p.y=t*Math.sin(f),h.push(p.x,p.y,p.z),l.push(0,0,1),d.x=(h[a]/t+1)/2,d.y=(h[a+1]/t+1)/2,u.push(d.x,d.y)}for(a=1;a<=e;a++)s.push(a,a+1,0);this.setIndex(s),this.addAttribute("position",new bt(h,3)),this.addAttribute("normal",new bt(l,3)),this.addAttribute("uv",new bt(u,2))}function ui(){Q.call(this,{uniforms:ys.merge([bh.lights,{opacity:{value:1}}]),vertexShader:xh.shadow_vert,fragmentShader:xh.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}}})}function pi(t){Q.call(this,t),this.type="RawShaderMaterial"}function di(t){this.uuid=us.generateUUID(),this.type="MultiMaterial",this.materials=Array.isArray(t)?t:[],this.visible=!0}function fi(t){J.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new W(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new W(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function mi(t){fi.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}function gi(t){J.call(this),this.type="MeshPhongMaterial",this.color=new W(16777215),this.specular=new W(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new W(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Va,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function vi(t){gi.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function yi(t){J.call(this,t),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function xi(t){J.call(this),this.type="MeshLambertMaterial",this.color=new W(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new W(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Va,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function _i(t){J.call(this),this.type="LineDashedMaterial",this.color=new W(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(t)}function bi(t,e,i){var n=this,r=!1,a=0,o=0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,r===!1&&void 0!==n.onStart&&n.onStart(t,a,o),r=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)}}function wi(t){this.manager=void 0!==t?t:Ch}function Mi(t){this.manager=void 0!==t?t:Ch,this._parser=null}function Ei(t){this.manager=void 0!==t?t:Ch,this._parser=null}function Ti(t){this.manager=void 0!==t?t:Ch}function Si(t){this.manager=void 0!==t?t:Ch}function Ai(t){this.manager=void 0!==t?t:Ch}function Li(t,e){ct.call(this),this.type="Light",this.color=new W(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function Ri(t,e,i){Li.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ct.DefaultUp),this.updateMatrix(),this.groundColor=new W(e)}function Pi(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new i(512,512),this.map=null,this.matrix=new h}function Ci(){Pi.call(this,new Nt(50,1,.5,500))}function Ii(t,e,i,n,r,a){Li.call(this,t,e),this.type="SpotLight",this.position.copy(ct.DefaultUp),this.updateMatrix(),this.target=new ct,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==a?a:1,this.shadow=new Ci}function Ui(t,e,i,n){Li.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new Pi(new Nt(90,1,.5,500))}function Ni(){Pi.call(this,new Dt(-5,5,5,-5,.5,500))}function Di(t,e){Li.call(this,t,e),this.type="DirectionalLight",this.position.copy(ct.DefaultUp),this.updateMatrix(),this.target=new ct,this.shadow=new Ni}function Oi(t,e){Li.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function Bi(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}function Fi(t,e,i,n){Bi.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function zi(t,e,i,n){Bi.call(this,t,e,i,n)}function Gi(t,e,i,n){Bi.call(this,t,e,i,n)}function Hi(t,e,i,n){if(void 0===t)throw new Error("track name is undefined");if(void 0===e||0===e.length)throw new Error("no keyframes in track named "+t);\nthis.name=t,this.times=Ih.convertArray(e,this.TimeBufferType),this.values=Ih.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation),this.validate(),this.optimize()}function Vi(t,e,i,n){Hi.call(this,t,e,i,n)}function ki(t,e,i,n){Bi.call(this,t,e,i,n)}function ji(t,e,i,n){Hi.call(this,t,e,i,n)}function Wi(t,e,i,n){Hi.call(this,t,e,i,n)}function Xi(t,e,i,n){Hi.call(this,t,e,i,n)}function qi(t,e,i){Hi.call(this,t,e,i)}function Yi(t,e,i,n){Hi.call(this,t,e,i,n)}function Zi(t,e,i,n){Hi.apply(this,arguments)}function Ji(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=us.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function Qi(t){this.manager=void 0!==t?t:Ch,this.textures={}}function Ki(t){this.manager=void 0!==t?t:Ch}function $i(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}function tn(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:Ch,this.withCredentials=!1}function en(t){this.manager=void 0!==t?t:Ch,this.texturePath=""}function nn(t,e,i,n,r){var a=.5*(n-e),o=.5*(r-i),s=t*t,c=t*s;return(2*i-2*n+a+o)*c+(-3*i+3*n-2*a-o)*s+a*t+i}function rn(t,e){var i=1-t;return i*i*e}function an(t,e){return 2*(1-t)*t*e}function on(t,e){return t*t*e}function sn(t,e,i,n){return rn(t,e)+an(t,i)+on(t,n)}function cn(t,e){var i=1-t;return i*i*i*e}function hn(t,e){var i=1-t;return 3*i*i*t*e}function ln(t,e){return 3*(1-t)*t*t*e}function un(t,e){return t*t*t*e}function pn(t,e,i,n,r){return cn(t,e)+hn(t,i)+ln(t,n)+un(t,r)}function dn(){}function fn(t,e){this.v1=t,this.v2=e}function mn(){this.curves=[],this.autoClose=!1}function gn(t,e,i,n,r,a,o,s){this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s||0}function vn(t){this.points=void 0===t?[]:t}function yn(t,e,i,n){this.v0=t,this.v1=e,this.v2=i,this.v3=n}function xn(t,e,i){this.v0=t,this.v1=e,this.v2=i}function _n(t){mn.call(this),this.currentPoint=new i,t&&this.fromPoints(t)}function bn(){_n.apply(this,arguments),this.holes=[]}function wn(){this.subPaths=[],this.currentPath=null}function Mn(t){this.data=t}function En(t){this.manager=void 0!==t?t:Ch}function Tn(t){this.manager=void 0!==t?t:Ch}function Sn(t,e,i,n){Li.call(this,t,e),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}function An(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Nt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Nt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function Ln(t,e,i){ct.call(this),this.type="CubeCamera";var n=90,r=1,a=new Nt(n,r,t,e);a.up.set(0,-1,0),a.lookAt(new c(1,0,0)),this.add(a);var s=new Nt(n,r,t,e);s.up.set(0,-1,0),s.lookAt(new c(-1,0,0)),this.add(s);var h=new Nt(n,r,t,e);h.up.set(0,0,1),h.lookAt(new c(0,1,0)),this.add(h);var l=new Nt(n,r,t,e);l.up.set(0,0,-1),l.lookAt(new c(0,-1,0)),this.add(l);var u=new Nt(n,r,t,e);u.up.set(0,-1,0),u.lookAt(new c(0,0,1)),this.add(u);var p=new Nt(n,r,t,e);p.up.set(0,-1,0),p.lookAt(new c(0,0,-1)),this.add(p);var d={format:Ao,magFilter:lo,minFilter:lo};this.renderTarget=new o(i,i,d),this.updateCubeMap=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,n=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,i.activeCubeFace=0,t.render(e,a,i),i.activeCubeFace=1,t.render(e,s,i),i.activeCubeFace=2,t.render(e,h,i),i.activeCubeFace=3,t.render(e,l,i),i.activeCubeFace=4,t.render(e,u,i),i.texture.generateMipmaps=n,i.activeCubeFace=5,t.render(e,p,i),t.setRenderTarget(null)}}function Rn(){ct.call(this),this.type="AudioListener",this.context=Oh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function Pn(t){ct.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}function Cn(t){Pn.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function In(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Un(t,e,i){this.binding=t,this.valueSize=i;var n,r=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":r=Array,n=this._select;break;default:n=this._lerp}this.buffer=new r(4*i),this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function Nn(t,e,i){this.path=e,this.parsedPath=i||Nn.parseTrackName(e),this.node=Nn.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Dn(t){this.uuid=us.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var e={};this._indicesByUUID=e;for(var i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}function On(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var n=e.tracks,r=n.length,a=new Array(r),o={endingStart:Zo,endingEnd:Zo},s=0;s!==r;++s){var c=n[s].createInterpolant(null);a[s]=c,c.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=jo,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Bn(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Fn(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}function zn(){At.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function Gn(t,e,i,n){this.uuid=us.generateUUID(),this.data=t,this.itemSize=e,this.offset=i,this.normalized=n===!0}function Hn(t,e){this.uuid=us.generateUUID(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function Vn(t,e,i){Hn.call(this,t,e),this.meshPerAttribute=i||1}function kn(t,e,i){dt.call(this,t,e),this.meshPerAttribute=i||1}function jn(t,e,i,n){this.ray=new at(t,e),this.near=i||0,this.far=n||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Wn(t,e){return t.distance-e.distance}function Xn(t,e,i,n){if(t.visible!==!1&&(t.raycast(e,i),n===!0))for(var r=t.children,a=0,o=r.length;a<o;a++)Xn(r[a],e,i,!0)}function qn(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function Yn(t,e,i){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}function Zn(t,e,i){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}function Jn(t,e){Lt.call(this,t,e),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length,n="__default",r=0,a=i-1,o=i/1;this.createAnimation(n,r,a,o),this.setAnimationWeight(n,1)}function Qn(t){ct.call(this),this.material=t,this.render=function(t){}}function Kn(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16711680,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var c=new At,h=new bt(2*o*3,3);c.addAttribute("position",h),be.call(this,c,new xe({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function $n(t){ct.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;for(var e=new At,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],n=0,r=1,a=32;n<a;n++,r++){var o=n/a*Math.PI*2,s=r/a*Math.PI*2;i.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}e.addAttribute("position",new bt(i,3));var c=new xe({fog:!1});this.cone=new be(e,c),this.add(this.cone),this.update()}function tr(t){this.bones=this.getBoneList(t);for(var e=new At,i=[],n=[],r=new W(0,0,1),a=new W(0,1,0),o=0;o<this.bones.length;o++){var s=this.bones[o];s.parent&&s.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),n.push(r.r,r.g,r.b),n.push(a.r,a.g,a.b))}e.addAttribute("position",new bt(i,3)),e.addAttribute("color",new bt(n,3));var c=new xe({vertexColors:ua,depthTest:!1,depthWrite:!1,transparent:!0});be.call(this,e,c),this.root=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function er(t,e){this.light=t,this.light.updateMatrixWorld();var i=new Qe(e,4,2),n=new pt({wireframe:!0,fog:!1});n.color.copy(this.light.color).multiplyScalar(this.light.intensity),Lt.call(this,i,n),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1}function ir(t){ct.call(this),this.light=t,this.light.updateMatrixWorld();var e=new pt({color:t.color,fog:!1}),i=new pt({color:t.color,fog:!1,wireframe:!0}),n=new At;n.addAttribute("position",new dt(new Float32Array(18),3)),this.add(new Lt(n,e)),this.add(new Lt(n,i)),this.update()}function nr(t,e){ct.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;var i=new Be(e);i.rotateY(.5*Math.PI);var n=new pt({vertexColors:ua,wireframe:!0}),r=i.getAttribute("position"),a=new Float32Array(3*r.count);i.addAttribute("color",new dt(a,3)),this.add(new Lt(i,n)),this.update()}function rr(t,e,i,n){t=t||10,e=e||10,i=new W(void 0!==i?i:4473924),n=new W(void 0!==n?n:8947848);for(var r=e/2,a=t/e,o=t/2,s=[],c=[],h=0,l=0,u=-o;h<=e;h++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var p=h===r?i:n;p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3,p.toArray(c,l),l+=3}var d=new At;d.addAttribute("position",new bt(s,3)),d.addAttribute("color",new bt(c,3));var f=new xe({vertexColors:ua});be.call(this,d,f)}function ar(t,e,i,n,r,a){t=t||10,e=e||16,i=i||8,n=n||64,r=new W(void 0!==r?r:4473924),a=new W(void 0!==a?a:8947848);var o,s,c,h,l,u,p,d=[],f=[];for(h=0;h<=e;h++)c=h/e*(2*Math.PI),o=Math.sin(c)*t,s=Math.cos(c)*t,d.push(0,0,0),d.push(o,0,s),p=1&h?r:a,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(h=0;h<=i;h++)for(p=1&h?r:a,u=t-t/i*h,l=0;l<n;l++)c=l/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),f.push(p.r,p.g,p.b),c=(l+1)/n*(2*Math.PI),o=Math.sin(c)*u,s=Math.cos(c)*u,d.push(o,0,s),f.push(p.r,p.g,p.b);var m=new At;m.addAttribute("position",new bt(d,3)),m.addAttribute("color",new bt(f,3));var g=new xe({vertexColors:ua});be.call(this,m,g)}function or(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16776960,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var c=new At,h=new bt(2*o*3,3);c.addAttribute("position",h),be.call(this,c,new xe({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function sr(t,e){ct.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,void 0===e&&(e=1);var i=new At;i.addAttribute("position",new bt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var n=new xe({fog:!1});this.add(new _e(i,n)),i=new At,i.addAttribute("position",new bt([0,0,0,0,0,1],3)),this.add(new _e(i,n)),this.update()}function cr(t){function e(t,e,n){i(t,n),i(e,n)}function i(t,e){a.push(0,0,0),o.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(a.length/3-1)}var n=new At,r=new xe({color:16777215,vertexColors:la}),a=[],o=[],s={},c=new W(16755200),h=new W(16711680),l=new W(43775),u=new W(16777215),p=new W(3355443);e("n1","n2",c),e("n2","n4",c),e("n4","n3",c),e("n3","n1",c),e("f1","f2",c),e("f2","f4",c),e("f4","f3",c),e("f3","f1",c),e("n1","f1",c),e("n2","f2",c),e("n3","f3",c),e("n4","f4",c),e("p","n1",h),e("p","n2",h),e("p","n3",h),e("p","n4",h),e("u1","u2",l),e("u2","u3",l),e("u3","u1",l),e("c","t",u),e("p","c",p),e("cn1","cn2",p),e("cn3","cn4",p),e("cf1","cf2",p),e("cf3","cf4",p),n.addAttribute("position",new bt(a,3)),n.addAttribute("color",new bt(o,3)),be.call(this,n,r),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function hr(t,e){void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new At;r.setIndex(new dt(i,1)),r.addAttribute("position",new dt(n,3)),be.call(this,r,new xe({color:e})),void 0!==t&&this.update(t)}function lr(t,e,i,n,r,a){ct.call(this),void 0===n&&(n=16776960),void 0===i&&(i=1),void 0===r&&(r=.2*i),void 0===a&&(a=.2*r),void 0===Bh&&(Bh=new At,Bh.addAttribute("position",new bt([0,0,0,0,1,0],3)),Fh=new oi(0,.5,1,5,1),Fh.translate(0,-.5,0)),this.position.copy(e),this.line=new _e(Bh,new xe({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Lt(Fh,new pt({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,a)}function ur(t){t=t||1;var e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new At;n.addAttribute("position",new bt(e,3)),n.addAttribute("color",new bt(i,3));var r=new xe({vertexColors:ua});be.call(this,n,r)}function pr(){function t(t,a,o,s){e=t,i=o,n=-3*t+3*a-2*o-s,r=2*t-2*a+o+s}var e=0,i=0,n=0,r=0;return{initCatmullRom:function(e,i,n,r,a){t(i,n,a*(n-e),a*(r-i))},initNonuniformCatmullRom:function(e,i,n,r,a,o,s){var c=(i-e)/a-(n-e)/(a+o)+(n-i)/o,h=(n-i)/o-(r-i)/(o+s)+(r-n)/s;c*=o,h*=o,t(i,n,c,h)},calc:function(t){var a=t*t,o=a*t;return e+i*t+n*a+r*o}}}function dr(t){this.points=t||[],this.closed=!1}function fr(t,e,i,n){this.v0=t,this.v1=e,this.v2=i,this.v3=n}function mr(t,e,i){this.v0=t,this.v1=e,this.v2=i}function gr(t,e){this.v1=t,this.v2=e}function vr(t,e,i,n,r,a){gn.call(this,t,e,i,i,n,r,a)}function yr(t,e,i,n,r,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new ut(t,e,i,r,a,o)}function xr(t){return console.warn("THREE.MeshFaceMaterial has been renamed to THREE.MultiMaterial."),new di(t)}function _r(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Me(t,e)}function br(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new fe(t)}function wr(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Me(t,e)}function Mr(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new we(t)}function Er(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new we(t)}function Tr(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new we(t)}function Sr(t,e,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new c(t,e,i)}function Ar(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new dt(t,e).setDynamic(!0)}function Lr(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new ft(t,e)}function Rr(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new mt(t,e)}function Pr(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new gt(t,e)}function Cr(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new vt(t,e)}function Ir(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new yt(t,e)}function Ur(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new xt(t,e)}function Nr(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new _t(t,e)}function Dr(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new bt(t,e)}function Or(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new wt(t,e)}function Br(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),dr.call(this,t),this.type="catmullrom",this.closed=!0}function Fr(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),dr.call(this,t),this.type="catmullrom"}function zr(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),dr.call(this,t),this.type="catmullrom"}function Gr(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new hr(t,e)}function Hr(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new be(new ri(t.geometry),new xe({color:void 0!==e?e:16777215}))}function Vr(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new be(new Re(t.geometry),new xe({color:void 0!==e?e:16777215}))}function kr(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new wi(t)}function jr(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Ei(t)}function Wr(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(t,e){console.warn("THREE.Projector: .projectVector() is now vector.project()."),t.project(e)},this.unprojectVector=function(t,e){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),t.unproject(e)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}}function Xr(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),void 0===Function.prototype.name&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1]}}),void 0===Object.assign&&!function(){Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(void 0!==n&&null!==n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}}(),e.prototype={addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&i[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners,n=i[t];if(void 0!==n){var r=n.indexOf(e);r!==-1&&n.splice(r,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners,i=e[t.type];if(void 0!==i){t.target=this;var n=[],r=0,a=i.length;for(r=0;r<a;r++)n[r]=i[r];for(r=0;r<a;r++)n[r].call(this,t)}}}};var qr="84",Yr={LEFT:0,MIDDLE:1,RIGHT:2},Zr=0,Jr=1,Qr=2,Kr=3,$r=0,ta=1,ea=0,ia=1,na=2,ra=0,aa=1,oa=2,sa=1,ca=2,ha=0,la=1,ua=2,pa=0,da=1,fa=2,ma=3,ga=4,va=5,ya=100,xa=101,_a=102,ba=103,wa=104,Ma=200,Ea=201,Ta=202,Sa=203,Aa=204,La=205,Ra=206,Pa=207,Ca=208,Ia=209,Ua=210,Na=0,Da=1,Oa=2,Ba=3,Fa=4,za=5,Ga=6,Ha=7,Va=0,ka=1,ja=2,Wa=0,Xa=1,qa=2,Ya=3,Za=4,Ja=300,Qa=301,Ka=302,$a=303,to=304,eo=305,io=306,no=307,ro=1e3,ao=1001,oo=1002,so=1003,co=1004,ho=1005,lo=1006,uo=1007,po=1008,fo=1009,mo=1010,go=1011,vo=1012,yo=1013,xo=1014,_o=1015,bo=1016,wo=1017,Mo=1018,Eo=1019,To=1020,So=1021,Ao=1022,Lo=1023,Ro=1024,Po=1025,Co=Lo,Io=1026,Uo=1027,No=2001,Do=2002,Oo=2003,Bo=2004,Fo=2100,zo=2101,Go=2102,Ho=2103,Vo=2151,ko=2200,jo=2201,Wo=2202,Xo=2300,qo=2301,Yo=2302,Zo=2400,Jo=2401,Qo=2402,Ko=0,$o=1,ts=2,es=3e3,is=3001,ns=3007,rs=3002,as=3003,os=3004,ss=3005,cs=3006,hs=3200,ls=3201,us={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=new Array(36),n=0;return function(){for(var r=0;r<36;r++)8===r||13===r||18===r||23===r?i[r]="-":14===r?i[r]="4":(n<=2&&(n=33554432+16777216*Math.random()|0),t=15&n,n>>=4,i[r]=e[19===r?3&t|8:t]);return i.join("")}}(),clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e),t*t*(3-2*t))},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e),t*t*t*(t*(6*t-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*us.DEG2RAD},radToDeg:function(t){return t*us.RAD2DEG},isPowerOfTwo:function(t){return 0===(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,t++,t}};i.prototype={constructor:i,isVector2:!0,get width(){return this.x},set width(t){this.x=t},get height(){return this.y},set height(t){this.y=t},set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t):(this.x=0,this.y=0),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t,e;return function(n,r){return void 0===t&&(t=new i,e=new i),t.set(n,n),e.set(r,r),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.multiplyScalar(Math.max(t,Math.min(e,i))/i)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},distanceToManhattan:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*i-a*n+t.x,this.y=r*n+a*i+t.y,this}};var ps=0;n.DEFAULT_IMAGE=void 0,n.DEFAULT_MAPPING=Ja,n.prototype={constructor:n,isTexture:!0,set needsUpdate(t){t===!0&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){function e(t){var e;return void 0!==t.toDataURL?e=t:(e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),e.width=t.width,e.height=t.height,e.getContext("2d").drawImage(t,0,0,t.width,t.height)),e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}if(void 0!==t.textures[this.uuid])return t.textures[this.uuid];var i={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var n=this.image;void 0===n.uuid&&(n.uuid=us.generateUUID()),void 0===t.images[n.uuid]&&(t.images[n.uuid]={uuid:n.uuid,url:e(n)}),i.image=n.uuid}return t.textures[this.uuid]=i,i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping===Ja){if(t.multiply(this.repeat),t.add(this.offset),t.x<0||t.x>1)switch(this.wrapS){case ro:t.x=t.x-Math.floor(t.x);break;case ao:t.x=t.x<0?0:1;break;case oo:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case ro:t.y=t.y-Math.floor(t.y);break;case ao:t.y=t.y<0?0:1;break;case oo:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}},Object.assign(n.prototype,e.prototype),r.prototype={constructor:r,isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t,this.w*=t):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*e+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*e+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*e+a[7]*i+a[11]*n+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,i,n,r,a=.01,o=.1,s=t.elements,c=s[0],h=s[4],l=s[8],u=s[1],p=s[5],d=s[9],f=s[2],m=s[6],g=s[10];if(Math.abs(h-u)<a&&Math.abs(l-f)<a&&Math.abs(d-m)<a){if(Math.abs(h+u)<o&&Math.abs(l+f)<o&&Math.abs(d+m)<o&&Math.abs(c+p+g-3)<o)return this.set(1,0,0,0),this;e=Math.PI;var v=(c+1)/2,y=(p+1)/2,x=(g+1)/2,_=(h+u)/4,b=(l+f)/4,w=(d+m)/4;return v>y&&v>x?v<a?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(v),n=_/i,r=b/i):y>x?y<a?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(y),i=_/n,r=w/n):x<a?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(x),i=b/r,n=w/r),this.set(i,n,r,e),this}var M=Math.sqrt((m-d)*(m-d)+(l-f)*(l-f)+(u-h)*(u-h));return Math.abs(M)<.001&&(M=1),this.x=(m-d)/M,this.y=(l-f)/M,this.z=(u-h)/M,this.w=Math.acos((c+p+g-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),\nthis.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,n){return void 0===t&&(t=new r,e=new r),t.set(i,i,i,i),e.set(n,n,n,n),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}},a.prototype={constructor:a,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},Object.assign(a.prototype,e.prototype),o.prototype=Object.create(a.prototype),o.prototype.constructor=o,o.prototype.isWebGLRenderTargetCube=!0,s.prototype={constructor:s,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if((t&&t.isEuler)===!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=Math.cos(t._x/2),n=Math.cos(t._y/2),r=Math.cos(t._z/2),a=Math.sin(t._x/2),o=Math.sin(t._y/2),s=Math.sin(t._z/2),c=t.order;return"XYZ"===c?(this._x=a*n*r+i*o*s,this._y=i*o*r-a*n*s,this._z=i*n*s+a*o*r,this._w=i*n*r-a*o*s):"YXZ"===c?(this._x=a*n*r+i*o*s,this._y=i*o*r-a*n*s,this._z=i*n*s-a*o*r,this._w=i*n*r+a*o*s):"ZXY"===c?(this._x=a*n*r-i*o*s,this._y=i*o*r+a*n*s,this._z=i*n*s+a*o*r,this._w=i*n*r-a*o*s):"ZYX"===c?(this._x=a*n*r-i*o*s,this._y=i*o*r+a*n*s,this._z=i*n*s-a*o*r,this._w=i*n*r+a*o*s):"YZX"===c?(this._x=a*n*r+i*o*s,this._y=i*o*r+a*n*s,this._z=i*n*s-a*o*r,this._w=i*n*r-a*o*s):"XZY"===c&&(this._x=a*n*r-i*o*s,this._y=i*o*r-a*n*s,this._z=i*n*s+a*o*r,this._w=i*n*r+a*o*s),e!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,i=t.elements,n=i[0],r=i[4],a=i[8],o=i[1],s=i[5],c=i[9],h=i[2],l=i[6],u=i[10],p=n+s+u;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(l-c)*e,this._y=(a-h)*e,this._z=(o-r)*e):n>s&&n>u?(e=2*Math.sqrt(1+n-s-u),this._w=(l-c)/e,this._x=.25*e,this._y=(r+o)/e,this._z=(a+h)/e):s>u?(e=2*Math.sqrt(1+s-n-u),this._w=(a-h)/e,this._x=(r+o)/e,this._y=.25*e,this._z=(c+l)/e):(e=2*Math.sqrt(1+u-n-s),this._w=(o-r)/e,this._x=(a+h)/e,this._y=(c+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e,i=1e-6;return function(n,r){return void 0===t&&(t=new c),e=n.dot(r)+1,e<i?(e=0,Math.abs(n.x)>Math.abs(n.z)?t.set(-n.y,n.x,0):t.set(0,-n.z,n.y)):t.crossVectors(n,r),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var i=t._x,n=t._y,r=t._z,a=t._w,o=e._x,s=e._y,c=e._z,h=e._w;return this._x=i*h+a*o+n*c-r*s,this._y=n*h+a*s+r*o-i*c,this._z=r*h+a*c+i*s-n*o,this._w=a*h-i*o-n*s-r*c,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,a=this._w,o=a*t._w+i*t._x+n*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(i+this._x),this._y=.5*(n+this._y),this._z=.5*(r+this._z),this;var c=Math.atan2(s,o),h=Math.sin((1-e)*c)/s,l=Math.sin(e*c)/s;return this._w=a*h+this._w*l,this._x=i*h+this._x*l,this._y=n*h+this._y*l,this._z=r*h+this._z*l,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},Object.assign(s,{slerp:function(t,e,i,n){return i.copy(t).slerp(e,n)},slerpFlat:function(t,e,i,n,r,a,o){var s=i[n+0],c=i[n+1],h=i[n+2],l=i[n+3],u=r[a+0],p=r[a+1],d=r[a+2],f=r[a+3];if(l!==f||s!==u||c!==p||h!==d){var m=1-o,g=s*u+c*p+h*d+l*f,v=g>=0?1:-1,y=1-g*g;if(y>Number.EPSILON){var x=Math.sqrt(y),_=Math.atan2(x,g*v);m=Math.sin(m*_)/x,o=Math.sin(o*_)/x}var b=o*v;if(s=s*m+u*b,c=c*m+p*b,h=h*m+d*b,l=l*m+f*b,m===1-o){var w=1/Math.sqrt(s*s+c*c+h*h+l*l);s*=w,c*=w,h*=w,l*=w}}t[e]=s,t[e+1]=c,t[e+2]=h,t[e+3]=l}}),c.prototype={constructor:c,isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t;return function(e){return(e&&e.isEuler)===!1&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),void 0===t&&(t=new s),this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t;return function(e,i){return void 0===t&&(t=new s),this.applyQuaternion(t.setFromAxisAngle(e,i))}}(),applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;this.x=r[0]*e+r[4]*i+r[8]*n+r[12],this.y=r[1]*e+r[5]*i+r[9]*n+r[13],this.z=r[2]*e+r[6]*i+r[10]*n+r[14];var a=r[3]*e+r[7]*i+r[11]*n+r[15];return this.divideScalar(a)},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,r=t.x,a=t.y,o=t.z,s=t.w,c=s*e+a*n-o*i,h=s*i+o*e-r*n,l=s*n+r*i-a*e,u=-r*e-a*i-o*n;return this.x=c*s+u*-r+h*-o-l*-a,this.y=h*s+u*-a+l*-r-c*-o,this.z=l*s+u*-o+c*-a-h*-r,this},project:function(){var t;return function(e){return void 0===t&&(t=new h),t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t;return function(e){return void 0===t&&(t=new h),t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t,e;return function(i,n){return void 0===t&&(t=new c,e=new c),t.set(i,i,i),e.set(n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.multiplyScalar(Math.max(t,Math.min(e,i))/i)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var i=this.x,n=this.y,r=this.z;return this.x=n*t.z-r*t.y,this.y=r*t.x-i*t.z,this.z=i*t.y-n*t.x,this},crossVectors:function(t,e){var i=t.x,n=t.y,r=t.z,a=e.x,o=e.y,s=e.z;return this.x=n*s-r*o,this.y=r*a-i*s,this.z=i*o-n*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new c),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new c),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(us.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},distanceToManhattan:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){return this.setFromMatrixColumn(t,3)},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){if("number"==typeof t){console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");var i=t;t=e,e=i}return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}},h.prototype={constructor:h,isMatrix4:!0,set:function(t,e,i,n,r,a,o,s,c,h,l,u,p,d,f,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=c,g[6]=h,g[10]=l,g[14]=u,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new h).fromArray(this.elements)},copy:function(t){return this.elements.set(t.elements),this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(){var t;return function(e){void 0===t&&(t=new c);var i=this.elements,n=e.elements,r=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return i[0]=n[0]*r,i[1]=n[1]*r,i[2]=n[2]*r,i[4]=n[4]*a,i[5]=n[5]*a,i[6]=n[6]*a,i[8]=n[8]*o,i[9]=n[9]*o,i[10]=n[10]*o,this}}(),makeRotationFromEuler:function(t){(t&&t.isEuler)===!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,n=t.y,r=t.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(n),c=Math.sin(n),h=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){var u=a*h,p=a*l,d=o*h,f=o*l;e[0]=s*h,e[4]=-s*l,e[8]=c,e[1]=p+d*c,e[5]=u-f*c,e[9]=-o*s,e[2]=f-u*c,e[6]=d+p*c,e[10]=a*s}else if("YXZ"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m+y*o,e[4]=v*o-g,e[8]=a*c,e[1]=a*l,e[5]=a*h,e[9]=-o,e[2]=g*o-v,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){var m=s*h,g=s*l,v=c*h,y=c*l;e[0]=m-y*o,e[4]=-a*l,e[8]=v+g*o,e[1]=g+v*o,e[5]=a*h,e[9]=y-m*o,e[2]=-a*c,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){var u=a*h,p=a*l,d=o*h,f=o*l;e[0]=s*h,e[4]=d*c-p,e[8]=u*c+f,e[1]=s*l,e[5]=f*c+u,e[9]=p*c-d,e[2]=-c,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var x=a*s,_=a*c,b=o*s,w=o*c;e[0]=s*h,e[4]=w-x*l,e[8]=b*l+_,e[1]=l,e[5]=a*h,e[9]=-o*h,e[2]=-c*h,e[6]=_*l+b,e[10]=x-w*l}else if("XZY"===t.order){var x=a*s,_=a*c,b=o*s,w=o*c;e[0]=s*h,e[4]=-l,e[8]=c*h,e[1]=x*l+w,e[5]=a*h,e[9]=_*l-b,e[2]=b*l-_,e[6]=o*h,e[10]=w*l+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z,a=t.w,o=i+i,s=n+n,c=r+r,h=i*o,l=i*s,u=i*c,p=n*s,d=n*c,f=r*c,m=a*o,g=a*s,v=a*c;return e[0]=1-(p+f),e[4]=l-v,e[8]=u+g,e[1]=l+v,e[5]=1-(h+f),e[9]=d-m,e[2]=u-g,e[6]=d+m,e[10]=1-(h+p),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t,e,i;return function(n,r,a){void 0===t&&(t=new c,e=new c,i=new c);var o=this.elements;return i.subVectors(n,r).normalize(),0===i.lengthSq()&&(i.z=1),t.crossVectors(a,i).normalize(),0===t.lengthSq()&&(i.z+=1e-4,t.crossVectors(a,i).normalize()),e.crossVectors(i,t),o[0]=t.x,o[4]=e.x,o[8]=i.x,o[1]=t.y,o[5]=e.y,o[9]=i.y,o[2]=t.z,o[6]=e.z,o[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[4],s=i[8],c=i[12],h=i[1],l=i[5],u=i[9],p=i[13],d=i[2],f=i[6],m=i[10],g=i[14],v=i[3],y=i[7],x=i[11],_=i[15],b=n[0],w=n[4],M=n[8],E=n[12],T=n[1],S=n[5],A=n[9],L=n[13],R=n[2],P=n[6],C=n[10],I=n[14],U=n[3],N=n[7],D=n[11],O=n[15];return r[0]=a*b+o*T+s*R+c*U,r[4]=a*w+o*S+s*P+c*N,r[8]=a*M+o*A+s*C+c*D,r[12]=a*E+o*L+s*I+c*O,r[1]=h*b+l*T+u*R+p*U,r[5]=h*w+l*S+u*P+p*N,r[9]=h*M+l*A+u*C+p*D,r[13]=h*E+l*L+u*I+p*O,r[2]=d*b+f*T+m*R+g*U,r[6]=d*w+f*S+m*P+g*N,r[10]=d*M+f*A+m*C+g*D,r[14]=d*E+f*L+m*I+g*O,r[3]=v*b+y*T+x*R+_*U,r[7]=v*w+y*S+x*P+_*N,r[11]=v*M+y*A+x*C+_*D,r[15]=v*E+y*L+x*I+_*O,this},multiplyToArray:function(t,e,i){var n=this.elements;return this.multiplyMatrices(t,e),i[0]=n[0],i[1]=n[1],i[2]=n[2],i[3]=n[3],i[4]=n[4],i[5]=n[5],i[6]=n[6],i[7]=n[7],i[8]=n[8],i[9]=n[9],i[10]=n[10],i[11]=n[11],i[12]=n[12],i[13]=n[13],i[14]=n[14],i[15]=n[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t;return function(e){void 0===t&&(t=new c);for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix4(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],a=t[1],o=t[5],s=t[9],c=t[13],h=t[2],l=t[6],u=t[10],p=t[14],d=t[3],f=t[7],m=t[11],g=t[15];return d*(+r*s*l-n*c*l-r*o*u+i*c*u+n*o*p-i*s*p)+f*(+e*s*p-e*c*u+r*a*u-n*a*p+n*c*h-r*s*h)+m*(+e*c*l-e*o*p-r*a*l+i*a*p+r*o*h-i*c*h)+g*(-n*o*h-e*s*l+e*o*u+n*a*l-i*a*u+i*s*h)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var i=this.elements,n=t.elements,r=n[0],a=n[1],o=n[2],s=n[3],c=n[4],h=n[5],l=n[6],u=n[7],p=n[8],d=n[9],f=n[10],m=n[11],g=n[12],v=n[13],y=n[14],x=n[15],_=d*y*u-v*f*u+v*l*m-h*y*m-d*l*x+h*f*x,b=g*f*u-p*y*u-g*l*m+c*y*m+p*l*x-c*f*x,w=p*v*u-g*d*u+g*h*m-c*v*m-p*h*x+c*d*x,M=g*d*l-p*v*l-g*h*f+c*v*f+p*h*y-c*d*y,E=r*_+a*b+o*w+s*M;if(0===E){var T="THREE.Matrix4.getInverse(): can\'t invert matrix, determinant is 0";if(e===!0)throw new Error(T);return console.warn(T),this.identity()}var S=1/E;return i[0]=_*S,i[1]=(v*f*s-d*y*s-v*o*m+a*y*m+d*o*x-a*f*x)*S,i[2]=(h*y*s-v*l*s+v*o*u-a*y*u-h*o*x+a*l*x)*S,i[3]=(d*l*s-h*f*s-d*o*u+a*f*u+h*o*m-a*l*m)*S,i[4]=b*S,i[5]=(p*y*s-g*f*s+g*o*m-r*y*m-p*o*x+r*f*x)*S,i[6]=(g*l*s-c*y*s-g*o*u+r*y*u+c*o*x-r*l*x)*S,i[7]=(c*f*s-p*l*s+p*o*u-r*f*u-c*o*m+r*l*m)*S,i[8]=w*S,i[9]=(g*d*s-p*v*s-g*a*m+r*v*m+p*a*x-r*d*x)*S,i[10]=(c*v*s-g*h*s+g*a*u-r*v*u-c*a*x+r*h*x)*S,i[11]=(p*h*s-c*d*s-p*a*u+r*d*u+c*a*m-r*h*m)*S,i[12]=M*S,i[13]=(p*v*o-g*d*o+g*a*f-r*v*f-p*a*y+r*d*y)*S,i[14]=(g*h*o-c*v*o-g*a*l+r*v*l+c*a*y-r*h*y)*S,i[15]=(c*d*o-p*h*o+p*a*l-r*d*l-c*a*f+r*h*f)*S,this},scale:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=1-i,a=t.x,o=t.y,s=t.z,c=r*a,h=r*o;return this.set(c*a+i,c*o-n*s,c*s+n*o,0,c*o+n*s,h*o+i,h*s-n*a,0,c*s-n*o,h*s+n*a,r*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t,e;return function(i,n,r){void 0===t&&(t=new c,e=new h);var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),l=t.set(a[8],a[9],a[10]).length(),u=this.determinant();u<0&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],e.elements.set(this.elements);var p=1/o,d=1/s,f=1/l;return e.elements[0]*=p,e.elements[1]*=p,e.elements[2]*=p,e.elements[4]*=d,e.elements[5]*=d,e.elements[6]*=d,e.elements[8]*=f,e.elements[9]*=f,e.elements[10]*=f,n.setFromRotationMatrix(e),r.x=o,r.y=s,r.z=l,this}}(),makePerspective:function(t,e,i,n,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements,s=2*r/(e-t),c=2*r/(i-n),h=(e+t)/(e-t),l=(i+n)/(i-n),u=-(a+r)/(a-r),p=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,i,n,r,a){var o=this.elements,s=1/(e-t),c=1/(i-n),h=1/(a-r),l=(e+t)*s,u=(i+n)*c,p=(a+r)*h;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}},l.prototype=Object.create(n.prototype),l.prototype.constructor=l,l.prototype.isCubeTexture=!0,Object.defineProperty(l.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});var ds=new n,fs=new l,ms=[],gs=[];H.prototype.setValue=function(t,e){for(var i=this.seq,n=0,r=i.length;n!==r;++n){var a=i[n];a.setValue(t,e[a.id])}};var vs=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g;j.prototype.setValue=function(t,e,i){var n=this.map[e];void 0!==n&&n.setValue(t,i,this.renderer)},j.prototype.set=function(t,e,i){var n=this.map[i];void 0!==n&&n.setValue(t,e[i],this.renderer)},j.prototype.setOptional=function(t,e,i){var n=e[i];void 0!==n&&this.setValue(t,i,n)},j.upload=function(t,e,i,n){for(var r=0,a=e.length;r!==a;++r){var o=e[r],s=i[o.id];s.needsUpdate!==!1&&o.setValue(t,s.value,n)}},j.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var a=t[n];a.id in e&&i.push(a)}return i};var ys={merge:function(t){for(var e={},i=0;i<t.length;i++){var n=this.clone(t[i]);for(var r in n)e[r]=n[r]}return e},clone:function(t){var e={};for(var i in t){e[i]={};for(var n in t[i]){var r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}},xs="#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n",_s="#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n",bs="#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n",ws="#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n",Ms="#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif",Es="\\nvec3 transformed = vec3( position );\\n",Ts="\\nvec3 objectNormal = vec3( normal );\\n",Ss="float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5/LUT_SIZE;\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 P = geometry.position;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nvoid clipQuadToHorizon( inout vec3 L[5], out int n ) {\\n\\tint config = 0;\\n\\tif ( L[0].z > 0.0 ) config += 1;\\n\\tif ( L[1].z > 0.0 ) config += 2;\\n\\tif ( L[2].z > 0.0 ) config += 4;\\n\\tif ( L[3].z > 0.0 ) config += 8;\\n\\tn = 0;\\n\\tif ( config == 0 ) {\\n\\t} else if ( config == 1 ) {\\n\\t\\tn = 3;\\n\\t\\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\\n\\t\\tL[2] = -L[3].z * L[0] + L[0].z * L[3];\\n\\t} else if ( config == 2 ) {\\n\\t\\tn = 3;\\n\\t\\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\\n\\t\\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\\n\\t} else if ( config == 3 ) {\\n\\t\\tn = 4;\\n\\t\\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\\n\\t\\tL[3] = -L[3].z * L[0] + L[0].z * L[3];\\n\\t} else if ( config == 4 ) {\\n\\t\\tn = 3;\\n\\t\\tL[0] = -L[3].z * L[2] + L[2].z * L[3];\\n\\t\\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\\n\\t} else if ( config == 5 ) {\\n\\t\\tn = 0;\\n\\t} else if ( config == 6 ) {\\n\\t\\tn = 4;\\n\\t\\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\\n\\t\\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\\n\\t} else if ( config == 7 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = -L[3].z * L[0] + L[0].z * L[3];\\n\\t\\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\\n\\t} else if ( config == 8 ) {\\n\\t\\tn = 3;\\n\\t\\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\\n\\t\\tL[1] = -L[2].z * L[3] + L[3].z * L[2];\\n\\t\\tL[2] =  L[3];\\n\\t} else if ( config == 9 ) {\\n\\t\\tn = 4;\\n\\t\\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\\n\\t\\tL[2] = -L[2].z * L[3] + L[3].z * L[2];\\n\\t} else if ( config == 10 ) {\\n\\t\\tn = 0;\\n\\t} else if ( config == 11 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = L[3];\\n\\t\\tL[3] = -L[2].z * L[3] + L[3].z * L[2];\\n\\t\\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\\n\\t} else if ( config == 12 ) {\\n\\t\\tn = 4;\\n\\t\\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\\n\\t\\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\\n\\t} else if ( config == 13 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = L[3];\\n\\t\\tL[3] = L[2];\\n\\t\\tL[2] = -L[1].z * L[2] + L[2].z * L[1];\\n\\t\\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\\n\\t} else if ( config == 14 ) {\\n\\t\\tn = 5;\\n\\t\\tL[4] = -L[0].z * L[3] + L[3].z * L[0];\\n\\t\\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\\n\\t} else if ( config == 15 ) {\\n\\t\\tn = 4;\\n\\t}\\n\\tif ( n == 3 )\\n\\t\\tL[3] = L[0];\\n\\tif ( n == 4 )\\n\\t\\tL[4] = L[0];\\n}\\nfloat integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {\\n\\tfloat cosTheta = dot( v1, v2 );\\n\\tfloat theta = acos( cosTheta );\\n\\tfloat res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );\\n\\treturn res;\\n}\\nvoid initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {\\n\\trectPoints[0] = pos - halfWidth - halfHeight;\\n\\trectPoints[1] = pos + halfWidth - halfHeight;\\n\\trectPoints[2] = pos + halfWidth + halfHeight;\\n\\trectPoints[3] = pos - halfWidth + halfHeight;\\n}\\nvec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 P = geometry.position;\\n\\tvec3 T1, T2;\\n\\tT1 = normalize(V - N * dot( V, N ));\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );\\n\\tvec3 clippedRect[5];\\n\\tclippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );\\n\\tclippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );\\n\\tclippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );\\n\\tclippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );\\n\\tint n;\\n\\tclipQuadToHorizon(clippedRect, n);\\n\\tif ( n == 0 )\\n\\t\\treturn vec3( 0, 0, 0 );\\n\\tclippedRect[0] = normalize( clippedRect[0] );\\n\\tclippedRect[1] = normalize( clippedRect[1] );\\n\\tclippedRect[2] = normalize( clippedRect[2] );\\n\\tclippedRect[3] = normalize( clippedRect[3] );\\n\\tclippedRect[4] = normalize( clippedRect[4] );\\n\\tfloat sum = 0.0;\\n\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );\\n\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );\\n\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );\\n\\tif (n >= 4)\\n\\t\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );\\n\\tif (n == 5)\\n\\t\\tsum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );\\n\\tsum = max( 0.0, sum );\\n\\tvec3 Lo_i = vec3( sum, sum, sum );\\n\\treturn Lo_i;\\n}\\nvec3 Rect_Area_Light_Specular_Reflectance(\\n\\t\\tconst in GeometricContext geometry,\\n\\t\\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,\\n\\t\\tconst in float roughness,\\n\\t\\tconst in sampler2D ltcMat, const in sampler2D ltcMag ) {\\n\\tvec3 rectPoints[4];\\n\\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\\n\\tvec2 uv = ltcTextureCoords( geometry, roughness );\\n\\tvec4 brdfLtcApproxParams, t;\\n\\tbrdfLtcApproxParams = texture2D( ltcMat, uv );\\n\\tt = texture2D( ltcMat, uv );\\n\\tfloat brdfLtcScalar = texture2D( ltcMag, uv ).a;\\n\\tmat3 brdfLtcApproxMat = mat3(\\n\\t\\tvec3(   1,   0, t.y ),\\n\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\tvec3( t.w,   0, t.x )\\n\\t);\\n\\tvec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );\\n\\tspecularReflectance *= brdfLtcScalar;\\n\\treturn specularReflectance;\\n}\\nvec3 Rect_Area_Light_Diffuse_Reflectance(\\n\\t\\tconst in GeometricContext geometry,\\n\\t\\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {\\n\\tvec3 rectPoints[4];\\n\\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\\n\\tmat3 diffuseBrdfMat = mat3(1);\\n\\tvec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );\\n\\treturn diffuseReflectance;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n",As="#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n",Ls="#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n",Rs="#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n",Ps="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n",Cs="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n",Is="#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif",Us="#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n",Ns="#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif",Ds="#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif",Os="#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transpose( const in mat3 v ) {\\n\\tmat3 tmp;\\n\\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\\n\\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\\n\\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\\n\\treturn tmp;\\n}\\n",Bs="#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n",Fs="#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n",zs="#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n",Gs="#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n",Hs="#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n",Vs="#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n",ks="  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n",js="\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n",Ws="#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n",Xs="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n",qs="#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n",Ys="#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n",Zs="\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif",Js="#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n",Qs="#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n",Ks="#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n",$s="#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",tc="#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n",ec="#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif",ic="vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",nc="uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n",rc="BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n",ac="varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 matDiffColor = material.diffuseColor;\\n\\t\\tvec3 matSpecColor = material.specularColor;\\n\\t\\tvec3 lightColor   = rectAreaLight.color;\\n\\t\\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\\n\\t\\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\\n\\t\\t\\t\\troughness,\\n\\t\\t\\t\\tltcMat, ltcMag );\\n\\t\\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\\n\\t\\treflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;\\n\\t\\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;\\n\\t}\\n#endif\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n",oc="PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n",sc="struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 matDiffColor = material.diffuseColor;\\n\\t\\tvec3 matSpecColor = material.specularColor;\\n\\t\\tvec3 lightColor   = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\\n\\t\\t\\t\\troughness,\\n\\t\\t\\t\\tltcMat, ltcMag );\\n\\t\\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\\n\\t\\t\\t\\tgeometry,\\n\\t\\t\\t\\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\\n\\t\\treflectedLight.directSpecular += lightColor * matSpecColor * spec;\\n\\t\\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff;\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n",cc="\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n",hc="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif",lc="#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n",uc="#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif",pc="#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n",dc="#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n",fc="#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n",mc="#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n",gc="#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n",vc="float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n",yc="#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif",xc="#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n",_c="#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif",bc="#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n",wc="#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n",Mc="#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n",Ec="#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n",Tc="vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n",Sc="#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n",Ac="#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n",Lc="float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n",Rc="#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif",Pc="#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n",Cc="#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n",Ic="#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n",Uc="float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n",Nc="#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif",Dc="#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n",Oc="#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n",Bc="#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n",Fc="float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif",zc="#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif",Gc="#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n",Hc="#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n",Vc="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif",kc="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n",jc="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif",Wc="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif",Xc="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif",qc="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif",Yc="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n",Zc="uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n",Jc="varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n",Qc="#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n",Kc="#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n",$c="uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n",th="varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n",eh="uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n",ih="varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n",nh="uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",rh="uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n",ah="uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",oh="#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",sh="uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",ch="#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",hh="#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",lh="#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",uh="#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",ph="#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",dh="#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n",fh="#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n",mh="uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n",gh="uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n",vh="uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\\n}\\n",yh="#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n",xh={\nalphamap_fragment:xs,alphamap_pars_fragment:_s,alphatest_fragment:bs,aomap_fragment:ws,aomap_pars_fragment:Ms,begin_vertex:Es,beginnormal_vertex:Ts,bsdfs:Ss,bumpmap_pars_fragment:As,clipping_planes_fragment:Ls,clipping_planes_pars_fragment:Rs,clipping_planes_pars_vertex:Ps,clipping_planes_vertex:Cs,color_fragment:Is,color_pars_fragment:Us,color_pars_vertex:Ns,color_vertex:Ds,common:Os,cube_uv_reflection_fragment:Bs,defaultnormal_vertex:Fs,displacementmap_pars_vertex:zs,displacementmap_vertex:Gs,emissivemap_fragment:Hs,emissivemap_pars_fragment:Vs,encodings_fragment:ks,encodings_pars_fragment:js,envmap_fragment:Ws,envmap_pars_fragment:Xs,envmap_pars_vertex:qs,envmap_vertex:Ys,fog_vertex:Zs,fog_pars_vertex:Js,fog_fragment:Qs,fog_pars_fragment:Ks,gradientmap_pars_fragment:$s,lightmap_fragment:tc,lightmap_pars_fragment:ec,lights_lambert_vertex:ic,lights_pars:nc,lights_phong_fragment:rc,lights_phong_pars_fragment:ac,lights_physical_fragment:oc,lights_physical_pars_fragment:sc,lights_template:cc,logdepthbuf_fragment:hc,logdepthbuf_pars_fragment:lc,logdepthbuf_pars_vertex:uc,logdepthbuf_vertex:pc,map_fragment:dc,map_pars_fragment:fc,map_particle_fragment:mc,map_particle_pars_fragment:gc,metalnessmap_fragment:vc,metalnessmap_pars_fragment:yc,morphnormal_vertex:xc,morphtarget_pars_vertex:_c,morphtarget_vertex:bc,normal_flip:wc,normal_fragment:Mc,normalmap_pars_fragment:Ec,packing:Tc,premultiplied_alpha_fragment:Sc,project_vertex:Ac,roughnessmap_fragment:Lc,roughnessmap_pars_fragment:Rc,shadowmap_pars_fragment:Pc,shadowmap_pars_vertex:Cc,shadowmap_vertex:Ic,shadowmask_pars_fragment:Uc,skinbase_vertex:Nc,skinning_pars_vertex:Dc,skinning_vertex:Oc,skinnormal_vertex:Bc,specularmap_fragment:Fc,specularmap_pars_fragment:zc,tonemapping_fragment:Gc,tonemapping_pars_fragment:Hc,uv_pars_fragment:Vc,uv_pars_vertex:kc,uv_vertex:jc,uv2_pars_fragment:Wc,uv2_pars_vertex:Xc,uv2_vertex:qc,worldpos_vertex:Yc,cube_frag:Zc,cube_vert:Jc,depth_frag:Qc,depth_vert:Kc,distanceRGBA_frag:$c,distanceRGBA_vert:th,equirect_frag:eh,equirect_vert:ih,linedashed_frag:nh,linedashed_vert:rh,meshbasic_frag:ah,meshbasic_vert:oh,meshlambert_frag:sh,meshlambert_vert:ch,meshphong_frag:hh,meshphong_vert:lh,meshphysical_frag:uh,meshphysical_vert:ph,normal_frag:dh,normal_vert:fh,points_frag:mh,points_vert:gh,shadow_frag:vh,shadow_vert:yh};W.prototype={constructor:W,isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(){function t(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}return function(e,i,n){if(e=us.euclideanModulo(e,1),i=us.clamp(i,0,1),n=us.clamp(n,0,1),0===i)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+i):n+i-n*i,a=2*n-r;this.r=t(a,r,e+1/3),this.g=t(a,r,e),this.b=t(a,r,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(t)){var n,r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(n=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(a)){var o=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,c=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(o,s,c)}}}else if(i=/^\\#([A-Fa-f0-9]+)$/.exec(t)){var h=i[1],l=h.length;if(3===l)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}if(t&&t.length>0){var h=_h[t];void 0!==h?this.setHex(h):console.warn("THREE.Color: Unknown color "+t)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,i,n=t||{h:0,s:0,l:0},r=this.r,a=this.g,o=this.b,s=Math.max(r,a,o),c=Math.min(r,a,o),h=(c+s)/2;if(c===s)e=0,i=0;else{var l=s-c;switch(i=h<=.5?l/(s+c):l/(2-s-c),s){case r:e=(a-o)/l+(a<o?6:0);break;case a:e=(o-r)/l+2;break;case o:e=(r-a)/l+4}e/=6}return n.h=e,n.s=i,n.l=h,n},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var n=this.getHSL();return n.h+=t,n.s+=e,n.l+=i,this.setHSL(n.h,n.s,n.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}};var _h={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};X.prototype=Object.create(n.prototype),X.prototype.constructor=X,X.prototype.isDataTexture=!0;var bh={common:{diffuse:{value:new W(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new r(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new i(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new W(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new W(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new r(0,0,1,1)}}},wh={basic:{uniforms:ys.merge([bh.common,bh.aomap,bh.lightmap,bh.fog]),vertexShader:xh.meshbasic_vert,fragmentShader:xh.meshbasic_frag},lambert:{uniforms:ys.merge([bh.common,bh.aomap,bh.lightmap,bh.emissivemap,bh.fog,bh.lights,{emissive:{value:new W(0)}}]),vertexShader:xh.meshlambert_vert,fragmentShader:xh.meshlambert_frag},phong:{uniforms:ys.merge([bh.common,bh.aomap,bh.lightmap,bh.emissivemap,bh.bumpmap,bh.normalmap,bh.displacementmap,bh.gradientmap,bh.fog,bh.lights,{emissive:{value:new W(0)},specular:{value:new W(1118481)},shininess:{value:30}}]),vertexShader:xh.meshphong_vert,fragmentShader:xh.meshphong_frag},standard:{uniforms:ys.merge([bh.common,bh.aomap,bh.lightmap,bh.emissivemap,bh.bumpmap,bh.normalmap,bh.displacementmap,bh.roughnessmap,bh.metalnessmap,bh.fog,bh.lights,{emissive:{value:new W(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xh.meshphysical_vert,fragmentShader:xh.meshphysical_frag},points:{uniforms:ys.merge([bh.points,bh.fog]),vertexShader:xh.points_vert,fragmentShader:xh.points_frag},dashed:{uniforms:ys.merge([bh.common,bh.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xh.linedashed_vert,fragmentShader:xh.linedashed_frag},depth:{uniforms:ys.merge([bh.common,bh.displacementmap]),vertexShader:xh.depth_vert,fragmentShader:xh.depth_frag},normal:{uniforms:ys.merge([bh.common,bh.bumpmap,bh.normalmap,bh.displacementmap,{opacity:{value:1}}]),vertexShader:xh.normal_vert,fragmentShader:xh.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:xh.cube_vert,fragmentShader:xh.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:xh.equirect_vert,fragmentShader:xh.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new c}},vertexShader:xh.distanceRGBA_vert,fragmentShader:xh.distanceRGBA_frag}};wh.physical={uniforms:ys.merge([wh.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:xh.meshphysical_vert,fragmentShader:xh.meshphysical_frag},q.prototype={constructor:q,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new i;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=+(1/0),this.max.x=this.max.y=-(1/0),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var e=t||new i;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new i;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){var n=e||new i;return n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){var n=e||new i;return n.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new i;return function(e){var i=t.copy(e).clamp(this.min,this.max);return i.sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}};var Mh=0;J.prototype={constructor:J,isMaterial:!0,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){t===!0&&this.update(),this._needsUpdate=t},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i){var n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):"overdraw"===e?this[e]=Number(i):this[e]=i:console.warn("THREE."+this.type+": \'"+e+"\' is not a property of this material.")}else console.warn("THREE.Material: \'"+e+"\' parameter is undefined.")}},toJSON:function(t){function e(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}var i=void 0===t;i&&(t={textures:{},images:{}});var n={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==da&&(n.blending=this.blending),this.shading!==ca&&(n.shading=this.shading),this.side!==ra&&(n.side=this.side),this.vertexColors!==ha&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),n.skinning=this.skinning,n.morphTargets=this.morphTargets,i){var r=e(t.textures),a=e(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.shading=t.shading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,i=null;if(null!==e){var n=e.length;i=new Array(n);for(var r=0;r!==n;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},Object.assign(J.prototype,e.prototype),Q.prototype=Object.create(J.prototype),Q.prototype.constructor=Q,Q.prototype.isShaderMaterial=!0,Q.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ys.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},Q.prototype.toJSON=function(t){var e=J.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},K.prototype=Object.create(J.prototype),K.prototype.constructor=K,K.prototype.isMeshDepthMaterial=!0,K.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},$.prototype={constructor:$,isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=+(1/0),i=+(1/0),n=+(1/0),r=-(1/0),a=-(1/0),o=-(1/0),s=0,c=t.length;s<c;s+=3){var h=t[s],l=t[s+1],u=t[s+2];h<e&&(e=h),l<i&&(i=l),u<n&&(n=u),h>r&&(r=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromBufferAttribute:function(t){for(var e=+(1/0),i=+(1/0),n=+(1/0),r=-(1/0),a=-(1/0),o=-(1/0),s=0,c=t.count;s<c;s++){var h=t.getX(s),l=t.getY(s),u=t.getZ(s);h<e&&(e=h),l<i&&(i=l),u<n&&(n=u),h>r&&(r=h),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new c;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+(1/0),this.max.x=this.max.y=this.max.z=-(1/0),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new c;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new c;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t=new c;return function(e){var i=this;return e.updateMatrixWorld(!0),e.traverse(function(e){var n,r,a=e.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(n=0,r=o.length;n<r;n++)t.copy(o[n]),t.applyMatrix4(e.matrixWorld),i.expandByPoint(t)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(n=0,r=s.count;n<r;n++)t.fromBufferAttribute(s,n).applyMatrix4(e.matrixWorld),i.expandByPoint(t)}}),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){var i=e||new c;return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t;return function(e){return void 0===t&&(t=new c),this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=t.constant&&i>=t.constant},clampPoint:function(t,e){var i=e||new c;return i.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new c;return function(e){var i=t.copy(e).clamp(this.min,this.max);return i.sub(e).length()}}(),getBoundingSphere:function(){var t=new c;return function(e){var i=e||new tt;return this.getCenter(i.center),i.radius=.5*this.getSize(t).length(),i}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new c,new c,new c,new c,new c,new c,new c,new c];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},tt.prototype={constructor:tt,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t;return function(e,i){void 0===t&&(t=new $);var n=this.center;void 0!==i?n.copy(i):t.setFromPoints(e).getCenter(n);for(var r=0,a=0,o=e.length;a<o;a++)r=Math.max(r,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(this.center.dot(t.normal)-t.constant)<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t),n=e||new c;return n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(t){var e=t||new $;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}},et.prototype={constructor:et,isMatrix3:!0,set:function(t,e,i,n,r,a,o,s,c){var h=this.elements;return h[0]=t,h[1]=n,h[2]=o,h[3]=e,h[4]=r,h[5]=s,h[6]=i,h[7]=a,h[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=t.elements;return this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t;return function(e){void 0===t&&(t=new c);for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix3(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],c=t[7],h=t[8];return e*a*h-e*o*c-i*r*h+i*o*s+n*r*c-n*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var i=t.elements,n=this.elements,r=i[0],a=i[1],o=i[2],s=i[3],c=i[4],h=i[5],l=i[6],u=i[7],p=i[8],d=p*c-h*u,f=h*l-p*s,m=u*s-c*l,g=r*d+a*f+o*m;if(0===g){var v="THREE.Matrix3.getInverse(): can\'t invert matrix, determinant is 0";if(e===!0)throw new Error(v);return console.warn(v),this.identity()}var y=1/g;return n[0]=d*y,n[1]=(o*u-p*a)*y,n[2]=(h*a-o*c)*y,n[3]=f*y,n[4]=(p*r-o*l)*y,n[5]=(o*s-h*r)*y,n[6]=m*y,n[7]=(a*l-u*r)*y,n[8]=(c*r-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}},it.prototype={constructor:it,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new c,e=new c;return function(i,n,r){var a=t.subVectors(r,n).cross(e.subVectors(i,n)).normalize();return this.setFromNormalAndCoplanarPoint(a,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var i=this.distanceToPoint(t),n=e||new c;return n.copy(this.normal).multiplyScalar(i)},intersectLine:function(){var t=new c;return function(e,i){var n=i||new c,r=e.delta(t),a=this.normal.dot(r);if(0!==a){var o=-(e.start.dot(this.normal)+this.constant)/a;if(!(o<0||o>1))return n.copy(r).multiplyScalar(o).add(e.start)}else if(0===this.distanceToPoint(e.start))return n.copy(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){var e=t||new c;return e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new c,e=new et;return function(i,n){var r=this.coplanarPoint(t).applyMatrix4(i),a=n||e.getNormalMatrix(i),o=this.normal.applyMatrix3(a).normalize();return this.constant=-r.dot(o),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),\nthis},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}},nt.prototype={constructor:nt,set:function(t,e,i,n,r,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,n=i[0],r=i[1],a=i[2],o=i[3],s=i[4],c=i[5],h=i[6],l=i[7],u=i[8],p=i[9],d=i[10],f=i[11],m=i[12],g=i[13],v=i[14],y=i[15];return e[0].setComponents(o-n,l-s,f-u,y-m).normalize(),e[1].setComponents(o+n,l+s,f+u,y+m).normalize(),e[2].setComponents(o+r,l+c,f+p,y+g).normalize(),e[3].setComponents(o-r,l-c,f-p,y-g).normalize(),e[4].setComponents(o-a,l-h,f-d,y-v).normalize(),e[5].setComponents(o+a,l+h,f+d,y+v).normalize(),this},intersectsObject:function(){var t=new tt;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new tt;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,i=t.center,n=-t.radius,r=0;r<6;r++){var a=e[r].distanceToPoint(i);if(a<n)return!1}return!0},intersectsBox:function(){var t=new c,e=new c;return function(i){for(var n=this.planes,r=0;r<6;r++){var a=n[r];t.x=a.normal.x>0?i.min.x:i.max.x,e.x=a.normal.x>0?i.max.x:i.min.x,t.y=a.normal.y>0?i.min.y:i.max.y,e.y=a.normal.y>0?i.max.y:i.min.y,t.z=a.normal.z>0?i.min.z:i.max.z,e.z=a.normal.z>0?i.max.z:i.min.z;var o=a.distanceToPoint(t),s=a.distanceToPoint(e);if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}},at.prototype={constructor:at,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){var i=e||new c;return i.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new c;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var i=e||new c;i.subVectors(t,this.origin);var n=i.dot(this.direction);return n<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new c;return function(e){var i=t.subVectors(e,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new c,e=new c,i=new c;return function(n,r,a,o){t.copy(n).add(r).multiplyScalar(.5),e.copy(r).sub(n).normalize(),i.copy(this.origin).sub(t);var s,c,h,l,u=.5*n.distanceTo(r),p=-this.direction.dot(e),d=i.dot(this.direction),f=-i.dot(e),m=i.lengthSq(),g=Math.abs(1-p*p);if(g>0)if(s=p*f-d,c=p*d-f,l=u*g,s>=0)if(c>=-l)if(c<=l){var v=1/g;s*=v,c*=v,h=s*(s+p*c+2*d)+c*(p*s+c+2*f)+m}else c=u,s=Math.max(0,-(p*c+d)),h=-s*s+c*(c+2*f)+m;else c=-u,s=Math.max(0,-(p*c+d)),h=-s*s+c*(c+2*f)+m;else c<=-l?(s=Math.max(0,-(-p*u+d)),c=s>0?-u:Math.min(Math.max(-u,-f),u),h=-s*s+c*(c+2*f)+m):c<=l?(s=0,c=Math.min(Math.max(-u,-f),u),h=c*(c+2*f)+m):(s=Math.max(0,-(p*u+d)),c=s>0?u:Math.min(Math.max(-u,-f),u),h=-s*s+c*(c+2*f)+m);else c=p>0?-u:u,s=Math.max(0,-(p*c+d)),h=-s*s+c*(c+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(c).add(t),h}}(),intersectSphere:function(){var t=new c;return function(e,i){t.subVectors(e.center,this.origin);var n=t.dot(this.direction),r=t.dot(t)-n*n,a=e.radius*e.radius;if(r>a)return null;var o=Math.sqrt(a-r),s=n-o,c=n+o;return s<0&&c<0?null:s<0?this.at(c,i):this.at(s,i)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);if(0===e)return!0;var i=t.normal.dot(this.direction);return i*e<0},intersectBox:function(t,e){var i,n,r,a,o,s,c=1/this.direction.x,h=1/this.direction.y,l=1/this.direction.z,u=this.origin;return c>=0?(i=(t.min.x-u.x)*c,n=(t.max.x-u.x)*c):(i=(t.max.x-u.x)*c,n=(t.min.x-u.x)*c),h>=0?(r=(t.min.y-u.y)*h,a=(t.max.y-u.y)*h):(r=(t.max.y-u.y)*h,a=(t.min.y-u.y)*h),i>a||r>n?null:((r>i||i!==i)&&(i=r),(a<n||n!==n)&&(n=a),l>=0?(o=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),i>s||o>n?null:((o>i||i!==i)&&(i=o),(s<n||n!==n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))},intersectsBox:function(){var t=new c;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){var t=new c,e=new c,i=new c,n=new c;return function(r,a,o,s,c){e.subVectors(a,r),i.subVectors(o,r),n.crossVectors(e,i);var h,l=this.direction.dot(n);if(l>0){if(s)return null;h=1}else{if(!(l<0))return null;h=-1,l=-l}t.subVectors(this.origin,r);var u=h*this.direction.dot(i.crossVectors(t,i));if(u<0)return null;var p=h*this.direction.dot(e.cross(t));if(p<0)return null;if(u+p>l)return null;var d=-h*t.dot(n);return d<0?null:this.at(d/l,c)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}},ot.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ot.DefaultOrder="XYZ",ot.prototype={constructor:ot,isEuler:!0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=us.clamp,r=t.elements,a=r[0],o=r[4],s=r[8],c=r[1],h=r[5],l=r[9],u=r[2],p=r[6],d=r[10];return e=e||this._order,"XYZ"===e?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,a))):"ZYX"===e?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===e?(this._z=Math.asin(n(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===e?(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,h),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,i!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var t;return function(e,i,n){return void 0===t&&(t=new h),t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,i,n)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new s;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new c(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},st.prototype={constructor:st,set:function(t){this.mask=1<<t},enable:function(t){this.mask|=1<<t},toggle:function(t){this.mask^=1<<t},disable:function(t){this.mask&=~(1<<t)},test:function(t){return 0!==(this.mask&t.mask)}};var Eh=0;ct.DefaultUp=new c(0,1,0),ct.DefaultMatrixAutoUpdate=!0,ct.prototype={constructor:ct,isObject3D:!0,applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new s;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new c(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new c(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new c(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new c;return function(e,i){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new c(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new c(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new c(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new h;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new h;return function(e){t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can\'t be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1)for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);var i=this.children.indexOf(t);i!==-1&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(i,1))},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i],a=r.getObjectByProperty(t,e);if(void 0!==a)return a}},getWorldPosition:function(t){var e=t||new c;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new c,e=new c;return function(i){var n=i||new s;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,n,e),n}}(),getWorldRotation:function(){var t=new s;return function(e){var i=e||new ot;return this.getWorldQuaternion(t),i.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new c,e=new s;return function(i){var n=i||new c;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,n),n}}(),getWorldDirection:function(){var t=new s;return function(e){var i=e||new c;return this.getWorldQuaternion(t),i.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(this.visible!==!1){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate===!0&&this.updateMatrix(),this.matrixWorldNeedsUpdate!==!0&&t!==!0||(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},toJSON:function(t){function e(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}var i=void 0===t||""===t,n={};i&&(t={geometries:{},materials:{},textures:{},images:{}},n.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var r={};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),r.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===t.geometries[this.geometry.uuid]&&(t.geometries[this.geometry.uuid]=this.geometry.toJSON(t)),r.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===t.materials[this.material.uuid]&&(t.materials[this.material.uuid]=this.material.toJSON(t)),r.material=this.material.uuid),this.children.length>0){r.children=[];for(var a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(t).object)}if(i){var o=e(t.geometries),s=e(t.materials),c=e(t.textures),h=e(t.images);o.length>0&&(n.geometries=o),s.length>0&&(n.materials=s),c.length>0&&(n.textures=c),h.length>0&&(n.images=h)}return n.object=r,n},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(var i=0;i<t.children.length;i++){var n=t.children[i];this.add(n.clone())}return this}},Object.assign(ct.prototype,e.prototype),ht.prototype={constructor:ht,set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){var e=t||new c;return e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){var e=t||new c;return e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var i=e||new c;return this.delta(i).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new c,e=new c;return function(i,n){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var r=e.dot(e),a=e.dot(t),o=a/r;return n&&(o=us.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,i){var n=this.closestPointToPointParameter(t,e),r=i||new c;return this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}},lt.normal=function(){var t=new c;return function(e,i,n,r){var a=r||new c;a.subVectors(n,i),t.subVectors(e,i),a.cross(t);var o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),lt.barycoordFromPoint=function(){var t=new c,e=new c,i=new c;return function(n,r,a,o,s){t.subVectors(o,r),e.subVectors(a,r),i.subVectors(n,r);var h=t.dot(t),l=t.dot(e),u=t.dot(i),p=e.dot(e),d=e.dot(i),f=h*p-l*l,m=s||new c;if(0===f)return m.set(-2,-1,-1);var g=1/f,v=(p*u-l*d)*g,y=(h*d-l*u)*g;return m.set(1-v-y,y,v)}}(),lt.containsPoint=function(){var t=new c;return function(e,i,n,r){var a=lt.barycoordFromPoint(e,i,n,r,t);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),lt.prototype={constructor:lt,set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new c,e=new c;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){var e=t||new c;return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return lt.normal(this.a,this.b,this.c,t)},plane:function(t){var e=t||new it;return e.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return lt.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return lt.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var t,e,i,n;return function(r,a){void 0===t&&(t=new it,e=[new ht,new ht,new ht],i=new c,n=new c);var o=a||new c,s=1/0;if(t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(r,i),this.containsPoint(i)===!0)o.copy(i);else{e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var h=0;h<e.length;h++){e[h].closestPointToPoint(i,!0,n);var l=i.distanceToSquared(n);l<s&&(s=l,o.copy(n))}}return o}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}},ut.prototype={constructor:ut,clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}},pt.prototype=Object.create(J.prototype),pt.prototype.constructor=pt,pt.prototype.isMeshBasicMaterial=!0,pt.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},dt.prototype={constructor:dt,isBufferAttribute:!0,set needsUpdate(t){t===!0&&this.version++},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),a=new W),e[i++]=a.r,e[i++]=a.g,e[i++]=a.b}return this},copyIndicesArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];e[i++]=a.a,e[i++]=a.b,e[i++]=a.c}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,r=0,a=t.length;r<a;r++){var o=t[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new i),e[n++]=o.x,e[n++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),a=new c),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,a=t.length;n<a;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),o=new r),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z,e[i++]=o.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},ft.prototype=Object.create(dt.prototype),ft.prototype.constructor=ft,mt.prototype=Object.create(dt.prototype),mt.prototype.constructor=mt,gt.prototype=Object.create(dt.prototype),gt.prototype.constructor=gt,vt.prototype=Object.create(dt.prototype),vt.prototype.constructor=vt,yt.prototype=Object.create(dt.prototype),yt.prototype.constructor=yt,xt.prototype=Object.create(dt.prototype),xt.prototype.constructor=xt,_t.prototype=Object.create(dt.prototype),_t.prototype.constructor=_t,bt.prototype=Object.create(dt.prototype),bt.prototype.constructor=bt,wt.prototype=Object.create(dt.prototype),wt.prototype.constructor=wt,Object.assign(Mt.prototype,{computeGroups:function(t){for(var e,i=[],n=void 0,r=t.faces,a=0;a<r.length;a++){var o=r[a];o.materialIndex!==n&&(n=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,i.push(e)),e={start:3*a,materialIndex:n})}void 0!==e&&(e.count=3*a-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,n=t.faces,r=t.vertices,a=t.faceVertexUvs,o=a[0]&&a[0].length>0,s=a[1]&&a[1].length>0,c=t.morphTargets,h=c.length;if(h>0){e=[];for(var l=0;l<h;l++)e[l]=[];this.morphTargets.position=e}var u,p=t.morphNormals,d=p.length;if(d>0){u=[];for(var l=0;l<d;l++)u[l]=[];this.morphTargets.normal=u}for(var f=t.skinIndices,m=t.skinWeights,g=f.length===r.length,v=m.length===r.length,l=0;l<n.length;l++){var y=n[l];this.vertices.push(r[y.a],r[y.b],r[y.c]);var x=y.vertexNormals;if(3===x.length)this.normals.push(x[0],x[1],x[2]);else{var _=y.normal;this.normals.push(_,_,_)}var b=y.vertexColors;if(3===b.length)this.colors.push(b[0],b[1],b[2]);else{var w=y.color;this.colors.push(w,w,w)}if(o===!0){var M=a[0][l];void 0!==M?this.uvs.push(M[0],M[1],M[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",l),this.uvs.push(new i,new i,new i))}if(s===!0){var M=a[1][l];void 0!==M?this.uvs2.push(M[0],M[1],M[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",l),this.uvs2.push(new i,new i,new i))}for(var E=0;E<h;E++){var T=c[E].vertices;e[E].push(T[y.a],T[y.b],T[y.c])}for(var E=0;E<d;E++){var S=p[E].vertexNormals[l];u[E].push(S.a,S.b,S.c)}g&&this.skinIndices.push(f[y.a],f[y.b],f[y.c]),v&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var Th=0;St.prototype={constructor:St,isGeometry:!0,applyMatrix:function(t){for(var e=(new et).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++){var r=this.vertices[i];r.applyMatrix4(t)}for(var i=0,n=this.faces.length;i<n;i++){var a=this.faces[i];a.normal.applyMatrix3(e).normalize();for(var o=0,s=a.vertexNormals.length;o<s;o++)a.vertexNormals[o].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t;return function(e){return void 0===t&&(t=new h),t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t;return function(e){return void 0===t&&(t=new h),t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t;return function(e){return void 0===t&&(t=new h),t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t;return function(e,i,n){return void 0===t&&(t=new h),t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){var t;return function(e,i,n){return void 0===t&&(t=new h),t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t;return function(e){void 0===t&&(t=new ct),t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function e(t,e,i,r){var a=void 0!==s?[p[t].clone(),p[e].clone(),p[i].clone()]:[],o=void 0!==h?[n.colors[t].clone(),n.colors[e].clone(),n.colors[i].clone()]:[],c=new ut(t,e,i,a,o,r);n.faces.push(c),void 0!==l&&n.faceVertexUvs[0].push([d[t].clone(),d[e].clone(),d[i].clone()]),void 0!==u&&n.faceVertexUvs[1].push([f[t].clone(),f[e].clone(),f[i].clone()])}var n=this,r=null!==t.index?t.index.array:void 0,a=t.attributes,o=a.position.array,s=void 0!==a.normal?a.normal.array:void 0,h=void 0!==a.color?a.color.array:void 0,l=void 0!==a.uv?a.uv.array:void 0,u=void 0!==a.uv2?a.uv2.array:void 0;void 0!==u&&(this.faceVertexUvs[1]=[]);for(var p=[],d=[],f=[],m=0,g=0;m<o.length;m+=3,g+=2)n.vertices.push(new c(o[m],o[m+1],o[m+2])),void 0!==s&&p.push(new c(s[m],s[m+1],s[m+2])),void 0!==h&&n.colors.push(new W(h[m],h[m+1],h[m+2])),void 0!==l&&d.push(new i(l[g],l[g+1])),void 0!==u&&f.push(new i(u[g],u[g+1]));if(void 0!==r){var v=t.groups;if(v.length>0)for(var m=0;m<v.length;m++)for(var y=v[m],x=y.start,_=y.count,g=x,b=x+_;g<b;g+=3)e(r[g],r[g+1],r[g+2],y.materialIndex);else for(var m=0;m<r.length;m+=3)e(r[m],r[m+1],r[m+2])}else for(var m=0;m<o.length/3;m+=3)e(m,m+1,m+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,n=new h;return n.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix(n),this},computeFaceNormals:function(){for(var t=new c,e=new c,i=0,n=this.faces.length;i<n;i++){var r=this.faces[i],a=this.vertices[r.a],o=this.vertices[r.b],s=this.vertices[r.c];t.subVectors(s,o),e.subVectors(a,o),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);var e,i,n,r,a,o;for(o=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)o[e]=new c;if(t){var s,h,l,u=new c,p=new c;for(n=0,r=this.faces.length;n<r;n++)a=this.faces[n],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],u.subVectors(l,h),p.subVectors(s,h),u.cross(p),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)}else for(this.computeFaceNormals(),n=0,r=this.faces.length;n<r;n++)a=this.faces[n],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(e=0,i=this.vertices.length;e<i;e++)o[e].normalize();for(n=0,r=this.faces.length;n<r;n++){a=this.faces[n];var d=a.vertexNormals;3===d.length?(d[0].copy(o[a.a]),d[1].copy(o[a.b]),d[2].copy(o[a.c])):(d[0]=o[a.a].clone(),d[1]=o[a.b].clone(),d[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){i=this.faces[t];var n=i.vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,n,r;for(i=0,n=this.faces.length;i<n;i++)for(r=this.faces[i],r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var a=new St;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var o,s,h=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)o=new c,s={a:new c,b:new c,c:new c},h.push(o),l.push(s)}var u=this.morphNormals[t];a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals();var o,s;for(i=0,n=this.faces.length;i<n;i++)r=this.faces[i],o=u.faceNormals[i],s=u.vertexNormals[i],o.copy(r.normal),s.a.copy(r.vertexNormals[0]),s.b.copy(r.vertexNormals[1]),s.c.copy(r.vertexNormals[2])}for(i=0,n=this.faces.length;i<n;i++)r=this.faces[i],r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,n=e.length;i<n;i++)i>0&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new $),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new tt),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if((t&&t.isGeometry)===!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);var n,r=this.vertices.length,a=this.vertices,o=t.vertices,s=this.faces,c=t.faces,h=this.faceVertexUvs[0],l=t.faceVertexUvs[0],u=this.colors,p=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new et).getNormalMatrix(e));for(var d=0,f=o.length;d<f;d++){var m=o[d],g=m.clone();void 0!==e&&g.applyMatrix4(e),a.push(g)}for(var d=0,f=p.length;d<f;d++)u.push(p[d].clone());for(d=0,f=c.length;d<f;d++){var v,y,x,_=c[d],b=_.vertexNormals,w=_.vertexColors;v=new ut(_.a+r,_.b+r,_.c+r),v.normal.copy(_.normal),void 0!==n&&v.normal.applyMatrix3(n).normalize();for(var M=0,E=b.length;M<E;M++)y=b[M].clone(),void 0!==n&&y.applyMatrix3(n).normalize(),v.vertexNormals.push(y);v.color.copy(_.color);for(var M=0,E=w.length;M<E;M++)x=w[M],v.vertexColors.push(x.clone());v.materialIndex=_.materialIndex+i,s.push(v)}for(d=0,f=l.length;d<f;d++){var T=l[d],S=[];if(void 0!==T){for(var M=0,E=T.length;M<E;M++)S.push(T[M].clone());h.push(S)}}},mergeMesh:function(t){return(t&&t.isMesh)===!1?void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t):(t.matrixAutoUpdate&&t.updateMatrix(),\nvoid this.merge(t.geometry,t.matrix))},mergeVertices:function(){var t,e,i,n,r,a,o,s,c={},h=[],l=[],u=4,p=Math.pow(10,u);for(i=0,n=this.vertices.length;i<n;i++)t=this.vertices[i],e=Math.round(t.x*p)+"_"+Math.round(t.y*p)+"_"+Math.round(t.z*p),void 0===c[e]?(c[e]=i,h.push(this.vertices[i]),l[i]=h.length-1):l[i]=l[c[e]];var d=[];for(i=0,n=this.faces.length;i<n;i++){r=this.faces[i],r.a=l[r.a],r.b=l[r.b],r.c=l[r.c],a=[r.a,r.b,r.c];for(var f=0;f<3;f++)if(a[f]===a[(f+1)%3]){d.push(i);break}}for(i=d.length-1;i>=0;i--){var m=d[i];for(this.faces.splice(m,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(m,1)}var g=this.vertices.length-h.length;return this.vertices=h,g},sortFacesByMaterialIndex:function(){function t(t,e){return t.materialIndex-e.materialIndex}for(var e=this.faces,i=e.length,n=0;n<i;n++)e[n]._id=n;e.sort(t);var r,a,o=this.faceVertexUvs[0],s=this.faceVertexUvs[1];o&&o.length===i&&(r=[]),s&&s.length===i&&(a=[]);for(var n=0;n<i;n++){var c=e[n]._id;r&&r.push(o[c]),a&&a.push(s[c])}r&&(this.faceVertexUvs[0]=r),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){function t(t,e,i){return i?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==p[e]?p[e]:(p[e]=u.length/3,u.push(t.x,t.y,t.z),p[e])}function i(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==f[e]?f[e]:(f[e]=d.length,d.push(t.getHex()),f[e])}function n(t){var e=t.x.toString()+t.y.toString();return void 0!==g[e]?g[e]:(g[e]=m.length/2,m.push(t.x,t.y),g[e])}var r={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(r[o]=a[o]);return r}for(var s=[],c=0;c<this.vertices.length;c++){var h=this.vertices[c];s.push(h.x,h.y,h.z)}for(var l=[],u=[],p={},d=[],f={},m=[],g={},c=0;c<this.faces.length;c++){var v=this.faces[c],y=!0,x=!1,_=void 0!==this.faceVertexUvs[0][c],b=v.normal.length()>0,w=v.vertexNormals.length>0,M=1!==v.color.r||1!==v.color.g||1!==v.color.b,E=v.vertexColors.length>0,T=0;if(T=t(T,0,0),T=t(T,1,y),T=t(T,2,x),T=t(T,3,_),T=t(T,4,b),T=t(T,5,w),T=t(T,6,M),T=t(T,7,E),l.push(T),l.push(v.a,v.b,v.c),l.push(v.materialIndex),_){var S=this.faceVertexUvs[0][c];l.push(n(S[0]),n(S[1]),n(S[2]))}if(b&&l.push(e(v.normal)),w){var A=v.vertexNormals;l.push(e(A[0]),e(A[1]),e(A[2]))}if(M&&l.push(i(v.color)),E){var L=v.vertexColors;l.push(i(L[0]),i(L[1]),i(L[2]))}}return r.data={},r.data.vertices=s,r.data.normals=u,d.length>0&&(r.data.colors=d),m.length>0&&(r.data.uvs=[m]),r.data.faces=l,r},clone:function(){return(new St).copy(this)},copy:function(t){var e,i,n,r,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());var c=t.colors;for(e=0,i=c.length;e<i;e++)this.colors.push(c[e].clone());var h=t.faces;for(e=0,i=h.length;e<i;e++)this.faces.push(h[e].clone());for(e=0,i=t.faceVertexUvs.length;e<i;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,r=l.length;n<r;n++){var u=l[n],p=[];for(a=0,o=u.length;a<o;a++){var d=u[a];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,i=f.length;e<i;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],n=0,r=f[e].vertices.length;n<r;n++)m.vertices.push(f[e].vertices[n].clone());if(void 0!==f[e].normals)for(m.normals=[],n=0,r=f[e].normals.length;n<r;n++)m.normals.push(f[e].normals[n].clone());this.morphTargets.push(m)}var g=t.morphNormals;for(e=0,i=g.length;e<i;e++){var v={};if(void 0!==g[e].vertexNormals)for(v.vertexNormals=[],n=0,r=g[e].vertexNormals.length;n<r;n++){var y=g[e].vertexNormals[n],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),v.vertexNormals.push(x)}if(void 0!==g[e].faceNormals)for(v.faceNormals=[],n=0,r=g[e].faceNormals.length;n<r;n++)v.faceNormals.push(g[e].faceNormals[n].clone());this.morphNormals.push(v)}var _=t.skinWeights;for(e=0,i=_.length;e<i;e++)this.skinWeights.push(_[e].clone());var b=t.skinIndices;for(e=0,i=b.length;e<i;e++)this.skinIndices.push(b[e].clone());var w=t.lineDistances;for(e=0,i=w.length;e<i;e++)this.lineDistances.push(w[e]);var M=t.boundingBox;null!==M&&(this.boundingBox=M.clone());var E=t.boundingSphere;return null!==E&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},Object.assign(St.prototype,e.prototype),At.prototype={constructor:At,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(Et(t)>65535?_t:yt)(t,1):this.index=t},addAttribute:function(t,e){return(e&&e.isBufferAttribute)===!1&&(e&&e.isInterleavedBufferAttribute)===!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new dt(arguments[1],arguments[2]))):"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):(this.attributes[t]=e,this)},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;if(void 0!==i){var n=(new et).getNormalMatrix(t);n.applyToBufferAttribute(i),i.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t;return function(e){return void 0===t&&(t=new h),t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t;return function(e){return void 0===t&&(t=new h),t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t;return function(e){return void 0===t&&(t=new h),t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t;return function(e,i,n){return void 0===t&&(t=new h),t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){var t;return function(e,i,n){return void 0===t&&(t=new h),t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t;return function(e){void 0===t&&(t=new ct),t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var i=new bt(3*e.vertices.length,3),n=new bt(3*e.colors.length,3);if(this.addAttribute("position",i.copyVector3sArray(e.vertices)),this.addAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new bt(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var i=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}var n;return e.verticesNeedUpdate===!0&&(n=this.attributes.position,void 0!==n&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1),e.normalsNeedUpdate===!0&&(n=this.attributes.normal,void 0!==n&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1),e.colorsNeedUpdate===!0&&(n=this.attributes.color,void 0!==n&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(n=this.attributes.uv,void 0!==n&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(n=this.attributes.lineDistance,void 0!==n&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Mt).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new dt(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.addAttribute("normal",new dt(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.addAttribute("color",new dt(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new dt(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new dt(a,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var o=Et(t.indices)>65535?Uint32Array:Uint16Array,s=new o(3*t.indices.length);this.setIndex(new dt(s,1).copyIndicesArray(t.indices))}this.groups=t.groups;for(var c in t.morphTargets){for(var h=[],l=t.morphTargets[c],u=0,p=l.length;u<p;u++){var d=l[u],f=new bt(3*d.length,3);h.push(f.copyVector3sArray(d))}this.morphAttributes[c]=h}if(t.skinIndices.length>0){var m=new bt(4*t.skinIndices.length,4);this.addAttribute("skinIndex",m.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var g=new bt(4*t.skinWeights.length,4);this.addAttribute("skinWeight",g.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new $);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error(\'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.\',this)},computeBoundingSphere:function(){var t=new $,e=new c;return function(){null===this.boundingSphere&&(this.boundingSphere=new tt);var i=this.attributes.position;if(i){var n=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(n);for(var r=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),r=Math.max(r,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error(\'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.\',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,i=this.groups;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new dt(new Float32Array(n.length),3));else for(var r=e.normal.array,a=0,o=r.length;a<o;a++)r[a]=0;var s,h,l,u=e.normal.array,p=new c,d=new c,f=new c,m=new c,g=new c;if(t){var v=t.array;0===i.length&&this.addGroup(0,v.length);for(var y=0,x=i.length;y<x;++y)for(var _=i[y],b=_.start,w=_.count,a=b,o=b+w;a<o;a+=3)s=3*v[a+0],h=3*v[a+1],l=3*v[a+2],p.fromArray(n,s),d.fromArray(n,h),f.fromArray(n,l),m.subVectors(f,d),g.subVectors(p,d),m.cross(g),u[s]+=m.x,u[s+1]+=m.y,u[s+2]+=m.z,u[h]+=m.x,u[h+1]+=m.y,u[h+2]+=m.z,u[l]+=m.x,u[l+1]+=m.y,u[l+2]+=m.z}else for(var a=0,o=n.length;a<o;a+=9)p.fromArray(n,a),d.fromArray(n,a+3),f.fromArray(n,a+6),m.subVectors(f,d),g.subVectors(p,d),m.cross(g),u[a]=m.x,u[a+1]=m.y,u[a+2]=m.z,u[a+3]=m.x,u[a+4]=m.y,u[a+5]=m.z,u[a+6]=m.x,u[a+7]=m.y,u[a+8]=m.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if((t&&t.isBufferGeometry)===!1)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0);var i=this.attributes;for(var n in i)if(void 0!==t.attributes[n])for(var r=i[n],a=r.array,o=t.attributes[n],s=o.array,c=o.itemSize,h=0,l=c*e;h<s.length;h++,l++)a[l]=s[h];return this},normalizeNormals:function(){for(var t,e,i,n,r=this.attributes.normal.array,a=0,o=r.length;a<o;a+=3)t=r[a],e=r[a+1],i=r[a+2],n=1/Math.sqrt(t*t+e*e+i*i),r[a]*=n,r[a+1]*=n,r[a+2]*=n},toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t=new At,e=this.index.array,i=this.attributes;for(var n in i){for(var r=i[n],a=r.array,o=r.itemSize,s=new a.constructor(e.length*o),c=0,h=0,l=0,u=e.length;l<u;l++){c=e[l]*o;for(var p=0;p<o;p++)s[h++]=a[c++]}t.addAttribute(n,new dt(s,o))}return t},toJSON:function(){var t={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;if(null!==n){var r=Array.prototype.slice.call(n.array);t.data.index={type:n.array.constructor.name,array:r}}var a=this.attributes;for(var i in a){var o=a[i],r=Array.prototype.slice.call(o.array);t.data.attributes[i]={itemSize:o.itemSize,type:o.array.constructor.name,array:r,normalized:o.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var c=this.boundingSphere;return null!==c&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t},clone:function(){return(new At).copy(this)},copy:function(t){var e,i,n;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;null!==r&&this.setIndex(r.clone());var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var c=[],h=s[e];for(i=0,n=h.length;i<n;i++)c.push(h[i].clone());this.morphAttributes[e]=c}var l=t.groups;for(i=0,n=l.length;i<n;i++){var u=l[i];this.addGroup(u.start,u.count,u.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},At.MaxIndex=65535,Object.assign(At.prototype,e.prototype),Lt.prototype=Object.assign(Object.create(ct.prototype),{constructor:Lt,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return ct.prototype.copy.call(this,t),this.drawMode=t.drawMode,this},updateMorphTargets:function(){var t=this.geometry.morphTargets;if(void 0!==t&&t.length>0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,i=t.length;e<i;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[t[e].name]=e}},raycast:function(){function t(t,e,i,n,r,a,o){return lt.barycoordFromPoint(t,e,i,n,y),r.multiplyScalar(y.x),a.multiplyScalar(y.y),o.multiplyScalar(y.z),r.add(a).add(o),r.clone()}function e(t,e,i,n,r,a,o){var s,c=t.material;if(s=c.side===aa?i.intersectTriangle(a,r,n,!0,o):i.intersectTriangle(n,r,a,c.side!==oa,o),null===s)return null;_.copy(o),_.applyMatrix4(t.matrixWorld);var h=e.ray.origin.distanceTo(_);return h<e.near||h>e.far?null:{distance:h,point:_.clone(),object:t}}function n(i,n,r,a,o,c,h,p){s.fromBufferAttribute(a,c),l.fromBufferAttribute(a,h),u.fromBufferAttribute(a,p);var d=e(i,n,r,s,l,u,x);return d&&(o&&(m.fromBufferAttribute(o,c),g.fromBufferAttribute(o,h),v.fromBufferAttribute(o,p),d.uv=t(x,s,l,u,m,g,v)),d.face=new ut(c,h,p,lt.normal(s,l,u)),d.faceIndex=c),d}var r=new h,a=new at,o=new tt,s=new c,l=new c,u=new c,p=new c,d=new c,f=new c,m=new i,g=new i,v=new i,y=new c,x=new c,_=new c;return function(i,c){var h=this.geometry,y=this.material,_=this.matrixWorld;if(void 0!==y&&(null===h.boundingSphere&&h.computeBoundingSphere(),o.copy(h.boundingSphere),o.applyMatrix4(_),i.ray.intersectsSphere(o)!==!1&&(r.getInverse(_),a.copy(i.ray).applyMatrix4(r),null===h.boundingBox||a.intersectsBox(h.boundingBox)!==!1))){var b;if(h.isBufferGeometry){var w,M,E,T,S,A=h.index,L=h.attributes.position,R=h.attributes.uv;if(null!==A)for(T=0,S=A.count;T<S;T+=3)w=A.getX(T),M=A.getX(T+1),E=A.getX(T+2),b=n(this,i,a,L,R,w,M,E),b&&(b.faceIndex=Math.floor(T/3),c.push(b));else for(T=0,S=L.count;T<S;T+=3)w=T,M=T+1,E=T+2,b=n(this,i,a,L,R,w,M,E),b&&(b.index=w,c.push(b))}else if(h.isGeometry){var P,C,I,U,N=y&&y.isMultiMaterial,D=N===!0?y.materials:null,O=h.vertices,B=h.faces,F=h.faceVertexUvs[0];F.length>0&&(U=F);for(var z=0,G=B.length;z<G;z++){var H=B[z],V=N===!0?D[H.materialIndex]:y;if(void 0!==V){if(P=O[H.a],C=O[H.b],I=O[H.c],V.morphTargets===!0){var k=h.morphTargets,j=this.morphTargetInfluences;s.set(0,0,0),l.set(0,0,0),u.set(0,0,0);for(var W=0,X=k.length;W<X;W++){var q=j[W];if(0!==q){var Y=k[W].vertices;s.addScaledVector(p.subVectors(Y[H.a],P),q),l.addScaledVector(d.subVectors(Y[H.b],C),q),u.addScaledVector(f.subVectors(Y[H.c],I),q)}}s.add(P),l.add(C),u.add(I),P=s,C=l,I=u}if(b=e(this,i,a,P,C,I,x)){if(U){var Z=U[z];m.copy(Z[0]),g.copy(Z[1]),v.copy(Z[2]),b.uv=t(x,P,C,I,m,g,v)}b.face=H,b.faceIndex=z,c.push(b)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Rt.prototype=Object.create(St.prototype),Rt.prototype.constructor=Rt,Pt.prototype=Object.create(At.prototype),Pt.prototype.constructor=Pt,Ct.prototype=Object.create(St.prototype),Ct.prototype.constructor=Ct,It.prototype=Object.create(At.prototype),It.prototype.constructor=It,Ut.prototype=Object.create(ct.prototype),Ut.prototype.constructor=Ut,Ut.prototype.isCamera=!0,Ut.prototype.getWorldDirection=function(){var t=new s;return function(e){var i=e||new c;return this.getWorldQuaternion(t),i.set(0,0,-1).applyQuaternion(t)}}(),Ut.prototype.lookAt=function(){var t=new h;return function(e){t.lookAt(this.position,e,this.up),this.quaternion.setFromRotationMatrix(t)}}(),Ut.prototype.clone=function(){return(new this.constructor).copy(this)},Ut.prototype.copy=function(t){return ct.prototype.copy.call(this,t),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},Nt.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Nt,isPerspectiveCamera:!0,copy:function(t){return Ut.prototype.copy.call(this,t),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*us.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*us.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*us.RAD2DEG*Math.atan(Math.tan(.5*us.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,n,r,a){this.aspect=t/e,this.view={fullWidth:t,fullHeight:e,offsetX:i,offsetY:n,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*us.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==a){var o=a.fullWidth,s=a.fullHeight;r+=a.offsetX*n/o,e-=a.offsetY*i/s,n*=a.width/o,i*=a.height/s}var c=this.filmOffset;0!==c&&(r+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far)},toJSON:function(t){var e=ct.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),Dt.prototype=Object.assign(Object.create(Ut.prototype),{constructor:Dt,isOrthographicCamera:!0,copy:function(t){return Ut.prototype.copy.call(this,t),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,a){this.view={fullWidth:t,fullHeight:e,offsetX:i,offsetY:n,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-t,a=i+t,o=n+e,s=n-e;if(null!==this.view){var c=this.zoom/(this.view.width/this.view.fullWidth),h=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;r+=l*(this.view.offsetX/c),a=r+l*(this.view.width/c),o-=u*(this.view.offsetY/h),s=o-u*(this.view.height/h)}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far)},toJSON:function(t){var e=ct.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}});var Sh=0;he.prototype.isFogExp2=!0,he.prototype.clone=function(){return new he(this.color.getHex(),this.density)},he.prototype.toJSON=function(t){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},le.prototype.isFog=!0,le.prototype.clone=function(){return new le(this.color.getHex(),this.near,this.far)},le.prototype.toJSON=function(t){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},ue.prototype=Object.create(ct.prototype),ue.prototype.constructor=ue,ue.prototype.copy=function(t,e){return ct.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},ue.prototype.toJSON=function(t){var e=ct.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e},pe.prototype=Object.assign(Object.create(ct.prototype),{constructor:pe,isLensFlare:!0,copy:function(t){ct.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,i=t.lensFlares.length;e<i;e++)this.lensFlares.push(t.lensFlares[e]);return this},add:function(t,e,i,n,r,a){void 0===e&&(e=-1),void 0===i&&(i=0),void 0===a&&(a=1),void 0===r&&(r=new W(16777215)),void 0===n&&(n=da),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:t,size:e,distance:i,x:0,y:0,z:0,scale:1,rotation:0,opacity:a,color:r,blending:n})},updateLensFlares:function(){var t,e,i=this.lensFlares.length,n=2*-this.positionScreen.x,r=2*-this.positionScreen.y;for(t=0;t<i;t++)e=this.lensFlares[t],e.x=this.positionScreen.x+n*e.distance,e.y=this.positionScreen.y+r*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)}}),de.prototype=Object.create(J.prototype),de.prototype.constructor=de,de.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this},fe.prototype=Object.assign(Object.create(ct.prototype),{constructor:fe,isSprite:!0,raycast:function(){var t=new c;return function(e,i){t.setFromMatrixPosition(this.matrixWorld);var n=e.ray.distanceSqToPoint(t),r=this.scale.x*this.scale.y/4;n>r||i.push({distance:Math.sqrt(n),point:this.position,face:null,object:this})}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),me.prototype=Object.assign(Object.create(ct.prototype),{constructor:me,copy:function(t){ct.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,n=e.length;i<n;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,n=0;n<i.length&&!(e<i[n].distance);n++);i.splice(n,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(){var t=new c;return function(e,i){t.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(t);this.getObjectForDistance(n).raycast(e,i)}}(),update:function(){var t=new c,e=new c;return function(i){var n=this.levels;if(n.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var r=t.distanceTo(e);n[0].object.visible=!0;for(var a=1,o=n.length;a<o&&r>=n[a].distance;a++)n[a-1].object.visible=!1,n[a].object.visible=!0;for(;a<o;a++)n[a].object.visible=!1}}}(),toJSON:function(t){var e=ct.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,n=0,r=i.length;n<r;n++){var a=i[n];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Object.assign(ge.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var i=new h;this.bones[t]&&i.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(i)}},pose:function(){for(var t,e=0,i=this.bones.length;e<i;e++)t=this.bones[e],t&&t.matrixWorld.getInverse(this.boneInverses[e]);for(var e=0,i=this.bones.length;e<i;e++)t=this.bones[e],t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new h;return function(){for(var e=0,i=this.bones.length;e<i;e++){var n=this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix;t.multiplyMatrices(n,this.boneInverses[e]),t.toArray(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),clone:function(){return new ge(this.bones,this.boneInverses,this.useVertexTexture)}}),ve.prototype=Object.assign(Object.create(ct.prototype),{constructor:ve,isBone:!0}),ye.prototype=Object.assign(Object.create(Lt.prototype),{constructor:ye,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry&&this.geometry.isGeometry)for(var t=0;t<this.geometry.skinWeights.length;t++){var e=this.geometry.skinWeights[t],i=1/e.lengthManhattan();i!==1/0?e.multiplyScalar(i):e.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry)for(var n=new r,a=this.geometry.attributes.skinWeight,t=0;t<a.count;t++){n.x=a.getX(t),n.y=a.getY(t),n.z=a.getZ(t),n.w=a.getW(t);var i=1/n.lengthManhattan();i!==1/0?n.multiplyScalar(i):n.set(1,0,0,0),a.setXYZW(t,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(t){Lt.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture).copy(this)}}),xe.prototype=Object.create(J.prototype),xe.prototype.constructor=xe,xe.prototype.isLineBasicMaterial=!0,xe.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},_e.prototype=Object.assign(Object.create(ct.prototype),{constructor:_e,isLine:!0,raycast:function(){var t=new h,e=new at,i=new tt;return function(n,r){var a=n.linePrecision,o=a*a,s=this.geometry,h=this.matrixWorld;if(null===s.boundingSphere&&s.computeBoundingSphere(),i.copy(s.boundingSphere),i.applyMatrix4(h),n.ray.intersectsSphere(i)!==!1){t.getInverse(h),e.copy(n.ray).applyMatrix4(t);var l=new c,u=new c,p=new c,d=new c,f=this&&this.isLineSegments?2:1;if(s.isBufferGeometry){var m=s.index,g=s.attributes,v=g.position.array;if(null!==m)for(var y=m.array,x=0,_=y.length-1;x<_;x+=f){var b=y[x],w=y[x+1];l.fromArray(v,3*b),u.fromArray(v,3*w);var M=e.distanceSqToSegment(l,u,d,p);if(!(M>o)){d.applyMatrix4(this.matrixWorld);var E=n.ray.origin.distanceTo(d);E<n.near||E>n.far||r.push({distance:E,point:p.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else for(var x=0,_=v.length/3-1;x<_;x+=f){l.fromArray(v,3*x),u.fromArray(v,3*x+3);var M=e.distanceSqToSegment(l,u,d,p);if(!(M>o)){d.applyMatrix4(this.matrixWorld);var E=n.ray.origin.distanceTo(d);E<n.near||E>n.far||r.push({distance:E,point:p.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}else if(s.isGeometry)for(var T=s.vertices,S=T.length,x=0;x<S-1;x+=f){var M=e.distanceSqToSegment(T[x],T[x+1],d,p);if(!(M>o)){d.applyMatrix4(this.matrixWorld);var E=n.ray.origin.distanceTo(d);E<n.near||E>n.far||r.push({distance:E,point:p.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),be.prototype=Object.assign(Object.create(_e.prototype),{constructor:be,isLineSegments:!0}),we.prototype=Object.create(J.prototype),we.prototype.constructor=we,we.prototype.isPointsMaterial=!0,we.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},Me.prototype=Object.assign(Object.create(ct.prototype),{constructor:Me,isPoints:!0,raycast:function(){var t=new h,e=new at,i=new tt;return function(n,r){function a(t,i){var a=e.distanceSqToPoint(t);if(a<p){var s=e.closestPointToPoint(t);s.applyMatrix4(h);var c=n.ray.origin.distanceTo(s);if(c<n.near||c>n.far)return;r.push({distance:c,distanceToRay:Math.sqrt(a),point:s.clone(),index:i,face:null,object:o})}}var o=this,s=this.geometry,h=this.matrixWorld,l=n.params.Points.threshold;if(null===s.boundingSphere&&s.computeBoundingSphere(),i.copy(s.boundingSphere),i.applyMatrix4(h),n.ray.intersectsSphere(i)!==!1){t.getInverse(h),e.copy(n.ray).applyMatrix4(t);var u=l/((this.scale.x+this.scale.y+this.scale.z)/3),p=u*u,d=new c;if(s.isBufferGeometry){var f=s.index,m=s.attributes,g=m.position.array;if(null!==f)for(var v=f.array,y=0,x=v.length;y<x;y++){var _=v[y];d.fromArray(g,3*_),a(d,_)}else for(var y=0,b=g.length/3;y<b;y++)d.fromArray(g,3*y),a(d,y)}else for(var w=s.vertices,y=0,b=w.length;y<b;y++)a(w[y],y)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),Ee.prototype=Object.assign(Object.create(ct.prototype),{constructor:Ee}),Te.prototype=Object.create(n.prototype),Te.prototype.constructor=Te,Se.prototype=Object.create(n.prototype),Se.prototype.constructor=Se,Se.prototype.isCompressedTexture=!0,Ae.prototype=Object.create(n.prototype),Ae.prototype.constructor=Ae,\nLe.prototype=Object.create(n.prototype),Le.prototype.constructor=Le,Le.prototype.isDepthTexture=!0,Re.prototype=Object.create(At.prototype),Re.prototype.constructor=Re,Pe.prototype=Object.create(St.prototype),Pe.prototype.constructor=Pe,Ce.prototype=Object.create(At.prototype),Ce.prototype.constructor=Ce,Ie.prototype=Object.create(St.prototype),Ie.prototype.constructor=Ie,Ue.prototype=Object.create(At.prototype),Ue.prototype.constructor=Ue,Ne.prototype=Object.create(St.prototype),Ne.prototype.constructor=Ne,De.prototype=Object.create(Ue.prototype),De.prototype.constructor=De,Oe.prototype=Object.create(St.prototype),Oe.prototype.constructor=Oe,Be.prototype=Object.create(Ue.prototype),Be.prototype.constructor=Be,Fe.prototype=Object.create(St.prototype),Fe.prototype.constructor=Fe,ze.prototype=Object.create(Ue.prototype),ze.prototype.constructor=ze,Ge.prototype=Object.create(St.prototype),Ge.prototype.constructor=Ge,He.prototype=Object.create(Ue.prototype),He.prototype.constructor=He,Ve.prototype=Object.create(St.prototype),Ve.prototype.constructor=Ve,ke.prototype=Object.create(At.prototype),ke.prototype.constructor=ke,je.prototype=Object.create(St.prototype),je.prototype.constructor=je,We.prototype=Object.create(At.prototype),We.prototype.constructor=We,Xe.prototype=Object.create(St.prototype),Xe.prototype.constructor=Xe,qe.prototype=Object.create(At.prototype),qe.prototype.constructor=qe;var Ah={area:function(t){for(var e=t.length,i=0,n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i},triangulate:function(){function t(t,e,i,n,r,a){var o,s,c,h,l,u,p,d,f;if(s=t[a[e]].x,c=t[a[e]].y,h=t[a[i]].x,l=t[a[i]].y,u=t[a[n]].x,p=t[a[n]].y,(h-s)*(p-c)-(l-c)*(u-s)<=0)return!1;var m,g,v,y,x,_,b,w,M,E,T,S,A,L,R;for(m=u-h,g=p-l,v=s-u,y=c-p,x=h-s,_=l-c,o=0;o<r;o++)if(d=t[a[o]].x,f=t[a[o]].y,!(d===s&&f===c||d===h&&f===l||d===u&&f===p)&&(b=d-s,w=f-c,M=d-h,E=f-l,T=d-u,S=f-p,R=m*E-g*M,A=x*w-_*b,L=v*S-y*T,R>=-Number.EPSILON&&L>=-Number.EPSILON&&A>=-Number.EPSILON))return!1;return!0}return function(e,i){var n=e.length;if(n<3)return null;var r,a,o,s=[],c=[],h=[];if(Ah.area(e)>0)for(a=0;a<n;a++)c[a]=a;else for(a=0;a<n;a++)c[a]=n-1-a;var l=n,u=2*l;for(a=l-1;l>2;){if(u--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),i?h:s;if(r=a,l<=r&&(r=0),a=r+1,l<=a&&(a=0),o=a+1,l<=o&&(o=0),t(e,r,a,o,l,c)){var p,d,f,m,g;for(p=c[r],d=c[a],f=c[o],s.push([e[p],e[d],e[f]]),h.push([c[r],c[a],c[o]]),m=a,g=a+1;g<l;m++,g++)c[m]=c[g];l--,u=2*l}}return i?h:s}}(),triangulateShape:function(t,e){function i(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function n(t,e,i){return t.x!==e.x?t.x<e.x?t.x<=i.x&&i.x<=e.x:e.x<=i.x&&i.x<=t.x:t.y<e.y?t.y<=i.y&&i.y<=e.y:e.y<=i.y&&i.y<=t.y}function r(t,e,i,r,a){var o=e.x-t.x,s=e.y-t.y,c=r.x-i.x,h=r.y-i.y,l=t.x-i.x,u=t.y-i.y,p=s*c-o*h,d=s*l-o*u;if(Math.abs(p)>Number.EPSILON){var f;if(p>0){if(d<0||d>p)return[];if(f=h*l-c*u,f<0||f>p)return[]}else{if(d>0||d<p)return[];if(f=h*l-c*u,f>0||f<p)return[]}if(0===f)return!a||0!==d&&d!==p?[t]:[];if(f===p)return!a||0!==d&&d!==p?[e]:[];if(0===d)return[i];if(d===p)return[r];var m=f/p;return[{x:t.x+m*o,y:t.y+m*s}]}if(0!==d||h*l!==c*u)return[];var g=0===o&&0===s,v=0===c&&0===h;if(g&&v)return t.x!==i.x||t.y!==i.y?[]:[t];if(g)return n(i,r,t)?[t]:[];if(v)return n(t,e,i)?[i]:[];var y,x,_,b,w,M,E,T;return 0!==o?(t.x<e.x?(y=t,_=t.x,x=e,b=e.x):(y=e,_=e.x,x=t,b=t.x),i.x<r.x?(w=i,E=i.x,M=r,T=r.x):(w=r,E=r.x,M=i,T=i.x)):(t.y<e.y?(y=t,_=t.y,x=e,b=e.y):(y=e,_=e.y,x=t,b=t.y),i.y<r.y?(w=i,E=i.y,M=r,T=r.y):(w=r,E=r.y,M=i,T=i.y)),_<=E?b<E?[]:b===E?a?[]:[w]:b<=T?[w,x]:[w,M]:_>T?[]:_===T?a?[]:[y]:b<=T?[y,x]:[y,M]}function a(t,e,i,n){var r=e.x-t.x,a=e.y-t.y,o=i.x-t.x,s=i.y-t.y,c=n.x-t.x,h=n.y-t.y,l=r*s-a*o,u=r*h-a*c;if(Math.abs(l)>Number.EPSILON){var p=c*s-h*o;return l>0?u>=0&&p>=0:u>=0||p>=0}return u>0}function o(t,e){function i(t,e){var i=y.length-1,n=t-1;n<0&&(n=i);var r=t+1;r>i&&(r=0);var o=a(y[t],y[n],y[r],s[e]);if(!o)return!1;var c=s.length-1,h=e-1;h<0&&(h=c);var l=e+1;return l>c&&(l=0),o=a(s[e],s[h],s[l],y[t]),!!o}function n(t,e){var i,n,a;for(i=0;i<y.length;i++)if(n=i+1,n%=y.length,a=r(t,e,y[i],y[n],!0),a.length>0)return!0;return!1}function o(t,i){var n,a,o,s,c;for(n=0;n<x.length;n++)for(a=e[x[n]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,c=r(t,i,a[o],a[s],!0),c.length>0)return!0;return!1}for(var s,c,h,l,u,p,d,f,m,g,v,y=t.concat(),x=[],_=[],b=0,w=e.length;b<w;b++)x.push(b);for(var M=0,E=2*x.length;x.length>0;){if(E--,E<0){console.log("Infinite Loop! Holes left:"+x.length+", Probably Hole outside Shape!");break}for(h=M;h<y.length;h++){l=y[h],c=-1;for(var b=0;b<x.length;b++)if(p=x[b],d=l.x+":"+l.y+":"+p,void 0===_[d]){s=e[p];for(var T=0;T<s.length;T++)if(u=s[T],i(h,T)&&!n(l,u)&&!o(l,u)){c=T,x.splice(b,1),f=y.slice(0,h+1),m=y.slice(h),g=s.slice(c),v=s.slice(0,c+1),y=f.concat(g).concat(v).concat(m),M=h;break}if(c>=0)break;_[d]=!0}if(c>=0)break}}return y}i(t),e.forEach(i);for(var s,c,h,l,u,p,d={},f=t.concat(),m=0,g=e.length;m<g;m++)Array.prototype.push.apply(f,e[m]);for(s=0,c=f.length;s<c;s++)u=f[s].x+":"+f[s].y,void 0!==d[u]&&console.warn("THREE.ShapeUtils: Duplicate point",u,s),d[u]=s;var v=o(t,e),y=Ah.triangulate(v,!1);for(s=0,c=y.length;s<c;s++)for(l=y[s],h=0;h<3;h++)u=l[h].x+":"+l[h].y,p=d[u],void 0!==p&&(l[h]=p);return y.concat()},isClockWise:function(t){return Ah.area(t)<0}};Ye.prototype=Object.create(St.prototype),Ye.prototype.constructor=Ye,Ye.prototype.addShapeList=function(t,e){for(var i=t.length,n=0;n<i;n++){var r=t[n];this.addShape(r,e)}},Ye.prototype.addShape=function(t,e){function n(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}function r(t,e,n){var r,a,o=1,s=t.x-e.x,c=t.y-e.y,h=n.x-t.x,l=n.y-t.y,u=s*s+c*c,p=s*l-c*h;if(Math.abs(p)>Number.EPSILON){var d=Math.sqrt(u),f=Math.sqrt(h*h+l*l),m=e.x-c/d,g=e.y+s/d,v=n.x-l/f,y=n.y+h/f,x=((v-m)*l-(y-g)*h)/(s*l-c*h);r=m+s*x-t.x,a=g+c*x-t.y;var _=r*r+a*a;if(_<=2)return new i(r,a);o=Math.sqrt(_/2)}else{var b=!1;s>Number.EPSILON?h>Number.EPSILON&&(b=!0):s<-Number.EPSILON?h<-Number.EPSILON&&(b=!0):Math.sign(c)===Math.sign(l)&&(b=!0),b?(r=-c,a=s,o=Math.sqrt(u)):(r=s,a=c,o=Math.sqrt(u/2))}return new i(r/o,a/o)}function a(){if(b){var t=0,e=j*t;for(q=0;q<W;q++)k=O[q],l(k[2]+e,k[1]+e,k[0]+e);for(t=M+2*_,e=j*t,q=0;q<W;q++)k=O[q],l(k[0]+e,k[1]+e,k[2]+e)}else{for(q=0;q<W;q++)k=O[q],l(k[2],k[1],k[0]);for(q=0;q<W;q++)k=O[q],l(k[0]+j*M,k[1]+j*M,k[2]+j*M)}}function o(){var t=0;for(s(B,t),t+=B.length,L=0,R=N.length;L<R;L++)A=N[L],s(A,t),t+=A.length}function s(t,e){var i,n;for(q=t.length;--q>=0;){i=q,n=q-1,n<0&&(n=t.length-1);var r=0,a=M+2*_;for(r=0;r<a;r++){var o=j*r,s=j*(r+1),c=e+i+o,h=e+n+o,l=e+n+s,p=e+i+s;u(c,h,l,p,t,r,a,i,n)}}}function h(t,e,i){P.vertices.push(new c(t,e,i))}function l(t,e,i){t+=C,e+=C,i+=C,P.faces.push(new ut(t,e,i,null,null,0));var n=S.generateTopUV(P,t,e,i);P.faceVertexUvs[0].push(n)}function u(t,e,i,n,r,a,o,s,c){t+=C,e+=C,i+=C,n+=C,P.faces.push(new ut(t,e,n,null,null,1)),P.faces.push(new ut(e,i,n,null,null,1));var h=S.generateSideWallUV(P,t,e,i,n);P.faceVertexUvs[0].push([h[0],h[1],h[3]]),P.faceVertexUvs[0].push([h[1],h[2],h[3]])}var p,d,f,m,g,v=void 0!==e.amount?e.amount:100,y=void 0!==e.bevelThickness?e.bevelThickness:6,x=void 0!==e.bevelSize?e.bevelSize:y-2,_=void 0!==e.bevelSegments?e.bevelSegments:3,b=void 0===e.bevelEnabled||e.bevelEnabled,w=void 0!==e.curveSegments?e.curveSegments:12,M=void 0!==e.steps?e.steps:1,E=e.extrudePath,T=!1,S=void 0!==e.UVGenerator?e.UVGenerator:Ye.WorldUVGenerator;E&&(p=E.getSpacedPoints(M),T=!0,b=!1,d=void 0!==e.frames?e.frames:E.computeFrenetFrames(M,!1),f=new c,m=new c,g=new c),b||(_=0,y=0,x=0);var A,L,R,P=this,C=this.vertices.length,I=t.extractPoints(w),U=I.shape,N=I.holes,D=!Ah.isClockWise(U);if(D){for(U=U.reverse(),L=0,R=N.length;L<R;L++)A=N[L],Ah.isClockWise(A)&&(N[L]=A.reverse());D=!1}var O=Ah.triangulateShape(U,N),B=U;for(L=0,R=N.length;L<R;L++)A=N[L],U=U.concat(A);for(var F,z,G,H,V,k,j=U.length,W=O.length,X=[],q=0,Y=B.length,Z=Y-1,J=q+1;q<Y;q++,Z++,J++)Z===Y&&(Z=0),J===Y&&(J=0),X[q]=r(B[q],B[Z],B[J]);var Q,K=[],$=X.concat();for(L=0,R=N.length;L<R;L++){for(A=N[L],Q=[],q=0,Y=A.length,Z=Y-1,J=q+1;q<Y;q++,Z++,J++)Z===Y&&(Z=0),J===Y&&(J=0),Q[q]=r(A[q],A[Z],A[J]);K.push(Q),$=$.concat(Q)}for(F=0;F<_;F++){for(G=F/_,H=y*Math.cos(G*Math.PI/2),z=x*Math.sin(G*Math.PI/2),q=0,Y=B.length;q<Y;q++)V=n(B[q],X[q],z),h(V.x,V.y,-H);for(L=0,R=N.length;L<R;L++)for(A=N[L],Q=K[L],q=0,Y=A.length;q<Y;q++)V=n(A[q],Q[q],z),h(V.x,V.y,-H)}for(z=x,q=0;q<j;q++)V=b?n(U[q],$[q],z):U[q],T?(m.copy(d.normals[0]).multiplyScalar(V.x),f.copy(d.binormals[0]).multiplyScalar(V.y),g.copy(p[0]).add(m).add(f),h(g.x,g.y,g.z)):h(V.x,V.y,0);var tt;for(tt=1;tt<=M;tt++)for(q=0;q<j;q++)V=b?n(U[q],$[q],z):U[q],T?(m.copy(d.normals[tt]).multiplyScalar(V.x),f.copy(d.binormals[tt]).multiplyScalar(V.y),g.copy(p[tt]).add(m).add(f),h(g.x,g.y,g.z)):h(V.x,V.y,v/M*tt);for(F=_-1;F>=0;F--){for(G=F/_,H=y*Math.cos(G*Math.PI/2),z=x*Math.sin(G*Math.PI/2),q=0,Y=B.length;q<Y;q++)V=n(B[q],X[q],z),h(V.x,V.y,v+H);for(L=0,R=N.length;L<R;L++)for(A=N[L],Q=K[L],q=0,Y=A.length;q<Y;q++)V=n(A[q],Q[q],z),T?h(V.x,V.y+p[M-1].y,p[M-1].x+H):h(V.x,V.y,v+H)}a(),o()},Ye.WorldUVGenerator={generateTopUV:function(t,e,n,r){var a=t.vertices,o=a[e],s=a[n],c=a[r];return[new i(o.x,o.y),new i(s.x,s.y),new i(c.x,c.y)]},generateSideWallUV:function(t,e,n,r,a){var o=t.vertices,s=o[e],c=o[n],h=o[r],l=o[a];return Math.abs(s.y-c.y)<.01?[new i(s.x,1-s.z),new i(c.x,1-c.z),new i(h.x,1-h.z),new i(l.x,1-l.z)]:[new i(s.y,1-s.z),new i(c.y,1-c.z),new i(h.y,1-h.z),new i(l.y,1-l.z)]}},Ze.prototype=Object.create(Ye.prototype),Ze.prototype.constructor=Ze,Je.prototype=Object.create(St.prototype),Je.prototype.constructor=Je,Qe.prototype=Object.create(At.prototype),Qe.prototype.constructor=Qe,Ke.prototype=Object.create(St.prototype),Ke.prototype.constructor=Ke,$e.prototype=Object.create(At.prototype),$e.prototype.constructor=$e,ti.prototype=Object.create(St.prototype),ti.prototype.constructor=ti,ei.prototype=Object.create(At.prototype),ei.prototype.constructor=ei,ii.prototype=Object.create(St.prototype),ii.prototype.constructor=ii,ni.prototype=Object.create(At.prototype),ni.prototype.constructor=ni,ri.prototype=Object.create(At.prototype),ri.prototype.constructor=ri,ai.prototype=Object.create(St.prototype),ai.prototype.constructor=ai,oi.prototype=Object.create(At.prototype),oi.prototype.constructor=oi,si.prototype=Object.create(ai.prototype),si.prototype.constructor=si,ci.prototype=Object.create(oi.prototype),ci.prototype.constructor=ci,hi.prototype=Object.create(St.prototype),hi.prototype.constructor=hi,li.prototype=Object.create(At.prototype),li.prototype.constructor=li;var Lh=Object.freeze({WireframeGeometry:Re,ParametricGeometry:Pe,ParametricBufferGeometry:Ce,TetrahedronGeometry:Ne,TetrahedronBufferGeometry:De,OctahedronGeometry:Oe,OctahedronBufferGeometry:Be,IcosahedronGeometry:Fe,IcosahedronBufferGeometry:ze,DodecahedronGeometry:Ge,DodecahedronBufferGeometry:He,PolyhedronGeometry:Ie,PolyhedronBufferGeometry:Ue,TubeGeometry:Ve,TubeBufferGeometry:ke,TorusKnotGeometry:je,TorusKnotBufferGeometry:We,TorusGeometry:Xe,TorusBufferGeometry:qe,TextGeometry:Ze,SphereGeometry:Je,SphereBufferGeometry:Qe,RingGeometry:Ke,RingBufferGeometry:$e,PlaneGeometry:Ct,PlaneBufferGeometry:It,LatheGeometry:ti,LatheBufferGeometry:ei,ShapeGeometry:ii,ShapeBufferGeometry:ni,ExtrudeGeometry:Ye,EdgesGeometry:ri,ConeGeometry:si,ConeBufferGeometry:ci,CylinderGeometry:ai,CylinderBufferGeometry:oi,CircleGeometry:hi,CircleBufferGeometry:li,BoxGeometry:Rt,BoxBufferGeometry:Pt});ui.prototype=Object.create(Q.prototype),ui.prototype.constructor=ui,ui.prototype.isShadowMaterial=!0,pi.prototype=Object.create(Q.prototype),pi.prototype.constructor=pi,pi.prototype.isRawShaderMaterial=!0,di.prototype={constructor:di,isMultiMaterial:!0,toJSON:function(t){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},i=this.materials,n=0,r=i.length;n<r;n++){var a=i[n].toJSON(t);delete a.metadata,e.materials.push(a)}return e.visible=this.visible,e},clone:function(){for(var t=new this.constructor,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t.visible=this.visible,t}},fi.prototype=Object.create(J.prototype),fi.prototype.constructor=fi,fi.prototype.isMeshStandardMaterial=!0,fi.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},mi.prototype=Object.create(fi.prototype),mi.prototype.constructor=mi,mi.prototype.isMeshPhysicalMaterial=!0,mi.prototype.copy=function(t){return fi.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},gi.prototype=Object.create(J.prototype),gi.prototype.constructor=gi,gi.prototype.isMeshPhongMaterial=!0,gi.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},vi.prototype=Object.create(gi.prototype),vi.prototype.constructor=vi,vi.prototype.isMeshToonMaterial=!0,vi.prototype.copy=function(t){return gi.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},yi.prototype=Object.create(J.prototype),yi.prototype.constructor=yi,yi.prototype.isMeshNormalMaterial=!0,yi.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},xi.prototype=Object.create(J.prototype),xi.prototype.constructor=xi,xi.prototype.isMeshLambertMaterial=!0,xi.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},_i.prototype=Object.create(J.prototype),_i.prototype.constructor=_i,_i.prototype.isLineDashedMaterial=!0,_i.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Rh=Object.freeze({ShadowMaterial:ui,SpriteMaterial:de,RawShaderMaterial:pi,ShaderMaterial:Q,PointsMaterial:we,MultiMaterial:di,MeshPhysicalMaterial:mi,MeshStandardMaterial:fi,MeshPhongMaterial:gi,MeshToonMaterial:vi,MeshNormalMaterial:yi,MeshLambertMaterial:xi,MeshDepthMaterial:K,MeshBasicMaterial:pt,LineDashedMaterial:_i,LineBasicMaterial:xe,Material:J}),Ph={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},Ch=new bi;Object.assign(wi.prototype,{load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var r=this,a=Ph.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var o=/^data:(.*?)(;base64)?,(.*)$/,s=t.match(o);if(s){var c=s[1],h=!!s[2],l=s[3];l=window.decodeURIComponent(l),h&&(l=window.atob(l));try{var u,p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":u=new ArrayBuffer(l.length);for(var d=new Uint8Array(u),f=0;f<l.length;f++)d[f]=l.charCodeAt(f);"blob"===p&&(u=new Blob([u],{type:c}));break;case"document":var m=new DOMParser;u=m.parseFromString(l,c);break;case"json":u=JSON.parse(l);break;default:u=l}window.setTimeout(function(){e&&e(u),r.manager.itemEnd(t)},0)}catch(e){window.setTimeout(function(){n&&n(e),r.manager.itemError(t)},0)}}else{var g=new XMLHttpRequest;g.open("GET",t,!0),g.addEventListener("load",function(i){var a=i.target.response;Ph.add(t,a),200===this.status?(e&&e(a),r.manager.itemEnd(t)):0===this.status?(console.warn("THREE.FileLoader: HTTP Status 0 received."),e&&e(a),r.manager.itemEnd(t)):(n&&n(i),r.manager.itemError(t))},!1),void 0!==i&&g.addEventListener("progress",function(t){i(t)},!1),g.addEventListener("error",function(e){n&&n(e),r.manager.itemError(t)},!1),void 0!==this.responseType&&(g.responseType=this.responseType),void 0!==this.withCredentials&&(g.withCredentials=this.withCredentials),g.overrideMimeType&&g.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),g.send(null)}return r.manager.itemStart(t),g},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this}}),Object.assign(Mi.prototype,{load:function(t,e,i,n){function r(r){c.load(t[r],function(t){var i=a._parser(t,!0);o[r]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},h+=1,6===h&&(1===i.mipmapCount&&(s.minFilter=lo),s.format=i.format,s.needsUpdate=!0,e&&e(s))},i,n)}var a=this,o=[],s=new Se;s.image=o;var c=new wi(this.manager);if(c.setPath(this.path),c.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,l=0,u=t.length;l<u;++l)r(l);else c.load(t,function(t){var i=a._parser(t,!0);if(i.isCubemap)for(var n=i.mipmaps.length/i.mipmapCount,r=0;r<n;r++){o[r]={mipmaps:[]};for(var c=0;c<i.mipmapCount;c++)o[r].mipmaps.push(i.mipmaps[r*i.mipmapCount+c]),o[r].format=i.format,o[r].width=i.width,o[r].height=i.height}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=lo),s.format=i.format,s.needsUpdate=!0,e&&e(s)},i,n);return s},setPath:function(t){return this.path=t,this}}),Object.assign(Ei.prototype,{load:function(t,e,i,n){var r=this,a=new X,o=new wi(this.manager);return o.setResponseType("arraybuffer"),o.load(t,function(t){var i=r._parser(t);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:ao,a.wrapT=void 0!==i.wrapT?i.wrapT:ao,a.magFilter=void 0!==i.magFilter?i.magFilter:lo,a.minFilter=void 0!==i.minFilter?i.minFilter:po,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps),1===i.mipmapCount&&(a.minFilter=lo),a.needsUpdate=!0,e&&e(a,i))},i,n),a}}),Object.assign(Ti.prototype,{load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var r=this,a=Ph.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");return o.addEventListener("load",function(){Ph.add(t,this),e&&e(this),r.manager.itemEnd(t)},!1),o.addEventListener("error",function(e){n&&n(e),r.manager.itemError(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Si.prototype,{load:function(t,e,i,n){function r(i){o.load(t[i],function(t){a.images[i]=t,s++,6===s&&(a.needsUpdate=!0,e&&e(a))},void 0,n)}var a=new l,o=new Ti(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);for(var s=0,c=0;c<t.length;++c)r(c);return a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Ai.prototype,{load:function(t,e,i,r){var a=new n,o=new Ti(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(i){var n=t.search(/\\.(jpg|jpeg)$/)>0||0===t.search(/^data\\:image\\/jpeg/);a.format=n?Ao:Lo,a.image=i,a.needsUpdate=!0,void 0!==e&&e(a)},i,r),a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Li.prototype=Object.assign(Object.create(ct.prototype),{constructor:Li,isLight:!0,copy:function(t){return ct.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=ct.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Ri.prototype=Object.assign(Object.create(Li.prototype),{constructor:Ri,isHemisphereLight:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(Pi.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Ci.prototype=Object.assign(Object.create(Pi.prototype),{constructor:Ci,isSpotLightShadow:!0,update:function(t){var e=2*us.RAD2DEG*t.angle,i=this.mapSize.width/this.mapSize.height,n=t.distance||500,r=this.camera;e===r.fov&&i===r.aspect&&n===r.far||(r.fov=e,r.aspect=i,r.far=n,r.updateProjectionMatrix())}}),Ii.prototype=Object.assign(Object.create(Li.prototype),{constructor:Ii,isSpotLight:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Ui.prototype=Object.assign(Object.create(Li.prototype),{constructor:Ui,isPointLight:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),Ni.prototype=Object.assign(Object.create(Pi.prototype),{constructor:Ni}),Di.prototype=Object.assign(Object.create(Li.prototype),{constructor:Di,isDirectionalLight:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Oi.prototype=Object.assign(Object.create(Li.prototype),{constructor:Oi,isAmbientLight:!0});var Ih={arraySlice:function(t,e,i){return Ih.isTypedArray(t)?new t.constructor(t.subarray(e,i)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(e,i){return t[e]-t[i]}for(var i=t.length,n=new Array(i),r=0;r!==i;++r)n[r]=r;return n.sort(e),n},sortedArray:function(t,e,i){for(var n=t.length,r=new t.constructor(n),a=0,o=0;o!==n;++a)for(var s=i[a]*e,c=0;c!==e;++c)r[o++]=t[s+c];return r},flattenJSON:function(t,e,i,n){for(var r=1,a=t[0];void 0!==a&&void 0===a[n];)a=t[r++];if(void 0!==a){var o=a[n];if(void 0!==o)if(Array.isArray(o)){do o=a[n],void 0!==o&&(e.push(a.time),i.push.apply(i,o)),a=t[r++];while(void 0!==a)}else if(void 0!==o.toArray){do o=a[n],void 0!==o&&(e.push(a.time),o.toArray(i,i.length)),a=t[r++];while(void 0!==a)}else do o=a[n],void 0!==o&&(e.push(a.time),i.push(o)),a=t[r++];while(void 0!==a)}}};Bi.prototype={constructor:Bi,evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{var a;i:{n:if(!(t<n)){for(var o=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===o)break;if(r=n,n=e[++i],t<n)break e}a=e.length;break i}{if(t>=r)break t;var s=e[1];t<s&&(i=2,r=s);for(var o=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===o)break;if(n=r,r=e[--i-1],t>=r)break e}a=i,i=0}}for(;i<a;){var c=i+a>>>1;t<e[c]?a=c:i=c+1}if(n=e[i],r=e[i-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n,a=0;a!==n;++a)e[a]=i[r+a];return e},interpolate_:function(t,e,i,n){throw new Error("call to abstract method")},intervalChanged_:function(t,e,i){}},Object.assign(Bi.prototype,{beforeStart_:Bi.prototype.copySampleValue_,afterEnd_:Bi.prototype.copySampleValue_}),Fi.prototype=Object.assign(Object.create(Bi.prototype),{constructor:Fi,DefaultSettings_:{endingStart:Zo,endingEnd:Zo},intervalChanged_:function(t,e,i){var n=this.parameterPositions,r=t-2,a=t+1,o=n[r],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case Jo:r=t,o=2*e-i;break;case Qo:r=n.length-2,o=e+n[r]-n[r+1];break;default:r=t,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case Jo:a=t,s=2*i-e;break;case Qo:a=1,s=i+n[1]-n[0];break;default:a=t-1,s=e}var c=.5*(i-e),h=this.valueSize;this._weightPrev=c/(e-o),this._weightNext=c/(s-i),this._offsetPrev=r*h,this._offsetNext=a*h},interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(i-e)/(n-e),f=d*d,m=f*d,g=-u*m+2*u*f-u*d,v=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,_=0;_!==o;++_)r[_]=g*a[h+_]+v*a[c+_]+y*a[s+_]+x*a[l+_];return r}}),zi.prototype=Object.assign(Object.create(Bi.prototype),{constructor:zi,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,c=s-o,h=(i-e)/(n-e),l=1-h,u=0;u!==o;++u)r[u]=a[c+u]*l+a[s+u]*h;return r}}),Gi.prototype=Object.assign(Object.create(Bi.prototype),{constructor:Gi,interpolate_:function(t,e,i,n){return this.copySampleValue_(t-1)}});var Uh;Uh={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:qo,InterpolantFactoryMethodDiscrete:function(t){return new Gi(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new zi(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Fi(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case Xo:e=this.InterpolantFactoryMethodDiscrete;break;case qo:e=this.InterpolantFactoryMethodLinear;break;case Yo:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}return void console.warn(i)}this.createInterpolant=e},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Xo;case this.InterpolantFactoryMethodLinear:return qo;case this.InterpolantFactoryMethodSmooth:return Yo}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]*=t;return this},trim:function(t,e){for(var i=this.times,n=i.length,r=0,a=n-1;r!==n&&i[r]<t;)++r;for(;a!==-1&&i[a]>e;)--a;if(++a,0!==r||a!==n){r>=a&&(a=Math.max(a,1),r=a-1);var o=this.getValueSize();this.times=Ih.arraySlice(i,r,a),this.values=Ih.arraySlice(this.values,r*o,a*o)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("invalid value size in track",this),t=!1);var i=this.times,n=this.values,r=i.length;0===r&&(console.error("track is empty",this),t=!1);for(var a=null,o=0;o!==r;o++){var s=i[o];if("number"==typeof s&&isNaN(s)){console.error("time is not a valid number",this,o,s),t=!1;break}if(null!==a&&a>s){console.error("out of order keys",this,o,s,a),t=!1;break}a=s}if(void 0!==n&&Ih.isTypedArray(n))for(var o=0,c=n.length;o!==c;++o){var h=n[o];if(isNaN(h)){console.error("value is not a valid number",this,o,h),t=!1;break}}return t},optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),n=this.getInterpolation()===Yo,r=1,a=t.length-1,o=1;o<a;++o){var s=!1,c=t[o],h=t[o+1];if(c!==h&&(1!==o||c!==c[0]))if(n)s=!0;else for(var l=o*i,u=l-i,p=l+i,d=0;d!==i;++d){var f=e[l+d];if(f!==e[u+d]||f!==e[p+d]){s=!0;break}}if(s){if(o!==r){t[r]=t[o];for(var m=o*i,g=r*i,d=0;d!==i;++d)e[g+d]=e[m+d]}++r}}if(a>0){t[r]=t[a];for(var m=a*i,g=r*i,d=0;d!==i;++d)e[g+d]=e[m+d];++r}return r!==t.length&&(this.times=Ih.arraySlice(t,0,r),this.values=Ih.arraySlice(e,0,r*i)),this}},Vi.prototype=Object.assign(Object.create(Uh),{constructor:Vi,ValueTypeName:"vector"}),ki.prototype=Object.assign(Object.create(Bi.prototype),{constructor:ki,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,c=t*o,h=(i-e)/(n-e),l=c+o;c!==l;c+=4)s.slerpFlat(r,0,a,c-o,a,c,h);return r}}),ji.prototype=Object.assign(Object.create(Uh),{constructor:ji,ValueTypeName:"quaternion",DefaultInterpolation:qo,InterpolantFactoryMethodLinear:function(t){return new ki(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),Wi.prototype=Object.assign(Object.create(Uh),{\nconstructor:Wi,ValueTypeName:"number"}),Xi.prototype=Object.assign(Object.create(Uh),{constructor:Xi,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Xo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),qi.prototype=Object.assign(Object.create(Uh),{constructor:qi,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Xo,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Yi.prototype=Object.assign(Object.create(Uh),{constructor:Yi,ValueTypeName:"color"}),Zi.prototype=Uh,Uh.constructor=Zi,Object.assign(Zi,{parse:function(t){if(void 0===t.type)throw new Error("track type undefined, can not parse");var e=Zi._getTrackTypeForValueTypeName(t.type);if(void 0===t.times){var i=[],n=[];Ih.flattenJSON(t.keys,i,n,"value"),t.times=i,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,i=t.constructor;if(void 0!==i.toJSON)e=i.toJSON(t);else{e={name:t.name,times:Ih.convertArray(t.times,Array),values:Ih.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}return e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Wi;case"vector":case"vector2":case"vector3":case"vector4":return Vi;case"color":return Yi;case"quaternion":return ji;case"bool":case"boolean":return qi;case"string":return Xi}throw new Error("Unsupported typeName: "+t)}}),Ji.prototype={constructor:Ji,resetDuration:function(){for(var t=this.tracks,e=0,i=0,n=t.length;i!==n;++i){var r=this.tracks[i];e=Math.max(e,r.times[r.times.length-1])}this.duration=e},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}},Object.assign(Ji,{parse:function(t){for(var e=[],i=t.tracks,n=1/(t.fps||1),r=0,a=i.length;r!==a;++r)e.push(Zi.parse(i[r]).scale(n));return new Ji(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e},r=0,a=i.length;r!==a;++r)e.push(Zi.toJSON(i[r]));return n},CreateFromMorphTargetSequence:function(t,e,i,n){for(var r=e.length,a=[],o=0;o<r;o++){var s=[],c=[];s.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);var h=Ih.getKeyframeOrder(s);s=Ih.sortedArray(s,1,h),c=Ih.sortedArray(c,1,h),n||0!==s[0]||(s.push(r),c.push(c[0])),a.push(new Wi(".morphTargetInfluences["+e[o].name+"]",s,c).scale(1/i))}return new Ji(t,-1,a)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var n=t;i=n.geometry&&n.geometry.animations||n.animations}for(var r=0;r<i.length;r++)if(i[r].name===e)return i[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){for(var n={},r=/^([\\w-]*?)([\\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],c=s.name.match(r);if(c&&c.length>1){var h=c[1],l=n[h];l||(n[h]=l=[]),l.push(s)}}var u=[];for(var h in n)u.push(Ji.CreateFromMorphTargetSequence(h,n[h],e,i));return u},parseAnimation:function(t,e){if(!t)return console.error("  no animation in JSONLoader data"),null;for(var i=function(t,e,i,n,r){if(0!==i.length){var a=[],o=[];Ih.flattenJSON(i,a,o,n),0!==a.length&&r.push(new t(e,a,o))}},n=[],r=t.name||"default",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],c=0;c<s.length;c++){var h=s[c].keys;if(h&&0!==h.length)if(h[0].morphTargets){for(var l={},u=0;u<h.length;u++)if(h[u].morphTargets)for(var p=0;p<h[u].morphTargets.length;p++)l[h[u].morphTargets[p]]=-1;for(var d in l){for(var f=[],m=[],p=0;p!==h[u].morphTargets.length;++p){var g=h[u];f.push(g.time),m.push(g.morphTarget===d?1:0)}n.push(new Wi(".morphTargetInfluence["+d+"]",f,m))}a=l.length*(o||1)}else{var v=".bones["+e[c].name+"]";i(Vi,v+".position",h,"pos",n),i(ji,v+".quaternion",h,"rot",n),i(Vi,v+".scale",h,"scl",n)}}if(0===n.length)return null;var y=new Ji(r,a,n);return y}}),Object.assign(Qi.prototype,{load:function(t,e,i,n){var r=this,a=new wi(r.manager);a.load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},setTextures:function(t){this.textures=t},parse:function(t){function e(t){return void 0===n[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),n[t]}var n=this.textures,r=new Rh[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearCoat&&(r.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(r.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.uniforms&&(r.uniforms=t.uniforms),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(r.vertexColors=t.vertexColors),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.shading&&(r.shading=t.shading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=e(t.map)),void 0!==t.alphaMap&&(r.alphaMap=e(t.alphaMap),r.transparent=!0),void 0!==t.bumpMap&&(r.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=e(t.normalMap)),void 0!==t.normalScale){var a=t.normalScale;Array.isArray(a)===!1&&(a=[a,a]),r.normalScale=(new i).fromArray(a)}if(void 0!==t.displacementMap&&(r.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=e(t.specularMap)),void 0!==t.envMap&&(r.envMap=e(t.envMap)),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.lightMap&&(r.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=e(t.gradientMap)),void 0!==t.materials)for(var o=0,s=t.materials.length;o<s;o++)r.materials.push(this.parse(t.materials[o]));return r}}),Object.assign(Ki.prototype,{load:function(t,e,i,n){var r=this,a=new wi(r.manager);a.load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},parse:function(t){var e=new At,i=t.data.index,n={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};if(void 0!==i){var r=new n[i.type](i.array);e.setIndex(new dt(r,1))}var a=t.data.attributes;for(var o in a){var s=a[o],r=new n[s.type](s.array);e.addAttribute(o,new dt(r,s.itemSize,s.normalized))}var h=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==h)for(var l=0,u=h.length;l!==u;++l){var p=h[l];e.addGroup(p.start,p.count,p.materialIndex)}var d=t.data.boundingSphere;if(void 0!==d){var f=new c;void 0!==d.center&&f.fromArray(d.center),e.boundingSphere=new tt(f,d.radius)}return e}}),$i.prototype={constructor:$i,crossOrigin:void 0,extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e,i){for(var n=[],r=0;r<t.length;++r)n[r]=this.createMaterial(t[r],e,i);return n},createMaterial:function(){var t,e,i,n={NoBlending:pa,NormalBlending:da,AdditiveBlending:fa,SubtractiveBlending:ma,MultiplyBlending:ga,CustomBlending:va};return function(r,a,o){function s(t,i,n,r,s){var h,l=a+t,u=$i.Handlers.get(l);null!==u?h=u.load(l):(e.setCrossOrigin(o),h=e.load(l)),void 0!==i&&(h.repeat.fromArray(i),1!==i[0]&&(h.wrapS=ro),1!==i[1]&&(h.wrapT=ro)),void 0!==n&&h.offset.fromArray(n),void 0!==r&&("repeat"===r[0]&&(h.wrapS=ro),"mirror"===r[0]&&(h.wrapS=oo),"repeat"===r[1]&&(h.wrapT=ro),"mirror"===r[1]&&(h.wrapT=oo)),void 0!==s&&(h.anisotropy=s);var p=us.generateUUID();return c[p]=h,p}void 0===t&&(t=new W),void 0===e&&(e=new Ai),void 0===i&&(i=new Qi);var c={},h={uuid:us.generateUUID(),type:"MeshLambertMaterial"};for(var l in r){var u=r[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=u;break;case"blending":h.blending=n[u];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":h.color=t.fromArray(u).getHex();break;case"colorSpecular":h.specular=t.fromArray(u).getHex();break;case"colorEmissive":h.emissive=t.fromArray(u).getHex();break;case"specularCoef":h.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(h.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(h.type="MeshStandardMaterial");break;case"mapDiffuse":h.map=s(u,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":h.emissiveMap=s(u,r.mapEmissiveRepeat,r.mapEmissiveOffset,r.mapEmissiveWrap,r.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":h.lightMap=s(u,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=s(u,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=s(u,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=s(u,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[u,u];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=s(u,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":h.metalnessMap=s(u,r.mapMetalnessRepeat,r.mapMetalnessOffset,r.mapMetalnessWrap,r.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":h.roughnessMap=s(u,r.mapRoughnessRepeat,r.mapRoughnessOffset,r.mapRoughnessWrap,r.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":h.alphaMap=s(u,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=aa;break;case"doubleSided":h.side=oa;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),h.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[l]=u;break;case"vertexColors":u===!0&&(h.vertexColors=ua),"face"===u&&(h.vertexColors=la);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,u)}}return"MeshBasicMaterial"===h.type&&delete h.emissive,"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),i.setTextures(c),i.parse(h)}}()},$i.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,i=0,n=e.length;i<n;i+=2){var r=e[i],a=e[i+1];if(r.test(t))return a}return null}},Object.assign(tn.prototype,{load:function(t,e,i,n){var r=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:$i.prototype.extractUrlBase(t),o=new wi(this.manager);o.setWithCredentials(this.withCredentials),o.load(t,function(i){var n=JSON.parse(i),o=n.metadata;if(void 0!==o){var s=o.type;if(void 0!==s){if("object"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===s.toLowerCase())return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}}var c=r.parse(n,a);e(c.geometry,c.materials)},i,n)},setTexturePath:function(t){this.texturePath=t},parse:function(t,e){function n(e){function n(t,e){return t&1<<e}var r,a,o,s,l,u,p,d,f,m,g,v,y,x,_,b,w,M,E,T,S,A,L,R,P,C,I,U=t.faces,N=t.vertices,D=t.normals,O=t.colors,B=0;if(void 0!==t.uvs){for(r=0;r<t.uvs.length;r++)t.uvs[r].length&&B++;for(r=0;r<B;r++)h.faceVertexUvs[r]=[]}for(s=0,l=N.length;s<l;)M=new c,M.x=N[s++]*e,M.y=N[s++]*e,M.z=N[s++]*e,h.vertices.push(M);for(s=0,l=U.length;s<l;)if(m=U[s++],g=n(m,0),v=n(m,1),y=n(m,3),x=n(m,4),_=n(m,5),b=n(m,6),w=n(m,7),g){if(T=new ut,T.a=U[s],T.b=U[s+1],T.c=U[s+3],S=new ut,S.a=U[s+1],S.b=U[s+2],S.c=U[s+3],s+=4,v&&(f=U[s++],T.materialIndex=f,S.materialIndex=f),o=h.faces.length,y)for(r=0;r<B;r++)for(R=t.uvs[r],h.faceVertexUvs[r][o]=[],h.faceVertexUvs[r][o+1]=[],a=0;a<4;a++)d=U[s++],C=R[2*d],I=R[2*d+1],P=new i(C,I),2!==a&&h.faceVertexUvs[r][o].push(P),0!==a&&h.faceVertexUvs[r][o+1].push(P);if(x&&(p=3*U[s++],T.normal.set(D[p++],D[p++],D[p]),S.normal.copy(T.normal)),_)for(r=0;r<4;r++)p=3*U[s++],L=new c(D[p++],D[p++],D[p]),2!==r&&T.vertexNormals.push(L),0!==r&&S.vertexNormals.push(L);if(b&&(u=U[s++],A=O[u],T.color.setHex(A),S.color.setHex(A)),w)for(r=0;r<4;r++)u=U[s++],A=O[u],2!==r&&T.vertexColors.push(new W(A)),0!==r&&S.vertexColors.push(new W(A));h.faces.push(T),h.faces.push(S)}else{if(E=new ut,E.a=U[s++],E.b=U[s++],E.c=U[s++],v&&(f=U[s++],E.materialIndex=f),o=h.faces.length,y)for(r=0;r<B;r++)for(R=t.uvs[r],h.faceVertexUvs[r][o]=[],a=0;a<3;a++)d=U[s++],C=R[2*d],I=R[2*d+1],P=new i(C,I),h.faceVertexUvs[r][o].push(P);if(x&&(p=3*U[s++],E.normal.set(D[p++],D[p++],D[p])),_)for(r=0;r<3;r++)p=3*U[s++],L=new c(D[p++],D[p++],D[p]),E.vertexNormals.push(L);if(b&&(u=U[s++],E.color.setHex(O[u])),w)for(r=0;r<3;r++)u=U[s++],E.vertexColors.push(new W(O[u]));h.faces.push(E)}}function a(){var e=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var i=0,n=t.skinWeights.length;i<n;i+=e){var a=t.skinWeights[i],o=e>1?t.skinWeights[i+1]:0,s=e>2?t.skinWeights[i+2]:0,c=e>3?t.skinWeights[i+3]:0;h.skinWeights.push(new r(a,o,s,c))}if(t.skinIndices)for(var i=0,n=t.skinIndices.length;i<n;i+=e){var l=t.skinIndices[i],u=e>1?t.skinIndices[i+1]:0,p=e>2?t.skinIndices[i+2]:0,d=e>3?t.skinIndices[i+3]:0;h.skinIndices.push(new r(l,u,p,d))}h.bones=t.bones,h.bones&&h.bones.length>0&&(h.skinWeights.length!==h.skinIndices.length||h.skinIndices.length!==h.vertices.length)&&console.warn("When skinning, number of vertices ("+h.vertices.length+"), skinIndices ("+h.skinIndices.length+"), and skinWeights ("+h.skinWeights.length+") should match.")}function o(e){if(void 0!==t.morphTargets)for(var i=0,n=t.morphTargets.length;i<n;i++){h.morphTargets[i]={},h.morphTargets[i].name=t.morphTargets[i].name,h.morphTargets[i].vertices=[];for(var r=h.morphTargets[i].vertices,a=t.morphTargets[i].vertices,o=0,s=a.length;o<s;o+=3){var l=new c;l.x=a[o]*e,l.y=a[o+1]*e,l.z=a[o+2]*e,r.push(l)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn(\'THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.\');for(var u=h.faces,p=t.morphColors[0].colors,i=0,n=u.length;i<n;i++)u[i].color.fromArray(p,3*i)}}function s(){var e=[],i=[];void 0!==t.animation&&i.push(t.animation),void 0!==t.animations&&(t.animations.length?i=i.concat(t.animations):i.push(t.animations));for(var n=0;n<i.length;n++){var r=Ji.parseAnimation(i[n],h.bones);r&&e.push(r)}if(h.morphTargets){var a=Ji.CreateClipsFromMorphTargetSequences(h.morphTargets,10);e=e.concat(a)}e.length>0&&(h.animations=e)}var h=new St,l=void 0!==t.scale?1/t.scale:1;if(n(l),a(),o(l),s(),h.computeFaceNormals(),h.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:h};var u=$i.prototype.initMaterials(t.materials,e,this.crossOrigin);return{geometry:h,materials:u}}}),Object.assign(en.prototype,{load:function(t,e,i,n){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var r=this,a=new wi(r.manager);a.load(t,function(i){var a=null;try{a=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can\'t parse "+t+".",e.message)}var o=a.metadata;return void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()?void console.error("THREE.ObjectLoader: Can\'t load "+t+". Use THREE.JSONLoader instead."):void r.parse(a,e)},i,n)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var i=this.parseGeometries(t.geometries),n=this.parseImages(t.images,function(){void 0!==e&&e(o)}),r=this.parseTextures(t.textures,n),a=this.parseMaterials(t.materials,r),o=this.parseObject(t.object,i,a);return t.animations&&(o.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(o),o},parseGeometries:function(t){var e={};if(void 0!==t)for(var i=new tn,n=new Ki,r=0,a=t.length;r<a;r++){var o,s=t[r];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Lh[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new Lh[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Lh[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Lh[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Lh[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Lh[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":o=new Lh[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Lh[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Lh[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Lh[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Lh[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":o=n.parse(s);break;case"Geometry":o=i.parse(s.data,this.texturePath).geometry;break;default:console.warn(\'THREE.ObjectLoader: Unsupported geometry type "\'+s.type+\'"\');continue}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),e[s.uuid]=o}return e},parseMaterials:function(t,e){var i={};if(void 0!==t){var n=new Qi;n.setTextures(e);for(var r=0,a=t.length;r<a;r++){var o=n.parse(t[r]);i[o.uuid]=o}}return i},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var n=Ji.parse(t[i]);e.push(n)}return e},parseImages:function(t,e){function i(t){return n.manager.itemStart(t),o.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemError(t)})}var n=this,r={};if(void 0!==t&&t.length>0){var a=new bi(e),o=new Ti(a);o.setCrossOrigin(this.crossOrigin);for(var s=0,c=t.length;s<c;s++){var h=t[s],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(h.url)?h.url:n.texturePath+h.url;r[h.uuid]=i(l)}}return r},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}var r={UVMapping:Ja,CubeReflectionMapping:Qa,CubeRefractionMapping:Ka,EquirectangularReflectionMapping:$a,EquirectangularRefractionMapping:to,SphericalReflectionMapping:eo,CubeUVReflectionMapping:io,CubeUVRefractionMapping:no},a={RepeatWrapping:ro,ClampToEdgeWrapping:ao,MirroredRepeatWrapping:oo},o={NearestFilter:so,NearestMipMapNearestFilter:co,NearestMipMapLinearFilter:ho,LinearFilter:lo,LinearMipMapNearestFilter:uo,LinearMipMapLinearFilter:po},s={};if(void 0!==t)for(var c=0,h=t.length;c<h;c++){var l=t[c];void 0===l.image&&console.warn(\'THREE.ObjectLoader: No "image" specified for\',l.uuid),void 0===e[l.image]&&console.warn("THREE.ObjectLoader: Undefined image",l.image);var u=new n(e[l.image]);u.needsUpdate=!0,u.uuid=l.uuid,void 0!==l.name&&(u.name=l.name),void 0!==l.mapping&&(u.mapping=i(l.mapping,r)),void 0!==l.offset&&u.offset.fromArray(l.offset),void 0!==l.repeat&&u.repeat.fromArray(l.repeat),void 0!==l.wrap&&(u.wrapS=i(l.wrap[0],a),u.wrapT=i(l.wrap[1],a)),void 0!==l.minFilter&&(u.minFilter=i(l.minFilter,o)),void 0!==l.magFilter&&(u.magFilter=i(l.magFilter,o)),void 0!==l.anisotropy&&(u.anisotropy=l.anisotropy),void 0!==l.flipY&&(u.flipY=l.flipY),s[l.uuid]=u}return s},parseObject:function(){var t=new h;return function(e,i,n){function r(t){return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),i[t]}function a(t){if(void 0!==t)return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),n[t]}var o;switch(e.type){case"Scene":o=new ue,void 0!==e.background&&Number.isInteger(e.background)&&(o.background=new W(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new le(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new he(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new Nt(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Dt(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":o=new Oi(e.color,e.intensity);break;case"DirectionalLight":o=new Di(e.color,e.intensity);break;case"PointLight":o=new Ui(e.color,e.intensity,e.distance,e.decay);break;case"SpotLight":o=new Ii(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new Ri(e.color,e.groundColor,e.intensity);break;case"Mesh":var s=r(e.geometry),c=a(e.material);o=s.bones&&s.bones.length>0?new ye(s,c):new Lt(s,c);break;case"LOD":o=new me;break;case"Line":o=new _e(r(e.geometry),a(e.material),e.mode);break;case"LineSegments":o=new be(r(e.geometry),a(e.material));break;case"PointCloud":case"Points":o=new Me(r(e.geometry),a(e.material));break;case"Sprite":o=new fe(a(e.material));break;case"Group":o=new Ee;break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh type. Instantiates Object3D instead.");default:o=new ct}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(o.position,o.quaternion,o.scale)):(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.children)for(var h in e.children)o.add(this.parseObject(e.children[h],i,n));if("LOD"===e.type)for(var l=e.levels,u=0;u<l.length;u++){var p=l[u],h=o.getObjectByProperty("uuid",p.object);void 0!==h&&o.addLevel(h,p.distance)}return o}}()}),dn.prototype={constructor:dn,getPoint:function(t){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(t){var e=this.getUtoTmapping(t);return this.getPoint(e)},getPoints:function(t){isNaN(t)&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},getSpacedPoints:function(t){isNaN(t)&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(isNaN(t)&&(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,n=[],r=this.getPoint(0),a=0;for(n.push(0),i=1;i<=t;i++)e=this.getPoint(i/t),a+=e.distanceTo(r),n.push(a),r=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var i,n=this.getLengths(),r=0,a=n.length;i=e?e:t*n[a-1];for(var o,s=0,c=a-1;s<=c;)if(r=Math.floor(s+(c-s)/2),o=n[r]-i,o<0)s=r+1;else{if(!(o>0)){c=r;break}c=r-1}if(r=c,n[r]===i){var h=r/(a-1);return h}var l=n[r],u=n[r+1],p=u-l,d=(i-l)/p,h=(r+d)/(a-1);return h},getTangent:function(t){var e=1e-4,i=t-e,n=t+e;i<0&&(i=0),n>1&&(n=1);var r=this.getPoint(i),a=this.getPoint(n),o=a.clone().sub(r);return o.normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var i,n,r,a=new c,o=[],s=[],l=[],u=new c,p=new h;for(i=0;i<=t;i++)n=i/t,o[i]=this.getTangentAt(n),o[i].normalize();s[0]=new c,l[0]=new c;var d=Number.MAX_VALUE,f=Math.abs(o[0].x),m=Math.abs(o[0].y),g=Math.abs(o[0].z);for(f<=d&&(d=f,a.set(1,0,0)),m<=d&&(d=m,a.set(0,1,0)),g<=d&&a.set(0,0,1),u.crossVectors(o[0],a).normalize(),s[0].crossVectors(o[0],u),l[0].crossVectors(o[0],s[0]),i=1;i<=t;i++)s[i]=s[i-1].clone(),l[i]=l[i-1].clone(),u.crossVectors(o[i-1],o[i]),u.length()>Number.EPSILON&&(u.normalize(),r=Math.acos(us.clamp(o[i-1].dot(o[i]),-1,1)),s[i].applyMatrix4(p.makeRotationAxis(u,r))),l[i].crossVectors(o[i],s[i]);if(e===!0)for(r=Math.acos(us.clamp(s[0].dot(s[t]),-1,1)),r/=t,o[0].dot(u.crossVectors(s[0],s[t]))>0&&(r=-r),i=1;i<=t;i++)s[i].applyMatrix4(p.makeRotationAxis(o[i],r*i)),l[i].crossVectors(o[i],s[i]);return{tangents:o,normals:s,binormals:l}}},fn.prototype=Object.create(dn.prototype),fn.prototype.constructor=fn,fn.prototype.isLineCurve=!0,fn.prototype.getPoint=function(t){if(1===t)return this.v2.clone();var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},fn.prototype.getPointAt=function(t){return this.getPoint(t)},fn.prototype.getTangent=function(t){var e=this.v2.clone().sub(this.v1);return e.normalize()},mn.prototype=Object.assign(Object.create(dn.prototype),{constructor:mn,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new fn(e,t))},getPoint:function(t){for(var e=t*this.getLength(),i=this.getCurveLengths(),n=0;n<i.length;){if(i[n]>=e){var r=i[n]-e,a=this.curves[n],o=a.getLength(),s=0===o?0:1-r/o;return a.getPointAt(s)}n++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){isNaN(t)&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],n=0,r=this.curves;n<r.length;n++)for(var a=r[n],o=a&&a.isEllipseCurve?2*t:a&&a.isLineCurve?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),c=0;c<s.length;c++){var h=s[c];e&&e.equals(h)||(i.push(h),e=h)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},createPointsGeometry:function(t){var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){for(var e=new St,i=0,n=t.length;i<n;i++){var r=t[i];e.vertices.push(new c(r.x,r.y,r.z||0))}return e}}),gn.prototype=Object.create(dn.prototype),gn.prototype.constructor=gn,gn.prototype.isEllipseCurve=!0,gn.prototype.getPoint=function(t){for(var e=2*Math.PI,n=this.aEndAngle-this.aStartAngle,r=Math.abs(n)<Number.EPSILON;n<0;)n+=e;for(;n>e;)n-=e;n<Number.EPSILON&&(n=r?0:e),this.aClockwise!==!0||r||(n===e?n=-e:n-=e);var a=this.aStartAngle+t*n,o=this.aX+this.xRadius*Math.cos(a),s=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){var c=Math.cos(this.aRotation),h=Math.sin(this.aRotation),l=o-this.aX,u=s-this.aY;o=l*c-u*h+this.aX,s=l*h+u*c+this.aY}return new i(o,s)},vn.prototype=Object.create(dn.prototype),vn.prototype.constructor=vn,vn.prototype.isSplineCurve=!0,vn.prototype.getPoint=function(t){var e=this.points,n=(e.length-1)*t,r=Math.floor(n),a=n-r,o=e[0===r?r:r-1],s=e[r],c=e[r>e.length-2?e.length-1:r+1],h=e[r>e.length-3?e.length-1:r+2];return new i(nn(a,o.x,s.x,c.x,h.x),nn(a,o.y,s.y,c.y,h.y))},yn.prototype=Object.create(dn.prototype),yn.prototype.constructor=yn,yn.prototype.getPoint=function(t){var e=this.v0,n=this.v1,r=this.v2,a=this.v3;return new i(pn(t,e.x,n.x,r.x,a.x),pn(t,e.y,n.y,r.y,a.y))},xn.prototype=Object.create(dn.prototype),xn.prototype.constructor=xn,xn.prototype.getPoint=function(t){var e=this.v0,n=this.v1,r=this.v2;return new i(sn(t,e.x,n.x,r.x),sn(t,e.y,n.y,r.y))};var Nh=Object.assign(Object.create(mn.prototype),{fromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var n=new fn(this.currentPoint.clone(),new i(t,e));this.curves.push(n),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,n,r){var a=new xn(this.currentPoint.clone(),new i(t,e),new i(n,r));this.curves.push(a),this.currentPoint.set(n,r)},bezierCurveTo:function(t,e,n,r,a,o){var s=new yn(this.currentPoint.clone(),new i(t,e),new i(n,r),new i(a,o));this.curves.push(s),this.currentPoint.set(a,o)},splineThru:function(t){var e=[this.currentPoint.clone()].concat(t),i=new vn(e);this.curves.push(i),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,i,n,r,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,i,n,r,a)},absarc:function(t,e,i,n,r,a){this.absellipse(t,e,i,i,n,r,a)},ellipse:function(t,e,i,n,r,a,o,s){var c=this.currentPoint.x,h=this.currentPoint.y;this.absellipse(t+c,e+h,i,n,r,a,o,s)},absellipse:function(t,e,i,n,r,a,o,s){var c=new gn(t,e,i,n,r,a,o,s);if(this.curves.length>0){var h=c.getPoint(0);\nh.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);var l=c.getPoint(1);this.currentPoint.copy(l)}});_n.prototype=Nh,Nh.constructor=_n,bn.prototype=Object.assign(Object.create(Nh),{constructor:bn,getPointsHoles:function(t){for(var e=[],i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},extractAllPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},extractPoints:function(t){return this.extractAllPoints(t)}}),wn.prototype={moveTo:function(t,e){this.currentPath=new _n,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,i,n){this.currentPath.quadraticCurveTo(t,e,i,n)},bezierCurveTo:function(t,e,i,n,r,a){this.currentPath.bezierCurveTo(t,e,i,n,r,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function i(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i],a=new bn;a.curves=r.curves,e.push(a)}return e}function n(t,e){for(var i=e.length,n=!1,r=i-1,a=0;a<i;r=a++){var o=e[r],s=e[a],c=s.x-o.x,h=s.y-o.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(o=e[a],c=-c,s=e[r],h=-h),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var l=h*(t.x-o.x)-c*(t.y-o.y);if(0===l)return!0;if(l<0)continue;n=!n}}else{if(t.y!==o.y)continue;if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return n}var r=Ah.isClockWise,a=this.subPaths;if(0===a.length)return[];if(e===!0)return i(a);var o,s,c,h=[];if(1===a.length)return s=a[0],c=new bn,c.curves=s.curves,h.push(c),h;var l=!r(a[0].getPoints());l=t?!l:l;var u,p=[],d=[],f=[],m=0;d[m]=void 0,f[m]=[];for(var g=0,v=a.length;g<v;g++)s=a[g],u=s.getPoints(),o=r(u),o=t?!o:o,o?(!l&&d[m]&&m++,d[m]={s:new bn,p:u},d[m].s.curves=s.curves,l&&m++,f[m]=[]):f[m].push({h:s,p:u[0]});if(!d[0])return i(a);if(d.length>1){for(var y=!1,x=[],_=0,b=d.length;_<b;_++)p[_]=[];for(var _=0,b=d.length;_<b;_++)for(var w=f[_],M=0;M<w.length;M++){for(var E=w[M],T=!0,S=0;S<d.length;S++)n(E.p,d[S].p)&&(_!==S&&x.push({froms:_,tos:S,hole:M}),T?(T=!1,p[S].push(E)):y=!0);T&&p[_].push(E)}x.length>0&&(y||(f=p))}for(var A,g=0,L=d.length;g<L;g++){c=d[g].s,h.push(c),A=f[g];for(var R=0,P=A.length;R<P;R++)c.holes.push(A[R].h)}return h}},Object.assign(Mn.prototype,{isFont:!0,generateShapes:function(t,e,i){function n(t){for(var i=String(t).split(""),n=e/a.resolution,o=(a.boundingBox.yMax-a.boundingBox.yMin+a.underlineThickness)*n,s=0,c=0,h=[],l=0;l<i.length;l++){var u=i[l];if("\\n"===u)s=0,c-=o;else{var p=r(u,n,s,c);s+=p.offsetX,h.push(p.path)}}return h}function r(t,e,n,r){var o=a.glyphs[t]||a.glyphs["?"];if(o){var s,c,h,l,u,p,d,f,m,g,v,y=new wn,x=[];if(o.o)for(var _=o._cachedOutline||(o._cachedOutline=o.o.split(" ")),b=0,w=_.length;b<w;){var M=_[b++];switch(M){case"m":s=_[b++]*e+n,c=_[b++]*e+r,y.moveTo(s,c);break;case"l":s=_[b++]*e+n,c=_[b++]*e+r,y.lineTo(s,c);break;case"q":if(h=_[b++]*e+n,l=_[b++]*e+r,d=_[b++]*e+n,f=_[b++]*e+r,y.quadraticCurveTo(d,f,h,l),v=x[x.length-1]){u=v.x,p=v.y;for(var E=1;E<=i;E++){var T=E/i;sn(T,u,d,h),sn(T,p,f,l)}}break;case"b":if(h=_[b++]*e+n,l=_[b++]*e+r,d=_[b++]*e+n,f=_[b++]*e+r,m=_[b++]*e+n,g=_[b++]*e+r,y.bezierCurveTo(d,f,m,g,h,l),v=x[x.length-1]){u=v.x,p=v.y;for(var E=1;E<=i;E++){var T=E/i;pn(T,u,d,m,h),pn(T,p,f,g,l)}}}}return{offsetX:o.ha*e,path:y}}}void 0===e&&(e=100),void 0===i&&(i=4);for(var a=this.data,o=n(t),s=[],c=0,h=o.length;c<h;c++)Array.prototype.push.apply(s,o[c].toShapes());return s}}),Object.assign(En.prototype,{load:function(t,e,i,n){var r=this,a=new wi(this.manager);a.load(t,function(t){var i;try{i=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(t.substring(65,t.length-2))}var n=r.parse(i);e&&e(n)},i,n)},parse:function(t){return new Mn(t)}});var Dh,Oh={getContext:function(){return void 0===Dh&&(Dh=new(window.AudioContext||window.webkitAudioContext)),Dh},setContext:function(t){Dh=t}};Object.assign(Tn.prototype,{load:function(t,e,i,n){var r=new wi(this.manager);r.setResponseType("arraybuffer"),r.load(t,function(t){var i=Oh.getContext();i.decodeAudioData(t,function(t){e(t)})},i,n)}}),Sn.prototype=Object.assign(Object.create(Li.prototype),{constructor:Sn,isRectAreaLight:!0,copy:function(t){return Li.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this}}),Object.assign(An.prototype,{update:function(){var t,e,i,n,r,a,o,s=new h,c=new h;return function(h){var l=t!==this||e!==h.focus||i!==h.fov||n!==h.aspect*this.aspect||r!==h.near||a!==h.far||o!==h.zoom;if(l){t=this,e=h.focus,i=h.fov,n=h.aspect*this.aspect,r=h.near,a=h.far,o=h.zoom;var u,p,d=h.projectionMatrix.clone(),f=this.eyeSep/2,m=f*r/e,g=r*Math.tan(us.DEG2RAD*i*.5)/o;c.elements[12]=-f,s.elements[12]=f,u=-g*n+m,p=g*n+m,d.elements[0]=2*r/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraL.projectionMatrix.copy(d),u=-g*n-m,p=g*n-m,d.elements[0]=2*r/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(h.matrixWorld).multiply(c),this.cameraR.matrixWorld.copy(h.matrixWorld).multiply(s)}}()}),Ln.prototype=Object.create(ct.prototype),Ln.prototype.constructor=Ln,Rn.prototype=Object.assign(Object.create(ct.prototype),{constructor:Rn,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new c,e=new s,i=new c,n=new c;return function(r){ct.prototype.updateMatrixWorld.call(this,r);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,i),n.set(0,0,-1).applyQuaternion(e),a.positionX?(a.positionX.setValueAtTime(t.x,this.context.currentTime),a.positionY.setValueAtTime(t.y,this.context.currentTime),a.positionZ.setValueAtTime(t.z,this.context.currentTime),a.forwardX.setValueAtTime(n.x,this.context.currentTime),a.forwardY.setValueAtTime(n.y,this.context.currentTime),a.forwardZ.setValueAtTime(n.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(t.x,t.y,t.z),a.setOrientation(n.x,n.y,n.z,o.x,o.y,o.z))}}()}),Pn.prototype=Object.assign(Object.create(ct.prototype),{constructor:Pn,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(this.isPlaying===!0)return void console.warn("THREE.Audio: Audio is already playing.");if(this.hasPlaybackControl===!1)return void console.warn("THREE.Audio: this Audio has no playback control.");var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),t.start(0,this.startTime),this.isPlaying=!0,this.source=t,this.connect()},pause:function(){return this.hasPlaybackControl===!1?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this)},stop:function(){return this.hasPlaybackControl===!1?void console.warn("THREE.Audio: this Audio has no playback control."):(this.source.stop(),this.startTime=0,this.isPlaying=!1,this)},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),this.isPlaying===!0?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){return this.hasPlaybackControl===!1?void console.warn("THREE.Audio: this Audio has no playback control."):(this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this)},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){return this.hasPlaybackControl===!1?void console.warn("THREE.Audio: this Audio has no playback control."):(this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this)},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}}),Cn.prototype=Object.assign(Object.create(Pn.prototype),{constructor:Cn,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new c;return function(e){ct.prototype.updateMatrixWorld.call(this,e),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()}),Object.assign(In.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Un.prototype={constructor:Un,accumulate:function(t,e){var i=this.buffer,n=this.valueSize,r=t*n+n,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==n;++o)i[r+o]=i[o];a=e}else{a+=e;var s=e/a;this._mixBufferRegion(i,r,0,s,n)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){var o=3*e;this._mixBufferRegion(i,n,o,1-r,e)}for(var s=e,c=e+e;s!==c;++s)if(i[s]!==i[s+e]){a.setValue(i,n);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,n=3*i;t.getValue(e,n);for(var r=i,a=n;r!==a;++r)e[r]=e[n+r%i];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,i,n,r){if(n>=.5)for(var a=0;a!==r;++a)t[e+a]=t[i+a]},_slerp:function(t,e,i,n,r){s.slerpFlat(t,e,t,e,t,i,n)},_lerp:function(t,e,i,n,r){for(var a=1-n,o=0;o!==r;++o){var s=e+o;t[s]=t[s]*a+t[i+o]*n}}},Nn.prototype={constructor:Nn,getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,n=e.propertyName,r=e.propertyIndex;if(t||(t=Nn.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("  trying to update node for track: "+this.path+" but it wasn\'t found.");if(i){var a=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("  can not bind to material as node does not have a material",this);if(!t.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===a){a=o;break}break;default:if(void 0===t[i])return void console.error("  can not bind to objectName of node, undefined",this);t=t[i]}if(void 0!==a){if(void 0===t[a])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,t);t=t[a]}}var s=t[n];if(void 0===s){var c=e.nodeName;return void console.error("  trying to update property for track: "+c+"."+n+" but it wasn\'t found.",t)}var h=this.Versioning.None;void 0!==t.needsUpdate?(h=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);var l=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);if(!t.geometry.morphTargets)return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(t.geometry.morphTargets[o].name===r){r=o;break}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):void 0!==s.length?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][h]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}},Object.assign(Nn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:Nn.prototype.getValue,_setValue_unbound:Nn.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)t[e++]=i[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.node[this.propertyName]=t[e]},function(t,e){this.node[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.node[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]]}),Nn.Composite=function(t,e,i){var n=i||Nn.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)},Nn.Composite.prototype={constructor:Nn.Composite,getValue:function(t,e){this.bind();var i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},Nn.create=function(t,e,i){return t&&t.isAnimationObjectGroup?new Nn.Composite(t,e,i):new Nn(t,e,i)},Nn.parseTrackName=function(t){var e=/^((?:[\\w-]+[\\/:])*)([\\w-]+)?(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?\\.([\\w-]+)(?:\\[(.+)\\])?$/,i=e.exec(t);if(!i)throw new Error("cannot parse trackName at all: "+t);var n={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]};if(null===n.propertyName||0===n.propertyName.length)throw new Error("can not parse propertyName from trackName: "+t);return n},Nn.findNode=function(t,e){if(!e||""===e||"root"===e||"."===e||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){var i=function(t){for(var i=0;i<t.bones.length;i++){var n=t.bones[i];if(n.name===e)return n}return null},n=i(t.skeleton);if(n)return n}if(t.children){var r=function(t){for(var i=0;i<t.length;i++){var n=t[i];if(n.name===e||n.uuid===e)return n;var a=r(n.children);if(a)return a}return null},a=r(t.children);if(a)return a}return null},Dn.prototype={constructor:Dn,isAnimationObjectGroup:!0,add:function(t){for(var e=this._objects,i=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,a=this._paths,o=this._parsedPaths,s=this._bindings,c=s.length,h=0,l=arguments.length;h!==l;++h){var u=arguments[h],p=u.uuid,d=r[p],f=void 0;if(void 0===d){d=i++,r[p]=d,e.push(u);for(var m=0,g=c;m!==g;++m)s[m].push(new Nn(u,a[m],o[m]))}else if(d<n){f=e[d];var v=--n,y=e[v];r[y.uuid]=d,e[d]=y,r[p]=v,e[v]=u;for(var m=0,g=c;m!==g;++m){var x=s[m],_=x[v],b=x[d];x[d]=_,void 0===b&&(b=new Nn(u,a[m],o[m])),x[v]=b}}else e[d]!==f&&console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=n},remove:function(t){for(var e=this._objects,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,a=r.length,o=0,s=arguments.length;o!==s;++o){var c=arguments[o],h=c.uuid,l=n[h];if(void 0!==l&&l>=i){var u=i++,p=e[u];n[p.uuid]=l,e[l]=p,n[h]=u,e[u]=c;for(var d=0,f=a;d!==f;++d){var m=r[d],g=m[u],v=m[l];m[l]=g,m[u]=v}}}this.nCachedObjects_=i},uncache:function(t){for(var e=this._objects,i=e.length,n=this.nCachedObjects_,r=this._indicesByUUID,a=this._bindings,o=a.length,s=0,c=arguments.length;s!==c;++s){var h=arguments[s],l=h.uuid,u=r[l];if(void 0!==u)if(delete r[l],u<n){var p=--n,d=e[p],f=--i,m=e[f];r[d.uuid]=u,e[u]=d,r[m.uuid]=p,e[p]=m,e.pop();for(var g=0,v=o;g!==v;++g){var y=a[g],x=y[p],_=y[f];y[u]=x,y[p]=_,y.pop()}}else{var f=--i,m=e[f];r[m.uuid]=u,e[u]=m,e.pop();for(var g=0,v=o;g!==v;++g){var y=a[g];y[u]=y[f],y.pop()}}}this.nCachedObjects_=n},subscribe_:function(t,e){var i=this._bindingsIndicesByPath,n=i[t],r=this._bindings;if(void 0!==n)return r[n];var a=this._paths,o=this._parsedPaths,s=this._objects,c=s.length,h=this.nCachedObjects_,l=new Array(c);n=r.length,i[t]=n,a.push(t),o.push(e),r.push(l);for(var u=h,p=s.length;u!==p;++u){var d=s[u];l[u]=new Nn(d,t,e)}return l},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var n=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o],c=t[o];e[c]=i,a[i]=s,a.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}},On.prototype={constructor:On,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var n=this._clip.duration,r=t._clip.duration,a=r/n,o=n/r;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var n=this._mixer,r=n.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,c=a.sampleValues;return s[0]=r,s[1]=r+i,c[0]=t/o,c[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,i,n){var r=this._startTime;if(null!==r){var a=(t-r)*i;if(a<0||0===i)return;this._startTime=null,e=i*a}e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var c=this._interpolants,h=this._propertyBindings,l=0,u=c.length;l!==u;++l)c[l].evaluate(o),h[l].accumulate(n,s)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var i=this._clip.duration,n=this.loop,r=this._loopCount;if(n===ko){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{var a=n===Wo;if(r===-1&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),e>=i||e<0){var o=Math.floor(e/i);e-=i*o,r+=Math.abs(o);var s=this.repetitions-r;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(0===s){var c=t<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1===(1&r))return this.time=e,i-e}return this.time=e,e},_setEndings:function(t,e,i){var n=this._interpolantSettings;i?(n.endingStart=Jo,n.endingEnd=Jo):(t?n.endingStart=this.zeroSlopeAtStart?Jo:Zo:n.endingStart=Qo,e?n.endingEnd=this.zeroSlopeAtEnd?Jo:Zo:n.endingEnd=Qo)},_scheduleFading:function(t,e,i){var n=this._mixer,r=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=r,s[0]=e,o[1]=r+t,s[1]=i,this}},Bn.prototype={constructor:Bn,clipAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Ji.findByName(i,t):t,a=null!==r?r.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var c=o.actionByRoot[n];if(void 0!==c)return c;s=o.knownActions[0],null===r&&(r=s._clip)}if(null===r)return null;var h=new On(this,r,e);return this._bindAction(h,s),this._addInactiveAction(h,a,n),h},existingAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Ji.findByName(i,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return void 0!==o?o.actionByRoot[n]||null:null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(var r=0;r!==n;++r)i[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1,o=0;o!==i;++o){var s=e[o];s.enabled&&s._update(n,t,r,a)}for(var c=this._bindings,h=this._nActiveBindings,o=0;o!==h;++o)c[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){for(var a=r.knownActions,o=0,s=a.length;o!==s;++o){var c=a[o];this._deactivateAction(c);var h=c._cacheIndex,l=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,l._cacheIndex=h,e[h]=l,e.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}},uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var n in i){var r=i[n].actionByRoot,a=r[e];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}var o=this._bindingsByRootAndName,s=o[e];if(void 0!==s)for(var c in s){var h=s[c];h.restoreOriginalState(),this._removeInactiveBinding(h)}},uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}},Object.assign(Bn.prototype,{_bindAction:function(t,e){var i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,a=t._propertyBindings,o=t._interpolants,s=i.uuid,c=this._bindingsByRootAndName,h=c[s];void 0===h&&(h={},c[s]=h);for(var l=0;l!==r;++l){var u=n[l],p=u.name,d=h[p];if(void 0!==d)a[l]=d;else{if(d=a[l],void 0!==d){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;d=new Un(Nn.create(i,p,f),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,s,p),a[l]=d}o[l].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}for(var r=t._propertyBindings,a=0,o=r.length;a!==o;++a){var s=r[a];0===s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0===--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var n=this._actions,r=this._actionsByClip,a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=n.length,n.push(t),a.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,a=this._actionsByClip,o=a[r],s=o.knownActions,c=s[s.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,s[h]=c,s.pop(),t._byClipCacheIndex=null;var l=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete l[u],0===s.length&&delete a[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0===--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){var e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_addInactiveBinding:function(t,e,i){var n=this._bindingsByRootAndName,r=n[e],a=this._bindings;void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,o=a[n],s=e[e.length-1],c=t._cacheIndex;s._cacheIndex=c,e[c]=s,e.pop(),delete o[r];t:{for(var h in o)break t;delete a[n]}},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&(i=new zi(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1)}),Object.assign(Bn.prototype,e.prototype),Fn.prototype.clone=function(){return new Fn(void 0===this.value.clone?this.value:this.value.clone())},zn.prototype=Object.create(At.prototype),zn.prototype.constructor=zn,zn.prototype.isInstancedBufferGeometry=!0,zn.prototype.addGroup=function(t,e,i){this.groups.push({start:t,count:e,materialIndex:i})},zn.prototype.copy=function(t){var e=t.index;null!==e&&this.setIndex(e.clone());var i=t.attributes;for(var n in i){var r=i[n];this.addAttribute(n,r.clone())}for(var a=t.groups,o=0,s=a.length;o<s;o++){var c=a[o];this.addGroup(c.start,c.count,c.materialIndex)}return this},Gn.prototype={constructor:Gn,isInterleavedBufferAttribute:!0,get count(){return this.data.count},get array(){return this.data.array},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}},Hn.prototype={constructor:Hn,isInterleavedBuffer:!0,\nset needsUpdate(t){t===!0&&this.version++},setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}},Vn.prototype=Object.create(Hn.prototype),Vn.prototype.constructor=Vn,Vn.prototype.isInstancedInterleavedBuffer=!0,Vn.prototype.copy=function(t){return Hn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},kn.prototype=Object.create(dt.prototype),kn.prototype.constructor=kn,kn.prototype.isInstancedBufferAttribute=!0,kn.prototype.copy=function(t){return dt.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},jn.prototype={constructor:jn,linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e){var i=[];return Xn(t,this,i,e),i.sort(Wn),i},intersectObjects:function(t,e){var i=[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var n=0,r=t.length;n<r;n++)Xn(t[n],this,i,e);return i.sort(Wn),i}},qn.prototype={constructor:qn,start:function(){this.startTime=(performance||Date).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running&&this.start(),this.running){var e=(performance||Date).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}},Yn.prototype={constructor:Yn,set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){var t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this},setFromVector3:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(us.clamp(t.y/this.radius,-1,1))),this}},Zn.prototype={constructor:Zn,set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}},Jn.prototype=Object.create(Lt.prototype),Jn.prototype.constructor=Jn,Jn.prototype.createAnimation=function(t,e,i,n){var r={start:e,end:i,length:i-e+1,fps:n,duration:(i-e)/n,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[t]=r,this.animationsList.push(r)},Jn.prototype.autoCreateAnimations=function(t){for(var e,i=/([a-z]+)_?(\\d+)/i,n={},r=this.geometry,a=0,o=r.morphTargets.length;a<o;a++){var s=r.morphTargets[a],c=s.name.match(i);if(c&&c.length>1){var h=c[1];n[h]||(n[h]={start:1/0,end:-(1/0)});var l=n[h];a<l.start&&(l.start=a),a>l.end&&(l.end=a),e||(e=h)}}for(var h in n){var l=n[h];this.createAnimation(h,l.start,l.end,t)}this.firstAnimation=e},Jn.prototype.setAnimationDirectionForward=function(t){var e=this.animationsMap[t];e&&(e.direction=1,e.directionBackwards=!1)},Jn.prototype.setAnimationDirectionBackward=function(t){var e=this.animationsMap[t];e&&(e.direction=-1,e.directionBackwards=!0)},Jn.prototype.setAnimationFPS=function(t,e){var i=this.animationsMap[t];i&&(i.fps=e,i.duration=(i.end-i.start)/i.fps)},Jn.prototype.setAnimationDuration=function(t,e){var i=this.animationsMap[t];i&&(i.duration=e,i.fps=(i.end-i.start)/i.duration)},Jn.prototype.setAnimationWeight=function(t,e){var i=this.animationsMap[t];i&&(i.weight=e)},Jn.prototype.setAnimationTime=function(t,e){var i=this.animationsMap[t];i&&(i.time=e)},Jn.prototype.getAnimationTime=function(t){var e=0,i=this.animationsMap[t];return i&&(e=i.time),e},Jn.prototype.getAnimationDuration=function(t){var e=-1,i=this.animationsMap[t];return i&&(e=i.duration),e},Jn.prototype.playAnimation=function(t){var e=this.animationsMap[t];e?(e.time=0,e.active=!0):console.warn("THREE.MorphBlendMesh: animation["+t+"] undefined in .playAnimation()")},Jn.prototype.stopAnimation=function(t){var e=this.animationsMap[t];e&&(e.active=!1)},Jn.prototype.update=function(t){for(var e=0,i=this.animationsList.length;e<i;e++){var n=this.animationsList[e];if(n.active){var r=n.duration/n.length;n.time+=n.direction*t,n.mirroredLoop?(n.time>n.duration||n.time<0)&&(n.direction*=-1,n.time>n.duration&&(n.time=n.duration,n.directionBackwards=!0),n.time<0&&(n.time=0,n.directionBackwards=!1)):(n.time=n.time%n.duration,n.time<0&&(n.time+=n.duration));var a=n.start+us.clamp(Math.floor(n.time/r),0,n.length-1),o=n.weight;a!==n.currentFrame&&(this.morphTargetInfluences[n.lastFrame]=0,this.morphTargetInfluences[n.currentFrame]=1*o,this.morphTargetInfluences[a]=0,n.lastFrame=n.currentFrame,n.currentFrame=a);var s=n.time%r/r;n.directionBackwards&&(s=1-s),n.currentFrame!==n.lastFrame?(this.morphTargetInfluences[n.currentFrame]=s*o,this.morphTargetInfluences[n.lastFrame]=(1-s)*o):this.morphTargetInfluences[n.currentFrame]=o}}},Qn.prototype=Object.create(ct.prototype),Qn.prototype.constructor=Qn,Qn.prototype.isImmediateRenderObject=!0,Kn.prototype=Object.create(be.prototype),Kn.prototype.constructor=Kn,Kn.prototype.update=function(){var t=new c,e=new c,i=new et;return function(){var n=["a","b","c"];this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);var r=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,c=o.faces,h=0,l=0,u=c.length;l<u;l++)for(var p=c[l],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[n[d]]],g=p.vertexNormals[d];t.copy(m).applyMatrix4(r),e.copy(g).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1}else if(o&&o.isBufferGeometry)for(var v=o.attributes.position,y=o.attributes.normal,h=0,d=0,f=v.count;d<f;d++)t.set(v.getX(d),v.getY(d),v.getZ(d)).applyMatrix4(r),e.set(y.getX(d),y.getY(d),y.getZ(d)),e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(h,t.x,t.y,t.z),h+=1,a.setXYZ(h,e.x,e.y,e.z),h+=1;return a.needsUpdate=!0,this}}(),$n.prototype=Object.create(ct.prototype),$n.prototype.constructor=$n,$n.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},$n.prototype.update=function(){var t=new c,e=new c;return function(){var i=this.light.distance?this.light.distance:1e3,n=i*Math.tan(this.light.angle);this.cone.scale.set(n,n,i),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),tr.prototype=Object.create(be.prototype),tr.prototype.constructor=tr,tr.prototype.getBoneList=function(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,this.getBoneList(t.children[i]));return e},tr.prototype.update=function(){var t=new c,e=new h,i=new h;return function(){var n=this.geometry,r=n.getAttribute("position");i.getInverse(this.root.matrixWorld);for(var a=0,o=0;a<this.bones.length;a++){var s=this.bones[a];s.parent&&s.parent.isBone&&(e.multiplyMatrices(i,s.matrixWorld),t.setFromMatrixPosition(e),r.setXYZ(o,t.x,t.y,t.z),e.multiplyMatrices(i,s.parent.matrixWorld),t.setFromMatrixPosition(e),r.setXYZ(o+1,t.x,t.y,t.z),o+=2)}n.getAttribute("position").needsUpdate=!0}}(),er.prototype=Object.create(Lt.prototype),er.prototype.constructor=er,er.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},er.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},ir.prototype=Object.create(ct.prototype),ir.prototype.constructor=ir,ir.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose(),this.children[1].geometry.dispose(),this.children[1].material.dispose()},ir.prototype.update=function(){var t=new c,e=new c;return function(){var i=this.children[0],n=this.children[1];if(this.light.target){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld);var r=e.clone().sub(t);i.lookAt(r),n.lookAt(r)}i.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var a=.5*this.light.width,o=.5*this.light.height,s=i.geometry.getAttribute("position"),c=s.array;c[0]=a,c[1]=-o,c[2]=0,c[3]=a,c[4]=o,c[5]=0,c[6]=-a,c[7]=o,c[8]=0,c[9]=-a,c[10]=o,c[11]=0,c[12]=-a,c[13]=-o,c[14]=0,c[15]=a,c[16]=-o,c[17]=0,s.needsUpdate=!0}}(),nr.prototype=Object.create(ct.prototype),nr.prototype.constructor=nr,nr.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},nr.prototype.update=function(){var t=new c,e=new W,i=new W;return function(){var n=this.children[0],r=n.geometry.getAttribute("color");e.copy(this.light.color).multiplyScalar(this.light.intensity),i.copy(this.light.groundColor).multiplyScalar(this.light.intensity);for(var a=0,o=r.count;a<o;a++){var s=a<o/2?e:i;r.setXYZ(a,s.r,s.g,s.b)}n.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),r.needsUpdate=!0}}(),rr.prototype=Object.create(be.prototype),rr.prototype.constructor=rr,ar.prototype=Object.create(be.prototype),ar.prototype.constructor=ar,or.prototype=Object.create(be.prototype),or.prototype.constructor=or,or.prototype.update=function(){var t=new c,e=new c,i=new et;return function(){this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);for(var n=this.object.matrixWorld,r=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,c=0,h=0,l=s.length;h<l;h++){var u=s[h],p=u.normal;t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),e.copy(p).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),r.setXYZ(c,t.x,t.y,t.z),c+=1,r.setXYZ(c,e.x,e.y,e.z),c+=1}return r.needsUpdate=!0,this}}(),sr.prototype=Object.create(ct.prototype),sr.prototype.constructor=sr,sr.prototype.dispose=function(){var t=this.children[0],e=this.children[1];t.geometry.dispose(),t.material.dispose(),e.geometry.dispose(),e.material.dispose()},sr.prototype.update=function(){var t=new c,e=new c,i=new c;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(e,t);var n=this.children[0],r=this.children[1];n.lookAt(i),n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),r.lookAt(i),r.scale.z=i.length()}}(),cr.prototype=Object.create(be.prototype),cr.prototype.constructor=cr,cr.prototype.update=function(){function t(t,a,o,s){n.set(a,o,s).unproject(r);var c=i[t];if(void 0!==c)for(var h=e.getAttribute("position"),l=0,u=c.length;l<u;l++)h.setXYZ(c[l],n.x,n.y,n.z)}var e,i,n=new c,r=new Ut;return function(){e=this.geometry,i=this.pointMap;var n=1,a=1;r.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-n,-a,-1),t("n2",n,-a,-1),t("n3",-n,a,-1),t("n4",n,a,-1),t("f1",-n,-a,1),t("f2",n,-a,1),t("f3",-n,a,1),t("f4",n,a,1),t("u1",.7*n,1.1*a,-1),t("u2",.7*-n,1.1*a,-1),t("u3",0,2*a,-1),t("cf1",-n,0,1),t("cf2",n,0,1),t("cf3",0,-a,1),t("cf4",0,a,1),t("cn1",-n,0,-1),t("cn2",n,0,-1),t("cn3",0,-a,-1),t("cn4",0,a,-1),e.getAttribute("position").needsUpdate=!0}}(),hr.prototype=Object.create(be.prototype),hr.prototype.constructor=hr,hr.prototype.update=function(){var t=new $;return function(e){if(e&&e.isBox3?t.copy(e):t.setFromObject(e),!t.isEmpty()){var i=t.min,n=t.max,r=this.geometry.attributes.position,a=r.array;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=i.x,a[4]=n.y,a[5]=n.z,a[6]=i.x,a[7]=i.y,a[8]=n.z,a[9]=n.x,a[10]=i.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=i.z,a[15]=i.x,a[16]=n.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=n.x,a[22]=i.y,a[23]=i.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}();var Bh,Fh;lr.prototype=Object.create(ct.prototype),lr.prototype.constructor=lr,lr.prototype.setDirection=function(){var t,e=new c;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(e,t))}}(),lr.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},lr.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},ur.prototype=Object.create(be.prototype),ur.prototype.constructor=ur;var zh=new c,Gh=new pr,Hh=new pr,Vh=new pr;dr.prototype=Object.create(dn.prototype),dr.prototype.constructor=dr,dr.prototype.getPoint=function(t){var e=this.points,i=e.length;i<2&&console.log("duh, you need at least 2 points");var n=(i-(this.closed?0:1))*t,r=Math.floor(n),a=n-r;this.closed?r+=r>0?0:(Math.floor(Math.abs(r)/e.length)+1)*e.length:0===a&&r===i-1&&(r=i-2,a=1);var o,s,h,l;if(this.closed||r>0?o=e[(r-1)%i]:(zh.subVectors(e[0],e[1]).add(e[0]),o=zh),s=e[r%i],h=e[(r+1)%i],this.closed||r+2<i?l=e[(r+2)%i]:(zh.subVectors(e[i-1],e[i-2]).add(e[i-1]),l=zh),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var u="chordal"===this.type?.5:.25,p=Math.pow(o.distanceToSquared(s),u),d=Math.pow(s.distanceToSquared(h),u),f=Math.pow(h.distanceToSquared(l),u);d<1e-4&&(d=1),p<1e-4&&(p=d),f<1e-4&&(f=d),Gh.initNonuniformCatmullRom(o.x,s.x,h.x,l.x,p,d,f),Hh.initNonuniformCatmullRom(o.y,s.y,h.y,l.y,p,d,f),Vh.initNonuniformCatmullRom(o.z,s.z,h.z,l.z,p,d,f)}else if("catmullrom"===this.type){var m=void 0!==this.tension?this.tension:.5;Gh.initCatmullRom(o.x,s.x,h.x,l.x,m),Hh.initCatmullRom(o.y,s.y,h.y,l.y,m),Vh.initCatmullRom(o.z,s.z,h.z,l.z,m)}return new c(Gh.calc(a),Hh.calc(a),Vh.calc(a))},fr.prototype=Object.create(dn.prototype),fr.prototype.constructor=fr,fr.prototype.getPoint=function(t){var e=this.v0,i=this.v1,n=this.v2,r=this.v3;return new c(pn(t,e.x,i.x,n.x,r.x),pn(t,e.y,i.y,n.y,r.y),pn(t,e.z,i.z,n.z,r.z))},mr.prototype=Object.create(dn.prototype),mr.prototype.constructor=mr,mr.prototype.getPoint=function(t){var e=this.v0,i=this.v1,n=this.v2;return new c(sn(t,e.x,i.x,n.x),sn(t,e.y,i.y,n.y),sn(t,e.z,i.z,n.z))},gr.prototype=Object.create(dn.prototype),gr.prototype.constructor=gr,gr.prototype.getPoint=function(t){if(1===t)return this.v2.clone();var e=new c;return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e},vr.prototype=Object.create(gn.prototype),vr.prototype.constructor=vr;var kh={createMultiMaterialObject:function(t,e){for(var i=new Ee,n=0,r=e.length;n<r;n++)i.add(new Lt(t,e[n]));return i},detach:function(t,e,i){t.applyMatrix(e.matrixWorld),e.remove(t),i.add(t)},attach:function(t,e,i){var n=new h;n.getInverse(i.matrixWorld),t.applyMatrix(n),e.remove(t),i.add(t)}},jh=0,Wh=1;dn.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(dn.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Br.prototype=Object.create(dr.prototype),Fr.prototype=Object.create(dr.prototype),zr.prototype=Object.create(dr.prototype),Object.assign(zr.prototype,{initFromArray:function(t){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(t){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(t){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),rr.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Object.assign(q.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign($.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),ht.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},us.random16=function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},Object.assign(et.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToBuffer:function(t,e,i){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(t,e,i){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(h.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new c),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(t,e,i){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(t)},applyToVector3Array:function(t,e,i){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,i,n,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,n,i,r,a)}}),it.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},s.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},Object.assign(at.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(bn.prototype,{extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Ye(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ii(this,t)}}),Object.assign(i.prototype,{fromAttribute:function(t,e,i){return console.error("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)}}),Object.assign(c.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,i){return console.error("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)}}),Object.assign(r.prototype,{fromAttribute:function(t,e,i){return console.error("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,i)}}),St.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},Object.assign(ct.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)}}),Object.defineProperties(ct.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(me.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Nt.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(Li.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(dt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}}),Object.assign(At.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addDrawCall:function(t,e,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(At.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Fn.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(J.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new W}}}),Object.defineProperties(gi.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Q.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(ce.prototype,{supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");\n}}),Object.defineProperties(ce.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=t}}}),Object.defineProperties(rt.prototype,{cullFace:{get:function(){return this.renderReverseSided?Qr:Jr},set:function(t){var e=t!==Jr;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+e+"."),this.renderReverseSided=e}}}),Object.defineProperties(a.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Pn.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this,i=new Tn;return i.load(t,function(t){e.setBuffer(t)}),this},In.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};var Xh={merge:function(t,e,i){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var n;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),n=e.matrix,e=e.geometry),t.merge(e,n,i)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},qh={crossOrigin:void 0,loadTexture:function(t,e,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new Ai;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},loadTextureCube:function(t,e,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new Si;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};t.WebGLRenderTargetCube=o,t.WebGLRenderTarget=a,t.WebGLRenderer=ce,t.ShaderLib=wh,t.UniformsLib=bh,t.UniformsUtils=ys,t.ShaderChunk=xh,t.FogExp2=he,t.Fog=le,t.Scene=ue,t.LensFlare=pe,t.Sprite=fe,t.LOD=me,t.SkinnedMesh=ye,t.Skeleton=ge,t.Bone=ve,t.Mesh=Lt,t.LineSegments=be,t.Line=_e,t.Points=Me,t.Group=Ee,t.VideoTexture=Te,t.DataTexture=X,t.CompressedTexture=Se,t.CubeTexture=l,t.CanvasTexture=Ae,t.DepthTexture=Le,t.Texture=n,t.CompressedTextureLoader=Mi,t.DataTextureLoader=Ei,t.CubeTextureLoader=Si,t.TextureLoader=Ai,t.ObjectLoader=en,t.MaterialLoader=Qi,t.BufferGeometryLoader=Ki,t.DefaultLoadingManager=Ch,t.LoadingManager=bi,t.JSONLoader=tn,t.ImageLoader=Ti,t.FontLoader=En,t.FileLoader=wi,t.Loader=$i,t.Cache=Ph,t.AudioLoader=Tn,t.SpotLightShadow=Ci,t.SpotLight=Ii,t.PointLight=Ui,t.RectAreaLight=Sn,t.HemisphereLight=Ri,t.DirectionalLightShadow=Ni,t.DirectionalLight=Di,t.AmbientLight=Oi,t.LightShadow=Pi,t.Light=Li,t.StereoCamera=An,t.PerspectiveCamera=Nt,t.OrthographicCamera=Dt,t.CubeCamera=Ln,t.Camera=Ut,t.AudioListener=Rn,t.PositionalAudio=Cn,t.AudioContext=Oh,t.AudioAnalyser=In,t.Audio=Pn,t.VectorKeyframeTrack=Vi,t.StringKeyframeTrack=Xi,t.QuaternionKeyframeTrack=ji,t.NumberKeyframeTrack=Wi,t.ColorKeyframeTrack=Yi,t.BooleanKeyframeTrack=qi,t.PropertyMixer=Un,t.PropertyBinding=Nn,t.KeyframeTrack=Zi,t.AnimationUtils=Ih,t.AnimationObjectGroup=Dn,t.AnimationMixer=Bn,t.AnimationClip=Ji,t.Uniform=Fn,t.InstancedBufferGeometry=zn,t.BufferGeometry=At,t.GeometryIdCount=Tt,t.Geometry=St,t.InterleavedBufferAttribute=Gn,t.InstancedInterleavedBuffer=Vn,t.InterleavedBuffer=Hn,t.InstancedBufferAttribute=kn,t.Face3=ut,t.Object3D=ct,t.Raycaster=jn,t.Layers=st,t.EventDispatcher=e,t.Clock=qn,t.QuaternionLinearInterpolant=ki,t.LinearInterpolant=zi,t.DiscreteInterpolant=Gi,t.CubicInterpolant=Fi,t.Interpolant=Bi,t.Triangle=lt,t.Math=us,t.Spherical=Yn,t.Cylindrical=Zn,t.Plane=it,t.Frustum=nt,t.Sphere=tt,t.Ray=at,t.Matrix4=h,t.Matrix3=et,t.Box3=$,t.Box2=q,t.Line3=ht,t.Euler=ot,t.Vector4=r,t.Vector3=c,t.Vector2=i,t.Quaternion=s,t.Color=W,t.MorphBlendMesh=Jn,t.ImmediateRenderObject=Qn,t.VertexNormalsHelper=Kn,t.SpotLightHelper=$n,t.SkeletonHelper=tr,t.PointLightHelper=er,t.RectAreaLightHelper=ir,t.HemisphereLightHelper=nr,t.GridHelper=rr,t.PolarGridHelper=ar,t.FaceNormalsHelper=or,t.DirectionalLightHelper=sr,t.CameraHelper=cr,t.BoxHelper=hr,t.ArrowHelper=lr,t.AxisHelper=ur,t.CatmullRomCurve3=dr,t.CubicBezierCurve3=fr,t.QuadraticBezierCurve3=mr,t.LineCurve3=gr,t.ArcCurve=vr,t.EllipseCurve=gn,t.SplineCurve=vn,t.CubicBezierCurve=yn,t.QuadraticBezierCurve=xn,t.LineCurve=fn,t.Shape=bn,t.Path=_n,t.ShapePath=wn,t.Font=Mn,t.CurvePath=mn,t.Curve=dn,t.ShapeUtils=Ah,t.SceneUtils=kh,t.WireframeGeometry=Re,t.ParametricGeometry=Pe,t.ParametricBufferGeometry=Ce,t.TetrahedronGeometry=Ne,t.TetrahedronBufferGeometry=De,t.OctahedronGeometry=Oe,t.OctahedronBufferGeometry=Be,t.IcosahedronGeometry=Fe,t.IcosahedronBufferGeometry=ze,t.DodecahedronGeometry=Ge,t.DodecahedronBufferGeometry=He,t.PolyhedronGeometry=Ie,t.PolyhedronBufferGeometry=Ue,t.TubeGeometry=Ve,t.TubeBufferGeometry=ke,t.TorusKnotGeometry=je,t.TorusKnotBufferGeometry=We,t.TorusGeometry=Xe,t.TorusBufferGeometry=qe,t.TextGeometry=Ze,t.SphereGeometry=Je,t.SphereBufferGeometry=Qe,t.RingGeometry=Ke,t.RingBufferGeometry=$e,t.PlaneGeometry=Ct,t.PlaneBufferGeometry=It,t.LatheGeometry=ti,t.LatheBufferGeometry=ei,t.ShapeGeometry=ii,t.ShapeBufferGeometry=ni,t.ExtrudeGeometry=Ye,t.EdgesGeometry=ri,t.ConeGeometry=si,t.ConeBufferGeometry=ci,t.CylinderGeometry=ai,t.CylinderBufferGeometry=oi,t.CircleGeometry=hi,t.CircleBufferGeometry=li,t.BoxGeometry=Rt,t.BoxBufferGeometry=Pt,t.ShadowMaterial=ui,t.SpriteMaterial=de,t.RawShaderMaterial=pi,t.ShaderMaterial=Q,t.PointsMaterial=we,t.MultiMaterial=di,t.MeshPhysicalMaterial=mi,t.MeshStandardMaterial=fi,t.MeshPhongMaterial=gi,t.MeshToonMaterial=vi;t.MeshNormalMaterial=yi;t.MeshLambertMaterial=xi,t.MeshDepthMaterial=K,t.MeshBasicMaterial=pt,t.LineDashedMaterial=_i,t.LineBasicMaterial=xe,t.Material=J,t.Float64BufferAttribute=wt,t.Float32BufferAttribute=bt,t.Uint32BufferAttribute=_t,t.Int32BufferAttribute=xt,t.Uint16BufferAttribute=yt,t.Int16BufferAttribute=vt,t.Uint8ClampedBufferAttribute=gt,t.Uint8BufferAttribute=mt,t.Int8BufferAttribute=ft,t.BufferAttribute=dt,t.REVISION=qr,t.MOUSE=Yr,t.CullFaceNone=Zr,t.CullFaceBack=Jr,t.CullFaceFront=Qr,t.CullFaceFrontBack=Kr,t.FrontFaceDirectionCW=$r,t.FrontFaceDirectionCCW=ta,t.BasicShadowMap=ea,t.PCFShadowMap=ia,t.PCFSoftShadowMap=na,t.FrontSide=ra,t.BackSide=aa,t.DoubleSide=oa,t.FlatShading=sa,t.SmoothShading=ca,t.NoColors=ha,t.FaceColors=la,t.VertexColors=ua,t.NoBlending=pa,t.NormalBlending=da,t.AdditiveBlending=fa,t.SubtractiveBlending=ma,t.MultiplyBlending=ga,t.CustomBlending=va,t.AddEquation=ya,t.SubtractEquation=xa,t.ReverseSubtractEquation=_a,t.MinEquation=ba,t.MaxEquation=wa,t.ZeroFactor=Ma,t.OneFactor=Ea,t.SrcColorFactor=Ta,t.OneMinusSrcColorFactor=Sa,t.SrcAlphaFactor=Aa,t.OneMinusSrcAlphaFactor=La,t.DstAlphaFactor=Ra,t.OneMinusDstAlphaFactor=Pa,t.DstColorFactor=Ca,t.OneMinusDstColorFactor=Ia,t.SrcAlphaSaturateFactor=Ua,t.NeverDepth=Na,t.AlwaysDepth=Da,t.LessDepth=Oa,t.LessEqualDepth=Ba,t.EqualDepth=Fa,t.GreaterEqualDepth=za,t.GreaterDepth=Ga,t.NotEqualDepth=Ha,t.MultiplyOperation=Va,t.MixOperation=ka,t.AddOperation=ja,t.NoToneMapping=Wa,t.LinearToneMapping=Xa,t.ReinhardToneMapping=qa,t.Uncharted2ToneMapping=Ya,t.CineonToneMapping=Za,t.UVMapping=Ja,t.CubeReflectionMapping=Qa,t.CubeRefractionMapping=Ka,t.EquirectangularReflectionMapping=$a,t.EquirectangularRefractionMapping=to,t.SphericalReflectionMapping=eo,t.CubeUVReflectionMapping=io,t.CubeUVRefractionMapping=no,t.RepeatWrapping=ro,t.ClampToEdgeWrapping=ao,t.MirroredRepeatWrapping=oo,t.NearestFilter=so,t.NearestMipMapNearestFilter=co,t.NearestMipMapLinearFilter=ho,t.LinearFilter=lo,t.LinearMipMapNearestFilter=uo,t.LinearMipMapLinearFilter=po,t.UnsignedByteType=fo,t.ByteType=mo,t.ShortType=go,t.UnsignedShortType=vo,t.IntType=yo,t.UnsignedIntType=xo,t.FloatType=_o,t.HalfFloatType=bo,t.UnsignedShort4444Type=wo,t.UnsignedShort5551Type=Mo,t.UnsignedShort565Type=Eo,t.UnsignedInt248Type=To,t.AlphaFormat=So,t.RGBFormat=Ao,t.RGBAFormat=Lo,t.LuminanceFormat=Ro,t.LuminanceAlphaFormat=Po,t.RGBEFormat=Co,t.DepthFormat=Io,t.DepthStencilFormat=Uo,t.RGB_S3TC_DXT1_Format=No,t.RGBA_S3TC_DXT1_Format=Do,t.RGBA_S3TC_DXT3_Format=Oo,t.RGBA_S3TC_DXT5_Format=Bo,t.RGB_PVRTC_4BPPV1_Format=Fo,t.RGB_PVRTC_2BPPV1_Format=zo,t.RGBA_PVRTC_4BPPV1_Format=Go,t.RGBA_PVRTC_2BPPV1_Format=Ho,t.RGB_ETC1_Format=Vo,t.LoopOnce=ko,t.LoopRepeat=jo,t.LoopPingPong=Wo,t.InterpolateDiscrete=Xo,t.InterpolateLinear=qo,t.InterpolateSmooth=Yo,t.ZeroCurvatureEnding=Zo,t.ZeroSlopeEnding=Jo,t.WrapAroundEnding=Qo,t.TrianglesDrawMode=Ko,t.TriangleStripDrawMode=$o,t.TriangleFanDrawMode=ts,t.LinearEncoding=es,t.sRGBEncoding=is,t.GammaEncoding=ns,t.RGBEEncoding=rs,t.LogLuvEncoding=as,t.RGBM7Encoding=os,t.RGBM16Encoding=ss,t.RGBDEncoding=cs,t.BasicDepthPacking=hs,t.RGBADepthPacking=ls,t.CubeGeometry=Rt,t.Face4=yr,t.LineStrip=jh,t.LinePieces=Wh,t.MeshFaceMaterial=xr,t.PointCloud=_r,t.Particle=br,t.ParticleSystem=wr,t.PointCloudMaterial=Mr,t.ParticleBasicMaterial=Er,t.ParticleSystemMaterial=Tr,t.Vertex=Sr,t.DynamicBufferAttribute=Ar,t.Int8Attribute=Lr,t.Uint8Attribute=Rr,t.Uint8ClampedAttribute=Pr,t.Int16Attribute=Cr,t.Uint16Attribute=Ir,t.Int32Attribute=Ur,t.Uint32Attribute=Nr,t.Float32Attribute=Dr,t.Float64Attribute=Or,t.ClosedSplineCurve3=Br,t.SplineCurve3=Fr,t.Spline=zr,t.BoundingBoxHelper=Gr,t.EdgesHelper=Hr,t.WireframeHelper=Vr,t.XHRLoader=kr,t.BinaryTextureLoader=jr,t.GeometryUtils=Xh,t.ImageUtils=qh,t.Projector=Wr,t.CanvasRenderer=Xr,Object.defineProperty(t,"__esModule",{value:!0})});\n},{}],42:[function(_dereq_,module,exports){\nTHREE.BlendCharacter=function(){this.weightSchedule=[],this.warpSchedule=[],this.load=function(i,t){var e=this,n=new THREE.ObjectLoader;n.load(i,function(n){if(n.traverse(function(i){i instanceof THREE.SkinnedMesh&&(e.skinnedMesh=i)}),THREE.SkinnedMesh.call(e,e.skinnedMesh.geometry,e.skinnedMesh.material),void 0==e.skinnedMesh)return void console.log("unable to find skinned mesh in "+i);e.material.skinning=!0,e.mixer=new THREE.AnimationMixer(e);for(var s=0;s<e.geometry.animations.length;++s)e.mixer.clipAction(e.geometry.animations[s]);void 0!==t&&t()})},this.loadJSON=function(i,t){var e=this,n=new THREE.JSONLoader;n.load(i,function(i,n){var s=n[0];s.skinning=!0,THREE.SkinnedMesh.call(e,i,s);var o=new THREE.AnimationMixer(e);e.mixer=o;for(var r=0;r<i.animations.length;++r)o.clipAction(i.animations[r]);void 0!==t&&t()})},this.update=function(i){this.mixer.update(i)},this.play=function(i,t){return this.mixer.clipAction(i).setEffectiveWeight(t).play()},this.crossfade=function(i,t,e){this.mixer.stopAllAction();var n=this.play(i,1),s=this.play(t,1);n.crossFadeTo(s,e,!1)},this.warp=function(i,t,e){this.mixer.stopAllAction();var n=this.play(i,1),s=this.play(t,1);n.crossFadeTo(s,e,!0)},this.applyWeight=function(i,t){this.mixer.clipAction(i).setEffectiveWeight(t)},this.getWeight=function(i){return this.mixer.clipAction(i).getEffectiveWeight()},this.pauseAll=function(){this.mixer.timeScale=0},this.unPauseAll=function(){this.mixer.timeScale=1},this.stopAll=function(){this.mixer.stopAllAction()},this.showModel=function(i){this.visible=i}},THREE.BlendCharacter.prototype=Object.create(THREE.SkinnedMesh.prototype),THREE.BlendCharacter.prototype.constructor=THREE.BlendCharacter,THREE.BlendCharacter.prototype.getForward=function(){var i=new THREE.Vector3;return function(){return i.set(-this.matrix.elements[8],-this.matrix.elements[9],-this.matrix.elements[10]),i}};\n},{}],43:[function(_dereq_,module,exports){\nTHREE.ColladaLoader=function(){function e(e,i,s,r){var a=0;if(document.implementation&&document.implementation.createDocument){var n=new XMLHttpRequest;n.onreadystatechange=function(){4===n.readyState?0===n.status||200===n.status?n.response?(Xe=i,t(n.response,void 0,e)):r?r({type:"error",url:e}):console.error("ColladaLoader: Empty or non-existing file ("+e+")"):r?r({type:"error",url:e}):console.error("ColladaLoader: Couldn\'t load \\""+e+\'" (\'+n.status+")"):3===n.readyState&&s&&(0===a&&(a=n.getResponseHeader("Content-Length")),s({total:a,loaded:n.responseText.length}))},n.open("GET",e,!0),n.send(null)}else alert("Don\'t know how to parse XML!")}function t(e,t,i){if(qe=(new DOMParser).parseFromString(e,"text/xml"),t=t||Xe,void 0!==i){var h=i.split("/");h.pop(),Oe=(h.length<1?".":h.join("/"))+"/"}s(),we(),Ye=r("library_images image",R,"image"),Be=r("library_materials material",P,"material"),De=r("library_effects effect",Q,"effect"),Fe=r("library_geometries geometry",q,"geometry"),Pe=r("library_cameras camera",se,"camera"),Ue=r("library_lights light",ae,"light"),ze=r("library_controllers controller",_,"controller"),Ze=r("library_animations animation",K,"animation"),Me=r("library_visual_scenes visual_scene",H,"visual_scene"),je=r("library_kinematics_models kinematics_model",oe,"kinematics_model"),Se=[],Ie=[],_e=a(),Ve=new THREE.Group;for(var l=0;l<_e.nodes.length;l++)Ve.add(v(_e.nodes[l]));Ve.scale.multiplyScalar(We),o(),Ae=n(),g();var c={scene:Ve,morphs:Se,skins:Ie,animations:Ce,kinematics:He,dae:{images:Ye,materials:Be,cameras:Pe,lights:Ue,effects:De,geometries:Fe,controllers:ze,animations:Ze,visualScenes:Me,visualScene:_e,scene:_e,kinematicsModels:je,kinematicsModel:Ae}};return t&&t(c),c}function i(e){Ge=e}function s(){var e=qe.querySelectorAll("asset"),t=e[0];if(t&&t.childNodes)for(var i=0;i<t.childNodes.length;i++){var s=t.childNodes[i];switch(s.nodeName){case"unit":var r=s.getAttribute("meter");r&&(We=parseFloat(r));break;case"up_axis":Qe=s.textContent.charAt(0)}}}function r(e,t,i){for(var s=qe.querySelectorAll(e),r={},a=0,n=s.length,o=0;o<n;o++){var h=s[o],l=(new t).parse(h);l.id&&0!==l.id.length||(l.id=i+a++),r[l.id]=l}return r}function a(){var e=qe.querySelectorAll("scene instance_visual_scene")[0];if(e){var t=e.getAttribute("url").replace(/^#/,"");return Me[t.length>0?t:"visual_scene0"]}return null}function n(){var e=qe.querySelectorAll("instance_kinematics_model")[0];if(e){var t=e.getAttribute("url").replace(/^#/,"");return je[t.length>0?t:"kinematics_model0"]}return null}function o(){Ce=[],h(Ve)}function h(e){var t=_e.getChildById(e.colladaId,!0),i=null;if(t&&t.keys){i={fps:60,hierarchy:[{node:t,keys:t.keys,sids:t.sids}],node:e,name:"animation_"+e.name,length:0},Ce.push(i);for(var s=0,r=t.keys.length;s<r;s++)i.length=Math.max(i.length,t.keys[s].time)}else i={hierarchy:[{keys:[],sids:[]}]};for(var s=0,r=e.children.length;s<r;s++)for(var a=h(e.children[s]),n=0,o=a.hierarchy.length;n<o;n++)i.hierarchy.push({keys:[],sids:[]});return i}function l(){var e,t=1e6,i=-t,s=0;for(var r in Ze){var a=Ze[r];e=e||a.id;for(var n=0;n<a.sampler.length;n++){var o=a.sampler[n];o.create(),t=Math.min(t,o.startTime),i=Math.max(i,o.endTime),s=Math.max(s,o.input.length)}}return{start:t,end:i,frames:s,ID:e}}function c(e,t){var i=t instanceof O?ze[t.url]:t;if(!i||!i.morph)return void console.log("could not find morph controller!");for(var s=i.morph,r=0;r<s.targets.length;r++){var a=s.targets[r],n=Fe[a];if(n.mesh&&n.mesh.primitives&&n.mesh.primitives.length){var o=n.mesh.primitives[0].geometry;o.vertices.length===e.vertices.length&&e.morphTargets.push({name:"target_1",vertices:o.vertices})}}e.morphTargets.push({name:"target_Z",vertices:e.vertices})}function p(e,t,i,s){if(e.world=e.world||new THREE.Matrix4,e.localworld=e.localworld||new THREE.Matrix4,e.world.copy(e.matrix),e.localworld.copy(e.matrix),e.channels&&e.channels.length){var r=e.channels[0],a=r.sampler.output[i];a instanceof THREE.Matrix4&&(e.world.copy(a),e.localworld.copy(a),0===i&&e.matrix.copy(a))}s&&e.world.multiplyMatrices(s,e.world),t.push(e);for(var n=0;n<e.nodes.length;n++)p(e.nodes[n],t,i,e.world)}function d(e,t){for(var i=0;i<e.length;i++){var s=e[i],r=-1;if("JOINT"==s.type){for(var a=0;a<t.joints.length;a++)if(s.sid===t.joints[a]){r=a;break}if(r>=0){var n=t.invBindMatrices[r];s.invBindMatrix=n,s.skinningMatrix=new THREE.Matrix4,s.skinningMatrix.multiplyMatrices(s.world,n),s.animatrix=new THREE.Matrix4,s.animatrix.copy(s.localworld),s.weights=[];for(var a=0;a<t.weights.length;a++)for(var o=0;o<t.weights[a].length;o++){var h=t.weights[a][o];h.joint===r&&s.weights.push(h)}}else console.warn("ColladaLoader: Could not find joint \'"+s.sid+"\'."),s.skinningMatrix=new THREE.Matrix4,s.weights=[]}}}function u(e){var t=[],i=function(e,t,s){var r={};r.name=t.sid,r.parent=e,r.matrix=t.matrix;var a=[new THREE.Vector3,new THREE.Quaternion,new THREE.Vector3];r.matrix.decompose(a[0],a[1],a[2]),r.pos=[a[0].x,a[0].y,a[0].z],r.scl=[a[2].x,a[2].y,a[2].z],r.rotq=[a[1].x,a[1].y,a[1].z,a[1].w],s.push(r);for(var n in t.nodes)i(t.sid,t.nodes[n],s)};return i(-1,e,t),t}function f(e,t,i){var s=[];p(t,s,-1),d(s,i.skin);for(var r=new THREE.Vector3,a=[],n=0;n<e.vertices.length;n++)a.push(new THREE.Vector3);for(n=0;n<s.length;n++)if("JOINT"==s[n].type)for(var o=0;o<s[n].weights.length;o++){var h=s[n].weights[o],l=h.index,c=h.weight,u=e.vertices[l],f=a[l];r.x=u.x,r.y=u.y,r.z=u.z,r.applyMatrix4(s[n].skinningMatrix),f.x+=r.x*c,f.y+=r.y*c,f.z+=r.z*c}for(var n=0;n<e.vertices.length;n++)e.vertices[n]=a[n]}function m(e,t,i){var s=ze[t.url];if(i=void 0!==i?i:40,!s||!s.skin)return void console.log("ColladaLoader: Could not find skin controller.");if(!t.skeleton||!t.skeleton.length)return void console.log("ColladaLoader: Could not find the skeleton for the skin. ");for(var r=l(),a=_e.getChildById(t.skeleton[0],!0)||_e.getChildBySid(t.skeleton[0],!0),n=u(a),o=s.skin.joints,h=[],c=0;c<o.length;c++)for(var m=0;m<n.length;m++)n[m].name===o[c]&&(h[c]=n[m]);for(var c=0;c<h.length;c++)for(var m=0;m<h.length;m++)h[c].parent===h[m].name&&(h[c].parent=m);var c,m,g;new THREE.Vector3;for(c=0;c<e.vertices.length;c++)e.vertices[c].applyMatrix4(s.skin.bindShapeMatrix);for(var v=[],y=[],b=s.skin.weights,c=0;c<b.length;c++){var w=new THREE.Vector4(b[c][0]?b[c][0].joint:0,b[c][1]?b[c][1].joint:0,b[c][2]?b[c][2].joint:0,b[c][3]?b[c][3].joint:0),g=new THREE.Vector4(b[c][0]?b[c][0].weight:0,b[c][1]?b[c][1].weight:0,b[c][2]?b[c][2].weight:0,b[c][3]?b[c][3].weight:0);v.push(w),y.push(g)}e.skinIndices=v,e.skinWeights=y,e.bones=h;for(var x={name:r.ID,fps:30,length:r.frames/30,hierarchy:[]},m=0;m<h.length;m++)x.hierarchy.push({parent:h[m].parent,name:h[m].name,keys:[]});for(console.log("ColladaLoader:",r.ID+" has "+h.length+" bones."),f(e,a,s),i=0;i<r.frames;i++){var N=[];p(a,N,i),d(N,s.skin);for(var c=0;c<N.length;c++)for(var m=0;m<x.hierarchy.length;m++)if(x.hierarchy[m].name===N[c].sid){var k={};k.time=i/30,k.matrix=N[c].animatrix,0===i&&(N[c].matrix=k.matrix);var T=[new THREE.Vector3,new THREE.Quaternion,new THREE.Vector3];k.matrix.decompose(T[0],T[1],T[2]),k.pos=[T[0].x,T[0].y,T[0].z],k.scl=[T[2].x,T[2].y,T[2].z],k.rot=T[1],x.hierarchy[m].keys.push(k)}e.animation=x}}function g(){if(Ae&&0===Ae.joints.length)return void(He=void 0);var e={},t=function(t,i){var s=i.getAttribute("id"),r=_e.getChildById(s,!0),a=Ae.joints[t];Ve.traverse(function(i){i.colladaId==s&&(e[t]={node:i,transforms:r.transforms,joint:a,position:a.zeroPosition})})};He={joints:Ae&&Ae.joints,getJointValue:function(t){var i=e[t];return i?i.position:void console.log("getJointValue: joint "+t+" doesn\'t exist")},setJointValue:function(t,i){var r=e[t];if(r){var a=r.joint;if(i>a.limits.max||i<a.limits.min)console.log("setJointValue: joint "+t+" value "+i+" outside of limits (min: "+a.limits.min+", max: "+a.limits.max+")");else if(a.static)console.log("setJointValue: joint "+t+" is static");else{var n=r.node,o=a.axis,h=r.transforms,l=new THREE.Matrix4;for(s=0;s<h.length;s++){var c=h[s];if(c.sid&&c.sid.indexOf("joint"+t)!==-1)switch(a.type){case"revolute":l.multiply(p.makeRotationAxis(o,THREE.Math.degToRad(i)));break;case"prismatic":l.multiply(p.makeTranslation(o.x*i,o.y*i,o.z*i));break;default:console.warn("setJointValue: unknown joint type: "+a.type)}else{var p=new THREE.Matrix4;switch(c.type){case"matrix":l.multiply(c.obj);break;case"translate":l.multiply(p.makeTranslation(c.obj.x,c.obj.y,c.obj.z));break;case"rotate":l.multiply(p.makeRotationAxis(c.obj,c.angle))}}}var d=l.elements,u=Array.prototype.slice.call(d),f=[u[0],u[4],u[8],u[12],u[1],u[5],u[9],u[13],u[2],u[6],u[10],u[14],u[3],u[7],u[11],u[15]];n.matrix.set.apply(n.matrix,f),n.matrix.decompose(n.position,n.quaternion,n.scale)}}else console.log("setJointValue: joint "+t+" doesn\'t exist")}};var i=qe.querySelector("scene instance_kinematics_scene");if(i)for(var s=0;s<i.childNodes.length;s++){var r=i.childNodes[s];if(1==r.nodeType)switch(r.nodeName){case"bind_joint_axis":var a=r.getAttribute("target").split("/").pop(),n=r.querySelector("axis param").textContent,o=parseInt(n.split("joint").pop().split(".")[0]),h=qe.querySelector(\'[sid="\'+a+\'"]\');if(h){var l=h.parentElement;t(o,l)}}}}function v(e,t){var i,s,r,a,n=new THREE.Object3D,o=!1;for(r=0;r<e.controllers.length;r++){var h=ze[e.controllers[r].url];switch(h.type){case"skin":if(Fe[h.skin.source]){var l=new I;l.url=h.skin.source,l.instance_material=e.controllers[r].instance_material,e.geometries.push(l),o=!0,i=e.controllers[r]}else if(ze[h.skin.source]){var p=ze[h.skin.source];if(s=p,p.morph&&Fe[p.morph.source]){var l=new I;l.url=p.morph.source,l.instance_material=e.controllers[r].instance_material,e.geometries.push(l)}}break;case"morph":if(Fe[h.morph.source]){var l=new I;l.url=h.morph.source,l.instance_material=e.controllers[r].instance_material,e.geometries.push(l),s=e.controllers[r]}console.log("ColladaLoader: Morph-controller partially supported.")}}var d={};for(r=0;r<e.geometries.length;r++){var u,f=e.geometries[r],g=f.instance_material,y=Fe[f.url],b={},w=[],x=0;if(y){if(!y.mesh||!y.mesh.primitives)continue;if(0===n.name.length&&(n.name=y.id),g)for(a=0;a<g.length;a++){var N=g[a],k=Be[N.target],T=k.instance_effect.url,E=De[T].shader,R=E.material;if(y.doubleSided){if(!(N.symbol in d)){var _=R.clone();_.side=THREE.DoubleSide,d[N.symbol]=_}R=d[N.symbol]}R.opacity=R.opacity?R.opacity:1,b[N.symbol]=x,w.push(R),u=R,u.name=null===k.name||""===k.name?k.id:k.name,x++}var A,C=u||new THREE.MeshLambertMaterial({color:14540253,side:y.doubleSided?THREE.DoubleSide:THREE.FrontSide}),H=y.mesh.geometry3js;if(x>1)for(C=new THREE.MultiMaterial(w),a=0;a<H.faces.length;a++){var M=H.faces[a];M.materialIndex=b[M.daeMaterial]}void 0!==i?(m(H,i),H.morphTargets.length>0?(C.morphTargets=!0,C.skinning=!1):(C.morphTargets=!1,C.skinning=!0),A=new THREE.SkinnedMesh(H,C,!1),A.name="skin_"+Ie.length,Ie.push(A)):void 0!==s?(c(H,s),C.morphTargets=!0,A=new THREE.Mesh(H,C),A.name="morph_"+Se.length,Se.push(A)):A=H.isLineStrip===!0?new THREE.Line(H):new THREE.Mesh(H,C),n.add(A)}}for(r=0;r<e.cameras.length;r++){var j=e.cameras[r],O=Pe[j.url],S=new THREE.PerspectiveCamera(O.yfov,parseFloat(O.aspect_ratio),parseFloat(O.znear),parseFloat(O.zfar));n.add(S)}for(r=0;r<e.lights.length;r++){var q=null,V=e.lights[r],X=Ue[V.url];if(X&&X.technique){var L=X.color.getHex(),Y=X.intensity,Z=X.distance,z=X.falloff_angle;switch(X.technique){case"directional":q=new THREE.DirectionalLight(L,Y,Z),q.position.set(0,0,1);break;case"point":q=new THREE.PointLight(L,Y,Z);break;case"spot":q=new THREE.SpotLight(L,Y,Z,z),q.position.set(0,0,1);break;case"ambient":q=new THREE.AmbientLight(L)}}q&&n.add(q)}if(n.name=e.name||e.id||"",n.colladaId=e.id||"",n.layer=e.layer||"",n.matrix=e.matrix,n.matrix.decompose(n.position,n.quaternion,n.scale),Je.centerGeometry&&n.geometry){var F=n.geometry.center();F.multiply(n.scale),F.applyQuaternion(n.quaternion),n.position.sub(F)}for(r=0;r<e.nodes.length;r++)n.add(v(e.nodes[r],e));return n}function y(e){for(var t=qe.querySelectorAll("library_nodes node"),i=0;i<t.length;i++){var s=t[i].attributes.getNamedItem("id");if(s&&s.value===e)return t[i]}}function b(e){var t=[],i=1e6,s=-1e6;for(var r in Ze)for(var a=Ze[r],n=0;n<a.channel.length;n++){var o=a.channel[n],h=a.sampler[n],r=o.target.split("/")[0];r==e.id&&(h.create(),o.sampler=h,i=Math.min(i,h.startTime),s=Math.max(s,h.endTime),t.push(o))}return t.length&&(e.startTime=i,e.endTime=s),t}function w(e){if(e.channels&&e.channels.length){for(var t=[],i=[],s=0,r=e.channels.length;s<r;s++){var a,n=e.channels[s],o=n.fullSid,h=n.sampler,l=h.input,c=e.getTransformBySid(n.sid);if(n.arrIndices){a=[];for(var p=0,d=n.arrIndices.length;p<d;p++)a[p]=Ee(n.arrIndices[p])}else a=Re(n.member);if(c){i.indexOf(o)===-1&&i.push(o);for(var p=0,d=l.length;p<d;p++){var u=l[p],f=h.getData(c.type,p,a),m=x(t,u);if(!m){m=new ie(u);var g=N(t,u);t.splice(g===-1?t.length:g,0,m)}m.addTarget(o,c,a,f)}}else console.log(\'Could not find transform "\'+n.sid+\'" in node \'+e.id)}for(var s=0;s<i.length;s++)for(var v=i[s],p=0;p<t.length;p++){var m=t[p];m.hasTarget(v)||k(t,m,p,v)}e.keys=t,e.sids=i}}function x(e,t){for(var i=null,s=0,r=e.length;s<r&&null===i;s++){var a=e[s];if(a.time===t)i=a;else if(a.time>t)break}return i}function N(e,t){for(var i=-1,s=0,r=e.length;s<r&&i===-1;s++){var a=e[s];a.time>=t&&(i=s)}return i}function k(e,t,i,s){var r=E(e,s,i?i-1:0),a=T(e,s,i+1);if(r&&a){var n,o=(t.time-r.time)/(a.time-r.time),h=r.getTarget(s),l=a.getTarget(s).data,c=h.data;if("matrix"===h.type)n=c;else if(c.length){n=[];for(var p=0;p<c.length;++p)n[p]=c[p]+(l[p]-c[p])*o}else n=c+(l-c)*o;t.addTarget(s,h.transform,h.member,n)}}function T(e,t,i){for(;i<e.length;i++){var s=e[i];if(s.hasTarget(t))return s}return null}function E(e,t,i){for(i=i>=0?i:i+e.length;i>=0;i--){var s=e[i];if(s.hasTarget(t))return s}return null}function R(){this.id="",this.init_from=""}function _(){this.id="",this.name="",this.type="",this.skin=null,this.morph=null}function A(){this.method=null,this.source=null,this.targets=null,this.weights=null}function C(){this.source="",this.bindShapeMatrix=null,this.invBindMatrices=[],this.joints=[],this.weights=[]}function H(){this.id="",this.name="",this.nodes=[],this.scene=new THREE.Group}function M(){this.id="",this.name="",this.sid="",this.nodes=[],this.controllers=[],this.transforms=[],this.geometries=[],this.channels=[],this.matrix=new THREE.Matrix4}function j(){this.sid="",this.type="",this.data=[],this.obj=null}function O(){this.url="",this.skeleton=[],this.instance_material=[]}function S(){this.symbol="",this.target=""}function I(){this.url="",this.instance_material=[]}function q(){this.id="",this.mesh=null}function V(e){this.geometry=e.id,this.primitives=[],this.vertices=null,this.geometry3js=null}function X(){this.material="",this.count=0,this.inputs=[],this.vcount=null,this.p=[],this.geometry=new THREE.Geometry}function L(){X.call(this),this.vcount=[]}function Y(){X.call(this),this.vcount=1}function Z(){X.call(this),this.vcount=3}function z(){this.source="",this.count=0,this.stride=0,this.params=[]}function F(){this.input={}}function B(){this.semantic="",this.offset=0,this.source="",this.set=0}function D(e){this.id=e,this.type=null}function P(){this.id="",this.name="",this.instance_effect=null}function U(){this.color=new THREE.Color,this.color.setRGB(Math.random(),Math.random(),Math.random()),this.color.a=1,this.texture=null,this.texcoord=null,this.texOpts=null}function G(e,t){this.type=e,this.effect=t,this.material=null}function J(e){this.effect=e,this.init_from=null,this.format=null}function W(e){this.effect=e,this.source=null,this.wrap_s=null,this.wrap_t=null,this.minfilter=null,this.magfilter=null,this.mipfilter=null}function Q(){this.id="",this.name="",this.shader=null,this.surface={},this.sampler={}}function $(){this.url=""}function K(){this.id="",this.name="",this.source={},this.sampler=[],this.channel=[]}function ee(e){this.animation=e,this.source="",this.target="",this.fullSid=null,this.sid=null,this.dotSyntax=null,this.arrSyntax=null,this.arrIndices=null,this.member=null}function te(e){this.id="",this.animation=e,this.inputs=[],this.input=null,this.output=null,this.strideOut=null,this.interpolation=null,this.startTime=null,this.endTime=null,this.duration=0}function ie(e){this.targets=[],this.time=e}function se(){this.id="",this.name="",this.technique=""}function re(){this.url=""}function ae(){this.id="",this.name="",this.technique=""}function ne(){this.url=""}function oe(){this.id="",this.name="",this.joints=[],this.links=[]}function he(){this.sid="",this.name="",this.axis=new THREE.Vector3,this.limits={min:0,max:0},this.type="",this.static=!1,this.zeroPosition=0,this.middlePosition=0}function le(){this.sid="",this.name="",this.transforms=[],this.attachments=[]}function ce(){this.joint="",this.transforms=[],this.links=[]}function pe(e){var t=e.getAttribute("id");return void 0!=Le[t]?Le[t]:(Le[t]=new D(t).parse(e),Le[t])}function de(e){for(var t=me(e),i=[],s=0,r=t.length;s<r;s++)i.push("true"===t[s]||"1"===t[s]);return i}function ue(e){for(var t=me(e),i=[],s=0,r=t.length;s<r;s++)i.push(parseFloat(t[s]));return i}function fe(e){for(var t=me(e),i=[],s=0,r=t.length;s<r;s++)i.push(parseInt(t[s],10));return i}function me(e){return e.length>0?ge(e).split(/\\s+/):[]}function ge(e){return e.replace(/^\\s+/,"").replace(/\\s+$/,"")}function ve(e,t,i){return e.hasAttribute(t)?parseInt(e.getAttribute(t),10):i}function ye(e,t){var i=new THREE.ImageLoader;i.load(t,function(t){e.image=t,e.needsUpdate=!0})}function be(e,t){e.doubleSided=!1;var i=t.querySelectorAll("extra double_sided")[0];i&&i&&1===parseInt(i.textContent,10)&&(e.doubleSided=!0)}function we(){if(Je.convertUpAxis!==!0||Qe===Je.upAxis)$e=null;else switch(Qe){case"X":$e="Y"===Je.upAxis?"XtoY":"XtoZ";break;case"Y":$e="X"===Je.upAxis?"YtoX":"YtoZ";break;case"Z":$e="X"===Je.upAxis?"ZtoX":"ZtoY"}}function xe(e,t){if(Je.convertUpAxis===!0&&Qe!==Je.upAxis)switch($e){case"XtoY":var i=e[0];e[0]=t*e[1],e[1]=i;break;case"XtoZ":var i=e[2];e[2]=e[1],e[1]=e[0],e[0]=i;break;case"YtoX":var i=e[0];e[0]=e[1],e[1]=t*i;break;case"YtoZ":var i=e[1];e[1]=t*e[2],e[2]=i;break;case"ZtoX":var i=e[0];e[0]=e[1],e[1]=e[2],e[2]=i;break;case"ZtoY":var i=e[1];e[1]=e[2],e[2]=t*i}}function Ne(e,t){if(Je.convertUpAxis!==!0||Qe===Je.upAxis)return t;switch(e){case"X":t="XtoY"===$e?t*-1:t;break;case"Y":t="YtoZ"===$e||"YtoX"===$e?t*-1:t;break;case"Z":t="ZtoY"===$e?t*-1:t}return t}function ke(e,t){var i=[e[t],e[t+1],e[t+2]];return xe(i,-1),new THREE.Vector3(i[0],i[1],i[2])}function Te(e){if(Je.convertUpAxis){var t=[e[0],e[4],e[8]];xe(t,-1),e[0]=t[0],e[4]=t[1],e[8]=t[2],t=[e[1],e[5],e[9]],xe(t,-1),e[1]=t[0],e[5]=t[1],e[9]=t[2],t=[e[2],e[6],e[10]],xe(t,-1),e[2]=t[0],e[6]=t[1],e[10]=t[2],t=[e[0],e[1],e[2]],xe(t,-1),e[0]=t[0],e[1]=t[1],e[2]=t[2],t=[e[4],e[5],e[6]],xe(t,-1),e[4]=t[0],e[5]=t[1],e[6]=t[2],t=[e[8],e[9],e[10]],xe(t,-1),e[8]=t[0],e[9]=t[1],e[10]=t[2],t=[e[3],e[7],e[11]],xe(t,-1),e[3]=t[0],e[7]=t[1],e[11]=t[2]}return(new THREE.Matrix4).set(e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15])}function Ee(e){if(e>-1&&e<3){var t=["X","Y","Z"],i={X:0,Y:1,Z:2};e=Re(t[e]),e=i[e]}return e}function Re(e){if(Je.convertUpAxis)switch(e){case"X":switch($e){case"XtoY":case"XtoZ":case"YtoX":e="Y";break;case"ZtoX":e="Z"}break;case"Y":switch($e){case"XtoY":case"YtoX":case"ZtoX":e="X";break;case"XtoZ":case"YtoZ":case"ZtoY":e="Z"}break;case"Z":switch($e){case"XtoZ":e="X";break;case"YtoZ":case"ZtoX":case"ZtoY":e="Y"}}return e}var _e,Ae,Ce,He,Me,je,Oe,Se,Ie,qe=null,Ve=null,Xe=null,Le={},Ye={},Ze={},ze={},Fe={},Be={},De={},Pe={},Ue={},Ge=THREE.SmoothShading,Je={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},We=1,Qe="Y",$e=null;return R.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];"init_from"===i.nodeName&&(this.init_from=i.textContent)}return this},_.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.type="none";for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"skin":this.skin=(new C).parse(i),this.type=i.nodeName;break;case"morph":this.morph=(new A).parse(i),this.type=i.nodeName}}return this},A.prototype.parse=function(e){var t,i={},s=[];for(this.method=e.getAttribute("method"),this.source=e.getAttribute("source").replace(/^#/,""),t=0;t<e.childNodes.length;t++){var r=e.childNodes[t];if(1==r.nodeType)switch(r.nodeName){case"source":var a=(new D).parse(r);i[a.id]=a;break;case"targets":s=this.parseInputs(r);break;default:console.log(r.nodeName)}}for(t=0;t<s.length;t++){var n=s[t],a=i[n.source];switch(n.semantic){case"MORPH_TARGET":this.targets=a.read();break;case"MORPH_WEIGHT":this.weights=a.read()}}return this},A.prototype.parseInputs=function(e){for(var t=[],i=0;i<e.childNodes.length;i++){var s=e.childNodes[i];if(1==s.nodeType)switch(s.nodeName){case"input":t.push((new B).parse(s))}}return t},C.prototype.parse=function(e){var t,i,s={};this.source=e.getAttribute("source").replace(/^#/,""),this.invBindMatrices=[],this.joints=[],this.weights=[];for(var r=0;r<e.childNodes.length;r++){var a=e.childNodes[r];if(1==a.nodeType)switch(a.nodeName){case"bind_shape_matrix":var n=ue(a.textContent);this.bindShapeMatrix=Te(n);break;case"source":var o=(new D).parse(a);s[o.id]=o;break;case"joints":t=a;break;case"vertex_weights":i=a;break;default:console.log(a.nodeName)}}return this.parseJoints(t,s),this.parseWeights(i,s),this},C.prototype.parseJoints=function(e,t){for(var i=0;i<e.childNodes.length;i++){var s=e.childNodes[i];if(1==s.nodeType)switch(s.nodeName){case"input":var r=(new B).parse(s),a=t[r.source];"JOINT"===r.semantic?this.joints=a.read():"INV_BIND_MATRIX"===r.semantic&&(this.invBindMatrices=a.read())}}},C.prototype.parseWeights=function(e,t){for(var i,s,r=[],a=0;a<e.childNodes.length;a++){var n=e.childNodes[a];if(1==n.nodeType)switch(n.nodeName){case"input":r.push((new B).parse(n));break;case"v":i=fe(n.textContent);break;case"vcount":s=fe(n.textContent)}}for(var o=0,a=0;a<s.length;a++){for(var h=s[a],l=[],c=0;c<h;c++){for(var p={},d=0;d<r.length;d++){var u=r[d],f=i[o+u.offset];switch(u.semantic){case"JOINT":p.joint=f;break;case"WEIGHT":p.weight=t[u.source].data[f]}}l.push(p),o+=r.length}for(var c=0;c<l.length;c++)l[c].index=a;this.weights.push(l)}},H.prototype.getChildById=function(e,t){for(var i=0;i<this.nodes.length;i++){var s=this.nodes[i].getChildById(e,t);if(s)return s}return null},H.prototype.getChildBySid=function(e,t){for(var i=0;i<this.nodes.length;i++){var s=this.nodes[i].getChildBySid(e,t);if(s)return s}return null},H.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.nodes=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"node":this.nodes.push((new M).parse(i))}}return this},M.prototype.getChannelForTransform=function(e){for(var t=0;t<this.channels.length;t++){var i,s,r=this.channels[t],a=r.target.split("/"),n=(a.shift(),a.shift()),o=n.indexOf(".")>=0,h=n.indexOf("(")>=0;if(o)a=n.split("."),n=a.shift(),s=a.shift();else if(h){i=n.split("("),n=i.shift();for(var l=0;l<i.length;l++)i[l]=parseInt(i[l].replace(/\\)/,""))}if(n===e)return r.info={sid:n,dotSyntax:o,arrSyntax:h,arrIndices:i},r}return null},M.prototype.getChildById=function(e,t){if(this.id===e)return this;if(t)for(var i=0;i<this.nodes.length;i++){var s=this.nodes[i].getChildById(e,t);if(s)return s}return null},M.prototype.getChildBySid=function(e,t){if(this.sid===e)return this;if(t)for(var i=0;i<this.nodes.length;i++){var s=this.nodes[i].getChildBySid(e,t);if(s)return s}return null},M.prototype.getTransformBySid=function(e){for(var t=0;t<this.transforms.length;t++)if(this.transforms[t].sid===e)return this.transforms[t];return null},M.prototype.parse=function(e){var t;this.id=e.getAttribute("id"),this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.type=e.getAttribute("type"),this.layer=e.getAttribute("layer"),this.type="JOINT"===this.type?this.type:"NODE",this.nodes=[],this.transforms=[],this.geometries=[],this.cameras=[],this.lights=[],this.controllers=[],this.matrix=new THREE.Matrix4;for(var i=0;i<e.childNodes.length;i++){var s=e.childNodes[i];if(1==s.nodeType)switch(s.nodeName){case"node":this.nodes.push((new M).parse(s));break;case"instance_camera":this.cameras.push((new re).parse(s));break;case"instance_controller":this.controllers.push((new O).parse(s));break;case"instance_geometry":this.geometries.push((new I).parse(s));break;case"instance_light":this.lights.push((new ne).parse(s));break;case"instance_node":t=s.getAttribute("url").replace(/^#/,"");var r=y(t);r&&this.nodes.push((new M).parse(r));break;case"rotate":case"translate":case"scale":case"matrix":case"lookat":case"skew":this.transforms.push((new j).parse(s));break;case"extra":break;default:console.log(s.nodeName)}}return this.channels=b(this),w(this),this.updateMatrix(),this},M.prototype.updateMatrix=function(){this.matrix.identity();for(var e=0;e<this.transforms.length;e++)this.transforms[e].apply(this.matrix)},j.prototype.parse=function(e){return this.sid=e.getAttribute("sid"),this.type=e.nodeName,this.data=ue(e.textContent),this.convert(),this},j.prototype.convert=function(){switch(this.type){case"matrix":this.obj=Te(this.data);break;case"rotate":this.angle=THREE.Math.degToRad(this.data[3]);case"translate":xe(this.data,-1),this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case"scale":xe(this.data,1),this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}},j.prototype.apply=function(){var e=new THREE.Matrix4;return function(t){switch(this.type){case"matrix":t.multiply(this.obj);break;case"translate":t.multiply(e.makeTranslation(this.obj.x,this.obj.y,this.obj.z));break;case"rotate":t.multiply(e.makeRotationAxis(this.obj,this.angle));break;case"scale":t.scale(this.obj)}}}(),j.prototype.update=function(e,t){var i=["X","Y","Z","ANGLE"];switch(this.type){case"matrix":if(t)if(1===t.length)switch(t[0]){case 0:this.obj.n11=e[0],this.obj.n21=e[1],this.obj.n31=e[2],this.obj.n41=e[3];break;case 1:this.obj.n12=e[0],this.obj.n22=e[1],this.obj.n32=e[2],this.obj.n42=e[3];break;case 2:this.obj.n13=e[0],this.obj.n23=e[1],this.obj.n33=e[2],this.obj.n43=e[3];break;case 3:this.obj.n14=e[0],this.obj.n24=e[1],this.obj.n34=e[2],this.obj.n44=e[3]}else if(2===t.length){var s="n"+(t[0]+1)+(t[1]+1);this.obj[s]=e}else console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(e);break;case"translate":case"scale":switch("[object Array]"===Object.prototype.toString.call(t)&&(t=i[t[0]]),t){case"X":this.obj.x=e;break;case"Y":this.obj.y=e;break;case"Z":this.obj.z=e;break;default:this.obj.x=e[0],this.obj.y=e[1],this.obj.z=e[2]}break;case"rotate":switch("[object Array]"===Object.prototype.toString.call(t)&&(t=i[t[0]]),t){case"X":this.obj.x=e;break;case"Y":this.obj.y=e;break;case"Z":this.obj.z=e;break;case"ANGLE":this.angle=THREE.Math.degToRad(e);break;default:this.obj.x=e[0],this.obj.y=e[1],this.obj.z=e[2],this.angle=THREE.Math.degToRad(e[3])}}},O.prototype.parse=function(e){this.url=e.getAttribute("url").replace(/^#/,""),this.skeleton=[],this.instance_material=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1===i.nodeType)switch(i.nodeName){case"skeleton":this.skeleton.push(i.textContent.replace(/^#/,""));break;case"bind_material":for(var s=i.querySelectorAll("instance_material"),r=0;r<s.length;r++){var a=s[r];this.instance_material.push((new S).parse(a))}break;case"extra":}}return this},S.prototype.parse=function(e){return this.symbol=e.getAttribute("symbol"),this.target=e.getAttribute("target").replace(/^#/,""),this},I.prototype.parse=function(e){this.url=e.getAttribute("url").replace(/^#/,""),this.instance_material=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType&&"bind_material"===i.nodeName){for(var s=i.querySelectorAll("instance_material"),r=0;r<s.length;r++){var a=s[r];this.instance_material.push((new S).parse(a))}break}}return this},q.prototype.parse=function(e){this.id=e.getAttribute("id"),be(this,e);for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"mesh":this.mesh=new V(this).parse(i);break;case"extra":}}return this},V.prototype.parse=function(e){this.primitives=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"source":pe(i);break;case"vertices":this.vertices=(new F).parse(i);break;case"linestrips":this.primitives.push((new Y).parse(i));break;case"triangles":this.primitives.push((new Z).parse(i));break;case"polygons":this.primitives.push((new X).parse(i));break;case"polylist":this.primitives.push((new L).parse(i))}}if(this.geometry3js=new THREE.Geometry,null===this.vertices)return this;for(var s=Le[this.vertices.input.POSITION.source].data,t=0;t<s.length;t+=3)this.geometry3js.vertices.push(ke(s,t).clone());for(var t=0;t<this.primitives.length;t++){var r=this.primitives[t];r.setVertices(this.vertices),this.handlePrimitive(r,this.geometry3js)}return this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals),this},V.prototype.handlePrimitive=function(e,t){if(e instanceof Y)return void(t.isLineStrip=!0);var i,s,r,a,n,o,h,l=e.p,c=e.inputs,p=0,d=3,u=0,f=[];for(i=0;i<c.length;i++){r=c[i];var m=r.offset+1;switch(u=u<m?m:u,r.semantic){case"TEXCOORD":f.push(r.set)}}for(var g=0;g<l.length;++g)for(var v=l[g],y=0;y<v.length;){var b=[],w=[],x=null,N=[];for(d=e.vcount?e.vcount.length?e.vcount[p++]:e.vcount:v.length/u,i=0;i<d;i++)for(s=0;s<c.length;s++)switch(r=c[s],o=Le[r.source],a=v[y+i*u+r.offset],h=o.accessor.params.length,n=a*h,r.semantic){case"VERTEX":b.push(a);break;case"NORMAL":w.push(ke(o.data,n));break;case"TEXCOORD":x=x||{},void 0===x[r.set]&&(x[r.set]=[]),x[r.set].push(new THREE.Vector2(o.data[n],o.data[n+1]));break;case"COLOR":N.push((new THREE.Color).setRGB(o.data[n],o.data[n+1],o.data[n+2]))}if(0===w.length)if(r=this.vertices.input.NORMAL){o=Le[r.source],h=o.accessor.params.length;for(var k=0,T=b.length;k<T;k++)w.push(ke(o.data,b[k]*h))}else t.calcNormals=!0;if(!x&&(x={},r=this.vertices.input.TEXCOORD)){f.push(r.set),o=Le[r.source],h=o.accessor.params.length;for(var k=0,T=b.length;k<T;k++)n=b[k]*h,void 0===x[r.set]&&(x[r.set]=[]),x[r.set].push(new THREE.Vector2(o.data[n],1-o.data[n+1]))}if(0===N.length&&(r=this.vertices.input.COLOR)){o=Le[r.source],h=o.accessor.params.length;for(var k=0,T=b.length;k<T;k++)n=b[k]*h,N.push((new THREE.Color).setRGB(o.data[n],o.data[n+1],o.data[n+2]))}var E,R,_=null,A=[];if(3===d)A.push(new THREE.Face3(b[0],b[1],b[2],w,N.length?N:new THREE.Color));else if(4===d)A.push(new THREE.Face3(b[0],b[1],b[3],w.length?[w[0].clone(),w[1].clone(),w[3].clone()]:[],N.length?[N[0],N[1],N[3]]:new THREE.Color)),A.push(new THREE.Face3(b[1],b[2],b[3],w.length?[w[1].clone(),w[2].clone(),w[3].clone()]:[],N.length?[N[1],N[2],N[3]]:new THREE.Color));else if(d>4&&Je.subdivideFaces){var C=N.length?N:new THREE.Color;for(s=1;s<d-1;)A.push(new THREE.Face3(b[0],b[s],b[s+1],w.length?[w[0].clone(),w[s++].clone(),w[s].clone()]:[],C))}if(A.length)for(var k=0,T=A.length;k<T;k++)for(_=A[k],_.daeMaterial=e.material,t.faces.push(_),s=0;s<f.length;s++)E=x[f[s]],R=d>4?[E[0],E[k+1],E[k+2]]:4===d?0===k?[E[0],E[1],E[3]]:[E[1].clone(),E[2],E[3].clone()]:[E[0],E[1],E[2]],void 0===t.faceVertexUvs[s]&&(t.faceVertexUvs[s]=[]),t.faceVertexUvs[s].push(R);else console.log("dropped face with vcount "+d+" for geometry with id: "+t.id);y+=u*d}},X.prototype.setVertices=function(e){for(var t=0;t<this.inputs.length;t++)this.inputs[t].source===e.id&&(this.inputs[t].source=e.input.POSITION.source)},X.prototype.parse=function(e){this.material=e.getAttribute("material"),this.count=ve(e,"count",0);for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"input":this.inputs.push((new B).parse(e.childNodes[t]));break;case"vcount":\nthis.vcount=fe(i.textContent);break;case"p":this.p.push(fe(i.textContent));break;case"ph":console.warn("polygon holes not yet supported!")}}return this},L.prototype=Object.create(X.prototype),L.prototype.constructor=L,Y.prototype=Object.create(X.prototype),Y.prototype.constructor=Y,Z.prototype=Object.create(X.prototype),Z.prototype.constructor=Z,z.prototype.parse=function(e){this.params=[],this.source=e.getAttribute("source"),this.count=ve(e,"count",0),this.stride=ve(e,"stride",0);for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if("param"===i.nodeName){var s={};s.name=i.getAttribute("name"),s.type=i.getAttribute("type"),this.params.push(s)}}return this},F.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++)if("input"===e.childNodes[t].nodeName){var i=(new B).parse(e.childNodes[t]);this.input[i.semantic]=i}return this},B.prototype.parse=function(e){return this.semantic=e.getAttribute("semantic"),this.source=e.getAttribute("source").replace(/^#/,""),this.set=ve(e,"set",-1),this.offset=ve(e,"offset",0),"TEXCOORD"===this.semantic&&this.set<0&&(this.set=0),this},D.prototype.parse=function(e){this.id=e.getAttribute("id");for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"bool_array":this.data=de(i.textContent),this.type=i.nodeName;break;case"float_array":this.data=ue(i.textContent),this.type=i.nodeName;break;case"int_array":this.data=fe(i.textContent),this.type=i.nodeName;break;case"IDREF_array":case"Name_array":this.data=me(i.textContent),this.type=i.nodeName;break;case"technique_common":for(var s=0;s<i.childNodes.length;s++)if("accessor"===i.childNodes[s].nodeName){this.accessor=(new z).parse(i.childNodes[s]);break}}}return this},D.prototype.read=function(){var e=[],t=this.accessor.params[0];switch(t.type){case"IDREF":case"Name":case"name":case"float":return this.data;case"float4x4":for(var i=0;i<this.data.length;i+=16){var s=this.data.slice(i,i+16),r=Te(s);e.push(r)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+t.type+".")}return e},P.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++)if("instance_effect"===e.childNodes[t].nodeName){this.instance_effect=(new $).parse(e.childNodes[t]);break}return this},U.prototype.isColor=function(){return null===this.texture},U.prototype.isTexture=function(){return null!=this.texture},U.prototype.parse=function(e){"transparent"===e.nodeName&&(this.opaque=e.getAttribute("opaque"));for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"color":var s=ue(i.textContent);this.color=new THREE.Color,this.color.setRGB(s[0],s[1],s[2]),this.color.a=s[3];break;case"texture":this.texture=i.getAttribute("texture"),this.texcoord=i.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(i)}}return this},U.prototype.parseTexture=function(e){if(!e.childNodes)return this;e.childNodes[1]&&"extra"===e.childNodes[1].nodeName&&(e=e.childNodes[1],e.childNodes[1]&&"technique"===e.childNodes[1].nodeName&&(e=e.childNodes[1]));for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"offsetU":case"offsetV":case"repeatU":case"repeatV":this.texOpts[i.nodeName]=parseFloat(i.textContent);break;case"wrapU":case"wrapV":"TRUE"===i.textContent.toUpperCase()?this.texOpts[i.nodeName]=1:this.texOpts[i.nodeName]=parseInt(i.textContent);break;default:this.texOpts[i.nodeName]=i.textContent}}return this},G.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"emission":case"diffuse":case"specular":case"transparent":this[i.nodeName]=(new U).parse(i);break;case"bump":var s=i.getAttribute("bumptype");s?"heightfield"===s.toLowerCase()?this.bump=(new U).parse(i):"normalmap"===s.toLowerCase()?this.normal=(new U).parse(i):(console.error("Shader.prototype.parse: Invalid value for attribute \'bumptype\' ("+s+") - valid bumptypes are \'HEIGHTFIELD\' and \'NORMALMAP\' - defaulting to \'HEIGHTFIELD\'"),this.bump=(new U).parse(i)):(console.warn("Shader.prototype.parse: Attribute \'bumptype\' missing from bump node - defaulting to \'HEIGHTFIELD\'"),this.bump=(new U).parse(i));break;case"shininess":case"reflectivity":case"index_of_refraction":case"transparency":var r=i.querySelectorAll("float");r.length>0&&(this[i.nodeName]=parseFloat(r[0].textContent))}}return this.create(),this},G.prototype.create=function(){var e={},t=!1;if(void 0!==this.transparency&&void 0!==this.transparent){var i=(this.transparent,(this.transparent.color.r+this.transparent.color.g+this.transparent.color.b)/3*this.transparency);i>0&&(t=!0,e.transparent=!0,e.opacity=1-i)}var s={diffuse:"map",ambient:"lightMap",specular:"specularMap",emission:"emissionMap",bump:"bumpMap",normal:"normalMap"};for(var r in this)switch(r){case"ambient":case"emission":case"diffuse":case"specular":case"bump":case"normal":var a=this[r];if(a instanceof U)if(a.isTexture()){var n=a.texture,o=this.effect.sampler[n];if(void 0!==o&&void 0!==o.source){var h=this.effect.surface[o.source];if(void 0!==h){var l=Ye[h.init_from];if(l){var c,p=Oe+l.init_from,d=THREE.Loader.Handlers.get(p);null!==d?c=d.load(p):(c=new THREE.Texture,ye(c,p)),"MIRROR"===o.wrap_s?c.wrapS=THREE.MirroredRepeatWrapping:"WRAP"===o.wrap_s||a.texOpts.wrapU?c.wrapS=THREE.RepeatWrapping:c.wrapS=THREE.ClampToEdgeWrapping,"MIRROR"===o.wrap_t?c.wrapT=THREE.MirroredRepeatWrapping:"WRAP"===o.wrap_t||a.texOpts.wrapV?c.wrapT=THREE.RepeatWrapping:c.wrapT=THREE.ClampToEdgeWrapping,c.offset.x=a.texOpts.offsetU,c.offset.y=a.texOpts.offsetV,c.repeat.x=a.texOpts.repeatU,c.repeat.y=a.texOpts.repeatV,e[s[r]]=c,"emission"===r&&(e.emissive=16777215)}}}}else"diffuse"!==r&&t||("emission"===r?e.emissive=a.color.getHex():e[r]=a.color.getHex());break;case"shininess":e[r]=this[r];break;case"reflectivity":e[r]=this[r],e[r]>0&&(e.envMap=Je.defaultEnvMap),e.combine=THREE.MixOperation;break;case"index_of_refraction":e.refractionRatio=this[r],1!==this[r]&&(e.envMap=Je.defaultEnvMap);break;case"transparency":}switch(e.shading=Ge,e.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide,void 0!==e.diffuse&&(e.color=e.diffuse,delete e.diffuse),this.type){case"constant":void 0!=e.emissive&&(e.color=e.emissive),this.material=new THREE.MeshBasicMaterial(e);break;case"phong":case"blinn":this.material=new THREE.MeshPhongMaterial(e);break;case"lambert":default:this.material=new THREE.MeshLambertMaterial(e)}return this.material},J.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"init_from":this.init_from=i.textContent;break;case"format":this.format=i.textContent;break;default:console.log("unhandled Surface prop: "+i.nodeName)}}return this},W.prototype.parse=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"source":this.source=i.textContent;break;case"minfilter":this.minfilter=i.textContent;break;case"magfilter":this.magfilter=i.textContent;break;case"mipfilter":this.mipfilter=i.textContent;break;case"wrap_s":this.wrap_s=i.textContent;break;case"wrap_t":this.wrap_t=i.textContent;break;default:console.log("unhandled Sampler2D prop: "+i.nodeName)}}return this},Q.prototype.create=function(){if(null===this.shader)return null},Q.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),be(this,e),this.shader=null;for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(i))}}return this},Q.prototype.parseNewparam=function(e){for(var t=e.getAttribute("sid"),i=0;i<e.childNodes.length;i++){var s=e.childNodes[i];if(1==s.nodeType)switch(s.nodeName){case"surface":this.surface[t]=new J(this).parse(s);break;case"sampler2D":this.sampler[t]=new W(this).parse(s);break;case"extra":break;default:console.log(s.nodeName)}}},Q.prototype.parseProfileCOMMON=function(e){for(var t,i=0;i<e.childNodes.length;i++){var s=e.childNodes[i];if(1==s.nodeType)switch(s.nodeName){case"profile_COMMON":this.parseProfileCOMMON(s);break;case"technique":t=s;break;case"newparam":this.parseNewparam(s);break;case"image":var r=(new R).parse(s);Ye[r.id]=r;break;case"extra":break;default:console.log(s.nodeName)}}return t},Q.prototype.parseTechnique=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"constant":case"lambert":case"blinn":case"phong":this.shader=new G(i.nodeName,this).parse(i);break;case"extra":this.parseExtra(i)}}},Q.prototype.parseExtra=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"technique":this.parseExtraTechnique(i)}}},Q.prototype.parseExtraTechnique=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"bump":this.shader.parse(e)}}},$.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},K.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.source={};for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"animation":var s=(new K).parse(i);for(var r in s.source)this.source[r]=s.source[r];for(var a=0;a<s.channel.length;a++)this.channel.push(s.channel[a]),this.sampler.push(s.sampler[a]);break;case"source":var r=(new D).parse(i);this.source[r.id]=r;break;case"sampler":this.sampler.push(new te(this).parse(i));break;case"channel":this.channel.push(new ee(this).parse(i))}}return this},ee.prototype.parse=function(e){this.source=e.getAttribute("source").replace(/^#/,""),this.target=e.getAttribute("target");var t=this.target.split("/"),i=(t.shift(),t.shift()),s=i.indexOf(".")>=0,r=i.indexOf("(")>=0;if(s)t=i.split("."),this.sid=t.shift(),this.member=t.shift();else if(r){var a=i.split("(");this.sid=a.shift();for(var n=0;n<a.length;n++)a[n]=parseInt(a[n].replace(/\\)/,""));this.arrIndices=a}else this.sid=i;return this.fullSid=i,this.dotSyntax=s,this.arrSyntax=r,this},te.prototype.parse=function(e){this.id=e.getAttribute("id"),this.inputs=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"input":this.inputs.push((new B).parse(i))}}return this},te.prototype.create=function(){for(var e=0;e<this.inputs.length;e++){var t=this.inputs[e],i=this.animation.source[t.source];switch(t.semantic){case"INPUT":this.input=i.read();break;case"OUTPUT":this.output=i.read(),this.strideOut=i.accessor.stride;break;case"INTERPOLATION":this.interpolation=i.read();break;case"IN_TANGENT":break;case"OUT_TANGENT":break;default:console.log(t.semantic)}}if(this.startTime=0,this.endTime=0,this.duration=0,this.input.length){this.startTime=1e8,this.endTime=-1e8;for(var e=0;e<this.input.length;e++)this.startTime=Math.min(this.startTime,this.input[e]),this.endTime=Math.max(this.endTime,this.input[e]);this.duration=this.endTime-this.startTime}},te.prototype.getData=function(e,t,i){var s;if("matrix"===e&&16===this.strideOut)s=this.output[t];else if(this.strideOut>1){s=[],t*=this.strideOut;for(var r=0;r<this.strideOut;++r)s[r]=this.output[t+r];if(3===this.strideOut)switch(e){case"rotate":case"translate":xe(s,-1);break;case"scale":xe(s,1)}else 4===this.strideOut&&"matrix"===e&&xe(s,-1)}else s=this.output[t],i&&"translate"===e&&(s=Ne(i,s));return s},ie.prototype.addTarget=function(e,t,i,s){this.targets.push({sid:e,member:i,transform:t,data:s})},ie.prototype.apply=function(e){for(var t=0;t<this.targets.length;++t){var i=this.targets[t];e&&i.sid!==e||i.transform.update(i.data,i.member)}},ie.prototype.getTarget=function(e){for(var t=0;t<this.targets.length;++t)if(this.targets[t].sid===e)return this.targets[t];return null},ie.prototype.hasTarget=function(e){for(var t=0;t<this.targets.length;++t)if(this.targets[t].sid===e)return!0;return!1},ie.prototype.interpolate=function(e,t){for(var i=0,s=this.targets.length;i<s;i++){var r,a=this.targets[i],n=e.getTarget(a.sid);if("matrix"!==a.transform.type&&n){var o=(t-this.time)/(e.time-this.time),h=n.data,l=a.data;if(o<0&&(o=0),o>1&&(o=1),l.length){r=[];for(var c=0;c<l.length;++c)r[c]=l[c]+(h[c]-l[c])*o}else r=l+(h-l)*o}else r=a.data;a.transform.update(r,a.member)}},se.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"optics":this.parseOptics(i)}}return this},se.prototype.parseOptics=function(e){for(var t=0;t<e.childNodes.length;t++)if("technique_common"===e.childNodes[t].nodeName)for(var i=e.childNodes[t],s=0;s<i.childNodes.length;s++)if(this.technique=i.childNodes[s].nodeName,"perspective"===this.technique)for(var r=i.childNodes[s],a=0;a<r.childNodes.length;a++){var n=r.childNodes[a];switch(n.nodeName){case"yfov":this.yfov=n.textContent;break;case"xfov":this.xfov=n.textContent;break;case"znear":this.znear=n.textContent;break;case"zfar":this.zfar=n.textContent;break;case"aspect_ratio":this.aspect_ratio=n.textContent}}else if("orthographic"===this.technique)for(var o=i.childNodes[s],a=0;a<o.childNodes.length;a++){var n=o.childNodes[a];switch(n.nodeName){case"xmag":this.xmag=n.textContent;break;case"ymag":this.ymag=n.textContent;break;case"znear":this.znear=n.textContent;break;case"zfar":this.zfar=n.textContent;break;case"aspect_ratio":this.aspect_ratio=n.textContent}}return this},re.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},ae.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name");for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"technique_common":this.parseCommon(i);break;case"technique":this.parseTechnique(i)}}return this},ae.prototype.parseCommon=function(e){for(var t=0;t<e.childNodes.length;t++)switch(e.childNodes[t].nodeName){case"directional":case"point":case"spot":case"ambient":this.technique=e.childNodes[t].nodeName;for(var i=e.childNodes[t],s=0;s<i.childNodes.length;s++){var r=i.childNodes[s];switch(r.nodeName){case"color":var a=ue(r.textContent);this.color=new THREE.Color(0),this.color.setRGB(a[0],a[1],a[2]),this.color.a=a[3];break;case"falloff_angle":this.falloff_angle=parseFloat(r.textContent);break;case"quadratic_attenuation":var n=parseFloat(r.textContent);this.distance=n?Math.sqrt(1/n):0}}}return this},ae.prototype.parseTechnique=function(e){this.profile=e.getAttribute("profile");for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];switch(i.nodeName){case"intensity":this.intensity=parseFloat(i.textContent)}}return this},ne.prototype.parse=function(e){return this.url=e.getAttribute("url").replace(/^#/,""),this},oe.prototype.parse=function(e){this.id=e.getAttribute("id"),this.name=e.getAttribute("name"),this.joints=[],this.links=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"technique_common":this.parseCommon(i)}}return this},oe.prototype.parseCommon=function(e){for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(e.childNodes[t].nodeName){case"joint":this.joints.push((new he).parse(i));break;case"link":this.links.push((new le).parse(i))}}return this},he.prototype.parse=function(e){this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.axis=new THREE.Vector3,this.limits={min:0,max:0},this.type="",this.static=!1,this.zeroPosition=0,this.middlePosition=0;var t=e.querySelector("axis"),i=ue(t.textContent);this.axis=ke(i,0);var s=e.querySelector("limits min")?parseFloat(e.querySelector("limits min").textContent):-360,r=e.querySelector("limits max")?parseFloat(e.querySelector("limits max").textContent):360;this.limits={min:s,max:r};for(var a=["prismatic","revolute"],n=0;n<a.length;n++){var o=a[n],h=e.querySelector(o);h&&(this.type=o)}return this.limits.min>=this.limits.max&&(this.static=!0),this.middlePosition=(this.limits.min+this.limits.max)/2,this},le.prototype.parse=function(e){this.sid=e.getAttribute("sid"),this.name=e.getAttribute("name"),this.transforms=[],this.attachments=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"attachment_full":this.attachments.push((new ce).parse(i));break;case"rotate":case"translate":case"matrix":this.transforms.push((new j).parse(i))}}return this},ce.prototype.parse=function(e){this.joint=e.getAttribute("joint").split("/").pop(),this.links=[];for(var t=0;t<e.childNodes.length;t++){var i=e.childNodes[t];if(1==i.nodeType)switch(i.nodeName){case"link":this.links.push((new le).parse(i));break;case"rotate":case"translate":case"matrix":this.transforms.push((new j).parse(i))}}return this},{load:e,parse:t,setPreferredShading:i,applySkin:m,geometries:Fe,options:Je}};\n},{}],44:[function(_dereq_,module,exports){\nTHREE.GLTFLoader=function(){function e(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager}function r(){var e={};return{get:function(r){return e[r]},add:function(r,t){e[r]=t},remove:function(r){delete e[r]},removeAll:function(){e={}},update:function(r,t){r.updateMatrixWorld(),t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld);for(var a in e){var n=e[a];n.update&&n.update(r,t)}}}}function t(e,r){var t={},a=e.material.uniforms;for(var n in a){var i=a[n];if(i.semantic){var s=i.node,o=e;s&&(o=r[s]),t[n]={semantic:i.semantic,sourceNode:o,targetNode:e,uniform:i}}}this.boundUniforms=t,this._m4=new THREE.Matrix4}function a(e){this.name=l.KHR_MATERIALS_COMMON,this.lights={};var r=e.extensions&&e.extensions[l.KHR_MATERIALS_COMMON].lights;for(var t in r){var a,n=r[t],i=n[n.type],s=(new THREE.Color).fromArray(i.color);switch(n.type){case"directional":a=new THREE.DirectionalLight(s),a.position.set(0,0,1);break;case"point":a=new THREE.PointLight(s);break;case"spot":a=new THREE.SpotLight(s),a.position.set(0,0,1);break;case"ambient":a=new THREE.AmbientLight(s)}a&&(this.lights[t]=a)}}function n(e){this.name=l.KHR_BINARY_GLTF;var r=new DataView(e,0,h),t={magic:o(new Uint8Array(e.slice(0,4))),version:r.getUint32(4,!0),length:r.getUint32(8,!0),contentLength:r.getUint32(12,!0),contentFormat:r.getUint32(16,!0)};for(var a in f){var n=f[a];if(t[a]!==n)throw new Error(\'Unsupported glTF-Binary header: Expected "%s" to be "%s".\',a,n)}var i=new Uint8Array(e,h,t.contentLength);this.header=t,this.content=o(i),this.body=e.slice(h+t.contentLength,t.length)}function i(e,r,t){if(!e)return Promise.resolve();var a,n=[];if("[object Array]"===Object.prototype.toString.call(e)){a=[];for(var i=e.length,s=0;s<i;s++){var o=r.call(t||this,e[s],s);o&&(n.push(o),o instanceof Promise?o.then(function(e,r){a[s]=r}.bind(this,c)):a[s]=o)}}else{a={};for(var c in e)if(e.hasOwnProperty(c)){var o=r.call(t||this,e[c],c);o&&(n.push(o),o instanceof Promise?o.then(function(e,r){a[e]=r}.bind(this,c)):a[c]=o)}}return Promise.all(n).then(function(){return a})}function s(e,r){return"string"!=typeof e||""===e?"":/^https?:\\/\\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:(r||"")+e}function o(e){for(var r="",t=0;t<e.length;t++)r+=String.fromCharCode(e[t]);return r}function c(e,r){var t={};for(var a in r.attributes){var n=r.attributes[a],i=r.parameters[n],s=i.type,o=i.semantic;t[a]={type:s,semantic:o}}var c=r.parameters,u=r.attributes,E={};for(var a in t){var n=u[a],d=c[n],o=d.semantic;o&&(E[a]=d)}for(var n in E){var i=E[n],o=i.semantic,l=new RegExp("\\\\b"+n+"\\\\b","g");switch(o){case"POSITION":e=e.replace(l,"position");break;case"NORMAL":e=e.replace(l,"normal");break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":e=e.replace(l,"uv");break;case"COLOR_0":case"COLOR0":case"COLOR":e=e.replace(l,"color");break;case"WEIGHT":e=e.replace(l,"skinWeight");break;case"JOINT":e=e.replace(l,"skinIndex")}}return e}function u(){return new THREE.MeshPhongMaterial({color:0,emissive:8947848,specular:0,shininess:0,transparent:!1,depthTest:!0,side:THREE.FrontSide})}function E(e){this.isDeferredShaderMaterial=!0,this.params=e}function d(e,t,a){this.json=e||{},this.extensions=t||{},this.options=a||{},this.cache=new r}e.prototype={constructor:e,load:function(e,r,t,a){var n=this,i=this.path&&"string"==typeof this.path?this.path:THREE.Loader.prototype.extractUrlBase(e),s=new THREE.FileLoader(n.manager);s.setResponseType("arraybuffer"),s.load(e,function(e){n.parse(e,r,i)},t,a)},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e},parse:function(e,r,t){var i,s={},c=o(new Uint8Array(e,0,4));c===f.magic?(s[l.KHR_BINARY_GLTF]=new n(e),i=s[l.KHR_BINARY_GLTF].content):i=o(new Uint8Array(e));var u=JSON.parse(i);u.extensionsUsed&&u.extensionsUsed.indexOf(l.KHR_MATERIALS_COMMON)>=0&&(s[l.KHR_MATERIALS_COMMON]=new a(u)),console.time("GLTFLoader");var E=new d(u,s,{path:t||this.path,crossOrigin:this.crossOrigin});E.parse(function(e,t,a,n){console.timeEnd("GLTFLoader");var i={scene:e,scenes:t,cameras:a,animations:n};r(i)})}},e.Shaders=new r,t.prototype.update=function(e,r){var t=this.boundUniforms;for(var a in t){var n=t[a];switch(n.semantic){case"MODELVIEW":var i=n.uniform.value;i.multiplyMatrices(r.matrixWorldInverse,n.sourceNode.matrixWorld);break;case"MODELVIEWINVERSETRANSPOSE":var s=n.uniform.value;this._m4.multiplyMatrices(r.matrixWorldInverse,n.sourceNode.matrixWorld),s.getNormalMatrix(this._m4);break;case"PROJECTION":var i=n.uniform.value;i.copy(r.projectionMatrix);break;case"JOINTMATRIX":for(var o=n.uniform.value,c=0;c<o.length;c++)o[c].getInverse(n.sourceNode.matrixWorld).multiply(n.targetNode.skeleton.bones[c].matrixWorld).multiply(n.targetNode.skeleton.boneInverses[c]).multiply(n.targetNode.bindMatrix);break;default:console.warn("Unhandled shader semantic: "+n.semantic)}}},e.Animations={update:function(){console.warn("THREE.GLTFLoader.Animation has been deprecated. Use THREE.AnimationMixer instead.")}};var l={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_MATERIALS_COMMON:"KHR_materials_common"},p="binary_glTF",f={magic:"glTF",version:1,contentFormat:0},h=20;n.prototype.loadShader=function(e,r){var t=r[e.extensions[l.KHR_BINARY_GLTF].bufferView],a=new Uint8Array(t);return o(a)},n.prototype.loadTextureSourceUri=function(e,r){var t=e.extensions[l.KHR_BINARY_GLTF],a=r[t.bufferView],n=o(new Uint8Array(a));return"data:"+t.mimeType+";base64,"+btoa(n)};var m={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,TRIANGLES:4,LINES:1,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,VERTEX_SHADER:35633,FRAGMENT_SHADER:35632},v={5126:Number,35675:THREE.Matrix3,35676:THREE.Matrix4,35664:THREE.Vector2,35665:THREE.Vector3,35666:THREE.Vector4,35678:THREE.Texture},T={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},R={9728:THREE.NearestFilter,9729:THREE.LinearFilter,9984:THREE.NearestMipMapNearestFilter,9985:THREE.LinearMipMapNearestFilter,9986:THREE.NearestMipMapLinearFilter,9987:THREE.LinearMipMapLinearFilter},A={33071:THREE.ClampToEdgeWrapping,33648:THREE.MirroredRepeatWrapping,10497:THREE.RepeatWrapping},H={6406:THREE.AlphaFormat,6407:THREE.RGBFormat,6408:THREE.RGBAFormat,6409:THREE.LuminanceFormat,6410:THREE.LuminanceAlphaFormat},y={5121:THREE.UnsignedByteType,32819:THREE.UnsignedShort4444Type,32820:THREE.UnsignedShort5551Type,33635:THREE.UnsignedShort565Type},w={1028:THREE.BackSide,1029:THREE.FrontSide},b={512:THREE.NeverDepth,513:THREE.LessDepth,514:THREE.EqualDepth,515:THREE.LessEqualDepth,516:THREE.GreaterEqualDepth,517:THREE.NotEqualDepth,518:THREE.GreaterEqualDepth,519:THREE.AlwaysDepth},O={32774:THREE.AddEquation,32778:THREE.SubtractEquation,32779:THREE.ReverseSubtractEquation},M={0:THREE.ZeroFactor,1:THREE.OneFactor,768:THREE.SrcColorFactor,769:THREE.OneMinusSrcColorFactor,770:THREE.SrcAlphaFactor,771:THREE.OneMinusSrcAlphaFactor,772:THREE.DstAlphaFactor,773:THREE.OneMinusDstAlphaFactor,774:THREE.DstColorFactor,775:THREE.OneMinusDstColorFactor,776:THREE.SrcAlphaSaturateFactor},L={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},g={scale:"scale",translation:"position",rotation:"quaternion"},S={LINEAR:THREE.InterpolateLinear,STEP:THREE.InterpolateDiscrete},_={2884:"CULL_FACE",2929:"DEPTH_TEST",3042:"BLEND",3089:"SCISSOR_TEST",32823:"POLYGON_OFFSET_FILL",32926:"SAMPLE_ALPHA_TO_COVERAGE"};return E.prototype.create=function(){var e=THREE.UniformsUtils.clone(this.params.uniforms);for(var r in this.params.uniforms){var t=this.params.uniforms[r];t.value instanceof THREE.Texture&&(e[r].value=t.value,e[r].value.needsUpdate=!0),e[r].semantic=t.semantic,e[r].node=t.node}return this.params.uniforms=e,new THREE.RawShaderMaterial(this.params)},d.prototype._withDependencies=function(e){for(var r={},t=0;t<e.length;t++){var a=e[t],n="load"+a.charAt(0).toUpperCase()+a.slice(1),s=this.cache.get(a);if(void 0!==s)r[a]=s;else if(this[n]){var o=this[n]();this.cache.add(a,o),r[a]=o}}return i(r,function(e){return e})},d.prototype.parse=function(e){var r=this.json;this.cache.removeAll(),this._withDependencies(["scenes","cameras","animations"]).then(function(t){var a=t.scenes[r.scene],n=[];for(var i in t.scenes)n.push(t.scenes[i]);var s=[];for(var i in t.cameras){var o=t.cameras[i];s.push(o)}var c=[];for(var i in t.animations)c.push(t.animations[i]);e(a,n,s,c)})},d.prototype.loadShaders=function(){var e=this.json,r=this.extensions,t=this.options;return this._withDependencies(["bufferViews"]).then(function(a){return i(e.shaders,function(e){return e.extensions&&e.extensions[l.KHR_BINARY_GLTF]?r[l.KHR_BINARY_GLTF].loadShader(e,a.bufferViews):new Promise(function(r){var a=new THREE.FileLoader;a.setResponseType("text"),a.load(s(e.uri,t.path),function(e){r(e)})})})})},d.prototype.loadBuffers=function(){var e=this.json,r=this.extensions,t=this.options;return i(e.buffers,function(e,a){return a===p?r[l.KHR_BINARY_GLTF].body:"arraybuffer"===e.type||void 0===e.type?new Promise(function(r){var a=new THREE.FileLoader;a.setResponseType("arraybuffer"),a.load(s(e.uri,t.path),function(e){r(e)})}):void console.warn("THREE.GLTFLoader: "+e.type+" buffer type is not supported")})},d.prototype.loadBufferViews=function(){var e=this.json;return this._withDependencies(["buffers"]).then(function(r){return i(e.bufferViews,function(e){var t=r.buffers[e.buffer];return t.slice(e.byteOffset,e.byteOffset+e.byteLength)})})},d.prototype.loadAccessors=function(){var e=this.json;return this._withDependencies(["bufferViews"]).then(function(r){return i(e.accessors,function(e){var t=r.bufferViews[e.bufferView],a=L[e.type],n=T[e.componentType],i=n.BYTES_PER_ELEMENT,s=i*a;if(e.byteStride&&e.byteStride!==s){var o=new n(t),c=new THREE.InterleavedBuffer(o,e.byteStride/i);return new THREE.InterleavedBufferAttribute(c,a,e.byteOffset/i)}return o=new n(t,e.byteOffset,e.count*a),new THREE.BufferAttribute(o,a)})})},d.prototype.loadTextures=function(){var e=this.json,r=this.extensions,t=this.options;return this._withDependencies(["bufferViews"]).then(function(a){return i(e.textures,function(n){if(n.source)return new Promise(function(i){var o=e.images[n.source],c=o.uri;o.extensions&&o.extensions[l.KHR_BINARY_GLTF]&&(c=r[l.KHR_BINARY_GLTF].loadTextureSourceUri(o,a.bufferViews));var u=THREE.Loader.Handlers.get(c);null===u&&(u=new THREE.TextureLoader),u.setCrossOrigin(t.crossOrigin),u.load(s(c,t.path),function(r){if(r.flipY=!1,void 0!==n.name&&(r.name=n.name),r.format=void 0!==n.format?H[n.format]:THREE.RGBAFormat,void 0!==n.internalFormat&&r.format!==H[n.internalFormat]&&console.warn("THREE.GLTFLoader: Three.js doesn\'t support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."),r.type=void 0!==n.type?y[n.type]:THREE.UnsignedByteType,n.sampler){var t=e.samplers[n.sampler];r.magFilter=R[t.magFilter],r.minFilter=R[t.minFilter],r.wrapS=A[t.wrapS],r.wrapT=A[t.wrapT]}i(r)},void 0,function(){i()})})})})},d.prototype.loadMaterials=function(){var e=this.json;return this._withDependencies(["shaders","textures"]).then(function(r){return i(e.materials,function(t){var a,n,i={},s={};if(t.extensions&&t.extensions[l.KHR_MATERIALS_COMMON]&&(n=t.extensions[l.KHR_MATERIALS_COMMON]),n){switch(n.technique){case"BLINN":case"PHONG":a=THREE.MeshPhongMaterial;break;case"LAMBERT":a=THREE.MeshLambertMaterial;break;case"CONSTANT":default:a=THREE.MeshBasicMaterial}Object.assign(i,n.values),(n.doubleSided||i.doubleSided)&&(s.side=THREE.DoubleSide),(n.transparent||i.transparent)&&(s.transparent=!0,s.opacity=void 0!==i.transparency?i.transparency:1)}else if(void 0===t.technique)a=THREE.MeshPhongMaterial,Object.assign(i,t.values);else{a=E;var o=e.techniques[t.technique];s.uniforms={};var u=e.programs[o.program];if(u){s.fragmentShader=r.shaders[u.fragmentShader],s.fragmentShader||(console.warn("ERROR: Missing fragment shader definition:",u.fragmentShader),a=THREE.MeshPhongMaterial);var d=r.shaders[u.vertexShader];d||(console.warn("ERROR: Missing vertex shader definition:",u.vertexShader),a=THREE.MeshPhongMaterial),s.vertexShader=c(d,o);var p=o.uniforms;for(var f in p){var h=p[f],T=o.parameters[h],R=T.type;if(!v[R])throw new Error("Unknown shader uniform param type: "+R);var A,H=T.count;void 0!==t.values&&(A=t.values[h]);var y=new v[R],L=T.semantic,g=T.node;switch(R){case m.FLOAT:y=T.value,"transparency"==h&&(s.transparent=!0),void 0!==A&&(y=A);break;case m.FLOAT_VEC2:case m.FLOAT_VEC3:case m.FLOAT_VEC4:case m.FLOAT_MAT3:T&&T.value&&y.fromArray(T.value),A&&y.fromArray(A);break;case m.FLOAT_MAT2:console.warn("FLOAT_MAT2 is not a supported uniform type");break;case m.FLOAT_MAT4:if(H){y=new Array(H);for(var S=0;S<H;S++)y[S]=new v[R];if(T&&T.value){var x=T.value;y.fromArray(x)}A&&y.fromArray(A)}else{if(T&&T.value){var F=T.value;y.fromArray(F)}A&&y.fromArray(A)}break;case m.SAMPLER_2D:y=void 0!==A?r.textures[A]:void 0!==T.value?r.textures[T.value]:null}s.uniforms[f]={value:y,semantic:L,node:g}}for(var N=o.states||{},D=N.enable||[],I=N.functions||{},C=!1,k=!1,B=!1,U=0,G=D.length;U<G;U++){var P=D[U];switch(_[P]){case"CULL_FACE":C=!0;break;case"DEPTH_TEST":k=!0;break;case"BLEND":B=!0;break;case"SCISSOR_TEST":case"POLYGON_OFFSET_FILL":case"SAMPLE_ALPHA_TO_COVERAGE":break;default:throw new Error("Unknown technique.states.enable: "+P)}}C?s.side=void 0!==I.cullFace?w[I.cullFace]:THREE.FrontSide:s.side=THREE.DoubleSide,s.depthTest=k,s.depthFunc=void 0!==I.depthFunc?b[I.depthFunc]:THREE.LessDepth,s.depthWrite=void 0===I.depthMask||I.depthMask[0],s.blending=B?THREE.CustomBlending:THREE.NoBlending,s.transparent=B;var j=I.blendEquationSeparate;void 0!==j?(s.blendEquation=O[j[0]],s.blendEquationAlpha=O[j[1]]):(s.blendEquation=THREE.AddEquation,s.blendEquationAlpha=THREE.AddEquation);var V=I.blendFuncSeparate;void 0!==V?(s.blendSrc=M[V[0]],s.blendDst=M[V[1]],s.blendSrcAlpha=M[V[2]],s.blendDstAlpha=M[V[3]]):(s.blendSrc=THREE.OneFactor,s.blendDst=THREE.ZeroFactor,s.blendSrcAlpha=THREE.OneFactor,s.blendDstAlpha=THREE.ZeroFactor)}}Array.isArray(i.diffuse)?s.color=(new THREE.Color).fromArray(i.diffuse):"string"==typeof i.diffuse&&(s.map=r.textures[i.diffuse]),delete s.diffuse,"string"==typeof i.reflective&&(s.envMap=r.textures[i.reflective]),"string"==typeof i.bump&&(s.bumpMap=r.textures[i.bump]),Array.isArray(i.emission)?a===THREE.MeshBasicMaterial?s.color=(new THREE.Color).fromArray(i.emission):s.emissive=(new THREE.Color).fromArray(i.emission):"string"==typeof i.emission&&(a===THREE.MeshBasicMaterial?s.map=r.textures[i.emission]:s.emissiveMap=r.textures[i.emission]),Array.isArray(i.specular)?s.specular=(new THREE.Color).fromArray(i.specular):"string"==typeof i.specular&&(s.specularMap=r.textures[i.specular]),void 0!==i.shininess&&(s.shininess=i.shininess);var K=new a(s);return void 0!==t.name&&(K.name=t.name),K})})},d.prototype.loadMeshes=function(){var e=this.json;return this._withDependencies(["accessors","materials"]).then(function(r){return i(e.meshes,function(e){var t=new THREE.Object3D;void 0!==e.name&&(t.name=e.name),e.extras&&(t.userData=e.extras);var a=e.primitives;for(var n in a){var i=a[n];if(i.mode===m.TRIANGLES||void 0===i.mode){var s=new THREE.BufferGeometry,o=i.attributes;for(var c in o){var E=o[c];if(!E)return;var d=r.accessors[E];switch(c){case"POSITION":s.addAttribute("position",d);break;case"NORMAL":s.addAttribute("normal",d);break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":s.addAttribute("uv",d);break;case"COLOR_0":case"COLOR0":case"COLOR":s.addAttribute("color",d);break;case"WEIGHT":s.addAttribute("skinWeight",d);break;case"JOINT":s.addAttribute("skinIndex",d)}}i.indices&&s.setIndex(r.accessors[i.indices]);var l=void 0!==r.materials?r.materials[i.material]:u(),p=new THREE.Mesh(s,l);p.castShadow=!0,p.name="0"===n?t.name:t.name+n,i.extras&&(p.userData=i.extras),t.add(p)}else if(i.mode===m.LINES){var s=new THREE.BufferGeometry,o=i.attributes;for(var c in o){var E=o[c];if(!E)return;var d=r.accessors[E];switch(c){case"POSITION":s.addAttribute("position",d);break;case"COLOR_0":case"COLOR0":case"COLOR":s.addAttribute("color",d)}}var p,l=r.materials[i.material];i.indices?(s.setIndex(r.accessors[i.indices]),p=new THREE.LineSegments(s,l)):p=new THREE.Line(s,l),p.name="0"===n?t.name:t.name+n,i.extras&&(p.userData=i.extras),t.add(p)}else console.warn("Only triangular and line primitives are supported")}return t})})},d.prototype.loadCameras=function(){var e=this.json;return i(e.cameras,function(e){if("perspective"==e.type&&e.perspective){var r=e.perspective.yfov,t=e.perspective.xfov,a=e.perspective.aspect_ratio||1;t=void 0===t&&r?r*a:t;var n=new THREE.PerspectiveCamera(THREE.Math.radToDeg(t),a,e.perspective.znear||1,e.perspective.zfar||2e6);return void 0!==e.name&&(n.name=e.name),e.extras&&(n.userData=e.extras),n}if("orthographic"==e.type&&e.orthographic){var n=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,e.orthographic.znear,e.orthographic.zfar);return void 0!==e.name&&(n.name=e.name),e.extras&&(n.userData=e.extras),n}})},d.prototype.loadSkins=function(){var e=this.json;return this._withDependencies(["accessors"]).then(function(r){return i(e.skins,function(e){var t={bindShapeMatrix:(new THREE.Matrix4).fromArray(e.bindShapeMatrix),jointNames:e.jointNames,inverseBindMatrices:r.accessors[e.inverseBindMatrices]};return t})})},d.prototype.loadAnimations=function(){var e=this.json;return this._withDependencies(["accessors","nodes"]).then(function(r){return i(e.animations,function(e,t){var a=[];for(var n in e.channels){var i=e.channels[n],s=e.samplers[i.sampler];if(s){var o=i.target,c=o.id,u=void 0!==e.parameters?e.parameters[s.input]:s.input,E=void 0!==e.parameters?e.parameters[s.output]:s.output,d=r.accessors[u],l=r.accessors[E],p=r.nodes[c];if(p){p.updateMatrix(),p.matrixAutoUpdate=!0;var f=g[o.path]===g.rotation?THREE.QuaternionKeyframeTrack:THREE.VectorKeyframeTrack,h=p.name?p.name:p.uuid;a.push(new f(h+"."+g[o.path],THREE.AnimationUtils.arraySlice(d.array,0),THREE.AnimationUtils.arraySlice(l.array,0),S[s.interpolation]))}}}return new THREE.AnimationClip("animation_"+t,void 0,a)})})},d.prototype.loadNodes=function(){var e=this.json,r=this.extensions,t=this;return i(e.nodes,function(e){var r,t=new THREE.Matrix4;return e.jointName?(r=new THREE.Bone,r.name=void 0!==e.name?e.name:e.jointName,r.jointName=e.jointName):(r=new THREE.Object3D,void 0!==e.name&&(r.name=e.name)),e.extras&&(r.userData=e.extras),void 0!==e.matrix?(t.fromArray(e.matrix),r.applyMatrix(t)):(void 0!==e.translation&&r.position.fromArray(e.translation),void 0!==e.rotation&&r.quaternion.fromArray(e.rotation),void 0!==e.scale&&r.scale.fromArray(e.scale)),r}).then(function(a){return t._withDependencies(["meshes","skins","cameras"]).then(function(t){return i(a,function(n,i){var s=e.nodes[i];if(void 0!==s.meshes)for(var o in s.meshes){var c=s.meshes[o],u=t.meshes[c];if(void 0!==u)for(var E in u.children){var d,p=u.children[E],f=p.material,h=p.geometry,m=p.userData,v=p.name;switch(f.isDeferredShaderMaterial?f=d=f.create():d=f,p.type){case"LineSegments":p=new THREE.LineSegments(h,d);break;case"Line":p=new THREE.Line(h,d);break;default:p=new THREE.Mesh(h,d)}p.castShadow=!0,p.userData=m,p.name=v;var T;if(s.skin&&(T=t.skins[s.skin]),T){var R=function(e){for(var r=Object.keys(a),t=0,n=r.length;t<n;t++){var i=a[r[t]];if(i.jointName===e)return i}return null},A=h,d=f;d.skinning=!0,p=new THREE.SkinnedMesh(A,d,!1),p.castShadow=!0,p.userData=m,p.name=v;for(var H=[],y=[],w=0,b=T.jointNames.length;w<b;w++){var O=T.jointNames[w],M=R(O);if(M){H.push(M);var L=T.inverseBindMatrices.array,g=(new THREE.Matrix4).fromArray(L,16*w);y.push(g)}else console.warn("WARNING: joint: \'\'"+O+"\' could not be found")}p.bind(new THREE.Skeleton(H,y,!1),T.bindShapeMatrix);var S=function(r,t,n){var i=r[n];if(void 0!==i)for(var s=0,o=i.length;s<o;s++){var c=i[s],u=a[c],E=e.nodes[c];void 0!==u&&u.isBone===!0&&void 0!==E&&(t.add(u),S(E,u,"children"))}};S(s,p,"skeletons")}n.add(p)}else console.warn("GLTFLoader: Couldn\'t find node \\""+c+\'".\')}if(void 0!==s.camera){var _=t.cameras[s.camera];n.add(_)}if(s.extensions&&s.extensions[l.KHR_MATERIALS_COMMON]&&s.extensions[l.KHR_MATERIALS_COMMON].light){var x=r[l.KHR_MATERIALS_COMMON].lights,F=x[s.extensions[l.KHR_MATERIALS_COMMON].light];n.add(F)}return n})})})},d.prototype.loadScenes=function(){function r(e,t,n){var i=n[e];t.add(i);var s=a.nodes[e];if(s.children)for(var o=s.children,c=0,u=o.length;c<u;c++){var E=o[c];r(E,i,n)}}var a=this.json;return this._withDependencies(["nodes"]).then(function(n){return i(a.scenes,function(a){var i=new THREE.Scene;void 0!==a.name&&(i.name=a.name),a.extras&&(i.userData=a.extras);for(var s=a.nodes,o=0,c=s.length;o<c;o++){var u=s[o];r(u,i,n.nodes)}return i.traverse(function(r){if(r.material&&r.material.isRawShaderMaterial){var a=new t(r,n.nodes);e.Shaders.add(r.uuid,a)}}),i})})},e}();\n},{}],45:[function(_dereq_,module,exports){\nTHREE.MTLLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(t,a,e,r){var s=this,i=new THREE.FileLoader(this.manager);i.setPath(this.path),i.load(t,function(t){a(s.parse(t))},e,r)},setPath:function(t){this.path=t},setTexturePath:function(t){this.texturePath=t},setBaseUrl:function(t){console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."),this.setTexturePath(t)},setCrossOrigin:function(t){this.crossOrigin=t},setMaterialOptions:function(t){this.materialOptions=t},parse:function(t){for(var a=t.split("\\n"),e={},r=/\\s+/,s={},i=0;i<a.length;i++){var o=a[i];if(o=o.trim(),0!==o.length&&"#"!==o.charAt(0)){var n=o.indexOf(" "),h=n>=0?o.substring(0,n):o;h=h.toLowerCase();var p=n>=0?o.substring(n+1):"";if(p=p.trim(),"newmtl"===h)e={name:p},s[p]=e;else if(e)if("ka"===h||"kd"===h||"ks"===h){var l=p.split(r,3);e[h]=[parseFloat(l[0]),parseFloat(l[1]),parseFloat(l[2])]}else e[h]=p}}var c=new THREE.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);return c.setCrossOrigin(this.crossOrigin),c.setManager(this.manager),c.setMaterials(s),c}},THREE.MTLLoader.MaterialCreator=function(t,a){this.baseUrl=t||"",this.options=a,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,setCrossOrigin:function(t){this.crossOrigin=t},setManager:function(t){this.manager=t},setMaterials:function(t){this.materialsInfo=this.convert(t),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(t){if(!this.options)return t;var a={};for(var e in t){var r=t[e],s={};a[e]=s;for(var i in r){var o=!0,n=r[i],h=i.toLowerCase();switch(h){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(n=[n[0]/255,n[1]/255,n[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===n[0]&&0===n[1]&&0===n[2]&&(o=!1)}o&&(s[h]=n)}}return a},preload:function(){for(var t in this.materialsInfo)this.create(t)},getIndex:function(t){return this.nameLookup[t]},getAsArray:function(){var t=0;for(var a in this.materialsInfo)this.materialsArray[t]=this.create(a),this.nameLookup[a]=t,t++;return this.materialsArray},create:function(t){return void 0===this.materials[t]&&this.createMaterial_(t),this.materials[t]},createMaterial_:function(t){function a(t,a){return"string"!=typeof a||""===a?"":/^https?:\\/\\//i.test(a)?a:t+a}function e(t,e){if(!i[t]){var s=r.getTextureParams(e,i),o=r.loadTexture(a(r.baseUrl,s.url));o.repeat.copy(s.scale),o.offset.copy(s.offset),o.wrapS=r.wrap,o.wrapT=r.wrap,i[t]=o}}var r=this,s=this.materialsInfo[t],i={name:t,side:this.side};for(var o in s){var n=s[o];if(""!==n)switch(o.toLowerCase()){case"kd":i.color=(new THREE.Color).fromArray(n);break;case"ks":i.specular=(new THREE.Color).fromArray(n);break;case"map_kd":e("map",n);break;case"map_ks":e("specularMap",n);break;case"map_bump":case"bump":e("bumpMap",n);break;case"ns":i.shininess=parseFloat(n);break;case"d":n<1&&(i.opacity=n,i.transparent=!0);break;case"Tr":n>0&&(i.opacity=1-n,i.transparent=!0)}}return this.materials[t]=new THREE.MeshPhongMaterial(i),this.materials[t]},getTextureParams:function(t,a){var e,r={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},s=t.split(/\\s+/);return e=s.indexOf("-bm"),e>=0&&(a.bumpScale=parseFloat(s[e+1]),s.splice(e,2)),e=s.indexOf("-s"),e>=0&&(r.scale.set(parseFloat(s[e+1]),parseFloat(s[e+2])),s.splice(e,4)),e=s.indexOf("-o"),e>=0&&(r.offset.set(parseFloat(s[e+1]),parseFloat(s[e+2])),s.splice(e,4)),r.url=s.join(" ").trim(),r},loadTexture:function(t,a,e,r,s){var i,o=THREE.Loader.Handlers.get(t),n=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager;return null===o&&(o=new THREE.TextureLoader(n)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin),i=o.load(t,e,r,s),void 0!==a&&(i.mapping=a),i}};\n},{}],46:[function(_dereq_,module,exports){\nTHREE.OBJLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.materials=null,this.regexp={vertex_pattern:/^v\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,normal_pattern:/^vn\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,uv_pattern:/^vt\\s+([\\d|\\.|\\+|\\-|e|E]+)\\s+([\\d|\\.|\\+|\\-|e|E]+)/,face_vertex:/^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,face_vertex_uv:/^f\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+))?/,face_vertex_uv_normal:/^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/,face_vertex_normal:/^f\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)(?:\\s+(-?\\d+)\\/\\/(-?\\d+))?/,object_pattern:/^[og]\\s*(.+)?/,smoothing_pattern:/^s\\s+(\\d+|on|off)/,material_library_pattern:/^mtllib /,material_use_pattern:/^usemtl /}},THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(e,t,r,a){var i=this,s=new THREE.FileLoader(i.manager);s.setPath(this.path),s.load(e,function(e){t(i.parse(e))},r,a)},setPath:function(e){this.path=e},setMaterials:function(e){this.materials=e},_createParserState:function(){var e={objects:[],object:{},vertices:[],normals:[],uvs:[],materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1)return this.object.name=e,void(this.object.fromDeclaration=t!==!1);var r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(e,t){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var a={index:this.materials.length,name:e||"",mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(e){var t={index:"number"==typeof e?e:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return t.clone=this.clone.bind(t),t}};return this.materials.push(a),a},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(e){var t=this.currentMaterial();if(t&&t.groupEnd===-1&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(var r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}},r&&r.name&&"function"==typeof r.clone){var a=r.clone(0);a.inherited=!0,this.object.materials.push(a)}this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseNormalIndex:function(e,t){var r=parseInt(e,10);return 3*(r>=0?r-1:r+t/3)},parseUVIndex:function(e,t){var r=parseInt(e,10);return 2*(r>=0?r-1:r+t/2)},addVertex:function(e,t,r){var a=this.vertices,i=this.object.geometry.vertices;i.push(a[e+0]),i.push(a[e+1]),i.push(a[e+2]),i.push(a[t+0]),i.push(a[t+1]),i.push(a[t+2]),i.push(a[r+0]),i.push(a[r+1]),i.push(a[r+2])},addVertexLine:function(e){var t=this.vertices,r=this.object.geometry.vertices;r.push(t[e+0]),r.push(t[e+1]),r.push(t[e+2])},addNormal:function(e,t,r){var a=this.normals,i=this.object.geometry.normals;i.push(a[e+0]),i.push(a[e+1]),i.push(a[e+2]),i.push(a[t+0]),i.push(a[t+1]),i.push(a[t+2]),i.push(a[r+0]),i.push(a[r+1]),i.push(a[r+2])},addUV:function(e,t,r){var a=this.uvs,i=this.object.geometry.uvs;i.push(a[e+0]),i.push(a[e+1]),i.push(a[t+0]),i.push(a[t+1]),i.push(a[r+0]),i.push(a[r+1])},addUVLine:function(e){var t=this.uvs,r=this.object.geometry.uvs;r.push(t[e+0]),r.push(t[e+1])},addFace:function(e,t,r,a,i,s,n,o,h,l,d,u){var p,c=this.vertices.length,m=this.parseVertexIndex(e,c),f=this.parseVertexIndex(t,c),v=this.parseVertexIndex(r,c);if(void 0===a?this.addVertex(m,f,v):(p=this.parseVertexIndex(a,c),this.addVertex(m,f,p),this.addVertex(f,v,p)),void 0!==i){var g=this.uvs.length;m=this.parseUVIndex(i,g),f=this.parseUVIndex(s,g),v=this.parseUVIndex(n,g),void 0===a?this.addUV(m,f,v):(p=this.parseUVIndex(o,g),this.addUV(m,f,p),this.addUV(f,v,p))}if(void 0!==h){var x=this.normals.length;m=this.parseNormalIndex(h,x),f=h===l?m:this.parseNormalIndex(l,x),v=h===d?m:this.parseNormalIndex(d,x),void 0===a?this.addNormal(m,f,v):(p=this.parseNormalIndex(u,x),this.addNormal(m,f,p),this.addNormal(f,v,p))}},addLineGeometry:function(e,t){this.object.geometry.type="Line";for(var r=this.vertices.length,a=this.uvs.length,i=0,s=e.length;i<s;i++)this.addVertexLine(this.parseVertexIndex(e[i],r));for(var n=0,s=t.length;n<s;n++)this.addUVLine(this.parseUVIndex(t[n],a))}};return e.startObject("",!1),e},parse:function(e){console.time("OBJLoader");var t=this._createParserState();e.indexOf("\\r\\n")!==-1&&(e=e.replace(/\\r\\n/g,"\\n")),e.indexOf("\\\\\\n")!==-1&&(e=e.replace(/\\\\\\n/g,""));for(var r=e.split("\\n"),a="",i="",s="",n=0,o=[],h="function"==typeof"".trimLeft,l=0,d=r.length;l<d;l++)if(a=r[l],a=h?a.trimLeft():a.trim(),n=a.length,0!==n&&(i=a.charAt(0),"#"!==i))if("v"===i)if(s=a.charAt(1)," "===s&&null!==(o=this.regexp.vertex_pattern.exec(a)))t.vertices.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3]));else if("n"===s&&null!==(o=this.regexp.normal_pattern.exec(a)))t.normals.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3]));else{if("t"!==s||null===(o=this.regexp.uv_pattern.exec(a)))throw new Error("Unexpected vertex/normal/uv line: \'"+a+"\'");t.uvs.push(parseFloat(o[1]),parseFloat(o[2]))}else if("f"===i)if(null!==(o=this.regexp.face_vertex_uv_normal.exec(a)))t.addFace(o[1],o[4],o[7],o[10],o[2],o[5],o[8],o[11],o[3],o[6],o[9],o[12]);else if(null!==(o=this.regexp.face_vertex_uv.exec(a)))t.addFace(o[1],o[3],o[5],o[7],o[2],o[4],o[6],o[8]);else if(null!==(o=this.regexp.face_vertex_normal.exec(a)))t.addFace(o[1],o[3],o[5],o[7],void 0,void 0,void 0,void 0,o[2],o[4],o[6],o[8]);else{if(null===(o=this.regexp.face_vertex.exec(a)))throw new Error("Unexpected face line: \'"+a+"\'");t.addFace(o[1],o[2],o[3],o[4])}else if("l"===i){var u=a.substring(1).trim().split(" "),p=[],c=[];if(a.indexOf("/")===-1)p=u;else for(var m=0,f=u.length;m<f;m++){var v=u[m].split("/");""!==v[0]&&p.push(v[0]),""!==v[1]&&c.push(v[1])}t.addLineGeometry(p,c)}else if(null!==(o=this.regexp.object_pattern.exec(a))){var g=(" "+o[0].substr(1).trim()).substr(1);t.startObject(g)}else if(this.regexp.material_use_pattern.test(a))t.object.startMaterial(a.substring(7).trim(),t.materialLibraries);else if(this.regexp.material_library_pattern.test(a))t.materialLibraries.push(a.substring(7).trim());else{if(null===(o=this.regexp.smoothing_pattern.exec(a))){if("\\0"===a)continue;throw new Error("Unexpected line: \'"+a+"\'")}var x=o[1].trim().toLowerCase();t.object.smooth="1"===x||"on"===x;var b=t.object.currentMaterial();b&&(b.smooth=t.object.smooth)}t.finalize();var E=new THREE.Group;E.materialLibraries=[].concat(t.materialLibraries);for(var l=0,d=t.objects.length;l<d;l++){var _=t.objects[l],j=_.geometry,y=_.materials,L="Line"===j.type;if(0!==j.vertices.length){var V=new THREE.BufferGeometry;V.addAttribute("position",new THREE.BufferAttribute(new Float32Array(j.vertices),3)),j.normals.length>0?V.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(j.normals),3)):V.computeVertexNormals(),j.uvs.length>0&&V.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(j.uvs),2));for(var w=[],H=0,R=y.length;H<R;H++){var T=y[H],b=void 0;if(null!==this.materials&&(b=this.materials.create(T.name),L&&b&&!(b instanceof THREE.LineBasicMaterial))){var I=new THREE.LineBasicMaterial;I.copy(b),b=I}b||(b=L?new THREE.LineBasicMaterial:new THREE.MeshPhongMaterial,b.name=T.name),b.shading=T.smooth?THREE.SmoothShading:THREE.FlatShading,w.push(b)}var F;if(w.length>1){for(var H=0,R=y.length;H<R;H++){var T=y[H];V.addGroup(T.groupStart,T.groupCount,H)}var M=new THREE.MultiMaterial(w);F=L?new THREE.LineSegments(V,M):new THREE.Mesh(V,M)}else F=L?new THREE.LineSegments(V,w[0]):new THREE.Mesh(V,w[0]);F.name=_.name,E.add(F)}}return console.timeEnd("OBJLoader"),E}};\n},{}],47:[function(_dereq_,module,exports){\nfunction trim(r){return r.replace(/^\\s*|\\s*$/g,"")}exports=module.exports=trim,exports.left=function(r){return r.replace(/^\\s*/,"")},exports.right=function(r){return r.replace(/\\s*$/,"")};\n},{}],48:[function(_dereq_,module,exports){\n!function(n){if("performance"in n==!1&&(n.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},"now"in n.performance==!1){var t=n.performance.timing&&n.performance.timing.navigationStart?performance.timing.navigationStart:Date.now();n.performance.now=function(){return Date.now()-t}}}(this);var TWEEN=TWEEN||function(){var n=[];return{REVISION:"14",getAll:function(){return n},removeAll:function(){n=[]},add:function(t){n.push(t)},remove:function(t){var r=n.indexOf(t);r!==-1&&n.splice(r,1)},update:function(t){if(0===n.length)return!1;var r=0;for(t=void 0!==t?t:window.performance.now();r<n.length;)n[r].update(t)?r++:n.splice(r,1);return!0}}}();TWEEN.Tween=function(n){var t=n,r={},i={},u={},e=1e3,o=0,a=!1,f=!1,c=!1,s=0,h=null,l=TWEEN.Easing.Linear.None,p=TWEEN.Interpolation.Linear,E=[],I=null,v=!1,M=null,m=null,w=null;for(var d in n)r[d]=parseFloat(n[d],10);this.to=function(n,t){return void 0!==t&&(e=t),i=n,this},this.start=function(n){TWEEN.add(this),f=!0,v=!1,h=void 0!==n?n:window.performance.now(),h+=s;for(var e in i){if(i[e]instanceof Array){if(0===i[e].length)continue;i[e]=[t[e]].concat(i[e])}r[e]=t[e],r[e]instanceof Array==!1&&(r[e]*=1),u[e]=r[e]||0}return this},this.stop=function(){return f?(TWEEN.remove(this),f=!1,null!==w&&w.call(t),this.stopChainedTweens(),this):this},this.stopChainedTweens=function(){for(var n=0,t=E.length;n<t;n++)E[n].stop()},this.delay=function(n){return s=n,this},this.repeat=function(n){return o=n,this},this.yoyo=function(n){return a=n,this},this.easing=function(n){return l=n,this},this.interpolation=function(n){return p=n,this},this.chain=function(){return E=arguments,this},this.onStart=function(n){return I=n,this},this.onUpdate=function(n){return M=n,this},this.onComplete=function(n){return m=n,this},this.onStop=function(n){return w=n,this},this.update=function(n){var f;if(n<h)return!0;v===!1&&(null!==I&&I.call(t),v=!0);var w=(n-h)/e;w=w>1?1:w;var d=l(w);for(f in i){var O=r[f]||0,T=i[f];T instanceof Array?t[f]=p(T,d):("string"==typeof T&&(T=O+parseFloat(T,10)),"number"==typeof T&&(t[f]=O+(T-O)*d))}if(null!==M&&M.call(t,d),1==w){if(o>0){isFinite(o)&&o--;for(f in u){if("string"==typeof i[f]&&(u[f]=u[f]+parseFloat(i[f],10)),a){var g=u[f];u[f]=i[f],i[f]=g}r[f]=u[f]}return a&&(c=!c),h=n+s,!0}null!==m&&m.call(t);for(var N=0,W=E.length;N<W;N++)E[N].start(n);return!1}return!0}},TWEEN.Easing={Linear:{None:function(n){return n}},Quadratic:{In:function(n){return n*n},Out:function(n){return n*(2-n)},InOut:function(n){return(n*=2)<1?.5*n*n:-.5*(--n*(n-2)-1)}},Cubic:{In:function(n){return n*n*n},Out:function(n){return--n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n:.5*((n-=2)*n*n+2)}},Quartic:{In:function(n){return n*n*n*n},Out:function(n){return 1- --n*n*n*n},InOut:function(n){return(n*=2)<1?.5*n*n*n*n:-.5*((n-=2)*n*n*n-2)}},Quintic:{In:function(n){return n*n*n*n*n},Out:function(n){return--n*n*n*n*n+1},InOut:function(n){return(n*=2)<1?.5*n*n*n*n*n:.5*((n-=2)*n*n*n*n+2)}},Sinusoidal:{In:function(n){return 1-Math.cos(n*Math.PI/2)},Out:function(n){return Math.sin(n*Math.PI/2)},InOut:function(n){return.5*(1-Math.cos(Math.PI*n))}},Exponential:{In:function(n){return 0===n?0:Math.pow(1024,n-1)},Out:function(n){return 1===n?1:1-Math.pow(2,-10*n)},InOut:function(n){return 0===n?0:1===n?1:(n*=2)<1?.5*Math.pow(1024,n-1):.5*(-Math.pow(2,-10*(n-1))+2)}},Circular:{In:function(n){return 1-Math.sqrt(1-n*n)},Out:function(n){return Math.sqrt(1- --n*n)},InOut:function(n){return(n*=2)<1?-.5*(Math.sqrt(1-n*n)-1):.5*(Math.sqrt(1-(n-=2)*n)+1)}},Elastic:{In:function(n){var t,r=.1,i=.4;return 0===n?0:1===n?1:(!r||r<1?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),-(r*Math.pow(2,10*(n-=1))*Math.sin((n-t)*(2*Math.PI)/i)))},Out:function(n){var t,r=.1,i=.4;return 0===n?0:1===n?1:(!r||r<1?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),r*Math.pow(2,-10*n)*Math.sin((n-t)*(2*Math.PI)/i)+1)},InOut:function(n){var t,r=.1,i=.4;return 0===n?0:1===n?1:(!r||r<1?(r=1,t=i/4):t=i*Math.asin(1/r)/(2*Math.PI),(n*=2)<1?-.5*(r*Math.pow(2,10*(n-=1))*Math.sin((n-t)*(2*Math.PI)/i)):r*Math.pow(2,-10*(n-=1))*Math.sin((n-t)*(2*Math.PI)/i)*.5+1)}},Back:{In:function(n){var t=1.70158;return n*n*((t+1)*n-t)},Out:function(n){var t=1.70158;return--n*n*((t+1)*n+t)+1},InOut:function(n){var t=2.5949095;return(n*=2)<1?.5*(n*n*((t+1)*n-t)):.5*((n-=2)*n*((t+1)*n+t)+2)}},Bounce:{In:function(n){return 1-TWEEN.Easing.Bounce.Out(1-n)},Out:function(n){return n<1/2.75?7.5625*n*n:n<2/2.75?7.5625*(n-=1.5/2.75)*n+.75:n<2.5/2.75?7.5625*(n-=2.25/2.75)*n+.9375:7.5625*(n-=2.625/2.75)*n+.984375},InOut:function(n){return n<.5?.5*TWEEN.Easing.Bounce.In(2*n):.5*TWEEN.Easing.Bounce.Out(2*n-1)+.5}}},TWEEN.Interpolation={Linear:function(n,t){var r=n.length-1,i=r*t,u=Math.floor(i),e=TWEEN.Interpolation.Utils.Linear;return t<0?e(n[0],n[1],i):t>1?e(n[r],n[r-1],r-i):e(n[u],n[u+1>r?r:u+1],i-u)},Bezier:function(n,t){var r,i=0,u=n.length-1,e=Math.pow,o=TWEEN.Interpolation.Utils.Bernstein;for(r=0;r<=u;r++)i+=e(1-t,u-r)*e(t,r)*n[r]*o(u,r);return i},CatmullRom:function(n,t){var r=n.length-1,i=r*t,u=Math.floor(i),e=TWEEN.Interpolation.Utils.CatmullRom;return n[0]===n[r]?(t<0&&(u=Math.floor(i=r*(1+t))),e(n[(u-1+r)%r],n[u],n[(u+1)%r],n[(u+2)%r],i-u)):t<0?n[0]-(e(n[0],n[0],n[1],n[1],-i)-n[0]):t>1?n[r]-(e(n[r],n[r],n[r-1],n[r-1],i-r)-n[r]):e(n[u?u-1:0],n[u],n[r<u+1?r:u+1],n[r<u+2?r:u+2],i-u)},Utils:{Linear:function(n,t,r){return(t-n)*r+n},Bernstein:function(n,t){var r=TWEEN.Interpolation.Utils.Factorial;return r(n)/r(t)/r(n-t)},Factorial:function(){var n=[1];return function(t){var r,i=1;if(n[t])return n[t];for(r=t;r>1;r--)i*=r;return n[t]=i}}(),CatmullRom:function(n,t,r,i,u){var e=.5*(r-n),o=.5*(i-t),a=u*u,f=u*a;return(2*t-2*r+e+o)*f+(-3*t+3*r-2*e-o)*a+e*u+t}}},function(n){"function"==typeof define&&define.amd?define([],function(){return TWEEN}):"object"==typeof exports?module.exports=TWEEN:n.TWEEN=TWEEN}(this);\n},{}],49:[function(_dereq_,module,exports){\n(function (global){\n!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var i;i="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,i.WebVRPolyfill=e()}}(function(){return function e(i,t,M){function s(r,n){if(!t[r]){if(!i[r]){var u="function"==typeof _dereq_&&_dereq_;if(!n&&u)return u(r,!0);if(A)return A(r,!0);var N=new Error("Cannot find module \'"+r+"\'");throw N.code="MODULE_NOT_FOUND",N}var a=t[r]={exports:{}};i[r][0].call(a.exports,function(e){var t=i[r][1][e];return s(t?t:e)},a,a.exports,e,i,t,M)}return t[r].exports}for(var A="function"==typeof _dereq_&&_dereq_,r=0;r<M.length;r++)s(M[r]);return s}({1:[function(e,i,t){"use strict";function M(){}function s(e,i,t){this.fn=e,this.context=i,this.once=t||!1}function A(){this._events=new M,this._eventsCount=0}var r=Object.prototype.hasOwnProperty,n="~";Object.create&&(M.prototype=Object.create(null),(new M).__proto__||(n=!1)),A.prototype.eventNames=function(){var e,i,t=[];if(0===this._eventsCount)return t;for(i in e=this._events)r.call(e,i)&&t.push(n?i.slice(1):i);return Object.getOwnPropertySymbols?t.concat(Object.getOwnPropertySymbols(e)):t},A.prototype.listeners=function(e,i){var t=n?n+e:e,M=this._events[t];if(i)return!!M;if(!M)return[];if(M.fn)return[M.fn];for(var s=0,A=M.length,r=new Array(A);s<A;s++)r[s]=M[s].fn;return r},A.prototype.emit=function(e,i,t,M,s,A){var r=n?n+e:e;if(!this._events[r])return!1;var u,N,a=this._events[r],D=arguments.length;if(a.fn){switch(a.once&&this.removeListener(e,a.fn,void 0,!0),D){case 1:return a.fn.call(a.context),!0;case 2:return a.fn.call(a.context,i),!0;case 3:return a.fn.call(a.context,i,t),!0;case 4:return a.fn.call(a.context,i,t,M),!0;case 5:return a.fn.call(a.context,i,t,M,s),!0;case 6:return a.fn.call(a.context,i,t,M,s,A),!0}for(N=1,u=new Array(D-1);N<D;N++)u[N-1]=arguments[N];a.fn.apply(a.context,u)}else{var o,g=a.length;for(N=0;N<g;N++)switch(a[N].once&&this.removeListener(e,a[N].fn,void 0,!0),D){case 1:a[N].fn.call(a[N].context);break;case 2:a[N].fn.call(a[N].context,i);break;case 3:a[N].fn.call(a[N].context,i,t);break;case 4:a[N].fn.call(a[N].context,i,t,M);break;default:if(!u)for(o=1,u=new Array(D-1);o<D;o++)u[o-1]=arguments[o];a[N].fn.apply(a[N].context,u)}}return!0},A.prototype.on=function(e,i,t){var M=new s(i,t||this),A=n?n+e:e;return this._events[A]?this._events[A].fn?this._events[A]=[this._events[A],M]:this._events[A].push(M):(this._events[A]=M,this._eventsCount++),this},A.prototype.once=function(e,i,t){var M=new s(i,t||this,!0),A=n?n+e:e;return this._events[A]?this._events[A].fn?this._events[A]=[this._events[A],M]:this._events[A].push(M):(this._events[A]=M,this._eventsCount++),this},A.prototype.removeListener=function(e,i,t,s){var A=n?n+e:e;if(!this._events[A])return this;if(!i)return 0===--this._eventsCount?this._events=new M:delete this._events[A],this;var r=this._events[A];if(r.fn)r.fn!==i||s&&!r.once||t&&r.context!==t||(0===--this._eventsCount?this._events=new M:delete this._events[A]);else{for(var u=0,N=[],a=r.length;u<a;u++)(r[u].fn!==i||s&&!r[u].once||t&&r[u].context!==t)&&N.push(r[u]);N.length?this._events[A]=1===N.length?N[0]:N:0===--this._eventsCount?this._events=new M:delete this._events[A]}return this},A.prototype.removeAllListeners=function(e){var i;return e?(i=n?n+e:e,this._events[i]&&(0===--this._eventsCount?this._events=new M:delete this._events[i])):(this._events=new M,this._eventsCount=0),this},A.prototype.off=A.prototype.removeListener,A.prototype.addListener=A.prototype.on,A.prototype.setMaxListeners=function(){return this},A.prefixed=n,A.EventEmitter=A,"undefined"!=typeof i&&(i.exports=A)},{}],2:[function(e,i,t){"use strict";function M(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}function s(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var i={},t=0;t<10;t++)i["_"+String.fromCharCode(t)]=t;var M=Object.getOwnPropertyNames(i).map(function(e){return i[e]});if("0123456789"!==M.join(""))return!1;var s={};return"abcdefghijklmnopqrst".split("").forEach(function(e){s[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},s)).join("")}catch(e){return!1}}var A=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;i.exports=s()?Object.assign:function(e,i){for(var t,s,n=M(e),u=1;u<arguments.length;u++){t=Object(arguments[u]);for(var N in t)A.call(t,N)&&(n[N]=t[N]);if(Object.getOwnPropertySymbols){s=Object.getOwnPropertySymbols(t);for(var a=0;a<s.length;a++)r.call(t,s[a])&&(n[s[a]]=t[s[a]])}}return n}},{}],3:[function(e,i,t){function M(){this.leftProjectionMatrix=new Float32Array(16),this.leftViewMatrix=new Float32Array(16),this.rightProjectionMatrix=new Float32Array(16),this.rightViewMatrix=new Float32Array(16),this.pose=null}function s(){this.isPolyfilled=!0,this.displayId=a++,this.displayName="webvr-polyfill displayName",this.depthNear=.01,this.depthFar=1e4,this.isConnected=!0,this.isPresenting=!1,this.capabilities={hasPosition:!1,hasOrientation:!1,hasExternalDisplay:!1,canPresent:!1,maxLayers:1},this.stageParameters=null,this.waitingForPresent_=!1,this.layer_=null,this.fullscreenElement_=null,this.fullscreenWrapper_=null,this.fullscreenElementCachedStyle_=null,this.fullscreenEventTarget_=null,this.fullscreenChangeHandler_=null,this.fullscreenErrorHandler_=null,this.wakelock_=new N}function A(){this.isPolyfilled=!0,this.hardwareUnitId="webvr-polyfill hardwareUnitId",this.deviceId="webvr-polyfill deviceId",this.deviceName="webvr-polyfill deviceName"}function r(){}function n(){}var u=e("./util.js"),N=e("./wakelock.js"),a=1e3,D=!1,o=[0,0,.5,1],g=[.5,0,.5,1];s.prototype.getFrameData=function(e){return u.frameDataFromPose(e,this.getPose(),this)},s.prototype.getPose=function(){return this.getImmediatePose()},s.prototype.requestAnimationFrame=function(e){return window.requestAnimationFrame(e)},s.prototype.cancelAnimationFrame=function(e){return window.cancelAnimationFrame(e)},s.prototype.wrapForFullscreen=function(e){function i(){if(s.fullscreenElement_){var e=["position: absolute","top: 0","left: 0","width: "+Math.max(screen.width,screen.height)+"px","height: "+Math.min(screen.height,screen.width)+"px","border: 0","margin: 0","padding: 0"];s.fullscreenElement_.setAttribute("style",e.join("; ")+";")}}if(u.isIOS())return e;if(!this.fullscreenWrapper_){this.fullscreenWrapper_=document.createElement("div");var t=["height: "+Math.min(screen.height,screen.width)+"px !important","top: 0 !important","left: 0 !important","right: 0 !important","border: 0","margin: 0","padding: 0","z-index: 999999 !important","position: fixed"];this.fullscreenWrapper_.setAttribute("style",t.join("; ")+";"),this.fullscreenWrapper_.classList.add("webvr-polyfill-fullscreen-wrapper")}if(this.fullscreenElement_==e)return this.fullscreenWrapper_;this.removeFullscreenWrapper(),this.fullscreenElement_=e;var M=this.fullscreenElement_.parentElement;M.insertBefore(this.fullscreenWrapper_,this.fullscreenElement_),M.removeChild(this.fullscreenElement_),this.fullscreenWrapper_.insertBefore(this.fullscreenElement_,this.fullscreenWrapper_.firstChild),this.fullscreenElementCachedStyle_=this.fullscreenElement_.getAttribute("style");var s=this;return i(),this.fullscreenWrapper_},s.prototype.removeFullscreenWrapper=function(){if(this.fullscreenElement_){var e=this.fullscreenElement_;this.fullscreenElementCachedStyle_?e.setAttribute("style",this.fullscreenElementCachedStyle_):e.removeAttribute("style"),this.fullscreenElement_=null,this.fullscreenElementCachedStyle_=null;var i=this.fullscreenWrapper_.parentElement;return this.fullscreenWrapper_.removeChild(e),i.insertBefore(e,this.fullscreenWrapper_),i.removeChild(this.fullscreenWrapper_),e}},s.prototype.requestPresent=function(e){var i=this.isPresenting,t=this;return e instanceof Array||(D||(console.warn("Using a deprecated form of requestPresent. Should pass in an array of VRLayers."),D=!0),e=[e]),new Promise(function(M,s){function A(){var e=u.getFullscreenElement();t.isPresenting=L===e,t.isPresenting?(screen.orientation&&screen.orientation.lock&&screen.orientation.lock("landscape-primary").catch(function(e){console.error("screen.orientation.lock() failed due to",e.message)}),t.waitingForPresent_=!1,t.beginPresent_(),M()):(screen.orientation&&screen.orientation.unlock&&screen.orientation.unlock(),t.removeFullscreenWrapper(),t.wakelock_.release(),t.endPresent_(),t.removeFullscreenListeners_()),t.fireVRDisplayPresentChange_()}function r(){t.waitingForPresent_&&(t.removeFullscreenWrapper(),t.removeFullscreenListeners_(),t.wakelock_.release(),t.waitingForPresent_=!1,t.isPresenting=!1,s(new Error("Unable to present.")))}if(!t.capabilities.canPresent)return void s(new Error("VRDisplay is not capable of presenting."));if(0==e.length||e.length>t.capabilities.maxLayers)return void s(new Error("Invalid number of layers."));var n=e[0];if(!n.source)return void M();var N=n.leftBounds||o,a=n.rightBounds||g;if(i){var D=t.layer_;D.source!==n.source&&(D.source=n.source);for(var j=0;j<4;j++)D.leftBounds[j]!==N[j]&&(D.leftBounds[j]=N[j]),D.rightBounds[j]!==a[j]&&(D.rightBounds[j]=a[j]);return void M()}if(t.layer_={predistorted:n.predistorted,source:n.source,leftBounds:N.slice(0),rightBounds:a.slice(0)},t.waitingForPresent_=!1,t.layer_&&t.layer_.source){var L=t.wrapForFullscreen(t.layer_.source);t.addFullscreenListeners_(L,A,r),u.requestFullscreen(L)?(t.wakelock_.request(),t.waitingForPresent_=!0):(u.isIOS()||u.isWebViewAndroid())&&(t.wakelock_.request(),t.isPresenting=!0,t.beginPresent_(),t.fireVRDisplayPresentChange_(),M())}t.waitingForPresent_||u.isIOS()||(u.exitFullscreen(),s(new Error("Unable to present.")))})},s.prototype.exitPresent=function(){var e=this.isPresenting,i=this;return this.isPresenting=!1,this.layer_=null,this.wakelock_.release(),new Promise(function(t,M){e?(!u.exitFullscreen()&&u.isIOS()&&(i.endPresent_(),i.fireVRDisplayPresentChange_()),u.isWebViewAndroid()&&(i.removeFullscreenWrapper(),i.removeFullscreenListeners_(),i.endPresent_(),i.fireVRDisplayPresentChange_()),t()):M(new Error("Was not presenting to VRDisplay."))})},s.prototype.getLayers=function(){return this.layer_?[this.layer_]:[]},s.prototype.fireVRDisplayPresentChange_=function(){var e=new CustomEvent("vrdisplaypresentchange",{detail:{display:this}});window.dispatchEvent(e)},s.prototype.addFullscreenListeners_=function(e,i,t){this.removeFullscreenListeners_(),this.fullscreenEventTarget_=e,this.fullscreenChangeHandler_=i,this.fullscreenErrorHandler_=t,i&&(document.fullscreenEnabled?e.addEventListener("fullscreenchange",i,!1):document.webkitFullscreenEnabled?e.addEventListener("webkitfullscreenchange",i,!1):document.mozFullScreenEnabled?document.addEventListener("mozfullscreenchange",i,!1):document.msFullscreenEnabled&&e.addEventListener("msfullscreenchange",i,!1)),t&&(document.fullscreenEnabled?e.addEventListener("fullscreenerror",t,!1):document.webkitFullscreenEnabled?e.addEventListener("webkitfullscreenerror",t,!1):document.mozFullScreenEnabled?document.addEventListener("mozfullscreenerror",t,!1):document.msFullscreenEnabled&&e.addEventListener("msfullscreenerror",t,!1))},s.prototype.removeFullscreenListeners_=function(){if(this.fullscreenEventTarget_){var e=this.fullscreenEventTarget_;if(this.fullscreenChangeHandler_){var i=this.fullscreenChangeHandler_;e.removeEventListener("fullscreenchange",i,!1),e.removeEventListener("webkitfullscreenchange",i,!1),document.removeEventListener("mozfullscreenchange",i,!1),e.removeEventListener("msfullscreenchange",i,!1)}if(this.fullscreenErrorHandler_){var t=this.fullscreenErrorHandler_;e.removeEventListener("fullscreenerror",t,!1),e.removeEventListener("webkitfullscreenerror",t,!1),document.removeEventListener("mozfullscreenerror",t,!1),e.removeEventListener("msfullscreenerror",t,!1)}this.fullscreenEventTarget_=null,this.fullscreenChangeHandler_=null,this.fullscreenErrorHandler_=null}},s.prototype.beginPresent_=function(){},s.prototype.endPresent_=function(){},s.prototype.submitFrame=function(e){},s.prototype.getEyeParameters=function(e){return null},r.prototype=new A,n.prototype=new A,i.exports.VRFrameData=M,i.exports.VRDisplay=s,i.exports.VRDevice=A,i.exports.HMDVRDevice=r,i.exports.PositionSensorVRDevice=n},{"./util.js":23,"./wakelock.js":25}],4:[function(e,i,t){function M(e){this.gl=e,this.ctxAttribs=e.getContextAttributes(),this.meshWidth=20,this.meshHeight=20,this.bufferScale=WebVRConfig.BUFFER_SCALE,this.bufferWidth=e.drawingBufferWidth,this.bufferHeight=e.drawingBufferHeight,this.realBindFramebuffer=e.bindFramebuffer,this.realEnable=e.enable,this.realDisable=e.disable,this.realColorMask=e.colorMask,this.realClearColor=e.clearColor,this.realViewport=e.viewport,A.isIOS()||(this.realCanvasWidth=Object.getOwnPropertyDescriptor(e.canvas.__proto__,"width"),this.realCanvasHeight=Object.getOwnPropertyDescriptor(e.canvas.__proto__,"height")),this.isPatched=!1,this.lastBoundFramebuffer=null,this.cullFace=!1,this.depthTest=!1,this.blend=!1,this.scissorTest=!1,this.stencilTest=!1,this.viewport=[0,0,0,0],this.colorMask=[!0,!0,!0,!0],this.clearColor=[0,0,0,0],this.attribs={position:0,texCoord:1},this.program=A.linkProgram(e,n,u,this.attribs),this.uniforms=A.getProgramUniforms(e,this.program),this.viewportOffsetScale=new Float32Array(8),this.setTextureBounds(),this.vertexBuffer=e.createBuffer(),this.indexBuffer=e.createBuffer(),this.indexCount=0,this.renderTarget=e.createTexture(),this.framebuffer=e.createFramebuffer(),this.depthStencilBuffer=null,this.depthBuffer=null,this.stencilBuffer=null,this.ctxAttribs.depth&&this.ctxAttribs.stencil?this.depthStencilBuffer=e.createRenderbuffer():this.ctxAttribs.depth?this.depthBuffer=e.createRenderbuffer():this.ctxAttribs.stencil&&(this.stencilBuffer=e.createRenderbuffer()),this.patch(),this.onResize(),WebVRConfig.CARDBOARD_UI_DISABLED||(this.cardboardUI=new s(e))}var s=e("./cardboard-ui.js"),A=e("./util.js"),r=e("./deps/wglu-preserve-state.js"),n=["attribute vec2 position;","attribute vec3 texCoord;","varying vec2 vTexCoord;","uniform vec4 viewportOffsetScale[2];","void main() {","  vec4 viewport = viewportOffsetScale[int(texCoord.z)];","  vTexCoord = (texCoord.xy * viewport.zw) + viewport.xy;","  gl_Position = vec4( position, 1.0, 1.0 );","}"].join("\\n"),u=["precision mediump float;","uniform sampler2D diffuse;","varying vec2 vTexCoord;","void main() {","  gl_FragColor = texture2D(diffuse, vTexCoord);","}"].join("\\n");M.prototype.destroy=function(){var e=this.gl;this.unpatch(),e.deleteProgram(this.program),e.deleteBuffer(this.vertexBuffer),e.deleteBuffer(this.indexBuffer),e.deleteTexture(this.renderTarget),e.deleteFramebuffer(this.framebuffer),this.depthStencilBuffer&&e.deleteRenderbuffer(this.depthStencilBuffer),this.depthBuffer&&e.deleteRenderbuffer(this.depthBuffer),this.stencilBuffer&&e.deleteRenderbuffer(this.stencilBuffer),this.cardboardUI&&this.cardboardUI.destroy()},M.prototype.onResize=function(){var e=this.gl,i=this,t=[e.RENDERBUFFER_BINDING,e.TEXTURE_BINDING_2D,e.TEXTURE0];r(e,t,function(e){i.realBindFramebuffer.call(e,e.FRAMEBUFFER,null),i.scissorTest&&i.realDisable.call(e,e.SCISSOR_TEST),i.realColorMask.call(e,!0,!0,!0,!0),i.realViewport.call(e,0,0,e.drawingBufferWidth,e.drawingBufferHeight),i.realClearColor.call(e,0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),i.realBindFramebuffer.call(e,e.FRAMEBUFFER,i.framebuffer),e.bindTexture(e.TEXTURE_2D,i.renderTarget),e.texImage2D(e.TEXTURE_2D,0,i.ctxAttribs.alpha?e.RGBA:e.RGB,i.bufferWidth,i.bufferHeight,0,i.ctxAttribs.alpha?e.RGBA:e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i.renderTarget,0),i.ctxAttribs.depth&&i.ctxAttribs.stencil?(e.bindRenderbuffer(e.RENDERBUFFER,i.depthStencilBuffer),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,i.bufferWidth,i.bufferHeight),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,i.depthStencilBuffer)):i.ctxAttribs.depth?(e.bindRenderbuffer(e.RENDERBUFFER,i.depthBuffer),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,i.bufferWidth,i.bufferHeight),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,i.depthBuffer)):i.ctxAttribs.stencil&&(e.bindRenderbuffer(e.RENDERBUFFER,i.stencilBuffer),e.renderbufferStorage(e.RENDERBUFFER,e.STENCIL_INDEX8,i.bufferWidth,i.bufferHeight),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,i.stencilBuffer)),!e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer incomplete!"),i.realBindFramebuffer.call(e,e.FRAMEBUFFER,i.lastBoundFramebuffer),i.scissorTest&&i.realEnable.call(e,e.SCISSOR_TEST),i.realColorMask.apply(e,i.colorMask),i.realViewport.apply(e,i.viewport),i.realClearColor.apply(e,i.clearColor)}),this.cardboardUI&&this.cardboardUI.onResize()},M.prototype.patch=function(){if(!this.isPatched){var e=this,i=this.gl.canvas,t=this.gl;A.isIOS()||(i.width=A.getScreenWidth()*this.bufferScale,i.height=A.getScreenHeight()*this.bufferScale,Object.defineProperty(i,"width",{configurable:!0,enumerable:!0,get:function(){return e.bufferWidth},set:function(t){e.bufferWidth=t,e.realCanvasWidth.set.call(i,t),e.onResize()}}),Object.defineProperty(i,"height",{configurable:!0,enumerable:!0,get:function(){return e.bufferHeight},set:function(t){e.bufferHeight=t,e.realCanvasHeight.set.call(i,t),e.onResize()}})),this.lastBoundFramebuffer=t.getParameter(t.FRAMEBUFFER_BINDING),null==this.lastBoundFramebuffer&&(this.lastBoundFramebuffer=this.framebuffer,this.gl.bindFramebuffer(t.FRAMEBUFFER,this.framebuffer)),this.gl.bindFramebuffer=function(i,M){e.lastBoundFramebuffer=M?M:e.framebuffer,e.realBindFramebuffer.call(t,i,e.lastBoundFramebuffer)},this.cullFace=t.getParameter(t.CULL_FACE),this.depthTest=t.getParameter(t.DEPTH_TEST),this.blend=t.getParameter(t.BLEND),this.scissorTest=t.getParameter(t.SCISSOR_TEST),this.stencilTest=t.getParameter(t.STENCIL_TEST),t.enable=function(i){switch(i){case t.CULL_FACE:e.cullFace=!0;break;case t.DEPTH_TEST:e.depthTest=!0;break;case t.BLEND:e.blend=!0;break;case t.SCISSOR_TEST:e.scissorTest=!0;break;case t.STENCIL_TEST:e.stencilTest=!0}e.realEnable.call(t,i)},t.disable=function(i){switch(i){case t.CULL_FACE:e.cullFace=!1;break;case t.DEPTH_TEST:e.depthTest=!1;break;case t.BLEND:e.blend=!1;break;case t.SCISSOR_TEST:e.scissorTest=!1;break;case t.STENCIL_TEST:e.stencilTest=!1}e.realDisable.call(t,i)},this.colorMask=t.getParameter(t.COLOR_WRITEMASK),t.colorMask=function(i,M,s,A){e.colorMask[0]=i,e.colorMask[1]=M,e.colorMask[2]=s,e.colorMask[3]=A,e.realColorMask.call(t,i,M,s,A)},this.clearColor=t.getParameter(t.COLOR_CLEAR_VALUE),t.clearColor=function(i,M,s,A){e.clearColor[0]=i,e.clearColor[1]=M,e.clearColor[2]=s,e.clearColor[3]=A,e.realClearColor.call(t,i,M,s,A)},this.viewport=t.getParameter(t.VIEWPORT),t.viewport=function(i,M,s,A){e.viewport[0]=i,e.viewport[1]=M,e.viewport[2]=s,e.viewport[3]=A,e.realViewport.call(t,i,M,s,A)},this.isPatched=!0,A.safariCssSizeWorkaround(i)}},M.prototype.unpatch=function(){if(this.isPatched){var e=this.gl,i=this.gl.canvas;A.isIOS()||(Object.defineProperty(i,"width",this.realCanvasWidth),Object.defineProperty(i,"height",this.realCanvasHeight)),i.width=this.bufferWidth,i.height=this.bufferHeight,e.bindFramebuffer=this.realBindFramebuffer,e.enable=this.realEnable,e.disable=this.realDisable,e.colorMask=this.realColorMask,e.clearColor=this.realClearColor,e.viewport=this.realViewport,this.lastBoundFramebuffer==this.framebuffer&&e.bindFramebuffer(e.FRAMEBUFFER,null),this.isPatched=!1,setTimeout(function(){A.safariCssSizeWorkaround(i)},1)}},M.prototype.setTextureBounds=function(e,i){e||(e=[0,0,.5,1]),i||(i=[.5,0,.5,1]),this.viewportOffsetScale[0]=e[0],this.viewportOffsetScale[1]=e[1],this.viewportOffsetScale[2]=e[2],this.viewportOffsetScale[3]=e[3],this.viewportOffsetScale[4]=i[0],this.viewportOffsetScale[5]=i[1],this.viewportOffsetScale[6]=i[2],this.viewportOffsetScale[7]=i[3]},M.prototype.submitFrame=function(){var e=this.gl,i=this,t=[];if(WebVRConfig.DIRTY_SUBMIT_FRAME_BINDINGS||t.push(e.CURRENT_PROGRAM,e.ARRAY_BUFFER_BINDING,e.ELEMENT_ARRAY_BUFFER_BINDING,e.TEXTURE_BINDING_2D,e.TEXTURE0),r(e,t,function(e){i.realBindFramebuffer.call(e,e.FRAMEBUFFER,null),i.cullFace&&i.realDisable.call(e,e.CULL_FACE),i.depthTest&&i.realDisable.call(e,e.DEPTH_TEST),i.blend&&i.realDisable.call(e,e.BLEND),i.scissorTest&&i.realDisable.call(e,e.SCISSOR_TEST),i.stencilTest&&i.realDisable.call(e,e.STENCIL_TEST),i.realColorMask.call(e,!0,!0,!0,!0),i.realViewport.call(e,0,0,e.drawingBufferWidth,e.drawingBufferHeight),(i.ctxAttribs.alpha||A.isIOS())&&(i.realClearColor.call(e,0,0,0,1),e.clear(e.COLOR_BUFFER_BIT)),e.useProgram(i.program),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.indexBuffer),e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.enableVertexAttribArray(i.attribs.position),e.enableVertexAttribArray(i.attribs.texCoord),e.vertexAttribPointer(i.attribs.position,2,e.FLOAT,!1,20,0),e.vertexAttribPointer(i.attribs.texCoord,3,e.FLOAT,!1,20,8),e.activeTexture(e.TEXTURE0),e.uniform1i(i.uniforms.diffuse,0),e.bindTexture(e.TEXTURE_2D,i.renderTarget),e.uniform4fv(i.uniforms.viewportOffsetScale,i.viewportOffsetScale),e.drawElements(e.TRIANGLES,i.indexCount,e.UNSIGNED_SHORT,0),i.cardboardUI&&i.cardboardUI.renderNoState(),i.realBindFramebuffer.call(i.gl,e.FRAMEBUFFER,i.framebuffer),i.ctxAttribs.preserveDrawingBuffer||(i.realClearColor.call(e,0,0,0,0),e.clear(e.COLOR_BUFFER_BIT)),WebVRConfig.DIRTY_SUBMIT_FRAME_BINDINGS||i.realBindFramebuffer.call(e,e.FRAMEBUFFER,i.lastBoundFramebuffer),i.cullFace&&i.realEnable.call(e,e.CULL_FACE),i.depthTest&&i.realEnable.call(e,e.DEPTH_TEST),i.blend&&i.realEnable.call(e,e.BLEND),i.scissorTest&&i.realEnable.call(e,e.SCISSOR_TEST),i.stencilTest&&i.realEnable.call(e,e.STENCIL_TEST),i.realColorMask.apply(e,i.colorMask),i.realViewport.apply(e,i.viewport),!i.ctxAttribs.alpha&&i.ctxAttribs.preserveDrawingBuffer||i.realClearColor.apply(e,i.clearColor)}),A.isIOS()){var M=e.canvas;M.width==i.bufferWidth&&M.height==i.bufferHeight||(i.bufferWidth=M.width,i.bufferHeight=M.height,i.onResize())}},M.prototype.updateDeviceInfo=function(e){var i=this.gl,t=this,M=[i.ARRAY_BUFFER_BINDING,i.ELEMENT_ARRAY_BUFFER_BINDING];r(i,M,function(i){var M=t.computeMeshVertices_(t.meshWidth,t.meshHeight,e);if(i.bindBuffer(i.ARRAY_BUFFER,t.vertexBuffer),i.bufferData(i.ARRAY_BUFFER,M,i.STATIC_DRAW),!t.indexCount){var s=t.computeMeshIndices_(t.meshWidth,t.meshHeight);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.indexBuffer),i.bufferData(i.ELEMENT_ARRAY_BUFFER,s,i.STATIC_DRAW),t.indexCount=s.length}})},M.prototype.computeMeshVertices_=function(e,i,t){for(var M=new Float32Array(2*e*i*5),s=t.getLeftEyeVisibleTanAngles(),r=t.getLeftEyeNoLensTanAngles(),n=t.getLeftEyeVisibleScreenRect(r),u=0,N=0;N<2;N++){for(var a=0;a<i;a++)for(var D=0;D<e;D++,u++){var o=D/(e-1),g=a/(i-1),j=o,L=g,c=A.lerp(s[0],s[2],o),I=A.lerp(s[3],s[1],g),T=Math.sqrt(c*c+I*I),w=t.distortion.distortInverse(T),y=c*w/T,E=I*w/T;o=(y-r[0])/(r[2]-r[0]),g=(E-r[3])/(r[1]-r[3]);t.device.widthMeters/t.device.heightMeters;o=2*(n.x+o*n.width-.5),g=2*(n.y+g*n.height-.5),M[5*u+0]=o,M[5*u+1]=g,M[5*u+2]=j,M[5*u+3]=L,M[5*u+4]=N}var d=s[2]-s[0];s[0]=-(d+s[0]),s[2]=d-s[2],d=r[2]-r[0],r[0]=-(d+r[0]),r[2]=d-r[2],n.x=1-(n.x+n.width)}return M},M.prototype.computeMeshIndices_=function(e,i){for(var t=new Uint16Array(2*(e-1)*(i-1)*6),M=e/2,s=i/2,A=0,r=0,n=0;n<2;n++)for(var u=0;u<i;u++)for(var N=0;N<e;N++,A++)0!=N&&0!=u&&(N<=M==u<=s?(t[r++]=A,t[r++]=A-e-1,t[r++]=A-e,t[r++]=A-e-1,t[r++]=A,t[r++]=A-1):(t[r++]=A-1,t[r++]=A-e,t[r++]=A,t[r++]=A-e,t[r++]=A-1,t[r++]=A-e-1));return t},M.prototype.getOwnPropertyDescriptor_=function(e,i){var t=Object.getOwnPropertyDescriptor(e,i);return void 0!==t.get&&void 0!==t.set||(t.configurable=!0,t.enumerable=!0,t.get=function(){return this.getAttribute(i)},t.set=function(e){this.setAttribute(i,e)}),t},i.exports=M},{"./cardboard-ui.js":5,"./deps/wglu-preserve-state.js":7,"./util.js":23}],5:[function(e,i,t){function M(e){this.gl=e,this.attribs={position:0},this.program=s.linkProgram(e,r,n,this.attribs),this.uniforms=s.getProgramUniforms(e,this.program),this.vertexBuffer=e.createBuffer(),this.gearOffset=0,this.gearVertexCount=0,this.arrowOffset=0,this.arrowVertexCount=0,this.projMat=new Float32Array(16),this.listener=null,this.onResize()}var s=e("./util.js"),A=e("./deps/wglu-preserve-state.js"),r=["attribute vec2 position;","uniform mat4 projectionMat;","void main() {","  gl_Position = projectionMat * vec4( position, -1.0, 1.0 );","}"].join("\\n"),n=["precision mediump float;","uniform vec4 color;","void main() {","  gl_FragColor = color;","}"].join("\\n"),u=Math.PI/180,N=60,a=12,D=20,o=1,g=.75,j=.3125,L=4,c=28,I=1.5;M.prototype.destroy=function(){var e=this.gl;this.listener&&e.canvas.removeEventListener("click",this.listener,!1),e.deleteProgram(this.program),e.deleteBuffer(this.vertexBuffer)},M.prototype.listen=function(e,i){var t=this.gl.canvas;this.listener=function(M){var s=t.clientWidth/2,A=c*I;M.clientX>s-A&&M.clientX<s+A&&M.clientY>t.clientHeight-A?e(M):M.clientX<A&&M.clientY<A&&i(M)},t.addEventListener("click",this.listener,!1)},M.prototype.onResize=function(){var e=this.gl,i=this,t=[e.ARRAY_BUFFER_BINDING];A(e,t,function(e){function t(e,i){var t=(90-e)*u,M=Math.cos(t),s=Math.sin(t);A.push(j*M*y+r,j*s*y+y),A.push(i*M*y+r,i*s*y+y)}function M(i,t){A.push(E+i,e.drawingBufferHeight-E-t)}var A=[],r=e.drawingBufferWidth/2,n=e.drawingBufferWidth/(screen.width*window.devicePixelRatio);s.isIOS()||(n*=window.devicePixelRatio);var T=L*n/2,w=c*I*n,y=c*n/2,E=(c*I-c)*n;A.push(r-T,w),A.push(r-T,e.drawingBufferHeight),A.push(r+T,w),A.push(r+T,e.drawingBufferHeight),i.gearOffset=A.length/2;for(var d=0;d<=6;d++){var l=d*N;t(l,o),t(l+a,o),t(l+D,g),t(l+(N-D),g),t(l+(N-a),o)}i.gearVertexCount=A.length/2-i.gearOffset,i.arrowOffset=A.length/2;var h=T/Math.sin(45*u);M(0,y),M(y,0),M(y+h,h),M(h,y+h),M(h,y-h),M(0,y),M(y,2*y),M(y+h,2*y-h),M(h,y-h),M(0,y),M(h,y-T),M(c*n,y-T),M(h,y+T),M(c*n,y+T),i.arrowVertexCount=A.length/2-i.arrowOffset,e.bindBuffer(e.ARRAY_BUFFER,i.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,new Float32Array(A),e.STATIC_DRAW)})},M.prototype.render=function(){var e=this.gl,i=this,t=[e.CULL_FACE,e.DEPTH_TEST,e.BLEND,e.SCISSOR_TEST,e.STENCIL_TEST,e.COLOR_WRITEMASK,e.VIEWPORT,e.CURRENT_PROGRAM,e.ARRAY_BUFFER_BINDING];A(e,t,function(e){e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.BLEND),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.colorMask(!0,!0,!0,!0),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),i.renderNoState()})},M.prototype.renderNoState=function(){var e=this.gl;e.useProgram(this.program),e.bindBuffer(e.ARRAY_BUFFER,this.vertexBuffer),e.enableVertexAttribArray(this.attribs.position),e.vertexAttribPointer(this.attribs.position,2,e.FLOAT,!1,8,0),e.uniform4f(this.uniforms.color,1,1,1,1),s.orthoMatrix(this.projMat,0,e.drawingBufferWidth,0,e.drawingBufferHeight,.1,1024),e.uniformMatrix4fv(this.uniforms.projectionMat,!1,this.projMat),e.drawArrays(e.TRIANGLE_STRIP,0,4),e.drawArrays(e.TRIANGLE_STRIP,this.gearOffset,this.gearVertexCount),e.drawArrays(e.TRIANGLE_STRIP,this.arrowOffset,this.arrowVertexCount)},i.exports=M},{"./deps/wglu-preserve-state.js":7,"./util.js":23}],6:[function(e,i,t){function M(){this.displayName="Cardboard VRDisplay (webvr-polyfill)",this.capabilities.hasOrientation=!0,this.capabilities.canPresent=!0,this.bufferScale_=WebVRConfig.BUFFER_SCALE,this.poseSensor_=new u,this.distorter_=null,this.cardboardUI_=null,this.dpdb_=new n(!0,this.onDeviceParamsUpdated_.bind(this)),this.deviceInfo_=new r(this.dpdb_.getDeviceParams()),this.viewerSelector_=new a,this.viewerSelector_.on("change",this.onViewerChanged_.bind(this)),this.deviceInfo_.setViewer(this.viewerSelector_.getCurrentViewer()),WebVRConfig.ROTATE_INSTRUCTIONS_DISABLED||(this.rotateInstructions_=new N),o.isIOS()&&window.addEventListener("resize",this.onResize_.bind(this))}var s=e("./cardboard-distorter.js"),A=e("./cardboard-ui.js"),r=e("./device-info.js"),n=e("./dpdb/dpdb.js"),u=e("./sensor-fusion/fusion-pose-sensor.js"),N=e("./rotate-instructions.js"),a=e("./viewer-selector.js"),D=e("./base.js").VRDisplay,o=e("./util.js"),g={LEFT:"left",RIGHT:"right"};M.prototype=new D,M.prototype.getImmediatePose=function(){return{position:this.poseSensor_.getPosition(),orientation:this.poseSensor_.getOrientation(),linearVelocity:null,linearAcceleration:null,angularVelocity:null,angularAcceleration:null}},M.prototype.resetPose=function(){this.poseSensor_.resetPose()},M.prototype.getEyeParameters=function(e){var i,t=[.5*this.deviceInfo_.viewer.interLensDistance,0,0];if(e==g.LEFT)t[0]*=-1,i=this.deviceInfo_.getFieldOfViewLeftEye();else{if(e!=g.RIGHT)return console.error("Invalid eye provided: %s",e),null;i=this.deviceInfo_.getFieldOfViewRightEye()}return{fieldOfView:i,offset:t,renderWidth:.5*this.deviceInfo_.device.width*this.bufferScale_,renderHeight:this.deviceInfo_.device.height*this.bufferScale_}},M.prototype.onDeviceParamsUpdated_=function(e){o.isDebug()&&console.log("DPDB reported that device params were updated."),this.deviceInfo_.updateDeviceParams(e),this.distorter_&&this.distorter_.updateDeviceInfo(this.deviceInfo_)},M.prototype.updateBounds_=function(){this.layer_&&this.distorter_&&(this.layer_.leftBounds||this.layer_.rightBounds)&&this.distorter_.setTextureBounds(this.layer_.leftBounds,this.layer_.rightBounds)},M.prototype.beginPresent_=function(){var e=this.layer_.source.getContext("webgl");e||(e=this.layer_.source.getContext("experimental-webgl")),e||(e=this.layer_.source.getContext("webgl2")),e&&(this.layer_.predistorted?WebVRConfig.CARDBOARD_UI_DISABLED||(e.canvas.width=o.getScreenWidth()*this.bufferScale_,e.canvas.height=o.getScreenHeight()*this.bufferScale_,this.cardboardUI_=new A(e)):(this.distorter_=new s(e),this.distorter_.updateDeviceInfo(this.deviceInfo_),this.cardboardUI_=this.distorter_.cardboardUI),this.cardboardUI_&&this.cardboardUI_.listen(function(e){this.viewerSelector_.show(this.layer_.source.parentElement),e.stopPropagation(),e.preventDefault()}.bind(this),function(e){this.exitPresent(),e.stopPropagation(),e.preventDefault()}.bind(this)),this.rotateInstructions_&&(o.isLandscapeMode()&&o.isMobile()?this.rotateInstructions_.showTemporarily(3e3,this.layer_.source.parentElement):this.rotateInstructions_.update()),this.orientationHandler=this.onOrientationChange_.bind(this),window.addEventListener("orientationchange",this.orientationHandler),this.vrdisplaypresentchangeHandler=this.updateBounds_.bind(this),window.addEventListener("vrdisplaypresentchange",this.vrdisplaypresentchangeHandler),this.fireVRDisplayDeviceParamsChange_())},M.prototype.endPresent_=function(){this.distorter_&&(this.distorter_.destroy(),this.distorter_=null),this.cardboardUI_&&(this.cardboardUI_.destroy(),this.cardboardUI_=null),this.rotateInstructions_&&this.rotateInstructions_.hide(),this.viewerSelector_.hide(),window.removeEventListener("orientationchange",this.orientationHandler),window.removeEventListener("vrdisplaypresentchange",this.vrdisplaypresentchangeHandler)},M.prototype.submitFrame=function(e){if(this.distorter_)this.distorter_.submitFrame();else if(this.cardboardUI_&&this.layer_){var i=this.layer_.source.getContext("webgl").canvas;i.width==this.lastWidth&&i.height==this.lastHeight||this.cardboardUI_.onResize(),this.lastWidth=i.width,this.lastHeight=i.height,this.cardboardUI_.render()}},M.prototype.onOrientationChange_=function(e){this.viewerSelector_.hide(),this.rotateInstructions_&&this.rotateInstructions_.update(),this.onResize_()},M.prototype.onResize_=function(e){if(this.layer_){var i=this.layer_.source.getContext("webgl"),t=["position: absolute","top: 0","left: 0","width: "+Math.max(screen.width,screen.height)+"px","height: "+Math.min(screen.height,screen.width)+"px","border: 0","margin: 0","padding: 0 10px 10px 0"];\ni.canvas.setAttribute("style",t.join("; ")+";"),o.safariCssSizeWorkaround(i.canvas)}},M.prototype.onViewerChanged_=function(e){this.deviceInfo_.setViewer(e),this.distorter_&&this.distorter_.updateDeviceInfo(this.deviceInfo_),this.fireVRDisplayDeviceParamsChange_()},M.prototype.fireVRDisplayDeviceParamsChange_=function(){var e=new CustomEvent("vrdisplaydeviceparamschange",{detail:{vrdisplay:this,deviceInfo:this.deviceInfo_}});window.dispatchEvent(e)},i.exports=M},{"./base.js":3,"./cardboard-distorter.js":4,"./cardboard-ui.js":5,"./device-info.js":8,"./dpdb/dpdb.js":13,"./rotate-instructions.js":17,"./sensor-fusion/fusion-pose-sensor.js":19,"./util.js":23,"./viewer-selector.js":24}],7:[function(e,i,t){function M(e,i,t){if(!i)return void t(e);for(var M=[],s=null,A=0;A<i.length;++A){var r=i[A];switch(r){case e.TEXTURE_BINDING_2D:case e.TEXTURE_BINDING_CUBE_MAP:var n=i[++A];if(n<e.TEXTURE0||n>e.TEXTURE31){console.error("TEXTURE_BINDING_2D or TEXTURE_BINDING_CUBE_MAP must be followed by a valid texture unit"),M.push(null,null);break}s||(s=e.getParameter(e.ACTIVE_TEXTURE)),e.activeTexture(n),M.push(e.getParameter(r),null);break;case e.ACTIVE_TEXTURE:s=e.getParameter(e.ACTIVE_TEXTURE),M.push(null);break;default:M.push(e.getParameter(r))}}t(e);for(var A=0;A<i.length;++A){var r=i[A],u=M[A];switch(r){case e.ACTIVE_TEXTURE:break;case e.ARRAY_BUFFER_BINDING:e.bindBuffer(e.ARRAY_BUFFER,u);break;case e.COLOR_CLEAR_VALUE:e.clearColor(u[0],u[1],u[2],u[3]);break;case e.COLOR_WRITEMASK:e.colorMask(u[0],u[1],u[2],u[3]);break;case e.CURRENT_PROGRAM:e.useProgram(u);break;case e.ELEMENT_ARRAY_BUFFER_BINDING:e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u);break;case e.FRAMEBUFFER_BINDING:e.bindFramebuffer(e.FRAMEBUFFER,u);break;case e.RENDERBUFFER_BINDING:e.bindRenderbuffer(e.RENDERBUFFER,u);break;case e.TEXTURE_BINDING_2D:var n=i[++A];if(n<e.TEXTURE0||n>e.TEXTURE31)break;e.activeTexture(n),e.bindTexture(e.TEXTURE_2D,u);break;case e.TEXTURE_BINDING_CUBE_MAP:var n=i[++A];if(n<e.TEXTURE0||n>e.TEXTURE31)break;e.activeTexture(n),e.bindTexture(e.TEXTURE_CUBE_MAP,u);break;case e.VIEWPORT:e.viewport(u[0],u[1],u[2],u[3]);break;case e.BLEND:case e.CULL_FACE:case e.DEPTH_TEST:case e.SCISSOR_TEST:case e.STENCIL_TEST:u?e.enable(r):e.disable(r);break;default:console.log("No GL restore behavior for 0x"+r.toString(16))}s&&e.activeTexture(s)}}i.exports=M},{}],8:[function(e,i,t){function M(e){this.width=e.width||u.getScreenWidth(),this.height=e.height||u.getScreenHeight(),this.widthMeters=e.widthMeters,this.heightMeters=e.heightMeters,this.bevelMeters=e.bevelMeters}function s(e){this.viewer=D.CardboardV2,this.updateDeviceParams(e),this.distortion=new r(this.viewer.distortionCoefficients)}function A(e){this.id=e.id,this.label=e.label,this.fov=e.fov,this.interLensDistance=e.interLensDistance,this.baselineLensDistance=e.baselineLensDistance,this.screenLensDistance=e.screenLensDistance,this.distortionCoefficients=e.distortionCoefficients,this.inverseCoefficients=e.inverseCoefficients}var r=e("./distortion/distortion.js"),n=e("./math-util.js"),u=e("./util.js"),N=new M({widthMeters:.11,heightMeters:.062,bevelMeters:.004}),a=new M({widthMeters:.1038,heightMeters:.0584,bevelMeters:.004}),D={CardboardV1:new A({id:"CardboardV1",label:"Cardboard I/O 2014",fov:40,interLensDistance:.06,baselineLensDistance:.035,screenLensDistance:.042,distortionCoefficients:[.441,.156],inverseCoefficients:[-.4410035,.42756155,-.4804439,.5460139,-.58821183,.5733938,-.48303202,.33299083,-.17573841,.0651772,-.01488963,.001559834]}),CardboardV2:new A({id:"CardboardV2",label:"Cardboard I/O 2015",fov:60,interLensDistance:.064,baselineLensDistance:.035,screenLensDistance:.039,distortionCoefficients:[.34,.55],inverseCoefficients:[-.33836704,-.18162185,.862655,-1.2462051,1.0560602,-.58208317,.21609078,-.05444823,.009177956,-.0009904169,6183535e-11,-16981803e-13]})};s.prototype.updateDeviceParams=function(e){this.device=this.determineDevice_(e)||this.device},s.prototype.getDevice=function(){return this.device},s.prototype.setViewer=function(e){this.viewer=e,this.distortion=new r(this.viewer.distortionCoefficients)},s.prototype.determineDevice_=function(e){if(!e)return u.isIOS()?(console.warn("Using fallback iOS device measurements."),a):(console.warn("Using fallback Android device measurements."),N);var i=.0254,t=i/e.xdpi,s=i/e.ydpi,A=u.getScreenWidth(),r=u.getScreenHeight();return new M({widthMeters:t*A,heightMeters:s*r,bevelMeters:.001*e.bevelMm})},s.prototype.getDistortedFieldOfViewLeftEye=function(){var e=this.viewer,i=this.device,t=this.distortion,M=e.screenLensDistance,s=(i.widthMeters-e.interLensDistance)/2,A=e.interLensDistance/2,r=e.baselineLensDistance-i.bevelMeters,u=i.heightMeters-r,N=n.radToDeg*Math.atan(t.distort(s/M)),a=n.radToDeg*Math.atan(t.distort(A/M)),D=n.radToDeg*Math.atan(t.distort(r/M)),o=n.radToDeg*Math.atan(t.distort(u/M));return{leftDegrees:Math.min(N,e.fov),rightDegrees:Math.min(a,e.fov),downDegrees:Math.min(D,e.fov),upDegrees:Math.min(o,e.fov)}},s.prototype.getLeftEyeVisibleTanAngles=function(){var e=this.viewer,i=this.device,t=this.distortion,M=Math.tan(-n.degToRad*e.fov),s=Math.tan(n.degToRad*e.fov),A=Math.tan(n.degToRad*e.fov),r=Math.tan(-n.degToRad*e.fov),u=i.widthMeters/4,N=i.heightMeters/2,a=e.baselineLensDistance-i.bevelMeters-N,D=e.interLensDistance/2-u,o=-a,g=e.screenLensDistance,j=t.distort((D-u)/g),L=t.distort((o+N)/g),c=t.distort((D+u)/g),I=t.distort((o-N)/g),T=new Float32Array(4);return T[0]=Math.max(M,j),T[1]=Math.min(s,L),T[2]=Math.min(A,c),T[3]=Math.max(r,I),T},s.prototype.getLeftEyeNoLensTanAngles=function(){var e=this.viewer,i=this.device,t=this.distortion,M=new Float32Array(4),s=t.distortInverse(Math.tan(-n.degToRad*e.fov)),A=t.distortInverse(Math.tan(n.degToRad*e.fov)),r=t.distortInverse(Math.tan(n.degToRad*e.fov)),u=t.distortInverse(Math.tan(-n.degToRad*e.fov)),N=i.widthMeters/4,a=i.heightMeters/2,D=e.baselineLensDistance-i.bevelMeters-a,o=e.interLensDistance/2-N,g=-D,j=e.screenLensDistance,L=(o-N)/j,c=(g+a)/j,I=(o+N)/j,T=(g-a)/j;return M[0]=Math.max(s,L),M[1]=Math.min(A,c),M[2]=Math.min(r,I),M[3]=Math.max(u,T),M},s.prototype.getLeftEyeVisibleScreenRect=function(e){var i=this.viewer,t=this.device,M=i.screenLensDistance,s=(t.widthMeters-i.interLensDistance)/2,A=i.baselineLensDistance-t.bevelMeters,r=(e[0]*M+s)/t.widthMeters,n=(e[1]*M+A)/t.heightMeters,u=(e[2]*M+s)/t.widthMeters,N=(e[3]*M+A)/t.heightMeters;return{x:r,y:N,width:u-r,height:n-N}},s.prototype.getFieldOfViewLeftEye=function(e){return e?this.getUndistortedFieldOfViewLeftEye():this.getDistortedFieldOfViewLeftEye()},s.prototype.getFieldOfViewRightEye=function(e){var i=this.getFieldOfViewLeftEye(e);return{leftDegrees:i.rightDegrees,rightDegrees:i.leftDegrees,upDegrees:i.upDegrees,downDegrees:i.downDegrees}},s.prototype.getUndistortedFieldOfViewLeftEye=function(){var e=this.getUndistortedParams_();return{leftDegrees:n.radToDeg*Math.atan(e.outerDist),rightDegrees:n.radToDeg*Math.atan(e.innerDist),downDegrees:n.radToDeg*Math.atan(e.bottomDist),upDegrees:n.radToDeg*Math.atan(e.topDist)}},s.prototype.getUndistortedViewportLeftEye=function(){var e=this.getUndistortedParams_(),i=this.viewer,t=this.device,M=i.screenLensDistance,s=t.widthMeters/M,A=t.heightMeters/M,r=t.width/s,n=t.height/A,u=Math.round((e.eyePosX-e.outerDist)*r),N=Math.round((e.eyePosY-e.bottomDist)*n);return{x:u,y:N,width:Math.round((e.eyePosX+e.innerDist)*r)-u,height:Math.round((e.eyePosY+e.topDist)*n)-N}},s.prototype.getUndistortedParams_=function(){var e=this.viewer,i=this.device,t=this.distortion,M=e.screenLensDistance,s=e.interLensDistance/2/M,A=i.widthMeters/M,r=i.heightMeters/M,u=A/2-s,N=(e.baselineLensDistance-i.bevelMeters)/M,a=e.fov,D=t.distortInverse(Math.tan(n.degToRad*a)),o=Math.min(u,D),g=Math.min(s,D),j=Math.min(N,D),L=Math.min(r-N,D);return{outerDist:o,innerDist:g,topDist:L,bottomDist:j,eyePosX:u,eyePosY:N}},s.Viewers=D,i.exports=s},{"./distortion/distortion.js":10,"./math-util.js":15,"./util.js":23}],9:[function(e,i,t){function M(e){this.display=e,this.hardwareUnitId=e.displayId,this.deviceId="webvr-polyfill:HMD:"+e.displayId,this.deviceName=e.displayName+" (HMD)"}function s(e){this.display=e,this.hardwareUnitId=e.displayId,this.deviceId="webvr-polyfill:PositionSensor: "+e.displayId,this.deviceName=e.displayName+" (PositionSensor)"}var A=(e("./base.js").VRDisplay,e("./base.js").HMDVRDevice),r=e("./base.js").PositionSensorVRDevice;M.prototype=new A,M.prototype.getEyeParameters=function(e){var i=this.display.getEyeParameters(e);return{currentFieldOfView:i.fieldOfView,maximumFieldOfView:i.fieldOfView,minimumFieldOfView:i.fieldOfView,recommendedFieldOfView:i.fieldOfView,eyeTranslation:{x:i.offset[0],y:i.offset[1],z:i.offset[2]},renderRect:{x:"right"==e?i.renderWidth:0,y:0,width:i.renderWidth,height:i.renderHeight}}},M.prototype.setFieldOfView=function(e,i,t,M){},s.prototype=new r,s.prototype.getState=function(){var e=this.display.getPose();return{position:e.position?{x:e.position[0],y:e.position[1],z:e.position[2]}:null,orientation:e.orientation?{x:e.orientation[0],y:e.orientation[1],z:e.orientation[2],w:e.orientation[3]}:null,linearVelocity:null,linearAcceleration:null,angularVelocity:null,angularAcceleration:null}},s.prototype.resetState=function(){return this.positionDevice.resetPose()},i.exports.VRDisplayHMDDevice=M,i.exports.VRDisplayPositionSensorDevice=s},{"./base.js":3}],10:[function(e,i,t){function M(e){this.coefficients=e}M.prototype.distortInverse=function(e){for(var i=0,t=1,M=e-this.distort(i);Math.abs(t-i)>1e-4;){var s=e-this.distort(t),A=t-s*((t-i)/(s-M));i=t,t=A,M=s}return t},M.prototype.distort=function(e){for(var i=e*e,t=0,M=0;M<this.coefficients.length;M++)t=i*(t+this.coefficients[M]);return(t+1)*e},M.prototype.solveLinear_=function(e,i){for(var t=e.length,M=0;M<t-1;++M)for(var s=M+1;s<t;++s){for(var A=e[M][s]/e[M][M],r=M+1;r<t;++r)e[r][s]-=A*e[r][M];i[s]-=A*i[M]}for(var n=new Array(t),M=t-1;M>=0;--M){for(var u=i[M],r=M+1;r<t;++r)u-=e[r][M]*n[r];n[M]=u/e[M][M]}return n},M.prototype.solveLeastSquares_=function(e,i){var t,M,s,A,r=e.length,n=e[0].length;if(r!=i.Length)throw new Error("Matrix / vector dimension mismatch");var u=new Array(n);for(s=0;s<n;++s)for(u[s]=new Array(n),M=0;M<n;++M){for(A=0,t=0;t<r;++t)A+=e[M][t]*e[s][t];u[s][M]=A}var N=new Array(n);for(M=0;M<n;++M){for(A=0,t=0;t<r;++t)A+=e[M][t]*i[t];N[M]=A}return this.solveLinear_(u,N)},M.prototype.approximateInverse=function(e,i){e=e||1,i=i||100;var t,s,A=6,r=new Array(A);for(s=0;s<A;++s)r[s]=new Array(i);var n=new Array(i);for(t=0;t<i;++t){var u=e*(t+1)/i,N=this.distort(u),a=N;for(s=0;s<A;++s)a*=N*N,r[s][t]=a;n[t]=u-N}var D=this.solveLeastSquares_(r,n);return new M(D)},i.exports=M},{}],11:[function(e,i,t){var M={format:1,last_updated:"2016-01-20T00:18:35Z",devices:[{type:"android",rules:[{mdmh:"asus/*/Nexus 7/*"},{ua:"Nexus 7"}],dpi:[320.8,323],bw:3,ac:500},{type:"android",rules:[{mdmh:"asus/*/ASUS_Z00AD/*"},{ua:"ASUS_Z00AD"}],dpi:[403,404.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google//Pixel XL/"},{ua:"Pixel XL"}],dpi:[537.9,533],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"HTC/*/HTC6435LVW/*"},{ua:"HTC6435LVW"}],dpi:[449.7,443.3],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"HTC/*/HTC One XL/*"},{ua:"HTC One XL"}],dpi:[315.3,314.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"htc/*/Nexus 9/*"},{ua:"Nexus 9"}],dpi:289,bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One M9/*"},{ua:"HTC One M9"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One_M8/*"},{ua:"HTC One_M8"}],dpi:[449.7,447.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One/*"},{ua:"HTC One"}],dpi:472.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Huawei/*/Nexus 6P/*"},{ua:"Nexus 6P"}],dpi:[515.1,518],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 5X/*"},{ua:"Nexus 5X"}],dpi:[422,419.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGMS345/*"},{ua:"LGMS345"}],dpi:[221.7,219.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/LG-D800/*"},{ua:"LG-D800"}],dpi:[422,424.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/LG-D850/*"},{ua:"LG-D850"}],dpi:[537.9,541.9],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/VS985 4G/*"},{ua:"VS985 4G"}],dpi:[537.9,535.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 5/*"},{ua:"Nexus 5 "}],dpi:[442.4,444.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 4/*"},{ua:"Nexus 4"}],dpi:[319.8,318.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LG-P769/*"},{ua:"LG-P769"}],dpi:[240.6,247.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGMS323/*"},{ua:"LGMS323"}],dpi:[206.6,204.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGLS996/*"},{ua:"LGLS996"}],dpi:[403.4,401.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/4560MMX/*"},{ua:"4560MMX"}],dpi:[240,219.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/A250/*"},{ua:"Micromax A250"}],dpi:[480,446.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/Micromax AQ4501/*"},{ua:"Micromax AQ4501"}],dpi:240,bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/DROID RAZR/*"},{ua:"DROID RAZR"}],dpi:[368.1,256.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT830C/*"},{ua:"XT830C"}],dpi:[254,255.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1021/*"},{ua:"XT1021"}],dpi:[254,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1023/*"},{ua:"XT1023"}],dpi:[254,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1028/*"},{ua:"XT1028"}],dpi:[326.6,327.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1034/*"},{ua:"XT1034"}],dpi:[326.6,328.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1053/*"},{ua:"XT1053"}],dpi:[315.3,316.1],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1562/*"},{ua:"XT1562"}],dpi:[403.4,402.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/Nexus 6/*"},{ua:"Nexus 6 "}],dpi:[494.3,489.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1063/*"},{ua:"XT1063"}],dpi:[295,296.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1064/*"},{ua:"XT1064"}],dpi:[295,295.6],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1092/*"},{ua:"XT1092"}],dpi:[422,424.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1095/*"},{ua:"XT1095"}],dpi:[422,423.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/G4/*"},{ua:"Moto G (4)"}],dpi:401,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/A0001/*"},{ua:"A0001"}],dpi:[403.4,401],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE E1005/*"},{ua:"ONE E1005"}],dpi:[442.4,441.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE A2005/*"},{ua:"ONE A2005"}],dpi:[391.9,405.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OPPO/*/X909/*"},{ua:"X909"}],dpi:[442.4,444.1],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9082/*"},{ua:"GT-I9082"}],dpi:[184.7,185.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G360P/*"},{ua:"SM-G360P"}],dpi:[196.7,205.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/Nexus S/*"},{ua:"Nexus S"}],dpi:[234.5,229.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300/*"},{ua:"GT-I9300"}],dpi:[304.8,303.9],bw:5,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-T230NU/*"},{ua:"SM-T230NU"}],dpi:216,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SGH-T399/*"},{ua:"SGH-T399"}],dpi:[217.7,231.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N9005/*"},{ua:"SM-N9005"}],dpi:[386.4,387],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SAMSUNG-SM-N900A/*"},{ua:"SAMSUNG-SM-N900A"}],dpi:[386.4,387.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9500/*"},{ua:"GT-I9500"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/GT-I9505/*"},{ua:"GT-I9505"}],dpi:439.4,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G900F/*"},{ua:"SM-G900F"}],dpi:[415.6,431.6],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G900M/*"},{ua:"SM-G900M"}],dpi:[415.6,431.6],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G800F/*"},{ua:"SM-G800F"}],dpi:326.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G906S/*"},{ua:"SM-G906S"}],dpi:[562.7,572.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300/*"},{ua:"GT-I9300"}],dpi:[306.7,304.8],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-T535/*"},{ua:"SM-T535"}],dpi:[142.6,136.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-N920C/*"},{ua:"SM-N920C"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300I/*"},{ua:"GT-I9300I"}],dpi:[304.8,305.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9195/*"},{ua:"GT-I9195"}],dpi:[249.4,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SPH-L520/*"},{ua:"SPH-L520"}],dpi:[249.4,255.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SAMSUNG-SGH-I717/*"},{ua:"SAMSUNG-SGH-I717"}],dpi:285.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SPH-D710/*"},{ua:"SPH-D710"}],dpi:[217.7,204.2],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-N7100/*"},{ua:"GT-N7100"}],dpi:265.1,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SCH-I605/*"},{ua:"SCH-I605"}],dpi:265.1,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/Galaxy Nexus/*"},{ua:"Galaxy Nexus"}],dpi:[315.3,314.2],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N910H/*"},{ua:"SM-N910H"}],dpi:[515.1,518],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N910C/*"},{ua:"SM-N910C"}],dpi:[515.2,520.2],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G130M/*"},{ua:"SM-G130M"}],dpi:[165.9,164.8],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G928I/*"},{ua:"SM-G928I"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G920F/*"},{ua:"SM-G920F"}],dpi:580.6,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G920P/*"},{ua:"SM-G920P"}],dpi:[522.5,577],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G925F/*"},{ua:"SM-G925F"}],dpi:580.6,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G925V/*"},{ua:"SM-G925V"}],dpi:[522.5,576.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G935F/*"},{ua:"SM-G935F"}],dpi:534,bw:3,ac:500},{type:"android",rules:[{mdmh:"Sony/*/C6903/*"},{ua:"C6903"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"Sony/*/D6653/*"},{ua:"D6653"}],dpi:[428.6,427.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/E6653/*"},{ua:"E6653"}],dpi:[428.6,425.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/E6853/*"},{ua:"E6853"}],dpi:[403.4,401.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/SGP321/*"},{ua:"SGP321"}],dpi:[224.7,224.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"TCT/*/ALCATEL ONE TOUCH Fierce/*"},{ua:"ALCATEL ONE TOUCH Fierce"}],dpi:[240,247.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"THL/*/thl 5000/*"},{ua:"thl 5000"}],dpi:[480,443.3],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"ZTE/*/ZTE Blade L2/*"},{ua:"ZTE Blade L2"}],dpi:240,bw:3,ac:500},{type:"ios",rules:[{res:[640,960]}],dpi:[325.1,328.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[640,1136]}],dpi:[317.1,320.2],bw:3,ac:1e3},{type:"ios",rules:[{res:[750,1334]}],dpi:326.4,bw:4,ac:1e3},{type:"ios",rules:[{res:[1242,2208]}],dpi:[453.6,458.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[1125,2001]}],dpi:[410.9,415.4],bw:4,ac:1e3}]};i.exports=M},{}],12:[function(e,i,t){i.exports={format:1,last_updated:"2017-01-12T08:41:55Z",devices:[{type:"android",rules:[{mdmh:"asus/*/Nexus 7/*"},{ua:"Nexus 7"}],dpi:[320.8,323],bw:3,ac:500},{type:"android",rules:[{mdmh:"asus/*/ASUS_Z00AD/*"},{ua:"ASUS_Z00AD"}],dpi:[403,404.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Google//Pixel XL/"},{ua:"Pixel XL"}],dpi:[537.9,533],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"HTC/*/HTC6435LVW/*"},{ua:"HTC6435LVW"}],dpi:[449.7,443.3],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"HTC/*/HTC One XL/*"},{ua:"HTC One XL"}],dpi:[315.3,314.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"htc/*/Nexus 9/*"},{ua:"Nexus 9"}],dpi:289,bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One M9/*"},{ua:"HTC One M9"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One_M8/*"},{ua:"HTC One_M8"}],dpi:[449.7,447.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"HTC/*/HTC One/*"},{ua:"HTC One"}],dpi:472.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Huawei/*/Nexus 6P/*"},{ua:"Nexus 6P"}],dpi:[515.1,518],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 5X/*"},{ua:"Nexus 5X"}],dpi:[422,419.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGMS345/*"},{ua:"LGMS345"}],dpi:[221.7,219.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/LG-D800/*"},{ua:"LG-D800"}],dpi:[422,424.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/LG-D850/*"},{ua:"LG-D850"}],dpi:[537.9,541.9],bw:3,ac:500},{type:"android",rules:[{mdmh:"LGE/*/VS985 4G/*"},{ua:"VS985 4G"}],dpi:[537.9,535.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 5/*"},{ua:"Nexus 5 B"}],dpi:[442.4,444.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/Nexus 4/*"},{ua:"Nexus 4"}],dpi:[319.8,318.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LG-P769/*"},{ua:"LG-P769"}],dpi:[240.6,247.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGMS323/*"},{ua:"LGMS323"}],dpi:[206.6,204.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"LGE/*/LGLS996/*"},{ua:"LGLS996"}],dpi:[403.4,401.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/4560MMX/*"},{ua:"4560MMX"}],dpi:[240,219.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/A250/*"},{ua:"Micromax A250"}],dpi:[480,446.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Micromax/*/Micromax AQ4501/*"},{ua:"Micromax AQ4501"}],dpi:240,bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/DROID RAZR/*"},{ua:"DROID RAZR"}],dpi:[368.1,256.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT830C/*"},{ua:"XT830C"}],dpi:[254,255.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1021/*"},{ua:"XT1021"}],dpi:[254,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1023/*"},{ua:"XT1023"}],dpi:[254,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1028/*"},{ua:"XT1028"}],dpi:[326.6,327.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1034/*"},{ua:"XT1034"}],dpi:[326.6,328.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1053/*"},{ua:"XT1053"}],dpi:[315.3,316.1],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1562/*"},{ua:"XT1562"}],dpi:[403.4,402.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/Nexus 6/*"},{ua:"Nexus 6 B"}],dpi:[494.3,489.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1063/*"},{ua:"XT1063"}],dpi:[295,296.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/XT1064/*"},{ua:"XT1064"}],dpi:[295,295.6],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1092/*"},{ua:"XT1092"}],dpi:[422,424.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"motorola/*/XT1095/*"},{ua:"XT1095"}],dpi:[422,423.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"motorola/*/G4/*"},{ua:"Moto G (4)"}],dpi:401,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/A0001/*"},{ua:"A0001"}],dpi:[403.4,401],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE E1005/*"},{ua:"ONE E1005"}],dpi:[442.4,441.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OnePlus/*/ONE A2005/*"},{ua:"ONE A2005"}],dpi:[391.9,405.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"OPPO/*/X909/*"},{ua:"X909"}],dpi:[442.4,444.1],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9082/*"},{ua:"GT-I9082"}],dpi:[184.7,185.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G360P/*"},{ua:"SM-G360P"}],dpi:[196.7,205.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/Nexus S/*"},{ua:"Nexus S"}],dpi:[234.5,229.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300/*"},{ua:"GT-I9300"}],dpi:[304.8,303.9],bw:5,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-T230NU/*"},{ua:"SM-T230NU"}],dpi:216,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SGH-T399/*"},{ua:"SGH-T399"}],dpi:[217.7,231.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N9005/*"},{ua:"SM-N9005"}],dpi:[386.4,387],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SAMSUNG-SM-N900A/*"},{ua:"SAMSUNG-SM-N900A"}],dpi:[386.4,387.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9500/*"},{ua:"GT-I9500"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/GT-I9505/*"},{ua:"GT-I9505"}],dpi:439.4,bw:4,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G900F/*"},{ua:"SM-G900F"}],dpi:[415.6,431.6],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G900M/*"},{ua:"SM-G900M"}],dpi:[415.6,431.6],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G800F/*"},{ua:"SM-G800F"}],dpi:326.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G906S/*"},{ua:"SM-G906S"}],dpi:[562.7,572.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300/*"},{ua:"GT-I9300"}],dpi:[306.7,304.8],bw:5,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-T535/*"},{ua:"SM-T535"}],dpi:[142.6,136.4],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-N920C/*"},{ua:"SM-N920C"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N920W8/*"},{ua:"SM-N920W8"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9300I/*"},{ua:"GT-I9300I"}],dpi:[304.8,305.8],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-I9195/*"},{ua:"GT-I9195"}],dpi:[249.4,256.7],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SPH-L520/*"},{ua:"SPH-L520"}],dpi:[249.4,255.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SAMSUNG-SGH-I717/*"},{ua:"SAMSUNG-SGH-I717"}],dpi:285.8,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SPH-D710/*"},{ua:"SPH-D710"}],dpi:[217.7,204.2],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/GT-N7100/*"},{ua:"GT-N7100"}],dpi:265.1,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SCH-I605/*"},{ua:"SCH-I605"}],dpi:265.1,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/Galaxy Nexus/*"},{ua:"Galaxy Nexus"}],dpi:[315.3,314.2],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N910H/*"},{ua:"SM-N910H"}],dpi:[515.1,518],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-N910C/*"},{ua:"SM-N910C"}],dpi:[515.2,520.2],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G130M/*"},{ua:"SM-G130M"}],dpi:[165.9,164.8],bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G928I/*"},{ua:"SM-G928I"}],dpi:[515.1,518.4],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G920F/*"},{ua:"SM-G920F"}],dpi:580.6,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G920P/*"},{ua:"SM-G920P"}],dpi:[522.5,577],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G925F/*"},{ua:"SM-G925F"}],dpi:580.6,bw:3,ac:500},{type:"android",rules:[{mdmh:"samsung/*/SM-G925V/*"},{ua:"SM-G925V"}],dpi:[522.5,576.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G930F/*"},{ua:"SM-G930F"}],dpi:576.6,bw:3,ac:1e3},{type:"android",rules:[{mdmh:"samsung/*/SM-G935F/*"},{ua:"SM-G935F"}],dpi:533,bw:3,ac:500},{type:"android",rules:[{mdmh:"Sony/*/C6903/*"},{ua:"C6903"}],dpi:[442.5,443.3],bw:3,ac:500},{type:"android",rules:[{mdmh:"Sony/*/D6653/*"},{ua:"D6653"}],dpi:[428.6,427.6],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/E6653/*"},{ua:"E6653"}],dpi:[428.6,425.7],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/E6853/*"},{ua:"E6853"}],dpi:[403.4,401.9],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"Sony/*/SGP321/*"},{ua:"SGP321"}],dpi:[224.7,224.1],bw:3,ac:500},{type:"android",rules:[{mdmh:"TCT/*/ALCATEL ONE TOUCH Fierce/*"},{ua:"ALCATEL ONE TOUCH Fierce"}],dpi:[240,247.5],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"THL/*/thl 5000/*"},{ua:"thl 5000"}],dpi:[480,443.3],bw:3,ac:1e3},{type:"android",rules:[{mdmh:"ZTE/*/ZTE Blade L2/*"},{ua:"ZTE Blade L2"}],dpi:240,bw:3,ac:500},{type:"ios",rules:[{res:[640,960]}],dpi:[325.1,328.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[640,1136]}],dpi:[317.1,320.2],bw:3,ac:1e3},{type:"ios",rules:[{res:[750,1334]}],dpi:326.4,bw:4,ac:1e3},{type:"ios",rules:[{res:[1242,2208]}],dpi:[453.6,458.4],bw:4,ac:1e3},{type:"ios",rules:[{res:[1125,2001]}],dpi:[410.9,415.4],bw:4,ac:1e3}]}},{}],13:[function(e,i,t){function M(e,i){if(this.dpdb=A,this.recalculateDeviceParams_(),e){this.onDeviceParamsUpdated=i;var t=new XMLHttpRequest,M=this;t.open("GET",n,!0),t.addEventListener("load",function(){M.loading=!1,t.status>=200&&t.status<=299?(M.dpdb=JSON.parse(t.response),M.recalculateDeviceParams_()):console.error("Error loading online DPDB!")}),t.send()}}function s(e){this.xdpi=e.xdpi,this.ydpi=e.ydpi,this.bevelMm=e.bevelMm}var A=e("./dpdb-cache.js"),r=e("../util.js"),n=e("./dpdb.json");M.prototype.getDeviceParams=function(){return this.deviceParams},M.prototype.recalculateDeviceParams_=function(){var e=this.calcDeviceParams_();e?(this.deviceParams=e,this.onDeviceParamsUpdated&&this.onDeviceParamsUpdated(this.deviceParams)):console.error("Failed to recalculate device parameters.")},M.prototype.calcDeviceParams_=function(){var e=this.dpdb;if(!e)return console.error("DPDB not available."),null;if(1!=e.format)return console.error("DPDB has unexpected format version."),null;if(!e.devices||!e.devices.length)return console.error("DPDB does not have a devices section."),null;var i=navigator.userAgent||navigator.vendor||window.opera,t=r.getScreenWidth(),M=r.getScreenHeight();if(!e.devices)return console.error("DPDB has no devices section."),null;for(var A=0;A<e.devices.length;A++){var n=e.devices[A];if(n.rules)if("ios"==n.type||"android"==n.type){if(r.isIOS()==("ios"==n.type)){for(var u=!1,N=0;N<n.rules.length;N++){var a=n.rules[N];if(this.matchRule_(a,i,t,M)){u=!0;break}}if(u){var D=n.dpi[0]||n.dpi,o=n.dpi[1]||n.dpi;return new s({xdpi:D,ydpi:o,bevelMm:n.bw})}}}else console.warn("Device["+A+"] has invalid type.");else console.warn("Device["+A+"] has no rules section.")}return console.warn("No DPDB device match."),null},M.prototype.matchRule_=function(e,i,t,M){if(!e.ua&&!e.res)return!1;if(e.ua&&i.indexOf(e.ua)<0)return!1;if(e.res){if(!e.res[0]||!e.res[1])return!1;var s=e.res[0],A=e.res[1];if(Math.min(t,M)!=Math.min(s,A)||Math.max(t,M)!=Math.max(s,A))return!1}return!0},i.exports=M},{"../util.js":23,"./dpdb-cache.js":11,"./dpdb.json":12}],14:[function(e,i,t){var M=e("./util.js"),s=e("./webvr-polyfill.js").WebVRPolyfill;window.WebVRConfig=M.extend({FORCE_ENABLE_VR:!1,K_FILTER:.98,PREDICTION_TIME_S:.04,TOUCH_PANNER_DISABLED:!0,CARDBOARD_UI_DISABLED:!1,ROTATE_INSTRUCTIONS_DISABLED:!1,YAW_ONLY:!1,MOUSE_KEYBOARD_CONTROLS_DISABLED:!1,DEFER_INITIALIZATION:!1,ENABLE_DEPRECATED_API:!1,BUFFER_SCALE:.5,DIRTY_SUBMIT_FRAME_BINDINGS:!1,ALWAYS_APPEND_POLYFILL_DISPLAY:!1},window.WebVRConfig),window.WebVRConfig.DEFER_INITIALIZATION?window.InitializeWebVRPolyfill=function(){new s}:new s},{"./util.js":23,"./webvr-polyfill.js":26}],15:[function(e,i,t){var M=window.MathUtil||{};M.degToRad=Math.PI/180,M.radToDeg=180/Math.PI,M.Vector2=function(e,i){this.x=e||0,this.y=i||0},M.Vector2.prototype={constructor:M.Vector2,set:function(e,i){return this.x=e,this.y=i,this},copy:function(e){return this.x=e.x,this.y=e.y,this},subVectors:function(e,i){return this.x=e.x-i.x,this.y=e.y-i.y,this}},M.Vector3=function(e,i,t){this.x=e||0,this.y=i||0,this.z=t||0},M.Vector3.prototype={constructor:M.Vector3,set:function(e,i,t){return this.x=e,this.y=i,this.z=t,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},normalize:function(){var e=this.length();if(0!==e){var i=1/e;this.multiplyScalar(i)}else this.x=0,this.y=0,this.z=0;return this},multiplyScalar:function(e){this.x*=e,this.y*=e,this.z*=e},applyQuaternion:function(e){var i=this.x,t=this.y,M=this.z,s=e.x,A=e.y,r=e.z,n=e.w,u=n*i+A*M-r*t,N=n*t+r*i-s*M,a=n*M+s*t-A*i,D=-s*i-A*t-r*M;return this.x=u*n+D*-s+N*-r-a*-A,this.y=N*n+D*-A+a*-s-u*-r,this.z=a*n+D*-r+u*-A-N*-s,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},crossVectors:function(e,i){var t=e.x,M=e.y,s=e.z,A=i.x,r=i.y,n=i.z;return this.x=M*n-s*r,this.y=s*A-t*n,this.z=t*r-M*A,this}},M.Quaternion=function(e,i,t,M){this.x=e||0,this.y=i||0,this.z=t||0,this.w=void 0!==M?M:1},M.Quaternion.prototype={\nconstructor:M.Quaternion,set:function(e,i,t,M){return this.x=e,this.y=i,this.z=t,this.w=M,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEulerXYZ:function(e,i,t){var M=Math.cos(e/2),s=Math.cos(i/2),A=Math.cos(t/2),r=Math.sin(e/2),n=Math.sin(i/2),u=Math.sin(t/2);return this.x=r*s*A+M*n*u,this.y=M*n*A-r*s*u,this.z=M*s*u+r*n*A,this.w=M*s*A-r*n*u,this},setFromEulerYXZ:function(e,i,t){var M=Math.cos(e/2),s=Math.cos(i/2),A=Math.cos(t/2),r=Math.sin(e/2),n=Math.sin(i/2),u=Math.sin(t/2);return this.x=r*s*A+M*n*u,this.y=M*n*A-r*s*u,this.z=M*s*u-r*n*A,this.w=M*s*A+r*n*u,this},setFromAxisAngle:function(e,i){var t=i/2,M=Math.sin(t);return this.x=e.x*M,this.y=e.y*M,this.z=e.z*M,this.w=Math.cos(t),this},multiply:function(e){return this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,i){var t=e.x,M=e.y,s=e.z,A=e.w,r=i.x,n=i.y,u=i.z,N=i.w;return this.x=t*N+A*r+M*u-s*n,this.y=M*N+A*n+s*r-t*u,this.z=s*N+A*u+t*n-M*r,this.w=A*N-t*r-M*n-s*u,this},inverse:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this.normalize(),this},normalize:function(){var e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return 0===e?(this.x=0,this.y=0,this.z=0,this.w=1):(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},slerp:function(e,i){if(0===i)return this;if(1===i)return this.copy(e);var t=this.x,M=this.y,s=this.z,A=this.w,r=A*e.w+t*e.x+M*e.y+s*e.z;if(r<0?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,r=-r):this.copy(e),r>=1)return this.w=A,this.x=t,this.y=M,this.z=s,this;var n=Math.acos(r),u=Math.sqrt(1-r*r);if(Math.abs(u)<.001)return this.w=.5*(A+this.w),this.x=.5*(t+this.x),this.y=.5*(M+this.y),this.z=.5*(s+this.z),this;var N=Math.sin((1-i)*n)/u,a=Math.sin(i*n)/u;return this.w=A*N+this.w*a,this.x=t*N+this.x*a,this.y=M*N+this.y*a,this.z=s*N+this.z*a,this},setFromUnitVectors:function(){var e,i,t=1e-6;return function(s,A){return void 0===e&&(e=new M.Vector3),i=s.dot(A)+1,i<t?(i=0,Math.abs(s.x)>Math.abs(s.z)?e.set(-s.y,s.x,0):e.set(0,-s.z,s.y)):e.crossVectors(s,A),this.x=e.x,this.y=e.y,this.z=e.z,this.w=i,this.normalize(),this}}()},i.exports=M},{}],16:[function(e,i,t){function M(){this.displayName="Mouse and Keyboard VRDisplay (webvr-polyfill)",this.capabilities.hasOrientation=!0,window.addEventListener("keydown",this.onKeyDown_.bind(this)),window.addEventListener("mousemove",this.onMouseMove_.bind(this)),window.addEventListener("mousedown",this.onMouseDown_.bind(this)),window.addEventListener("mouseup",this.onMouseUp_.bind(this)),this.phi_=0,this.theta_=0,this.targetAngle_=null,this.angleAnimation_=null,this.orientation_=new A.Quaternion,this.rotateStart_=new A.Vector2,this.rotateEnd_=new A.Vector2,this.rotateDelta_=new A.Vector2,this.isDragging_=!1,this.orientationOut_=new Float32Array(4)}var s=e("./base.js").VRDisplay,A=e("./math-util.js"),r=e("./util.js"),n=.15,u=80,N=.5,a=.3;M.prototype=new s,M.prototype.getImmediatePose=function(){return this.orientation_.setFromEulerYXZ(this.phi_,this.theta_,0),this.orientationOut_[0]=this.orientation_.x,this.orientationOut_[1]=this.orientation_.y,this.orientationOut_[2]=this.orientation_.z,this.orientationOut_[3]=this.orientation_.w,{position:null,orientation:this.orientationOut_,linearVelocity:null,linearAcceleration:null,angularVelocity:null,angularAcceleration:null}},M.prototype.onKeyDown_=function(e){38==e.keyCode?this.animatePhi_(this.phi_+n):39==e.keyCode?this.animateTheta_(this.theta_-n):40==e.keyCode?this.animatePhi_(this.phi_-n):37==e.keyCode&&this.animateTheta_(this.theta_+n)},M.prototype.animateTheta_=function(e){this.animateKeyTransitions_("theta_",e)},M.prototype.animatePhi_=function(e){e=r.clamp(e,-Math.PI/2,Math.PI/2),this.animateKeyTransitions_("phi_",e)},M.prototype.animateKeyTransitions_=function(e,i){this.angleAnimation_&&cancelAnimationFrame(this.angleAnimation_);var t=this[e],M=new Date;this.angleAnimation_=requestAnimationFrame(function s(){var A=new Date-M;if(A>=u)return this[e]=i,void cancelAnimationFrame(this.angleAnimation_);this.angleAnimation_=requestAnimationFrame(s.bind(this));var r=A/u;this[e]=t+(i-t)*r}.bind(this))},M.prototype.onMouseDown_=function(e){this.rotateStart_.set(e.clientX,e.clientY),this.isDragging_=!0},M.prototype.onMouseMove_=function(e){if(this.isDragging_||this.isPointerLocked_()){if(this.isPointerLocked_()){var i=e.movementX||e.mozMovementX||0,t=e.movementY||e.mozMovementY||0;this.rotateEnd_.set(this.rotateStart_.x-i,this.rotateStart_.y-t)}else this.rotateEnd_.set(e.clientX,e.clientY);this.rotateDelta_.subVectors(this.rotateEnd_,this.rotateStart_),this.rotateStart_.copy(this.rotateEnd_),this.phi_+=2*Math.PI*this.rotateDelta_.y/screen.height*a,this.theta_+=2*Math.PI*this.rotateDelta_.x/screen.width*N,this.phi_=r.clamp(this.phi_,-Math.PI/2,Math.PI/2)}},M.prototype.onMouseUp_=function(e){this.isDragging_=!1},M.prototype.isPointerLocked_=function(){var e=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement;return void 0!==e},M.prototype.resetPose=function(){this.phi_=0,this.theta_=0},i.exports=M},{"./base.js":3,"./math-util.js":15,"./util.js":23}],17:[function(e,i,t){function M(){this.loadIcon_();var e=document.createElement("div"),i=e.style;i.position="fixed",i.top=0,i.right=0,i.bottom=0,i.left=0,i.backgroundColor="gray",i.fontFamily="sans-serif",i.zIndex=1e6;var t=document.createElement("img");t.src=this.icon;var i=t.style;i.marginLeft="25%",i.marginTop="25%",i.width="50%",e.appendChild(t);var M=document.createElement("div"),i=M.style;i.textAlign="center",i.fontSize="16px",i.lineHeight="24px",i.margin="24px 25%",i.width="50%",M.innerHTML="Place your phone into your Cardboard viewer.",e.appendChild(M);var s=document.createElement("div"),i=s.style;i.backgroundColor="#CFD8DC",i.position="fixed",i.bottom=0,i.width="100%",i.height="48px",i.padding="14px 24px",i.boxSizing="border-box",i.color="#656A6B",e.appendChild(s);var A=document.createElement("div");A.style.float="left",A.innerHTML="No Cardboard viewer?";var r=document.createElement("a");r.href="https://www.google.com/get/cardboard/get-cardboard/",r.innerHTML="get one",r.target="_blank";var i=r.style;i.float="right",i.fontWeight=600,i.textTransform="uppercase",i.borderLeft="1px solid gray",i.paddingLeft="24px",i.textDecoration="none",i.color="#656A6B",s.appendChild(A),s.appendChild(r),this.overlay=e,this.text=M,this.hide()}var s=e("./util.js");M.prototype.show=function(e){e||this.overlay.parentElement?e&&(this.overlay.parentElement&&this.overlay.parentElement!=e&&this.overlay.parentElement.removeChild(this.overlay),e.appendChild(this.overlay)):document.body.appendChild(this.overlay),this.overlay.style.display="block";var i=this.overlay.querySelector("img"),t=i.style;s.isLandscapeMode()?(t.width="20%",t.marginLeft="40%",t.marginTop="3%"):(t.width="50%",t.marginLeft="25%",t.marginTop="25%")},M.prototype.hide=function(){this.overlay.style.display="none"},M.prototype.showTemporarily=function(e,i){this.show(i),this.timer=setTimeout(this.hide.bind(this),e)},M.prototype.disableShowTemporarily=function(){clearTimeout(this.timer)},M.prototype.update=function(){this.disableShowTemporarily(),!s.isLandscapeMode()&&s.isMobile()?this.show():this.hide()},M.prototype.loadIcon_=function(){this.icon=s.base64("image/svg+xml","PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+Cjxzdmcgd2lkdGg9IjE5OHB4IiBoZWlnaHQ9IjI0MHB4IiB2aWV3Qm94PSIwIDAgMTk4IDI0MCIgdmVyc2lvbj0iMS4xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWxuczpza2V0Y2g9Imh0dHA6Ly93d3cuYm9oZW1pYW5jb2RpbmcuY29tL3NrZXRjaC9ucyI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDMuMy4zICgxMjA4MSkgLSBodHRwOi8vd3d3LmJvaGVtaWFuY29kaW5nLmNvbS9za2V0Y2ggLS0+CiAgICA8dGl0bGU+dHJhbnNpdGlvbjwvdGl0bGU+CiAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KICAgIDxkZWZzPjwvZGVmcz4KICAgIDxnIGlkPSJQYWdlLTEiIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiIHNrZXRjaDp0eXBlPSJNU1BhZ2UiPgogICAgICAgIDxnIGlkPSJ0cmFuc2l0aW9uIiBza2V0Y2g6dHlwZT0iTVNBcnRib2FyZEdyb3VwIj4KICAgICAgICAgICAgPGcgaWQ9IkltcG9ydGVkLUxheWVycy1Db3B5LTQtKy1JbXBvcnRlZC1MYXllcnMtQ29weS0rLUltcG9ydGVkLUxheWVycy1Db3B5LTItQ29weSIgc2tldGNoOnR5cGU9Ik1TTGF5ZXJHcm91cCI+CiAgICAgICAgICAgICAgICA8ZyBpZD0iSW1wb3J0ZWQtTGF5ZXJzLUNvcHktNCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMC4wMDAwMDAsIDEwNy4wMDAwMDApIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTQ5LjYyNSwyLjUyNyBDMTQ5LjYyNSwyLjUyNyAxNTUuODA1LDYuMDk2IDE1Ni4zNjIsNi40MTggTDE1Ni4zNjIsNy4zMDQgQzE1Ni4zNjIsNy40ODEgMTU2LjM3NSw3LjY2NCAxNTYuNCw3Ljg1MyBDMTU2LjQxLDcuOTM0IDE1Ni40Miw4LjAxNSAxNTYuNDI3LDguMDk1IEMxNTYuNTY3LDkuNTEgMTU3LjQwMSwxMS4wOTMgMTU4LjUzMiwxMi4wOTQgTDE2NC4yNTIsMTcuMTU2IEwxNjQuMzMzLDE3LjA2NiBDMTY0LjMzMywxNy4wNjYgMTY4LjcxNSwxNC41MzYgMTY5LjU2OCwxNC4wNDIgQzE3MS4wMjUsMTQuODgzIDE5NS41MzgsMjkuMDM1IDE5NS41MzgsMjkuMDM1IEwxOTUuNTM4LDgzLjAzNiBDMTk1LjUzOCw4My44MDcgMTk1LjE1Miw4NC4yNTMgMTk0LjU5LDg0LjI1MyBDMTk0LjM1Nyw4NC4yNTMgMTk0LjA5NSw4NC4xNzcgMTkzLjgxOCw4NC4wMTcgTDE2OS44NTEsNzAuMTc5IEwxNjkuODM3LDcwLjIwMyBMMTQyLjUxNSw4NS45NzggTDE0MS42NjUsODQuNjU1IEMxMzYuOTM0LDgzLjEyNiAxMzEuOTE3LDgxLjkxNSAxMjYuNzE0LDgxLjA0NSBDMTI2LjcwOSw4MS4wNiAxMjYuNzA3LDgxLjA2OSAxMjYuNzA3LDgxLjA2OSBMMTIxLjY0LDk4LjAzIEwxMTMuNzQ5LDEwMi41ODYgTDExMy43MTIsMTAyLjUyMyBMMTEzLjcxMiwxMzAuMTEzIEMxMTMuNzEyLDEzMC44ODUgMTEzLjMyNiwxMzEuMzMgMTEyLjc2NCwxMzEuMzMgQzExMi41MzIsMTMxLjMzIDExMi4yNjksMTMxLjI1NCAxMTEuOTkyLDEzMS4wOTQgTDY5LjUxOSwxMDYuNTcyIEM2OC41NjksMTA2LjAyMyA2Ny43OTksMTA0LjY5NSA2Ny43OTksMTAzLjYwNSBMNjcuNzk5LDEwMi41NyBMNjcuNzc4LDEwMi42MTcgQzY3LjI3LDEwMi4zOTMgNjYuNjQ4LDEwMi4yNDkgNjUuOTYyLDEwMi4yMTggQzY1Ljg3NSwxMDIuMjE0IDY1Ljc4OCwxMDIuMjEyIDY1LjcwMSwxMDIuMjEyIEM2NS42MDYsMTAyLjIxMiA2NS41MTEsMTAyLjIxNSA2NS40MTYsMTAyLjIxOSBDNjUuMTk1LDEwMi4yMjkgNjQuOTc0LDEwMi4yMzUgNjQuNzU0LDEwMi4yMzUgQzY0LjMzMSwxMDIuMjM1IDYzLjkxMSwxMDIuMjE2IDYzLjQ5OCwxMDIuMTc4IEM2MS44NDMsMTAyLjAyNSA2MC4yOTgsMTAxLjU3OCA1OS4wOTQsMTAwLjg4MiBMMTIuNTE4LDczLjk5MiBMMTIuNTIzLDc0LjAwNCBMMi4yNDUsNTUuMjU0IEMxLjI0NCw1My40MjcgMi4wMDQsNTEuMDM4IDMuOTQzLDQ5LjkxOCBMNTkuOTU0LDE3LjU3MyBDNjAuNjI2LDE3LjE4NSA2MS4zNSwxNy4wMDEgNjIuMDUzLDE3LjAwMSBDNjMuMzc5LDE3LjAwMSA2NC42MjUsMTcuNjYgNjUuMjgsMTguODU0IEw2NS4yODUsMTguODUxIEw2NS41MTIsMTkuMjY0IEw2NS41MDYsMTkuMjY4IEM2NS45MDksMjAuMDAzIDY2LjQwNSwyMC42OCA2Ni45ODMsMjEuMjg2IEw2Ny4yNiwyMS41NTYgQzY5LjE3NCwyMy40MDYgNzEuNzI4LDI0LjM1NyA3NC4zNzMsMjQuMzU3IEM3Ni4zMjIsMjQuMzU3IDc4LjMyMSwyMy44NCA4MC4xNDgsMjIuNzg1IEM4MC4xNjEsMjIuNzg1IDg3LjQ2NywxOC41NjYgODcuNDY3LDE4LjU2NiBDODguMTM5LDE4LjE3OCA4OC44NjMsMTcuOTk0IDg5LjU2NiwxNy45OTQgQzkwLjg5MiwxNy45OTQgOTIuMTM4LDE4LjY1MiA5Mi43OTIsMTkuODQ3IEw5Ni4wNDIsMjUuNzc1IEw5Ni4wNjQsMjUuNzU3IEwxMDIuODQ5LDI5LjY3NCBMMTAyLjc0NCwyOS40OTIgTDE0OS42MjUsMi41MjcgTTE0OS42MjUsMC44OTIgQzE0OS4zNDMsMC44OTIgMTQ5LjA2MiwwLjk2NSAxNDguODEsMS4xMSBMMTAyLjY0MSwyNy42NjYgTDk3LjIzMSwyNC41NDIgTDk0LjIyNiwxOS4wNjEgQzkzLjMxMywxNy4zOTQgOTEuNTI3LDE2LjM1OSA4OS41NjYsMTYuMzU4IEM4OC41NTUsMTYuMzU4IDg3LjU0NiwxNi42MzIgODYuNjQ5LDE3LjE1IEM4My44NzgsMTguNzUgNzkuNjg3LDIxLjE2OSA3OS4zNzQsMjEuMzQ1IEM3OS4zNTksMjEuMzUzIDc5LjM0NSwyMS4zNjEgNzkuMzMsMjEuMzY5IEM3Ny43OTgsMjIuMjU0IDc2LjA4NCwyMi43MjIgNzQuMzczLDIyLjcyMiBDNzIuMDgxLDIyLjcyMiA2OS45NTksMjEuODkgNjguMzk3LDIwLjM4IEw2OC4xNDUsMjAuMTM1IEM2Ny43MDYsMTkuNjcyIDY3LjMyMywxOS4xNTYgNjcuMDA2LDE4LjYwMSBDNjYuOTg4LDE4LjU1OSA2Ni45NjgsMTguNTE5IDY2Ljk0NiwxOC40NzkgTDY2LjcxOSwxOC4wNjUgQzY2LjY5LDE4LjAxMiA2Ni42NTgsMTcuOTYgNjYuNjI0LDE3LjkxMSBDNjUuNjg2LDE2LjMzNyA2My45NTEsMTUuMzY2IDYyLjA1MywxNS4zNjYgQzYxLjA0MiwxNS4zNjYgNjAuMDMzLDE1LjY0IDU5LjEzNiwxNi4xNTggTDMuMTI1LDQ4LjUwMiBDMC40MjYsNTAuMDYxIC0wLjYxMyw1My40NDIgMC44MTEsNTYuMDQgTDExLjA4OSw3NC43OSBDMTEuMjY2LDc1LjExMyAxMS41MzcsNzUuMzUzIDExLjg1LDc1LjQ5NCBMNTguMjc2LDEwMi4yOTggQzU5LjY3OSwxMDMuMTA4IDYxLjQzMywxMDMuNjMgNjMuMzQ4LDEwMy44MDYgQzYzLjgxMiwxMDMuODQ4IDY0LjI4NSwxMDMuODcgNjQuNzU0LDEwMy44NyBDNjUsMTAzLjg3IDY1LjI0OSwxMDMuODY0IDY1LjQ5NCwxMDMuODUyIEM2NS41NjMsMTAzLjg0OSA2NS42MzIsMTAzLjg0NyA2NS43MDEsMTAzLjg0NyBDNjUuNzY0LDEwMy44NDcgNjUuODI4LDEwMy44NDkgNjUuODksMTAzLjg1MiBDNjUuOTg2LDEwMy44NTYgNjYuMDgsMTAzLjg2MyA2Ni4xNzMsMTAzLjg3NCBDNjYuMjgyLDEwNS40NjcgNjcuMzMyLDEwNy4xOTcgNjguNzAyLDEwNy45ODggTDExMS4xNzQsMTMyLjUxIEMxMTEuNjk4LDEzMi44MTIgMTEyLjIzMiwxMzIuOTY1IDExMi43NjQsMTMyLjk2NSBDMTE0LjI2MSwxMzIuOTY1IDExNS4zNDcsMTMxLjc2NSAxMTUuMzQ3LDEzMC4xMTMgTDExNS4zNDcsMTAzLjU1MSBMMTIyLjQ1OCw5OS40NDYgQzEyMi44MTksOTkuMjM3IDEyMy4wODcsOTguODk4IDEyMy4yMDcsOTguNDk4IEwxMjcuODY1LDgyLjkwNSBDMTMyLjI3OSw4My43MDIgMTM2LjU1Nyw4NC43NTMgMTQwLjYwNyw4Ni4wMzMgTDE0MS4xNCw4Ni44NjIgQzE0MS40NTEsODcuMzQ2IDE0MS45NzcsODcuNjEzIDE0Mi41MTYsODcuNjEzIEMxNDIuNzk0LDg3LjYxMyAxNDMuMDc2LDg3LjU0MiAxNDMuMzMzLDg3LjM5MyBMMTY5Ljg2NSw3Mi4wNzYgTDE5Myw4NS40MzMgQzE5My41MjMsODUuNzM1IDE5NC4wNTgsODUuODg4IDE5NC41OSw4NS44ODggQzE5Ni4wODcsODUuODg4IDE5Ny4xNzMsODQuNjg5IDE5Ny4xNzMsODMuMDM2IEwxOTcuMTczLDI5LjAzNSBDMTk3LjE3MywyOC40NTEgMTk2Ljg2MSwyNy45MTEgMTk2LjM1NSwyNy42MTkgQzE5Ni4zNTUsMjcuNjE5IDE3MS44NDMsMTMuNDY3IDE3MC4zODUsMTIuNjI2IEMxNzAuMTMyLDEyLjQ4IDE2OS44NSwxMi40MDcgMTY5LjU2OCwxMi40MDcgQzE2OS4yODUsMTIuNDA3IDE2OS4wMDIsMTIuNDgxIDE2OC43NDksMTIuNjI3IEMxNjguMTQzLDEyLjk3OCAxNjUuNzU2LDE0LjM1NyAxNjQuNDI0LDE1LjEyNSBMMTU5LjYxNSwxMC44NyBDMTU4Ljc5NiwxMC4xNDUgMTU4LjE1NCw4LjkzNyAxNTguMDU0LDcuOTM0IEMxNTguMDQ1LDcuODM3IDE1OC4wMzQsNy43MzkgMTU4LjAyMSw3LjY0IEMxNTguMDA1LDcuNTIzIDE1Ny45OTgsNy40MSAxNTcuOTk4LDcuMzA0IEwxNTcuOTk4LDYuNDE4IEMxNTcuOTk4LDUuODM0IDE1Ny42ODYsNS4yOTUgMTU3LjE4MSw1LjAwMiBDMTU2LjYyNCw0LjY4IDE1MC40NDIsMS4xMTEgMTUwLjQ0MiwxLjExMSBDMTUwLjE4OSwwLjk2NSAxNDkuOTA3LDAuODkyIDE0OS42MjUsMC44OTIiIGlkPSJGaWxsLTEiIGZpbGw9IiM0NTVBNjQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNOTYuMDI3LDI1LjYzNiBMMTQyLjYwMyw1Mi41MjcgQzE0My44MDcsNTMuMjIyIDE0NC41ODIsNTQuMTE0IDE0NC44NDUsNTUuMDY4IEwxNDQuODM1LDU1LjA3NSBMNjMuNDYxLDEwMi4wNTcgTDYzLjQ2LDEwMi4wNTcgQzYxLjgwNiwxMDEuOTA1IDYwLjI2MSwxMDEuNDU3IDU5LjA1NywxMDAuNzYyIEwxMi40ODEsNzMuODcxIEw5Ni4wMjcsMjUuNjM2IiBpZD0iRmlsbC0yIiBmaWxsPSIjRkFGQUZBIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTYzLjQ2MSwxMDIuMTc0IEM2My40NTMsMTAyLjE3NCA2My40NDYsMTAyLjE3NCA2My40MzksMTAyLjE3MiBDNjEuNzQ2LDEwMi4wMTYgNjAuMjExLDEwMS41NjMgNTguOTk4LDEwMC44NjMgTDEyLjQyMiw3My45NzMgQzEyLjM4Niw3My45NTIgMTIuMzY0LDczLjkxNCAxMi4zNjQsNzMuODcxIEMxMi4zNjQsNzMuODMgMTIuMzg2LDczLjc5MSAxMi40MjIsNzMuNzcgTDk1Ljk2OCwyNS41MzUgQzk2LjAwNCwyNS41MTQgOTYuMDQ5LDI1LjUxNCA5Ni4wODUsMjUuNTM1IEwxNDIuNjYxLDUyLjQyNiBDMTQzLjg4OCw1My4xMzQgMTQ0LjY4Miw1NC4wMzggMTQ0Ljk1Nyw1NS4wMzcgQzE0NC45Nyw1NS4wODMgMTQ0Ljk1Myw1NS4xMzMgMTQ0LjkxNSw1NS4xNjEgQzE0NC45MTEsNTUuMTY1IDE0NC44OTgsNTUuMTc0IDE0NC44OTQsNTUuMTc3IEw2My41MTksMTAyLjE1OCBDNjMuNTAxLDEwMi4xNjkgNjMuNDgxLDEwMi4xNzQgNjMuNDYxLDEwMi4xNzQgTDYzLjQ2MSwxMDIuMTc0IFogTTEyLjcxNCw3My44NzEgTDU5LjExNSwxMDAuNjYxIEM2MC4yOTMsMTAxLjM0MSA2MS43ODYsMTAxLjc4MiA2My40MzUsMTAxLjkzNyBMMTQ0LjcwNyw1NS4wMTUgQzE0NC40MjgsNTQuMTA4IDE0My42ODIsNTMuMjg1IDE0Mi41NDQsNTIuNjI4IEw5Ni4wMjcsMjUuNzcxIEwxMi43MTQsNzMuODcxIEwxMi43MTQsNzMuODcxIFoiIGlkPSJGaWxsLTMiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTQ4LjMyNyw1OC40NzEgQzE0OC4xNDUsNTguNDggMTQ3Ljk2Miw1OC40OCAxNDcuNzgxLDU4LjQ3MiBDMTQ1Ljg4Nyw1OC4zODkgMTQ0LjQ3OSw1Ny40MzQgMTQ0LjYzNiw1Ni4zNCBDMTQ0LjY4OSw1NS45NjcgMTQ0LjY2NCw1NS41OTcgMTQ0LjU2NCw1NS4yMzUgTDYzLjQ2MSwxMDIuMDU3IEM2NC4wODksMTAyLjExNSA2NC43MzMsMTAyLjEzIDY1LjM3OSwxMDIuMDk5IEM2NS41NjEsMTAyLjA5IDY1Ljc0MywxMDIuMDkgNjUuOTI1LDEwMi4wOTggQzY3LjgxOSwxMDIuMTgxIDY5LjIyNywxMDMuMTM2IDY5LjA3LDEwNC4yMyBMMTQ4LjMyNyw1OC40NzEiIGlkPSJGaWxsLTQiIGZpbGw9IiNGRkZGRkYiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNjkuMDcsMTA0LjM0NyBDNjkuMDQ4LDEwNC4zNDcgNjkuMDI1LDEwNC4zNCA2OS4wMDUsMTA0LjMyNyBDNjguOTY4LDEwNC4zMDEgNjguOTQ4LDEwNC4yNTcgNjguOTU1LDEwNC4yMTMgQzY5LDEwMy44OTYgNjguODk4LDEwMy41NzYgNjguNjU4LDEwMy4yODggQzY4LjE1MywxMDIuNjc4IDY3LjEwMywxMDIuMjY2IDY1LjkyLDEwMi4yMTQgQzY1Ljc0MiwxMDIuMjA2IDY1LjU2MywxMDIuMjA3IDY1LjM4NSwxMDIuMjE1IEM2NC43NDIsMTAyLjI0NiA2NC4wODcsMTAyLjIzMiA2My40NSwxMDIuMTc0IEM2My4zOTksMTAyLjE2OSA2My4zNTgsMTAyLjEzMiA2My4zNDcsMTAyLjA4MiBDNjMuMzM2LDEwMi4wMzMgNjMuMzU4LDEwMS45ODEgNjMuNDAyLDEwMS45NTYgTDE0NC41MDYsNTUuMTM0IEMxNDQuNTM3LDU1LjExNiAxNDQuNTc1LDU1LjExMyAxNDQuNjA5LDU1LjEyNyBDMTQ0LjY0Miw1NS4xNDEgMTQ0LjY2OCw1NS4xNyAxNDQuNjc3LDU1LjIwNCBDMTQ0Ljc4MSw1NS41ODUgMTQ0LjgwNiw1NS45NzIgMTQ0Ljc1MSw1Ni4zNTcgQzE0NC43MDYsNTYuNjczIDE0NC44MDgsNTYuOTk0IDE0NS4wNDcsNTcuMjgyIEMxNDUuNTUzLDU3Ljg5MiAxNDYuNjAyLDU4LjMwMyAxNDcuNzg2LDU4LjM1NSBDMTQ3Ljk2NCw1OC4zNjMgMTQ4LjE0Myw1OC4zNjMgMTQ4LjMyMSw1OC4zNTQgQzE0OC4zNzcsNTguMzUyIDE0OC40MjQsNTguMzg3IDE0OC40MzksNTguNDM4IEMxNDguNDU0LDU4LjQ5IDE0OC40MzIsNTguNTQ1IDE0OC4zODUsNTguNTcyIEw2OS4xMjksMTA0LjMzMSBDNjkuMTExLDEwNC4zNDIgNjkuMDksMTA0LjM0NyA2OS4wNywxMDQuMzQ3IEw2OS4wNywxMDQuMzQ3IFogTTY1LjY2NSwxMDEuOTc1IEM2NS43NTQsMTAxLjk3NSA2NS44NDIsMTAxLjk3NyA2NS45MywxMDEuOTgxIEM2Ny4xOTYsMTAyLjAzNyA2OC4yODMsMTAyLjQ2OSA2OC44MzgsMTAzLjEzOSBDNjkuMDY1LDEwMy40MTMgNjkuMTg4LDEwMy43MTQgNjkuMTk4LDEwNC4wMjEgTDE0Ny44ODMsNTguNTkyIEMxNDcuODQ3LDU4LjU5MiAxNDcuODExLDU4LjU5MSAxNDcuNzc2LDU4LjU4OSBDMTQ2LjUwOSw1OC41MzMgMTQ1LjQyMiw1OC4xIDE0NC44NjcsNTcuNDMxIEMxNDQuNTg1LDU3LjA5MSAxNDQuNDY1LDU2LjcwNyAxNDQuNTIsNTYuMzI0IEMxNDQuNTYzLDU2LjAyMSAxNDQuNTUyLDU1LjcxNiAxNDQuNDg4LDU1LjQxNCBMNjMuODQ2LDEwMS45NyBDNjQuMzUzLDEwMi4wMDIgNjQuODY3LDEwMi4wMDYgNjUuMzc0LDEwMS45ODIgQzY1LjQ3MSwxMDEuOTc3IDY1LjU2OCwxMDEuOTc1IDY1LjY2NSwxMDEuOTc1IEw2NS42NjUsMTAxLjk3NSBaIiBpZD0iRmlsbC01IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTIuMjA4LDU1LjEzNCBDMS4yMDcsNTMuMzA3IDEuOTY3LDUwLjkxNyAzLjkwNiw0OS43OTcgTDU5LjkxNywxNy40NTMgQzYxLjg1NiwxNi4zMzMgNjQuMjQxLDE2LjkwNyA2NS4yNDMsMTguNzM0IEw2NS40NzUsMTkuMTQ0IEM2NS44NzIsMTkuODgyIDY2LjM2OCwyMC41NiA2Ni45NDUsMjEuMTY1IEw2Ny4yMjMsMjEuNDM1IEM3MC41NDgsMjQuNjQ5IDc1LjgwNiwyNS4xNTEgODAuMTExLDIyLjY2NSBMODcuNDMsMTguNDQ1IEM4OS4zNywxNy4zMjYgOTEuNzU0LDE3Ljg5OSA5Mi43NTUsMTkuNzI3IEw5Ni4wMDUsMjUuNjU1IEwxMi40ODYsNzMuODg0IEwyLjIwOCw1NS4xMzQgWiIgaWQ9IkZpbGwtNiIgZmlsbD0iI0ZBRkFGQSI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMi40ODYsNzQuMDAxIEMxMi40NzYsNzQuMDAxIDEyLjQ2NSw3My45OTkgMTIuNDU1LDczLjk5NiBDMTIuNDI0LDczLjk4OCAxMi4zOTksNzMuOTY3IDEyLjM4NCw3My45NCBMMi4xMDYsNTUuMTkgQzEuMDc1LDUzLjMxIDEuODU3LDUwLjg0NSAzLjg0OCw0OS42OTYgTDU5Ljg1OCwxNy4zNTIgQzYwLjUyNSwxNi45NjcgNjEuMjcxLDE2Ljc2NCA2Mi4wMTYsMTYuNzY0IEM2My40MzEsMTYuNzY0IDY0LjY2NiwxNy40NjYgNjUuMzI3LDE4LjY0NiBDNjUuMzM3LDE4LjY1NCA2NS4zNDUsMTguNjYzIDY1LjM1MSwxOC42NzQgTDY1LjU3OCwxOS4wODggQzY1LjU4NCwxOS4xIDY1LjU4OSwxOS4xMTIgNjUuNTkxLDE5LjEyNiBDNjUuOTg1LDE5LjgzOCA2Ni40NjksMjAuNDk3IDY3LjAzLDIxLjA4NSBMNjcuMzA1LDIxLjM1MSBDNjkuMTUxLDIzLjEzNyA3MS42NDksMjQuMTIgNzQuMzM2LDI0LjEyIEM3Ni4zMTMsMjQuMTIgNzguMjksMjMuNTgyIDgwLjA1MywyMi41NjMgQzgwLjA2NCwyMi41NTcgODAuMDc2LDIyLjU1MyA4MC4wODgsMjIuNTUgTDg3LjM3MiwxOC4zNDQgQzg4LjAzOCwxNy45NTkgODguNzg0LDE3Ljc1NiA4OS41MjksMTcuNzU2IEM5MC45NTYsMTcuNzU2IDkyLjIwMSwxOC40NzIgOTIuODU4LDE5LjY3IEw5Ni4xMDcsMjUuNTk5IEM5Ni4xMzgsMjUuNjU0IDk2LjExOCwyNS43MjQgOTYuMDYzLDI1Ljc1NiBMMTIuNTQ1LDczLjk4NSBDMTIuNTI2LDczLjk5NiAxMi41MDYsNzQuMDAxIDEyLjQ4Niw3NC4wMDEgTDEyLjQ4Niw3NC4wMDEgWiBNNjIuMDE2LDE2Ljk5NyBDNjEuMzEyLDE2Ljk5NyA2MC42MDYsMTcuMTkgNTkuOTc1LDE3LjU1NCBMMy45NjUsNDkuODk5IEMyLjA4Myw1MC45ODUgMS4zNDEsNTMuMzA4IDIuMzEsNTUuMDc4IEwxMi41MzEsNzMuNzIzIEw5NS44NDgsMjUuNjExIEw5Mi42NTMsMTkuNzgyIEM5Mi4wMzgsMTguNjYgOTAuODcsMTcuOTkgODkuNTI5LDE3Ljk5IEM4OC44MjUsMTcuOTkgODguMTE5LDE4LjE4MiA4Ny40ODksMTguNTQ3IEw4MC4xNzIsMjIuNzcyIEM4MC4xNjEsMjIuNzc4IDgwLjE0OSwyMi43ODIgODAuMTM3LDIyLjc4NSBDNzguMzQ2LDIzLjgxMSA3Ni4zNDEsMjQuMzU0IDc0LjMzNiwyNC4zNTQgQzcxLjU4OCwyNC4zNTQgNjkuMDMzLDIzLjM0NyA2Ny4xNDIsMjEuNTE5IEw2Ni44NjQsMjEuMjQ5IEM2Ni4yNzcsMjAuNjM0IDY1Ljc3NCwxOS45NDcgNjUuMzY3LDE5LjIwMyBDNjUuMzYsMTkuMTkyIDY1LjM1NiwxOS4xNzkgNjUuMzU0LDE5LjE2NiBMNjUuMTYzLDE4LjgxOSBDNjUuMTU0LDE4LjgxMSA2NS4xNDYsMTguODAxIDY1LjE0LDE4Ljc5IEM2NC41MjUsMTcuNjY3IDYzLjM1NywxNi45OTcgNjIuMDE2LDE2Ljk5NyBMNjIuMDE2LDE2Ljk5NyBaIiBpZD0iRmlsbC03IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTQyLjQzNCw0OC44MDggTDQyLjQzNCw0OC44MDggQzM5LjkyNCw0OC44MDcgMzcuNzM3LDQ3LjU1IDM2LjU4Miw0NS40NDMgQzM0Ljc3MSw0Mi4xMzkgMzYuMTQ0LDM3LjgwOSAzOS42NDEsMzUuNzg5IEw1MS45MzIsMjguNjkxIEM1My4xMDMsMjguMDE1IDU0LjQxMywyNy42NTggNTUuNzIxLDI3LjY1OCBDNTguMjMxLDI3LjY1OCA2MC40MTgsMjguOTE2IDYxLjU3MywzMS4wMjMgQzYzLjM4NCwzNC4zMjcgNjIuMDEyLDM4LjY1NyA1OC41MTQsNDAuNjc3IEw0Ni4yMjMsNDcuNzc1IEM0NS4wNTMsNDguNDUgNDMuNzQyLDQ4LjgwOCA0Mi40MzQsNDguODA4IEw0Mi40MzQsNDguODA4IFogTTU1LjcyMSwyOC4xMjUgQzU0LjQ5NSwyOC4xMjUgNTMuMjY1LDI4LjQ2MSA1Mi4xNjYsMjkuMDk2IEwzOS44NzUsMzYuMTk0IEMzNi41OTYsMzguMDg3IDM1LjMwMiw0Mi4xMzYgMzYuOTkyLDQ1LjIxOCBDMzguMDYzLDQ3LjE3MyA0MC4wOTgsNDguMzQgNDIuNDM0LDQ4LjM0IEM0My42NjEsNDguMzQgNDQuODksNDguMDA1IDQ1Ljk5LDQ3LjM3IEw1OC4yODEsNDAuMjcyIEM2MS41NiwzOC4zNzkgNjIuODUzLDM0LjMzIDYxLjE2NCwzMS4yNDggQzYwLjA5MiwyOS4yOTMgNTguMDU4LDI4LjEyNSA1NS43MjEsMjguMTI1IEw1NS43MjEsMjguMTI1IFoiIGlkPSJGaWxsLTgiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTQ5LjU4OCwyLjQwNyBDMTQ5LjU4OCwyLjQwNyAxNTUuNzY4LDUuOTc1IDE1Ni4zMjUsNi4yOTcgTDE1Ni4zMjUsNy4xODQgQzE1Ni4zMjUsNy4zNiAxNTYuMzM4LDcuNTQ0IDE1Ni4zNjIsNy43MzMgQzE1Ni4zNzMsNy44MTQgMTU2LjM4Miw3Ljg5NCAxNTYuMzksNy45NzUgQzE1Ni41Myw5LjM5IDE1Ny4zNjMsMTAuOTczIDE1OC40OTUsMTEuOTc0IEwxNjUuODkxLDE4LjUxOSBDMTY2LjA2OCwxOC42NzUgMTY2LjI0OSwxOC44MTQgMTY2LjQzMiwxOC45MzQgQzE2OC4wMTEsMTkuOTc0IDE2OS4zODIsMTkuNCAxNjkuNDk0LDE3LjY1MiBDMTY5LjU0MywxNi44NjggMTY5LjU1MSwxNi4wNTcgMTY5LjUxNywxNS4yMjMgTDE2OS41MTQsMTUuMDYzIEwxNjkuNTE0LDEzLjkxMiBDMTcwLjc4LDE0LjY0MiAxOTUuNTAxLDI4LjkxNSAxOTUuNTAxLDI4LjkxNSBMMTk1LjUwMSw4Mi45MTUgQzE5NS41MDEsODQuMDA1IDE5NC43MzEsODQuNDQ1IDE5My43ODEsODMuODk3IEwxNTEuMzA4LDU5LjM3NCBDMTUwLjM1OCw1OC44MjYgMTQ5LjU4OCw1Ny40OTcgMTQ5LjU4OCw1Ni40MDggTDE0OS41ODgsMjIuMzc1IiBpZD0iRmlsbC05IiBmaWxsPSIjRkFGQUZBIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE5NC41NTMsODQuMjUgQzE5NC4yOTYsODQuMjUgMTk0LjAxMyw4NC4xNjUgMTkzLjcyMiw4My45OTcgTDE1MS4yNSw1OS40NzYgQzE1MC4yNjksNTguOTA5IDE0OS40NzEsNTcuNTMzIDE0OS40NzEsNTYuNDA4IEwxNDkuNDcxLDIyLjM3NSBMMTQ5LjcwNSwyMi4zNzUgTDE0OS43MDUsNTYuNDA4IEMxNDkuNzA1LDU3LjQ1OSAxNTAuNDUsNTguNzQ0IDE1MS4zNjYsNTkuMjc0IEwxOTMuODM5LDgzLjc5NSBDMTk0LjI2Myw4NC4wNCAxOTQuNjU1LDg0LjA4MyAxOTQuOTQyLDgzLjkxNyBDMTk1LjIyNyw4My43NTMgMTk1LjM4NCw4My4zOTcgMTk1LjM4NCw4Mi45MTUgTDE5NS4zODQsMjguOTgyIEMxOTQuMTAyLDI4LjI0MiAxNzIuMTA0LDE1LjU0MiAxNjkuNjMxLDE0LjExNCBMMTY5LjYzNCwxNS4yMiBDMTY5LjY2OCwxNi4wNTIgMTY5LjY2LDE2Ljg3NCAxNjkuNjEsMTcuNjU5IEMxNjkuNTU2LDE4LjUwMyAxNjkuMjE0LDE5LjEyMyAxNjguNjQ3LDE5LjQwNSBDMTY4LjAyOCwxOS43MTQgMTY3LjE5NywxOS41NzggMTY2LjM2NywxOS4wMzIgQzE2Ni4xODEsMTguOTA5IDE2NS45OTUsMTguNzY2IDE2NS44MTQsMTguNjA2IEwxNTguNDE3LDEyLjA2MiBDMTU3LjI1OSwxMS4wMzYgMTU2LjQxOCw5LjQzNyAxNTYuMjc0LDcuOTg2IEMxNTYuMjY2LDcuOTA3IDE1Ni4yNTcsNy44MjcgMTU2LjI0Nyw3Ljc0OCBDMTU2LjIyMSw3LjU1NSAxNTYuMjA5LDcuMzY1IDE1Ni4yMDksNy4xODQgTDE1Ni4yMDksNi4zNjQgQzE1NS4zNzUsNS44ODMgMTQ5LjUyOSwyLjUwOCAxNDkuNTI5LDIuNTA4IEwxNDkuNjQ2LDIuMzA2IEMxNDkuNjQ2LDIuMzA2IDE1NS44MjcsNS44NzQgMTU2LjM4NCw2LjE5NiBMMTU2LjQ0Miw2LjIzIEwxNTYuNDQyLDcuMTg0IEMxNTYuNDQyLDcuMzU1IDE1Ni40NTQsNy41MzUgMTU2LjQ3OCw3LjcxNyBDMTU2LjQ4OSw3LjggMTU2LjQ5OSw3Ljg4MiAxNTYuNTA3LDcuOTYzIEMxNTYuNjQ1LDkuMzU4IDE1Ny40NTUsMTAuODk4IDE1OC41NzIsMTEuODg2IEwxNjUuOTY5LDE4LjQzMSBDMTY2LjE0MiwxOC41ODQgMTY2LjMxOSwxOC43MiAxNjYuNDk2LDE4LjgzNyBDMTY3LjI1NCwxOS4zMzYgMTY4LDE5LjQ2NyAxNjguNTQzLDE5LjE5NiBDMTY5LjAzMywxOC45NTMgMTY5LjMyOSwxOC40MDEgMTY5LjM3NywxNy42NDUgQzE2OS40MjcsMTYuODY3IDE2OS40MzQsMTYuMDU0IDE2OS40MDEsMTUuMjI4IEwxNjkuMzk3LDE1LjA2NSBMMTY5LjM5NywxMy43MSBMMTY5LjU3MiwxMy44MSBDMTcwLjgzOSwxNC41NDEgMTk1LjU1OSwyOC44MTQgMTk1LjU1OSwyOC44MTQgTDE5NS42MTgsMjguODQ3IEwxOTUuNjE4LDgyLjkxNSBDMTk1LjYxOCw4My40ODQgMTk1LjQyLDgzLjkxMSAxOTUuMDU5LDg0LjExOSBDMTk0LjkwOCw4NC4yMDYgMTk0LjczNyw4NC4yNSAxOTQuNTUzLDg0LjI1IiBpZD0iRmlsbC0xMCIgZmlsbD0iIzYwN0Q4QiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNDUuNjg1LDU2LjE2MSBMMTY5LjgsNzAuMDgzIEwxNDMuODIyLDg1LjA4MSBMMTQyLjM2LDg0Ljc3NCBDMTM1LjgyNiw4Mi42MDQgMTI4LjczMiw4MS4wNDYgMTIxLjM0MSw4MC4xNTggQzExNi45NzYsNzkuNjM0IDExMi42NzgsODEuMjU0IDExMS43NDMsODMuNzc4IEMxMTEuNTA2LDg0LjQxNCAxMTEuNTAzLDg1LjA3MSAxMTEuNzMyLDg1LjcwNiBDMTEzLjI3LDg5Ljk3MyAxMTUuOTY4LDk0LjA2OSAxMTkuNzI3LDk3Ljg0MSBMMTIwLjI1OSw5OC42ODYgQzEyMC4yNiw5OC42ODUgOTQuMjgyLDExMy42ODMgOTQuMjgyLDExMy42ODMgTDcwLjE2Nyw5OS43NjEgTDE0NS42ODUsNTYuMTYxIiBpZD0iRmlsbC0xMSIgZmlsbD0iI0ZGRkZGRiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik05NC4yODIsMTEzLjgxOCBMOTQuMjIzLDExMy43ODUgTDY5LjkzMyw5OS43NjEgTDcwLjEwOCw5OS42NiBMMTQ1LjY4NSw1Ni4wMjYgTDE0NS43NDMsNTYuMDU5IEwxNzAuMDMzLDcwLjA4MyBMMTQzLjg0Miw4NS4yMDUgTDE0My43OTcsODUuMTk1IEMxNDMuNzcyLDg1LjE5IDE0Mi4zMzYsODQuODg4IDE0Mi4zMzYsODQuODg4IEMxMzUuNzg3LDgyLjcxNCAxMjguNzIzLDgxLjE2MyAxMjEuMzI3LDgwLjI3NCBDMTIwLjc4OCw4MC4yMDkgMTIwLjIzNiw4MC4xNzcgMTE5LjY4OSw4MC4xNzcgQzExNS45MzEsODAuMTc3IDExMi42MzUsODEuNzA4IDExMS44NTIsODMuODE5IEMxMTEuNjI0LDg0LjQzMiAxMTEuNjIxLDg1LjA1MyAxMTEuODQyLDg1LjY2NyBDMTEzLjM3Nyw4OS45MjUgMTE2LjA1OCw5My45OTMgMTE5LjgxLDk3Ljc1OCBMMTE5LjgyNiw5Ny43NzkgTDEyMC4zNTIsOTguNjE0IEMxMjAuMzU0LDk4LjYxNyAxMjAuMzU2LDk4LjYyIDEyMC4zNTgsOTguNjI0IEwxMjAuNDIyLDk4LjcyNiBMMTIwLjMxNyw5OC43ODcgQzEyMC4yNjQsOTguODE4IDk0LjU5OSwxMTMuNjM1IDk0LjM0LDExMy43ODUgTDk0LjI4MiwxMTMuODE4IEw5NC4yODIsMTEzLjgxOCBaIE03MC40MDEsOTkuNzYxIEw5NC4yODIsMTEzLjU0OSBMMTE5LjA4NCw5OS4yMjkgQzExOS42Myw5OC45MTQgMTE5LjkzLDk4Ljc0IDEyMC4xMDEsOTguNjU0IEwxMTkuNjM1LDk3LjkxNCBDMTE1Ljg2NCw5NC4xMjcgMTEzLjE2OCw5MC4wMzMgMTExLjYyMiw4NS43NDYgQzExMS4zODIsODUuMDc5IDExMS4zODYsODQuNDA0IDExMS42MzMsODMuNzM4IEMxMTIuNDQ4LDgxLjUzOSAxMTUuODM2LDc5Ljk0MyAxMTkuNjg5LDc5Ljk0MyBDMTIwLjI0Niw3OS45NDMgMTIwLjgwNiw3OS45NzYgMTIxLjM1NSw4MC4wNDIgQzEyOC43NjcsODAuOTMzIDEzNS44NDYsODIuNDg3IDE0Mi4zOTYsODQuNjYzIEMxNDMuMjMyLDg0LjgzOCAxNDMuNjExLDg0LjkxNyAxNDMuNzg2LDg0Ljk2NyBMMTY5LjU2Niw3MC4wODMgTDE0NS42ODUsNTYuMjk1IEw3MC40MDEsOTkuNzYxIEw3MC40MDEsOTkuNzYxIFoiIGlkPSJGaWxsLTEyIiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE2Ny4yMywxOC45NzkgTDE2Ny4yMyw2OS44NSBMMTM5LjkwOSw4NS42MjMgTDEzMy40NDgsNzEuNDU2IEMxMzIuNTM4LDY5LjQ2IDEzMC4wMiw2OS43MTggMTI3LjgyNCw3Mi4wMyBDMTI2Ljc2OSw3My4xNCAxMjUuOTMxLDc0LjU4NSAxMjUuNDk0LDc2LjA0OCBMMTE5LjAzNCw5Ny42NzYgTDkxLjcxMiwxMTMuNDUgTDkxLjcxMiw2Mi41NzkgTDE2Ny4yMywxOC45NzkiIGlkPSJGaWxsLTEzIiBmaWxsPSIjRkZGRkZGIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTkxLjcxMiwxMTMuNTY3IEM5MS42OTIsMTEzLjU2NyA5MS42NzIsMTEzLjU2MSA5MS42NTMsMTEzLjU1MSBDOTEuNjE4LDExMy41MyA5MS41OTUsMTEzLjQ5MiA5MS41OTUsMTEzLjQ1IEw5MS41OTUsNjIuNTc5IEM5MS41OTUsNjIuNTM3IDkxLjYxOCw2Mi40OTkgOTEuNjUzLDYyLjQ3OCBMMTY3LjE3MiwxOC44NzggQzE2Ny4yMDgsMTguODU3IDE2Ny4yNTIsMTguODU3IDE2Ny4yODgsMTguODc4IEMxNjcuMzI0LDE4Ljg5OSAxNjcuMzQ3LDE4LjkzNyAxNjcuMzQ3LDE4Ljk3OSBMMTY3LjM0Nyw2OS44NSBDMTY3LjM0Nyw2OS44OTEgMTY3LjMyNCw2OS45MyAxNjcuMjg4LDY5Ljk1IEwxMzkuOTY3LDg1LjcyNSBDMTM5LjkzOSw4NS43NDEgMTM5LjkwNSw4NS43NDUgMTM5Ljg3Myw4NS43MzUgQzEzOS44NDIsODUuNzI1IDEzOS44MTYsODUuNzAyIDEzOS44MDIsODUuNjcyIEwxMzMuMzQyLDcxLjUwNCBDMTMyLjk2Nyw3MC42ODIgMTMyLjI4LDcwLjIyOSAxMzEuNDA4LDcwLjIyOSBDMTMwLjMxOSw3MC4yMjkgMTI5LjA0NCw3MC45MTUgMTI3LjkwOCw3Mi4xMSBDMTI2Ljg3NCw3My4yIDEyNi4wMzQsNzQuNjQ3IDEyNS42MDYsNzYuMDgyIEwxMTkuMTQ2LDk3LjcwOSBDMTE5LjEzNyw5Ny43MzggMTE5LjExOCw5Ny43NjIgMTE5LjA5Miw5Ny43NzcgTDkxLjc3LDExMy41NTEgQzkxLjc1MiwxMTMuNTYxIDkxLjczMiwxMTMuNTY3IDkxLjcxMiwxMTMuNTY3IEw5MS43MTIsMTEzLjU2NyBaIE05MS44MjksNjIuNjQ3IEw5MS44MjksMTEzLjI0OCBMMTE4LjkzNSw5Ny41OTggTDEyNS4zODIsNzYuMDE1IEMxMjUuODI3LDc0LjUyNSAxMjYuNjY0LDczLjA4MSAxMjcuNzM5LDcxLjk1IEMxMjguOTE5LDcwLjcwOCAxMzAuMjU2LDY5Ljk5NiAxMzEuNDA4LDY5Ljk5NiBDMTMyLjM3Nyw2OS45OTYgMTMzLjEzOSw3MC40OTcgMTMzLjU1NCw3MS40MDcgTDEzOS45NjEsODUuNDU4IEwxNjcuMTEzLDY5Ljc4MiBMMTY3LjExMywxOS4xODEgTDkxLjgyOSw2Mi42NDcgTDkxLjgyOSw2Mi42NDcgWiIgaWQ9IkZpbGwtMTQiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTY4LjU0MywxOS4yMTMgTDE2OC41NDMsNzAuMDgzIEwxNDEuMjIxLDg1Ljg1NyBMMTM0Ljc2MSw3MS42ODkgQzEzMy44NTEsNjkuNjk0IDEzMS4zMzMsNjkuOTUxIDEyOS4xMzcsNzIuMjYzIEMxMjguMDgyLDczLjM3NCAxMjcuMjQ0LDc0LjgxOSAxMjYuODA3LDc2LjI4MiBMMTIwLjM0Niw5Ny45MDkgTDkzLjAyNSwxMTMuNjgzIEw5My4wMjUsNjIuODEzIEwxNjguNTQzLDE5LjIxMyIgaWQ9IkZpbGwtMTUiIGZpbGw9IiNGRkZGRkYiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNOTMuMDI1LDExMy44IEM5My4wMDUsMTEzLjggOTIuOTg0LDExMy43OTUgOTIuOTY2LDExMy43ODUgQzkyLjkzMSwxMTMuNzY0IDkyLjkwOCwxMTMuNzI1IDkyLjkwOCwxMTMuNjg0IEw5Mi45MDgsNjIuODEzIEM5Mi45MDgsNjIuNzcxIDkyLjkzMSw2Mi43MzMgOTIuOTY2LDYyLjcxMiBMMTY4LjQ4NCwxOS4xMTIgQzE2OC41MiwxOS4wOSAxNjguNTY1LDE5LjA5IDE2OC42MDEsMTkuMTEyIEMxNjguNjM3LDE5LjEzMiAxNjguNjYsMTkuMTcxIDE2OC42NiwxOS4yMTIgTDE2OC42Niw3MC4wODMgQzE2OC42Niw3MC4xMjUgMTY4LjYzNyw3MC4xNjQgMTY4LjYwMSw3MC4xODQgTDE0MS4yOCw4NS45NTggQzE0MS4yNTEsODUuOTc1IDE0MS4yMTcsODUuOTc5IDE0MS4xODYsODUuOTY4IEMxNDEuMTU0LDg1Ljk1OCAxNDEuMTI5LDg1LjkzNiAxNDEuMTE1LDg1LjkwNiBMMTM0LjY1NSw3MS43MzggQzEzNC4yOCw3MC45MTUgMTMzLjU5Myw3MC40NjMgMTMyLjcyLDcwLjQ2MyBDMTMxLjYzMiw3MC40NjMgMTMwLjM1Nyw3MS4xNDggMTI5LjIyMSw3Mi4zNDQgQzEyOC4xODYsNzMuNDMzIDEyNy4zNDcsNzQuODgxIDEyNi45MTksNzYuMzE1IEwxMjAuNDU4LDk3Ljk0MyBDMTIwLjQ1LDk3Ljk3MiAxMjAuNDMxLDk3Ljk5NiAxMjAuNDA1LDk4LjAxIEw5My4wODMsMTEzLjc4NSBDOTMuMDY1LDExMy43OTUgOTMuMDQ1LDExMy44IDkzLjAyNSwxMTMuOCBMOTMuMDI1LDExMy44IFogTTkzLjE0Miw2Mi44ODEgTDkzLjE0MiwxMTMuNDgxIEwxMjAuMjQ4LDk3LjgzMiBMMTI2LjY5NSw3Ni4yNDggQzEyNy4xNCw3NC43NTggMTI3Ljk3Nyw3My4zMTUgMTI5LjA1Miw3Mi4xODMgQzEzMC4yMzEsNzAuOTQyIDEzMS41NjgsNzAuMjI5IDEzMi43Miw3MC4yMjkgQzEzMy42ODksNzAuMjI5IDEzNC40NTIsNzAuNzMxIDEzNC44NjcsNzEuNjQxIEwxNDEuMjc0LDg1LjY5MiBMMTY4LjQyNiw3MC4wMTYgTDE2OC40MjYsMTkuNDE1IEw5My4xNDIsNjIuODgxIEw5My4xNDIsNjIuODgxIFoiIGlkPSJGaWxsLTE2IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE2OS44LDcwLjA4MyBMMTQyLjQ3OCw4NS44NTcgTDEzNi4wMTgsNzEuNjg5IEMxMzUuMTA4LDY5LjY5NCAxMzIuNTksNjkuOTUxIDEzMC4zOTMsNzIuMjYzIEMxMjkuMzM5LDczLjM3NCAxMjguNSw3NC44MTkgMTI4LjA2NCw3Ni4yODIgTDEyMS42MDMsOTcuOTA5IEw5NC4yODIsMTEzLjY4MyBMOTQuMjgyLDYyLjgxMyBMMTY5LjgsMTkuMjEzIEwxNjkuOCw3MC4wODMgWiIgaWQ9IkZpbGwtMTciIGZpbGw9IiNGQUZBRkEiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNOTQuMjgyLDExMy45MTcgQzk0LjI0MSwxMTMuOTE3IDk0LjIwMSwxMTMuOTA3IDk0LjE2NSwxMTMuODg2IEM5NC4wOTMsMTEzLjg0NSA5NC4wNDgsMTEzLjc2NyA5NC4wNDgsMTEzLjY4NCBMOTQuMDQ4LDYyLjgxMyBDOTQuMDQ4LDYyLjczIDk0LjA5Myw2Mi42NTIgOTQuMTY1LDYyLjYxMSBMMTY5LjY4MywxOS4wMSBDMTY5Ljc1NSwxOC45NjkgMTY5Ljg0NCwxOC45NjkgMTY5LjkxNywxOS4wMSBDMTY5Ljk4OSwxOS4wNTIgMTcwLjAzMywxOS4xMjkgMTcwLjAzMywxOS4yMTIgTDE3MC4wMzMsNzAuMDgzIEMxNzAuMDMzLDcwLjE2NiAxNjkuOTg5LDcwLjI0NCAxNjkuOTE3LDcwLjI4NSBMMTQyLjU5NSw4Ni4wNiBDMTQyLjUzOCw4Ni4wOTIgMTQyLjQ2OSw4Ni4xIDE0Mi40MDcsODYuMDggQzE0Mi4zNDQsODYuMDYgMTQyLjI5Myw4Ni4wMTQgMTQyLjI2Niw4NS45NTQgTDEzNS44MDUsNzEuNzg2IEMxMzUuNDQ1LDcwLjk5NyAxMzQuODEzLDcwLjU4IDEzMy45NzcsNzAuNTggQzEzMi45MjEsNzAuNTggMTMxLjY3Niw3MS4yNTIgMTMwLjU2Miw3Mi40MjQgQzEyOS41NCw3My41MDEgMTI4LjcxMSw3NC45MzEgMTI4LjI4Nyw3Ni4zNDggTDEyMS44MjcsOTcuOTc2IEMxMjEuODEsOTguMDM0IDEyMS43NzEsOTguMDgyIDEyMS43Miw5OC4xMTIgTDk0LjM5OCwxMTMuODg2IEM5NC4zNjIsMTEzLjkwNyA5NC4zMjIsMTEzLjkxNyA5NC4yODIsMTEzLjkxNyBMOTQuMjgyLDExMy45MTcgWiBNOTQuNTE1LDYyLjk0OCBMOTQuNTE1LDExMy4yNzkgTDEyMS40MDYsOTcuNzU0IEwxMjcuODQsNzYuMjE1IEMxMjguMjksNzQuNzA4IDEyOS4xMzcsNzMuMjQ3IDEzMC4yMjQsNzIuMTAzIEMxMzEuNDI1LDcwLjgzOCAxMzIuNzkzLDcwLjExMiAxMzMuOTc3LDcwLjExMiBDMTM0Ljk5NSw3MC4xMTIgMTM1Ljc5NSw3MC42MzggMTM2LjIzLDcxLjU5MiBMMTQyLjU4NCw4NS41MjYgTDE2OS41NjYsNjkuOTQ4IEwxNjkuNTY2LDE5LjYxNyBMOTQuNTE1LDYyLjk0OCBMOTQuNTE1LDYyLjk0OCBaIiBpZD0iRmlsbC0xOCIgZmlsbD0iIzYwN0Q4QiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMDkuODk0LDkyLjk0MyBMMTA5Ljg5NCw5Mi45NDMgQzEwOC4xMiw5Mi45NDMgMTA2LjY1Myw5Mi4yMTggMTA1LjY1LDkwLjgyMyBDMTA1LjU4Myw5MC43MzEgMTA1LjU5Myw5MC42MSAxMDUuNjczLDkwLjUyOSBDMTA1Ljc1Myw5MC40NDggMTA1Ljg4LDkwLjQ0IDEwNS45NzQsOTAuNTA2IEMxMDYuNzU0LDkxLjA1MyAxMDcuNjc5LDkxLjMzMyAxMDguNzI0LDkxLjMzMyBDMTEwLjA0Nyw5MS4zMzMgMTExLjQ3OCw5MC44OTQgMTEyLjk4LDkwLjAyNyBDMTE4LjI5MSw4Ni45NiAxMjIuNjExLDc5LjUwOSAxMjIuNjExLDczLjQxNiBDMTIyLjYxMSw3MS40ODkgMTIyLjE2OSw2OS44NTYgMTIxLjMzMyw2OC42OTIgQzEyMS4yNjYsNjguNiAxMjEuMjc2LDY4LjQ3MyAxMjEuMzU2LDY4LjM5MiBDMTIxLjQzNiw2OC4zMTEgMTIxLjU2Myw2OC4yOTkgMTIxLjY1Niw2OC4zNjUgQzEyMy4zMjcsNjkuNTM3IDEyNC4yNDcsNzEuNzQ2IDEyNC4yNDcsNzQuNTg0IEMxMjQuMjQ3LDgwLjgyNiAxMTkuODIxLDg4LjQ0NyAxMTQuMzgyLDkxLjU4NyBDMTEyLjgwOCw5Mi40OTUgMTExLjI5OCw5Mi45NDMgMTA5Ljg5NCw5Mi45NDMgTDEwOS44OTQsOTIuOTQzIFogTTEwNi45MjUsOTEuNDAxIEMxMDcuNzM4LDkyLjA1MiAxMDguNzQ1LDkyLjI3OCAxMDkuODkzLDkyLjI3OCBMMTA5Ljg5NCw5Mi4yNzggQzExMS4yMTUsOTIuMjc4IDExMi42NDcsOTEuOTUxIDExNC4xNDgsOTEuMDg0IEMxMTkuNDU5LDg4LjAxNyAxMjMuNzgsODAuNjIxIDEyMy43OCw3NC41MjggQzEyMy43OCw3Mi41NDkgMTIzLjMxNyw3MC45MjkgMTIyLjQ1NCw2OS43NjcgQzEyMi44NjUsNzAuODAyIDEyMy4wNzksNzIuMDQyIDEyMy4wNzksNzMuNDAyIEMxMjMuMDc5LDc5LjY0NSAxMTguNjUzLDg3LjI4NSAxMTMuMjE0LDkwLjQyNSBDMTExLjY0LDkxLjMzNCAxMTAuMTMsOTEuNzQyIDEwOC43MjQsOTEuNzQyIEMxMDguMDgzLDkxLjc0MiAxMDcuNDgxLDkxLjU5MyAxMDYuOTI1LDkxLjQwMSBMMTA2LjkyNSw5MS40MDEgWiIgaWQ9IkZpbGwtMTkiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTEzLjA5Nyw5MC4yMyBDMTE4LjQ4MSw4Ny4xMjIgMTIyLjg0NSw3OS41OTQgMTIyLjg0NSw3My40MTYgQzEyMi44NDUsNzEuMzY1IDEyMi4zNjIsNjkuNzI0IDEyMS41MjIsNjguNTU2IEMxMTkuNzM4LDY3LjMwNCAxMTcuMTQ4LDY3LjM2MiAxMTQuMjY1LDY5LjAyNiBDMTA4Ljg4MSw3Mi4xMzQgMTA0LjUxNyw3OS42NjIgMTA0LjUxNyw4NS44NCBDMTA0LjUxNyw4Ny44OTEgMTA1LDg5LjUzMiAxMDUuODQsOTAuNyBDMTA3LjYyNCw5MS45NTIgMTEwLjIxNCw5MS44OTQgMTEzLjA5Nyw5MC4yMyIgaWQ9IkZpbGwtMjAiIGZpbGw9IiNGQUZBRkEiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTA4LjcyNCw5MS42MTQgTDEwOC43MjQsOTEuNjE0IEMxMDcuNTgyLDkxLjYxNCAxMDYuNTY2LDkxLjQwMSAxMDUuNzA1LDkwLjc5NyBDMTA1LjY4NCw5MC43ODMgMTA1LjY2NSw5MC44MTEgMTA1LjY1LDkwLjc5IEMxMDQuNzU2LDg5LjU0NiAxMDQuMjgzLDg3Ljg0MiAxMDQuMjgzLDg1LjgxNyBDMTA0LjI4Myw3OS41NzUgMTA4LjcwOSw3MS45NTMgMTE0LjE0OCw2OC44MTIgQzExNS43MjIsNjcuOTA0IDExNy4yMzIsNjcuNDQ5IDExOC42MzgsNjcuNDQ5IEMxMTkuNzgsNjcuNDQ5IDEyMC43OTYsNjcuNzU4IDEyMS42NTYsNjguMzYyIEMxMjEuNjc4LDY4LjM3NyAxMjEuNjk3LDY4LjM5NyAxMjEuNzEyLDY4LjQxOCBDMTIyLjYwNiw2OS42NjIgMTIzLjA3OSw3MS4zOSAxMjMuMDc5LDczLjQxNSBDMTIzLjA3OSw3OS42NTggMTE4LjY1Myw4Ny4xOTggMTEzLjIxNCw5MC4zMzggQzExMS42NCw5MS4yNDcgMTEwLjEzLDkxLjYxNCAxMDguNzI0LDkxLjYxNCBMMTA4LjcyNCw5MS42MTQgWiBNMTA2LjAwNiw5MC41MDUgQzEwNi43OCw5MS4wMzcgMTA3LjY5NCw5MS4yODEgMTA4LjcyNCw5MS4yODEgQzExMC4wNDcsOTEuMjgxIDExMS40NzgsOTAuODY4IDExMi45OCw5MC4wMDEgQzExOC4yOTEsODYuOTM1IDEyMi42MTEsNzkuNDk2IDEyMi42MTEsNzMuNDAzIEMxMjIuNjExLDcxLjQ5NCAxMjIuMTc3LDY5Ljg4IDEyMS4zNTYsNjguNzE4IEMxMjAuNTgyLDY4LjE4NSAxMTkuNjY4LDY3LjkxOSAxMTguNjM4LDY3LjkxOSBDMTE3LjMxNSw2Ny45MTkgMTE1Ljg4Myw2OC4zNiAxMTQuMzgyLDY5LjIyNyBDMTA5LjA3MSw3Mi4yOTMgMTA0Ljc1MSw3OS43MzMgMTA0Ljc1MSw4NS44MjYgQzEwNC43NTEsODcuNzM1IDEwNS4xODUsODkuMzQzIDEwNi4wMDYsOTAuNTA1IEwxMDYuMDA2LDkwLjUwNSBaIiBpZD0iRmlsbC0yMSIgZmlsbD0iIzYwN0Q4QiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNDkuMzE4LDcuMjYyIEwxMzkuMzM0LDE2LjE0IEwxNTUuMjI3LDI3LjE3MSBMMTYwLjgxNiwyMS4wNTkgTDE0OS4zMTgsNy4yNjIiIGlkPSJGaWxsLTIyIiBmaWxsPSIjRkFGQUZBIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE2OS42NzYsMTMuODQgTDE1OS45MjgsMTkuNDY3IEMxNTYuMjg2LDIxLjU3IDE1MC40LDIxLjU4IDE0Ni43ODEsMTkuNDkxIEMxNDMuMTYxLDE3LjQwMiAxNDMuMTgsMTQuMDAzIDE0Ni44MjIsMTEuOSBMMTU2LjMxNyw2LjI5MiBMMTQ5LjU4OCwyLjQwNyBMNjcuNzUyLDQ5LjQ3OCBMMTEzLjY3NSw3NS45OTIgTDExNi43NTYsNzQuMjEzIEMxMTcuMzg3LDczLjg0OCAxMTcuNjI1LDczLjMxNSAxMTcuMzc0LDcyLjgyMyBDMTE1LjAxNyw2OC4xOTEgMTE0Ljc4MSw2My4yNzcgMTE2LjY5MSw1OC41NjEgQzEyMi4zMjksNDQuNjQxIDE0MS4yLDMzLjc0NiAxNjUuMzA5LDMwLjQ5MSBDMTczLjQ3OCwyOS4zODggMTgxLjk4OSwyOS41MjQgMTkwLjAxMywzMC44ODUgQzE5MC44NjUsMzEuMDMgMTkxLjc4OSwzMC44OTMgMTkyLjQyLDMwLjUyOCBMMTk1LjUwMSwyOC43NSBMMTY5LjY3NiwxMy44NCIgaWQ9IkZpbGwtMjMiIGZpbGw9IiNGQUZBRkEiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTEzLjY3NSw3Ni40NTkgQzExMy41OTQsNzYuNDU5IDExMy41MTQsNzYuNDM4IDExMy40NDIsNzYuMzk3IEw2Ny41MTgsNDkuODgyIEM2Ny4zNzQsNDkuNzk5IDY3LjI4NCw0OS42NDUgNjcuMjg1LDQ5LjQ3OCBDNjcuMjg1LDQ5LjMxMSA2Ny4zNzQsNDkuMTU3IDY3LjUxOSw0OS4wNzMgTDE0OS4zNTUsMi4wMDIgQzE0OS40OTksMS45MTkgMTQ5LjY3NywxLjkxOSAxNDkuODIxLDIuMDAyIEwxNTYuNTUsNS44ODcgQzE1Ni43NzQsNi4wMTcgMTU2Ljg1LDYuMzAyIDE1Ni43MjIsNi41MjYgQzE1Ni41OTIsNi43NDkgMTU2LjMwNyw2LjgyNiAxNTYuMDgzLDYuNjk2IEwxNDkuNTg3LDIuOTQ2IEw2OC42ODcsNDkuNDc5IEwxMTMuNjc1LDc1LjQ1MiBMMTE2LjUyMyw3My44MDggQzExNi43MTUsNzMuNjk3IDExNy4xNDMsNzMuMzk5IDExNi45NTgsNzMuMDM1IEMxMTQuNTQyLDY4LjI4NyAxMTQuMyw2My4yMjEgMTE2LjI1OCw1OC4zODUgQzExOS4wNjQsNTEuNDU4IDEyNS4xNDMsNDUuMTQzIDEzMy44NCw0MC4xMjIgQzE0Mi40OTcsMzUuMTI0IDE1My4zNTgsMzEuNjMzIDE2NS4yNDcsMzAuMDI4IEMxNzMuNDQ1LDI4LjkyMSAxODIuMDM3LDI5LjA1OCAxOTAuMDkxLDMwLjQyNSBDMTkwLjgzLDMwLjU1IDE5MS42NTIsMzAuNDMyIDE5Mi4xODYsMzAuMTI0IEwxOTQuNTY3LDI4Ljc1IEwxNjkuNDQyLDE0LjI0NCBDMTY5LjIxOSwxNC4xMTUgMTY5LjE0MiwxMy44MjkgMTY5LjI3MSwxMy42MDYgQzE2OS40LDEzLjM4MiAxNjkuNjg1LDEzLjMwNiAxNjkuOTA5LDEzLjQzNSBMMTk1LjczNCwyOC4zNDUgQzE5NS44NzksMjguNDI4IDE5NS45NjgsMjguNTgzIDE5NS45NjgsMjguNzUgQzE5NS45NjgsMjguOTE2IDE5NS44NzksMjkuMDcxIDE5NS43MzQsMjkuMTU0IEwxOTIuNjUzLDMwLjkzMyBDMTkxLjkzMiwzMS4zNSAxOTAuODksMzEuNTA4IDE4OS45MzUsMzEuMzQ2IEMxODEuOTcyLDI5Ljk5NSAxNzMuNDc4LDI5Ljg2IDE2NS4zNzIsMzAuOTU0IEMxNTMuNjAyLDMyLjU0MyAxNDIuODYsMzUuOTkzIDEzNC4zMDcsNDAuOTMxIEMxMjUuNzkzLDQ1Ljg0NyAxMTkuODUxLDUyLjAwNCAxMTcuMTI0LDU4LjczNiBDMTE1LjI3LDYzLjMxNCAxMTUuNTAxLDY4LjExMiAxMTcuNzksNzIuNjExIEMxMTguMTYsNzMuMzM2IDExNy44NDUsNzQuMTI0IDExNi45OSw3NC42MTcgTDExMy45MDksNzYuMzk3IEMxMTMuODM2LDc2LjQzOCAxMTMuNzU2LDc2LjQ1OSAxMTMuNjc1LDc2LjQ1OSIgaWQ9IkZpbGwtMjQiIGZpbGw9IiM0NTVBNjQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTUzLjMxNiwyMS4yNzkgQzE1MC45MDMsMjEuMjc5IDE0OC40OTUsMjAuNzUxIDE0Ni42NjQsMTkuNjkzIEMxNDQuODQ2LDE4LjY0NCAxNDMuODQ0LDE3LjIzMiAxNDMuODQ0LDE1LjcxOCBDMTQzLjg0NCwxNC4xOTEgMTQ0Ljg2LDEyLjc2MyAxNDYuNzA1LDExLjY5OCBMMTU2LjE5OCw2LjA5MSBDMTU2LjMwOSw2LjAyNSAxNTYuNDUyLDYuMDYyIDE1Ni41MTgsNi4xNzMgQzE1Ni41ODMsNi4yODQgMTU2LjU0Nyw2LjQyNyAxNTYuNDM2LDYuNDkzIEwxNDYuOTQsMTIuMTAyIEMxNDUuMjQ0LDEzLjA4MSAxNDQuMzEyLDE0LjM2NSAxNDQuMzEyLDE1LjcxOCBDMTQ0LjMxMiwxNy4wNTggMTQ1LjIzLDE4LjMyNiAxNDYuODk3LDE5LjI4OSBDMTUwLjQ0NiwyMS4zMzggMTU2LjI0LDIxLjMyNyAxNTkuODExLDE5LjI2NSBMMTY5LjU1OSwxMy42MzcgQzE2OS42NywxMy41NzMgMTY5LjgxMywxMy42MTEgMTY5Ljg3OCwxMy43MjMgQzE2OS45NDMsMTMuODM0IDE2OS45MDQsMTMuOTc3IDE2OS43OTMsMTQuMDQyIEwxNjAuMDQ1LDE5LjY3IEMxNTguMTg3LDIwLjc0MiAxNTUuNzQ5LDIxLjI3OSAxNTMuMzE2LDIxLjI3OSIgaWQ9IkZpbGwtMjUiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTEzLjY3NSw3NS45OTIgTDY3Ljc2Miw0OS40ODQiIGlkPSJGaWxsLTI2IiBmaWxsPSIjNDU1QTY0Ij48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTExMy42NzUsNzYuMzQyIEMxMTMuNjE1LDc2LjM0MiAxMTMuNTU1LDc2LjMyNyAxMTMuNSw3Ni4yOTUgTDY3LjU4Nyw0OS43ODcgQzY3LjQxOSw0OS42OSA2Ny4zNjIsNDkuNDc2IDY3LjQ1OSw0OS4zMDkgQzY3LjU1Niw0OS4xNDEgNjcuNzcsNDkuMDgzIDY3LjkzNyw0OS4xOCBMMTEzLjg1LDc1LjY4OCBDMTE0LjAxOCw3NS43ODUgMTE0LjA3NSw3NiAxMTMuOTc4LDc2LjE2NyBDMTEzLjkxNCw3Ni4yNzkgMTEzLjc5Niw3Ni4zNDIgMTEzLjY3NSw3Ni4zNDIiIGlkPSJGaWxsLTI3IiBmaWxsPSIjNDU1QTY0Ij48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTY3Ljc2Miw0OS40ODQgTDY3Ljc2MiwxMDMuNDg1IEM2Ny43NjIsMTA0LjU3NSA2OC41MzIsMTA1LjkwMyA2OS40ODIsMTA2LjQ1MiBMMTExLjk1NSwxMzAuOTczIEMxMTIuOTA1LDEzMS41MjIgMTEzLjY3NSwxMzEuMDgzIDExMy42NzUsMTI5Ljk5MyBMMTEzLjY3NSw3NS45OTIiIGlkPSJGaWxsLTI4IiBmaWxsPSIjRkFGQUZBIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTExMi43MjcsMTMxLjU2MSBDMTEyLjQzLDEzMS41NjEgMTEyLjEwNywxMzEuNDY2IDExMS43OCwxMzEuMjc2IEw2OS4zMDcsMTA2Ljc1NSBDNjguMjQ0LDEwNi4xNDIgNjcuNDEyLDEwNC43MDUgNjcuNDEyLDEwMy40ODUgTDY3LjQxMiw0OS40ODQgQzY3LjQxMiw0OS4yOSA2Ny41NjksNDkuMTM0IDY3Ljc2Miw0OS4xMzQgQzY3Ljk1Niw0OS4xMzQgNjguMTEzLDQ5LjI5IDY4LjExMyw0OS40ODQgTDY4LjExMywxMDMuNDg1IEM2OC4xMTMsMTA0LjQ0NSA2OC44MiwxMDUuNjY1IDY5LjY1NywxMDYuMTQ4IEwxMTIuMTMsMTMwLjY3IEMxMTIuNDc0LDEzMC44NjggMTEyLjc5MSwxMzAuOTEzIDExMywxMzAuNzkyIEMxMTMuMjA2LDEzMC42NzMgMTEzLjMyNSwxMzAuMzgxIDExMy4zMjUsMTI5Ljk5MyBMMTEzLjMyNSw3NS45OTIgQzExMy4zMjUsNzUuNzk4IDExMy40ODIsNzUuNjQxIDExMy42NzUsNzUuNjQxIEMxMTMuODY5LDc1LjY0MSAxMTQuMDI1LDc1Ljc5OCAxMTQuMDI1LDc1Ljk5MiBMMTE0LjAyNSwxMjkuOTkzIEMxMTQuMDI1LDEzMC42NDggMTEzLjc4NiwxMzEuMTQ3IDExMy4zNSwxMzEuMzk5IEMxMTMuMTYyLDEzMS41MDcgMTEyLjk1MiwxMzEuNTYxIDExMi43MjcsMTMxLjU2MSIgaWQ9IkZpbGwtMjkiIGZpbGw9IiM0NTVBNjQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTEyLjg2LDQwLjUxMiBDMTEyLjg2LDQwLjUxMiAxMTIuODYsNDAuNTEyIDExMi44NTksNDAuNTEyIEMxMTAuNTQxLDQwLjUxMiAxMDguMzYsMzkuOTkgMTA2LjcxNywzOS4wNDEgQzEwNS4wMTIsMzguMDU3IDEwNC4wNzQsMzYuNzI2IDEwNC4wNzQsMzUuMjkyIEMxMDQuMDc0LDMzLjg0NyAxMDUuMDI2LDMyLjUwMSAxMDYuNzU0LDMxLjUwNCBMMTE4Ljc5NSwyNC41NTEgQzEyMC40NjMsMjMuNTg5IDEyMi42NjksMjMuMDU4IDEyNS4wMDcsMjMuMDU4IEMxMjcuMzI1LDIzLjA1OCAxMjkuNTA2LDIzLjU4MSAxMzEuMTUsMjQuNTMgQzEzMi44NTQsMjUuNTE0IDEzMy43OTMsMjYuODQ1IDEzMy43OTMsMjguMjc4IEMxMzMuNzkzLDI5LjcyNCAxMzIuODQxLDMxLjA2OSAxMzEuMTEzLDMyLjA2NyBMMTE5LjA3MSwzOS4wMTkgQzExNy40MDMsMzkuOTgyIDExNS4xOTcsNDAuNTEyIDExMi44Niw0MC41MTIgTDExMi44Niw0MC41MTIgWiBNMTI1LjAwNywyMy43NTkgQzEyMi43OSwyMy43NTkgMTIwLjcwOSwyNC4yNTYgMTE5LjE0NiwyNS4xNTggTDEwNy4xMDQsMzIuMTEgQzEwNS42MDIsMzIuOTc4IDEwNC43NzQsMzQuMTA4IDEwNC43NzQsMzUuMjkyIEMxMDQuNzc0LDM2LjQ2NSAxMDUuNTg5LDM3LjU4MSAxMDcuMDY3LDM4LjQzNCBDMTA4LjYwNSwzOS4zMjMgMTEwLjY2MywzOS44MTIgMTEyLjg1OSwzOS44MTIgTDExMi44NiwzOS44MTIgQzExNS4wNzYsMzkuODEyIDExNy4xNTgsMzkuMzE1IDExOC43MjEsMzguNDEzIEwxMzAuNzYyLDMxLjQ2IEMxMzIuMjY0LDMwLjU5MyAxMzMuMDkyLDI5LjQ2MyAxMzMuMDkyLDI4LjI3OCBDMTMzLjA5MiwyNy4xMDYgMTMyLjI3OCwyNS45OSAxMzAuOCwyNS4xMzYgQzEyOS4yNjEsMjQuMjQ4IDEyNy4yMDQsMjMuNzU5IDEyNS4wMDcsMjMuNzU5IEwxMjUuMDA3LDIzLjc1OSBaIiBpZD0iRmlsbC0zMCIgZmlsbD0iIzYwN0Q4QiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNjUuNjMsMTYuMjE5IEwxNTkuODk2LDE5LjUzIEMxNTYuNzI5LDIxLjM1OCAxNTEuNjEsMjEuMzY3IDE0OC40NjMsMTkuNTUgQzE0NS4zMTYsMTcuNzMzIDE0NS4zMzIsMTQuNzc4IDE0OC40OTksMTIuOTQ5IEwxNTQuMjMzLDkuNjM5IEwxNjUuNjMsMTYuMjE5IiBpZD0iRmlsbC0zMSIgZmlsbD0iI0ZBRkFGQSI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xNTQuMjMzLDEwLjQ0OCBMMTY0LjIyOCwxNi4yMTkgTDE1OS41NDYsMTguOTIzIEMxNTguMTEyLDE5Ljc1IDE1Ni4xOTQsMjAuMjA2IDE1NC4xNDcsMjAuMjA2IEMxNTIuMTE4LDIwLjIwNiAxNTAuMjI0LDE5Ljc1NyAxNDguODE0LDE4Ljk0MyBDMTQ3LjUyNCwxOC4xOTkgMTQ2LjgxNCwxNy4yNDkgMTQ2LjgxNCwxNi4yNjkgQzE0Ni44MTQsMTUuMjc4IDE0Ny41MzcsMTQuMzE0IDE0OC44NSwxMy41NTYgTDE1NC4yMzMsMTAuNDQ4IE0xNTQuMjMzLDkuNjM5IEwxNDguNDk5LDEyLjk0OSBDMTQ1LjMzMiwxNC43NzggMTQ1LjMxNiwxNy43MzMgMTQ4LjQ2MywxOS41NSBDMTUwLjAzMSwyMC40NTUgMTUyLjA4NiwyMC45MDcgMTU0LjE0NywyMC45MDcgQzE1Ni4yMjQsMjAuOTA3IDE1OC4zMDYsMjAuNDQ3IDE1OS44OTYsMTkuNTMgTDE2NS42MywxNi4yMTkgTDE1NC4yMzMsOS42MzkiIGlkPSJGaWxsLTMyIiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE0NS40NDUsNzIuNjY3IEwxNDUuNDQ1LDcyLjY2NyBDMTQzLjY3Miw3Mi42NjcgMTQyLjIwNCw3MS44MTcgMTQxLjIwMiw3MC40MjIgQzE0MS4xMzUsNzAuMzMgMTQxLjE0NSw3MC4xNDcgMTQxLjIyNSw3MC4wNjYgQzE0MS4zMDUsNjkuOTg1IDE0MS40MzIsNjkuOTQ2IDE0MS41MjUsNzAuMDExIEMxNDIuMzA2LDcwLjU1OSAxNDMuMjMxLDcwLjgyMyAxNDQuMjc2LDcwLjgyMiBDMTQ1LjU5OCw3MC44MjIgMTQ3LjAzLDcwLjM3NiAxNDguNTMyLDY5LjUwOSBDMTUzLjg0Miw2Ni40NDMgMTU4LjE2Myw1OC45ODcgMTU4LjE2Myw1Mi44OTQgQzE1OC4xNjMsNTAuOTY3IDE1Ny43MjEsNDkuMzMyIDE1Ni44ODQsNDguMTY4IEMxNTYuODE4LDQ4LjA3NiAxNTYuODI4LDQ3Ljk0OCAxNTYuOTA4LDQ3Ljg2NyBDMTU2Ljk4OCw0Ny43ODYgMTU3LjExNCw0Ny43NzQgMTU3LjIwOCw0Ny44NCBDMTU4Ljg3OCw0OS4wMTIgMTU5Ljc5OCw1MS4yMiAxNTkuNzk4LDU0LjA1OSBDMTU5Ljc5OCw2MC4zMDEgMTU1LjM3Myw2OC4wNDYgMTQ5LjkzMyw3MS4xODYgQzE0OC4zNiw3Mi4wOTQgMTQ2Ljg1LDcyLjY2NyAxNDUuNDQ1LDcyLjY2NyBMMTQ1LjQ0NSw3Mi42NjcgWiBNMTQyLjQ3Niw3MSBDMTQzLjI5LDcxLjY1MSAxNDQuMjk2LDcyLjAwMiAxNDUuNDQ1LDcyLjAwMiBDMTQ2Ljc2Nyw3Mi4wMDIgMTQ4LjE5OCw3MS41NSAxNDkuNyw3MC42ODIgQzE1NS4wMSw2Ny42MTcgMTU5LjMzMSw2MC4xNTkgMTU5LjMzMSw1NC4wNjUgQzE1OS4zMzEsNTIuMDg1IDE1OC44NjgsNTAuNDM1IDE1OC4wMDYsNDkuMjcyIEMxNTguNDE3LDUwLjMwNyAxNTguNjMsNTEuNTMyIDE1OC42Myw1Mi44OTIgQzE1OC42Myw1OS4xMzQgMTU0LjIwNSw2Ni43NjcgMTQ4Ljc2NSw2OS45MDcgQzE0Ny4xOTIsNzAuODE2IDE0NS42ODEsNzEuMjgzIDE0NC4yNzYsNzEuMjgzIEMxNDMuNjM0LDcxLjI4MyAxNDMuMDMzLDcxLjE5MiAxNDIuNDc2LDcxIEwxNDIuNDc2LDcxIFoiIGlkPSJGaWxsLTMzIiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE0OC42NDgsNjkuNzA0IEMxNTQuMDMyLDY2LjU5NiAxNTguMzk2LDU5LjA2OCAxNTguMzk2LDUyLjg5MSBDMTU4LjM5Niw1MC44MzkgMTU3LjkxMyw0OS4xOTggMTU3LjA3NCw0OC4wMyBDMTU1LjI4OSw0Ni43NzggMTUyLjY5OSw0Ni44MzYgMTQ5LjgxNiw0OC41MDEgQzE0NC40MzMsNTEuNjA5IDE0MC4wNjgsNTkuMTM3IDE0MC4wNjgsNjUuMzE0IEMxNDAuMDY4LDY3LjM2NSAxNDAuNTUyLDY5LjAwNiAxNDEuMzkxLDcwLjE3NCBDMTQzLjE3Niw3MS40MjcgMTQ1Ljc2NSw3MS4zNjkgMTQ4LjY0OCw2OS43MDQiIGlkPSJGaWxsLTM0IiBmaWxsPSIjRkFGQUZBIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTE0NC4yNzYsNzEuMjc2IEwxNDQuMjc2LDcxLjI3NiBDMTQzLjEzMyw3MS4yNzYgMTQyLjExOCw3MC45NjkgMTQxLjI1Nyw3MC4zNjUgQzE0MS4yMzYsNzAuMzUxIDE0MS4yMTcsNzAuMzMyIDE0MS4yMDIsNzAuMzExIEMxNDAuMzA3LDY5LjA2NyAxMzkuODM1LDY3LjMzOSAxMzkuODM1LDY1LjMxNCBDMTM5LjgzNSw1OS4wNzMgMTQ0LjI2LDUxLjQzOSAxNDkuNyw0OC4yOTggQzE1MS4yNzMsNDcuMzkgMTUyLjc4NCw0Ni45MjkgMTU0LjE4OSw0Ni45MjkgQzE1NS4zMzIsNDYuOTI5IDE1Ni4zNDcsNDcuMjM2IDE1Ny4yMDgsNDcuODM5IEMxNTcuMjI5LDQ3Ljg1NCAxNTcuMjQ4LDQ3Ljg3MyAxNTcuMjYzLDQ3Ljg5NCBDMTU4LjE1Nyw0OS4xMzggMTU4LjYzLDUwLjg2NSAxNTguNjMsNTIuODkxIEMxNTguNjMsNTkuMTMyIDE1NC4yMDUsNjYuNzY2IDE0OC43NjUsNjkuOTA3IEMxNDcuMTkyLDcwLjgxNSAxNDUuNjgxLDcxLjI3NiAxNDQuMjc2LDcxLjI3NiBMMTQ0LjI3Niw3MS4yNzYgWiBNMTQxLjU1OCw3MC4xMDQgQzE0Mi4zMzEsNzAuNjM3IDE0My4yNDUsNzEuMDA1IDE0NC4yNzYsNzEuMDA1IEMxNDUuNTk4LDcxLjAwNSAxNDcuMDMsNzAuNDY3IDE0OC41MzIsNjkuNiBDMTUzLjg0Miw2Ni41MzQgMTU4LjE2Myw1OS4wMzMgMTU4LjE2Myw1Mi45MzkgQzE1OC4xNjMsNTEuMDMxIDE1Ny43MjksNDkuMzg1IDE1Ni45MDcsNDguMjIzIEMxNTYuMTMzLDQ3LjY5MSAxNTUuMjE5LDQ3LjQwOSAxNTQuMTg5LDQ3LjQwOSBDMTUyLjg2Nyw0Ny40MDkgMTUxLjQzNSw0Ny44NDIgMTQ5LjkzMyw0OC43MDkgQzE0NC42MjMsNTEuNzc1IDE0MC4zMDIsNTkuMjczIDE0MC4zMDIsNjUuMzY2IEMxNDAuMzAyLDY3LjI3NiAxNDAuNzM2LDY4Ljk0MiAxNDEuNTU4LDcwLjEwNCBMMTQxLjU1OCw3MC4xMDQgWiIgaWQ9IkZpbGwtMzUiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTUwLjcyLDY1LjM2MSBMMTUwLjM1Nyw2NS4wNjYgQzE1MS4xNDcsNjQuMDkyIDE1MS44NjksNjMuMDQgMTUyLjUwNSw2MS45MzggQzE1My4zMTMsNjAuNTM5IDE1My45NzgsNTkuMDY3IDE1NC40ODIsNTcuNTYzIEwxNTQuOTI1LDU3LjcxMiBDMTU0LjQxMiw1OS4yNDUgMTUzLjczMyw2MC43NDUgMTUyLjkxLDYyLjE3MiBDMTUyLjI2Miw2My4yOTUgMTUxLjUyNSw2NC4zNjggMTUwLjcyLDY1LjM2MSIgaWQ9IkZpbGwtMzYiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTE1LjkxNyw4NC41MTQgTDExNS41NTQsODQuMjIgQzExNi4zNDQsODMuMjQ1IDExNy4wNjYsODIuMTk0IDExNy43MDIsODEuMDkyIEMxMTguNTEsNzkuNjkyIDExOS4xNzUsNzguMjIgMTE5LjY3OCw3Ni43MTcgTDEyMC4xMjEsNzYuODY1IEMxMTkuNjA4LDc4LjM5OCAxMTguOTMsNzkuODk5IDExOC4xMDYsODEuMzI2IEMxMTcuNDU4LDgyLjQ0OCAxMTYuNzIyLDgzLjUyMSAxMTUuOTE3LDg0LjUxNCIgaWQ9IkZpbGwtMzciIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTE0LDEzMC40NzYgTDExNCwxMzAuMDA4IEwxMTQsNzYuMDUyIEwxMTQsNzUuNTg0IEwxMTQsNzYuMDUyIEwxMTQsMTMwLjAwOCBMMTE0LDEzMC40NzYiIGlkPSJGaWxsLTM4IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgICAgICA8ZyBpZD0iSW1wb3J0ZWQtTGF5ZXJzLUNvcHkiIHRyYW5zZm9ybT0idHJhbnNsYXRlKDYyLjAwMDAwMCwgMC4wMDAwMDApIiBza2V0Y2g6dHlwZT0iTVNTaGFwZUdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTkuODIyLDM3LjQ3NCBDMTkuODM5LDM3LjMzOSAxOS43NDcsMzcuMTk0IDE5LjU1NSwzNy4wODIgQzE5LjIyOCwzNi44OTQgMTguNzI5LDM2Ljg3MiAxOC40NDYsMzcuMDM3IEwxMi40MzQsNDAuNTA4IEMxMi4zMDMsNDAuNTg0IDEyLjI0LDQwLjY4NiAxMi4yNDMsNDAuNzkzIEMxMi4yNDUsNDAuOTI1IDEyLjI0NSw0MS4yNTQgMTIuMjQ1LDQxLjM3MSBMMTIuMjQ1LDQxLjQxNCBMMTIuMjM4LDQxLjU0MiBDOC4xNDgsNDMuODg3IDUuNjQ3LDQ1LjMyMSA1LjY0Nyw0NS4zMjEgQzUuNjQ2LDQ1LjMyMSAzLjU3LDQ2LjM2NyAyLjg2LDUwLjUxMyBDMi44Niw1MC41MTMgMS45NDgsNTcuNDc0IDEuOTYyLDcwLjI1OCBDMS45NzcsODIuODI4IDIuNTY4LDg3LjMyOCAzLjEyOSw5MS42MDkgQzMuMzQ5LDkzLjI5MyA2LjEzLDkzLjczNCA2LjEzLDkzLjczNCBDNi40NjEsOTMuNzc0IDYuODI4LDkzLjcwNyA3LjIxLDkzLjQ4NiBMODIuNDgzLDQ5LjkzNSBDODQuMjkxLDQ4Ljg2NiA4NS4xNSw0Ni4yMTYgODUuNTM5LDQzLjY1MSBDODYuNzUyLDM1LjY2MSA4Ny4yMTQsMTAuNjczIDg1LjI2NCwzLjc3MyBDODUuMDY4LDMuMDggODQuNzU0LDIuNjkgODQuMzk2LDIuNDkxIEw4Mi4zMSwxLjcwMSBDODEuNTgzLDEuNzI5IDgwLjg5NCwyLjE2OCA4MC43NzYsMi4yMzYgQzgwLjYzNiwyLjMxNyA0MS44MDcsMjQuNTg1IDIwLjAzMiwzNy4wNzIgTDE5LjgyMiwzNy40NzQiIGlkPSJGaWxsLTEiIGZpbGw9IiNGRkZGRkYiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNODIuMzExLDEuNzAxIEw4NC4zOTYsMi40OTEgQzg0Ljc1NCwyLjY5IDg1LjA2OCwzLjA4IDg1LjI2NCwzLjc3MyBDODcuMjEzLDEwLjY3MyA4Ni43NTEsMzUuNjYgODUuNTM5LDQzLjY1MSBDODUuMTQ5LDQ2LjIxNiA4NC4yOSw0OC44NjYgODIuNDgzLDQ5LjkzNSBMNy4yMSw5My40ODYgQzYuODk3LDkzLjY2NyA2LjU5NSw5My43NDQgNi4zMTQsOTMuNzQ0IEw2LjEzMSw5My43MzMgQzYuMTMxLDkzLjczNCAzLjM0OSw5My4yOTMgMy4xMjgsOTEuNjA5IEMyLjU2OCw4Ny4zMjcgMS45NzcsODIuODI4IDEuOTYzLDcwLjI1OCBDMS45NDgsNTcuNDc0IDIuODYsNTAuNTEzIDIuODYsNTAuNTEzIEMzLjU3LDQ2LjM2NyA1LjY0Nyw0NS4zMjEgNS42NDcsNDUuMzIxIEM1LjY0Nyw0NS4zMjEgOC4xNDgsNDMuODg3IDEyLjIzOCw0MS41NDIgTDEyLjI0NSw0MS40MTQgTDEyLjI0NSw0MS4zNzEgQzEyLjI0NSw0MS4yNTQgMTIuMjQ1LDQwLjkyNSAxMi4yNDMsNDAuNzkzIEMxMi4yNCw0MC42ODYgMTIuMzAyLDQwLjU4MyAxMi40MzQsNDAuNTA4IEwxOC40NDYsMzcuMDM2IEMxOC41NzQsMzYuOTYyIDE4Ljc0NiwzNi45MjYgMTguOTI3LDM2LjkyNiBDMTkuMTQ1LDM2LjkyNiAxOS4zNzYsMzYuOTc5IDE5LjU1NCwzNy4wODIgQzE5Ljc0NywzNy4xOTQgMTkuODM5LDM3LjM0IDE5LjgyMiwzNy40NzQgTDIwLjAzMywzNy4wNzIgQzQxLjgwNiwyNC41ODUgODAuNjM2LDIuMzE4IDgwLjc3NywyLjIzNiBDODAuODk0LDIuMTY4IDgxLjU4MywxLjcyOSA4Mi4zMTEsMS43MDEgTTgyLjMxMSwwLjcwNCBMODIuMjcyLDAuNzA1IEM4MS42NTQsMC43MjggODAuOTg5LDAuOTQ5IDgwLjI5OCwxLjM2MSBMODAuMjc3LDEuMzczIEM4MC4xMjksMS40NTggNTkuNzY4LDEzLjEzNSAxOS43NTgsMzYuMDc5IEMxOS41LDM1Ljk4MSAxOS4yMTQsMzUuOTI5IDE4LjkyNywzNS45MjkgQzE4LjU2MiwzNS45MjkgMTguMjIzLDM2LjAxMyAxNy45NDcsMzYuMTczIEwxMS45MzUsMzkuNjQ0IEMxMS40OTMsMzkuODk5IDExLjIzNiw0MC4zMzQgMTEuMjQ2LDQwLjgxIEwxMS4yNDcsNDAuOTYgTDUuMTY3LDQ0LjQ0NyBDNC43OTQsNDQuNjQ2IDIuNjI1LDQ1Ljk3OCAxLjg3Nyw1MC4zNDUgTDEuODcxLDUwLjM4NCBDMS44NjIsNTAuNDU0IDAuOTUxLDU3LjU1NyAwLjk2NSw3MC4yNTkgQzAuOTc5LDgyLjg3OSAxLjU2OCw4Ny4zNzUgMi4xMzcsOTEuNzI0IEwyLjEzOSw5MS43MzkgQzIuNDQ3LDk0LjA5NCA1LjYxNCw5NC42NjIgNS45NzUsOTQuNzE5IEw2LjAwOSw5NC43MjMgQzYuMTEsOTQuNzM2IDYuMjEzLDk0Ljc0MiA2LjMxNCw5NC43NDIgQzYuNzksOTQuNzQyIDcuMjYsOTQuNjEgNy43MSw5NC4zNSBMODIuOTgzLDUwLjc5OCBDODQuNzk0LDQ5LjcyNyA4NS45ODIsNDcuMzc1IDg2LjUyNSw0My44MDEgQzg3LjcxMSwzNS45ODcgODguMjU5LDEwLjcwNSA4Ni4yMjQsMy41MDIgQzg1Ljk3MSwyLjYwOSA4NS41MiwxLjk3NSA4NC44ODEsMS42MiBMODQuNzQ5LDEuNTU4IEw4Mi42NjQsMC43NjkgQzgyLjU1MSwwLjcyNSA4Mi40MzEsMC43MDQgODIuMzExLDAuNzA0IiBpZD0iRmlsbC0yIiBmaWxsPSIjNDU1QTY0Ij48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTY2LjI2NywxMS41NjUgTDY3Ljc2MiwxMS45OTkgTDExLjQyMyw0NC4zMjUiIGlkPSJGaWxsLTMiIGZpbGw9IiNGRkZGRkYiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTIuMjAyLDkwLjU0NSBDMTIuMDI5LDkwLjU0NSAxMS44NjIsOTAuNDU1IDExLjc2OSw5MC4yOTUgQzExLjYzMiw5MC4wNTcgMTEuNzEzLDg5Ljc1MiAxMS45NTIsODkuNjE0IEwzMC4zODksNzguOTY5IEMzMC42MjgsNzguODMxIDMwLjkzMyw3OC45MTMgMzEuMDcxLDc5LjE1MiBDMzEuMjA4LDc5LjM5IDMxLjEyNyw3OS42OTYgMzAuODg4LDc5LjgzMyBMMTIuNDUxLDkwLjQ3OCBMMTIuMjAyLDkwLjU0NSIgaWQ9IkZpbGwtNCIgZmlsbD0iIzYwN0Q4QiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMy43NjQsNDIuNjU0IEwxMy42NTYsNDIuNTkyIEwxMy43MDIsNDIuNDIxIEwxOC44MzcsMzkuNDU3IEwxOS4wMDcsMzkuNTAyIEwxOC45NjIsMzkuNjczIEwxMy44MjcsNDIuNjM3IEwxMy43NjQsNDIuNjU0IiBpZD0iRmlsbC01IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTguNTIsOTAuMzc1IEw4LjUyLDQ2LjQyMSBMOC41ODMsNDYuMzg1IEw3NS44NCw3LjU1NCBMNzUuODQsNTEuNTA4IEw3NS43NzgsNTEuNTQ0IEw4LjUyLDkwLjM3NSBMOC41Miw5MC4zNzUgWiBNOC43Nyw0Ni41NjQgTDguNzcsODkuOTQ0IEw3NS41OTEsNTEuMzY1IEw3NS41OTEsNy45ODUgTDguNzcsNDYuNTY0IEw4Ljc3LDQ2LjU2NCBaIiBpZD0iRmlsbC02IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTI0Ljk4Niw4My4xODIgQzI0Ljc1Niw4My4zMzEgMjQuMzc0LDgzLjU2NiAyNC4xMzcsODMuNzA1IEwxMi42MzIsOTAuNDA2IEMxMi4zOTUsOTAuNTQ1IDEyLjQyNiw5MC42NTggMTIuNyw5MC42NTggTDEzLjI2NSw5MC42NTggQzEzLjU0LDkwLjY1OCAxMy45NTgsOTAuNTQ1IDE0LjE5NSw5MC40MDYgTDI1LjcsODMuNzA1IEMyNS45MzcsODMuNTY2IDI2LjEyOCw4My40NTIgMjYuMTI1LDgzLjQ0OSBDMjYuMTIyLDgzLjQ0NyAyNi4xMTksODMuMjIgMjYuMTE5LDgyLjk0NiBDMjYuMTE5LDgyLjY3MiAyNS45MzEsODIuNTY5IDI1LjcwMSw4Mi43MTkgTDI0Ljk4Niw4My4xODIiIGlkPSJGaWxsLTciIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTMuMjY2LDkwLjc4MiBMMTIuNyw5MC43ODIgQzEyLjUsOTAuNzgyIDEyLjM4NCw5MC43MjYgMTIuMzU0LDkwLjYxNiBDMTIuMzI0LDkwLjUwNiAxMi4zOTcsOTAuMzk5IDEyLjU2OSw5MC4yOTkgTDI0LjA3NCw4My41OTcgQzI0LjMxLDgzLjQ1OSAyNC42ODksODMuMjI2IDI0LjkxOCw4My4wNzggTDI1LjYzMyw4Mi42MTQgQzI1LjcyMyw4Mi41NTUgMjUuODEzLDgyLjUyNSAyNS44OTksODIuNTI1IEMyNi4wNzEsODIuNTI1IDI2LjI0NCw4Mi42NTUgMjYuMjQ0LDgyLjk0NiBDMjYuMjQ0LDgzLjE2IDI2LjI0NSw4My4zMDkgMjYuMjQ3LDgzLjM4MyBMMjYuMjUzLDgzLjM4NyBMMjYuMjQ5LDgzLjQ1NiBDMjYuMjQ2LDgzLjUzMSAyNi4yNDYsODMuNTMxIDI1Ljc2Myw4My44MTIgTDE0LjI1OCw5MC41MTQgQzE0LDkwLjY2NSAxMy41NjQsOTAuNzgyIDEzLjI2Niw5MC43ODIgTDEzLjI2Niw5MC43ODIgWiBNMTIuNjY2LDkwLjUzMiBMMTIuNyw5MC41MzMgTDEzLjI2Niw5MC41MzMgQzEzLjUxOCw5MC41MzMgMTMuOTE1LDkwLjQyNSAxNC4xMzIsOTAuMjk5IEwyNS42MzcsODMuNTk3IEMyNS44MDUsODMuNDk5IDI1LjkzMSw4My40MjQgMjUuOTk4LDgzLjM4MyBDMjUuOTk0LDgzLjI5OSAyNS45OTQsODMuMTY1IDI1Ljk5NCw4Mi45NDYgTDI1Ljg5OSw4Mi43NzUgTDI1Ljc2OCw4Mi44MjQgTDI1LjA1NCw4My4yODcgQzI0LjgyMiw4My40MzcgMjQuNDM4LDgzLjY3MyAyNC4yLDgzLjgxMiBMMTIuNjk1LDkwLjUxNCBMMTIuNjY2LDkwLjUzMiBMMTIuNjY2LDkwLjUzMiBaIiBpZD0iRmlsbC04IiBmaWxsPSIjNjA3RDhCIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEzLjI2Niw4OS44NzEgTDEyLjcsODkuODcxIEMxMi41LDg5Ljg3MSAxMi4zODQsODkuODE1IDEyLjM1NCw4OS43MDUgQzEyLjMyNCw4OS41OTUgMTIuMzk3LDg5LjQ4OCAxMi41NjksODkuMzg4IEwyNC4wNzQsODIuNjg2IEMyNC4zMzIsODIuNTM1IDI0Ljc2OCw4Mi40MTggMjUuMDY3LDgyLjQxOCBMMjUuNjMyLDgyLjQxOCBDMjUuODMyLDgyLjQxOCAyNS45NDgsODIuNDc0IDI1Ljk3OCw4Mi41ODQgQzI2LjAwOCw4Mi42OTQgMjUuOTM1LDgyLjgwMSAyNS43NjMsODIuOTAxIEwxNC4yNTgsODkuNjAzIEMxNCw4OS43NTQgMTMuNTY0LDg5Ljg3MSAxMy4yNjYsODkuODcxIEwxMy4yNjYsODkuODcxIFogTTEyLjY2Niw4OS42MjEgTDEyLjcsODkuNjIyIEwxMy4yNjYsODkuNjIyIEMxMy41MTgsODkuNjIyIDEzLjkxNSw4OS41MTUgMTQuMTMyLDg5LjM4OCBMMjUuNjM3LDgyLjY4NiBMMjUuNjY3LDgyLjY2OCBMMjUuNjMyLDgyLjY2NyBMMjUuMDY3LDgyLjY2NyBDMjQuODE1LDgyLjY2NyAyNC40MTgsODIuNzc1IDI0LjIsODIuOTAxIEwxMi42OTUsODkuNjAzIEwxMi42NjYsODkuNjIxIEwxMi42NjYsODkuNjIxIFoiIGlkPSJGaWxsLTkiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTIuMzcsOTAuODAxIEwxMi4zNyw4OS41NTQgTDEyLjM3LDkwLjgwMSIgaWQ9IkZpbGwtMTAiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNi4xMyw5My45MDEgQzUuMzc5LDkzLjgwOCA0LjgxNiw5My4xNjQgNC42OTEsOTIuNTI1IEMzLjg2LDg4LjI4NyAzLjU0LDgzLjc0MyAzLjUyNiw3MS4xNzMgQzMuNTExLDU4LjM4OSA0LjQyMyw1MS40MjggNC40MjMsNTEuNDI4IEM1LjEzNCw0Ny4yODIgNy4yMSw0Ni4yMzYgNy4yMSw0Ni4yMzYgQzcuMjEsNDYuMjM2IDgxLjY2NywzLjI1IDgyLjA2OSwzLjAxNyBDODIuMjkyLDIuODg4IDg0LjU1NiwxLjQzMyA4NS4yNjQsMy45NCBDODcuMjE0LDEwLjg0IDg2Ljc1MiwzNS44MjcgODUuNTM5LDQzLjgxOCBDODUuMTUsNDYuMzgzIDg0LjI5MSw0OS4wMzMgODIuNDgzLDUwLjEwMSBMNy4yMSw5My42NTMgQzYuODI4LDkzLjg3NCA2LjQ2MSw5My45NDEgNi4xMyw5My45MDEgQzYuMTMsOTMuOTAxIDMuMzQ5LDkzLjQ2IDMuMTI5LDkxLjc3NiBDMi41NjgsODcuNDk1IDEuOTc3LDgyLjk5NSAxLjk2Miw3MC40MjUgQzEuOTQ4LDU3LjY0MSAyLjg2LDUwLjY4IDIuODYsNTAuNjggQzMuNTcsNDYuNTM0IDUuNjQ3LDQ1LjQ4OSA1LjY0Nyw0NS40ODkgQzUuNjQ2LDQ1LjQ4OSA4LjA2NSw0NC4wOTIgMTIuMjQ1LDQxLjY3OSBMMTMuMTE2LDQxLjU2IEwxOS43MTUsMzcuNzMgTDE5Ljc2MSwzNy4yNjkgTDYuMTMsOTMuOTAxIiBpZD0iRmlsbC0xMSIgZmlsbD0iI0ZBRkFGQSI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik02LjMxNyw5NC4xNjEgTDYuMTAyLDk0LjE0OCBMNi4xMDEsOTQuMTQ4IEw1Ljg1Nyw5NC4xMDEgQzUuMTM4LDkzLjk0NSAzLjA4NSw5My4zNjUgMi44ODEsOTEuODA5IEMyLjMxMyw4Ny40NjkgMS43MjcsODIuOTk2IDEuNzEzLDcwLjQyNSBDMS42OTksNTcuNzcxIDIuNjA0LDUwLjcxOCAyLjYxMyw1MC42NDggQzMuMzM4LDQ2LjQxNyA1LjQ0NSw0NS4zMSA1LjUzNSw0NS4yNjYgTDEyLjE2Myw0MS40MzkgTDEzLjAzMyw0MS4zMiBMMTkuNDc5LDM3LjU3OCBMMTkuNTEzLDM3LjI0NCBDMTkuNTI2LDM3LjEwNyAxOS42NDcsMzcuMDA4IDE5Ljc4NiwzNy4wMjEgQzE5LjkyMiwzNy4wMzQgMjAuMDIzLDM3LjE1NiAyMC4wMDksMzcuMjkzIEwxOS45NSwzNy44ODIgTDEzLjE5OCw0MS44MDEgTDEyLjMyOCw0MS45MTkgTDUuNzcyLDQ1LjcwNCBDNS43NDEsNDUuNzIgMy43ODIsNDYuNzcyIDMuMTA2LDUwLjcyMiBDMy4wOTksNTAuNzgyIDIuMTk4LDU3LjgwOCAyLjIxMiw3MC40MjQgQzIuMjI2LDgyLjk2MyAyLjgwOSw4Ny40MiAzLjM3Myw5MS43MjkgQzMuNDY0LDkyLjQyIDQuMDYyLDkyLjg4MyA0LjY4Miw5My4xODEgQzQuNTY2LDkyLjk4NCA0LjQ4Niw5Mi43NzYgNC40NDYsOTIuNTcyIEMzLjY2NSw4OC41ODggMy4yOTEsODQuMzcgMy4yNzYsNzEuMTczIEMzLjI2Miw1OC41MiA0LjE2Nyw1MS40NjYgNC4xNzYsNTEuMzk2IEM0LjkwMSw0Ny4xNjUgNy4wMDgsNDYuMDU5IDcuMDk4LDQ2LjAxNCBDNy4wOTQsNDYuMDE1IDgxLjU0MiwzLjAzNCA4MS45NDQsMi44MDIgTDgxLjk3MiwyLjc4NSBDODIuODc2LDIuMjQ3IDgzLjY5MiwyLjA5NyA4NC4zMzIsMi4zNTIgQzg0Ljg4NywyLjU3MyA4NS4yODEsMy4wODUgODUuNTA0LDMuODcyIEM4Ny41MTgsMTEgODYuOTY0LDM2LjA5MSA4NS43ODUsNDMuODU1IEM4NS4yNzgsNDcuMTk2IDg0LjIxLDQ5LjM3IDgyLjYxLDUwLjMxNyBMNy4zMzUsOTMuODY5IEM2Ljk5OSw5NC4wNjMgNi42NTgsOTQuMTYxIDYuMzE3LDk0LjE2MSBMNi4zMTcsOTQuMTYxIFogTTYuMTcsOTMuNjU0IEM2LjQ2Myw5My42OSA2Ljc3NCw5My42MTcgNy4wODUsOTMuNDM3IEw4Mi4zNTgsNDkuODg2IEM4NC4xODEsNDguODA4IDg0Ljk2LDQ1Ljk3MSA4NS4yOTIsNDMuNzggQzg2LjQ2NiwzNi4wNDkgODcuMDIzLDExLjA4NSA4NS4wMjQsNC4wMDggQzg0Ljg0NiwzLjM3NyA4NC41NTEsMi45NzYgODQuMTQ4LDIuODE2IEM4My42NjQsMi42MjMgODIuOTgyLDIuNzY0IDgyLjIyNywzLjIxMyBMODIuMTkzLDMuMjM0IEM4MS43OTEsMy40NjYgNy4zMzUsNDYuNDUyIDcuMzM1LDQ2LjQ1MiBDNy4zMDQsNDYuNDY5IDUuMzQ2LDQ3LjUyMSA0LjY2OSw1MS40NzEgQzQuNjYyLDUxLjUzIDMuNzYxLDU4LjU1NiAzLjc3NSw3MS4xNzMgQzMuNzksODQuMzI4IDQuMTYxLDg4LjUyNCA0LjkzNiw5Mi40NzYgQzUuMDI2LDkyLjkzNyA1LjQxMiw5My40NTkgNS45NzMsOTMuNjE1IEM2LjA4Nyw5My42NCA2LjE1OCw5My42NTIgNi4xNjksOTMuNjU0IEw2LjE3LDkzLjY1NCBMNi4xNyw5My42NTQgWiIgaWQ9IkZpbGwtMTIiIGZpbGw9IiM0NTVBNjQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNy4zMTcsNjguOTgyIEM3LjgwNiw2OC43MDEgOC4yMDIsNjguOTI2IDguMjAyLDY5LjQ4NyBDOC4yMDIsNzAuMDQ3IDcuODA2LDcwLjczIDcuMzE3LDcxLjAxMiBDNi44MjksNzEuMjk0IDYuNDMzLDcxLjA2OSA2LjQzMyw3MC41MDggQzYuNDMzLDY5Ljk0OCA2LjgyOSw2OS4yNjUgNy4zMTcsNjguOTgyIiBpZD0iRmlsbC0xMyIgZmlsbD0iI0ZGRkZGRiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik02LjkyLDcxLjEzMyBDNi42MzEsNzEuMTMzIDYuNDMzLDcwLjkwNSA2LjQzMyw3MC41MDggQzYuNDMzLDY5Ljk0OCA2LjgyOSw2OS4yNjUgNy4zMTcsNjguOTgyIEM3LjQ2LDY4LjkgNy41OTUsNjguODYxIDcuNzE0LDY4Ljg2MSBDOC4wMDMsNjguODYxIDguMjAyLDY5LjA5IDguMjAyLDY5LjQ4NyBDOC4yMDIsNzAuMDQ3IDcuODA2LDcwLjczIDcuMzE3LDcxLjAxMiBDNy4xNzQsNzEuMDk0IDcuMDM5LDcxLjEzMyA2LjkyLDcxLjEzMyBNNy43MTQsNjguNjc0IEM3LjU1Nyw2OC42NzQgNy4zOTIsNjguNzIzIDcuMjI0LDY4LjgyMSBDNi42NzYsNjkuMTM4IDYuMjQ2LDY5Ljg3OSA2LjI0Niw3MC41MDggQzYuMjQ2LDcwLjk5NCA2LjUxNyw3MS4zMiA2LjkyLDcxLjMyIEM3LjA3OCw3MS4zMiA3LjI0Myw3MS4yNzEgNy40MTEsNzEuMTc0IEM3Ljk1OSw3MC44NTcgOC4zODksNzAuMTE3IDguMzg5LDY5LjQ4NyBDOC4zODksNjkuMDAxIDguMTE3LDY4LjY3NCA3LjcxNCw2OC42NzQiIGlkPSJGaWxsLTE0IiBmaWxsPSIjODA5N0EyIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTYuOTIsNzAuOTQ3IEM2LjY0OSw3MC45NDcgNi42MjEsNzAuNjQgNi42MjEsNzAuNTA4IEM2LjYyMSw3MC4wMTcgNi45ODIsNjkuMzkyIDcuNDExLDY5LjE0NSBDNy41MjEsNjkuMDgyIDcuNjI1LDY5LjA0OSA3LjcxNCw2OS4wNDkgQzcuOTg2LDY5LjA0OSA4LjAxNSw2OS4zNTUgOC4wMTUsNjkuNDg3IEM4LjAxNSw2OS45NzggNy42NTIsNzAuNjAzIDcuMjI0LDcwLjg1MSBDNy4xMTUsNzAuOTE0IDcuMDEsNzAuOTQ3IDYuOTIsNzAuOTQ3IE03LjcxNCw2OC44NjEgQzcuNTk1LDY4Ljg2MSA3LjQ2LDY4LjkgNy4zMTcsNjguOTgyIEM2LjgyOSw2OS4yNjUgNi40MzMsNjkuOTQ4IDYuNDMzLDcwLjUwOCBDNi40MzMsNzAuOTA1IDYuNjMxLDcxLjEzMyA2LjkyLDcxLjEzMyBDNy4wMzksNzEuMTMzIDcuMTc0LDcxLjA5NCA3LjMxNyw3MS4wMTIgQzcuODA2LDcwLjczIDguMjAyLDcwLjA0NyA4LjIwMiw2OS40ODcgQzguMjAyLDY5LjA5IDguMDAzLDY4Ljg2MSA3LjcxNCw2OC44NjEiIGlkPSJGaWxsLTE1IiBmaWxsPSIjODA5N0EyIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTcuNDQ0LDg1LjM1IEM3LjcwOCw4NS4xOTggNy45MjEsODUuMzE5IDcuOTIxLDg1LjYyMiBDNy45MjEsODUuOTI1IDcuNzA4LDg2LjI5MiA3LjQ0NCw4Ni40NDQgQzcuMTgxLDg2LjU5NyA2Ljk2Nyw4Ni40NzUgNi45NjcsODYuMTczIEM2Ljk2Nyw4NS44NzEgNy4xODEsODUuNTAyIDcuNDQ0LDg1LjM1IiBpZD0iRmlsbC0xNiIgZmlsbD0iI0ZGRkZGRiI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik03LjIzLDg2LjUxIEM3LjA3NCw4Ni41MSA2Ljk2Nyw4Ni4zODcgNi45NjcsODYuMTczIEM2Ljk2Nyw4NS44NzEgNy4xODEsODUuNTAyIDcuNDQ0LDg1LjM1IEM3LjUyMSw4NS4zMDUgNy41OTQsODUuMjg0IDcuNjU4LDg1LjI4NCBDNy44MTQsODUuMjg0IDcuOTIxLDg1LjQwOCA3LjkyMSw4NS42MjIgQzcuOTIxLDg1LjkyNSA3LjcwOCw4Ni4yOTIgNy40NDQsODYuNDQ0IEM3LjM2Nyw4Ni40ODkgNy4yOTQsODYuNTEgNy4yMyw4Ni41MSBNNy42NTgsODUuMDk4IEM3LjU1OCw4NS4wOTggNy40NTUsODUuMTI3IDcuMzUxLDg1LjE4OCBDNy4wMzEsODUuMzczIDYuNzgxLDg1LjgwNiA2Ljc4MSw4Ni4xNzMgQzYuNzgxLDg2LjQ4MiA2Ljk2Niw4Ni42OTcgNy4yMyw4Ni42OTcgQzcuMzMsODYuNjk3IDcuNDMzLDg2LjY2NiA3LjUzOCw4Ni42MDcgQzcuODU4LDg2LjQyMiA4LjEwOCw4NS45ODkgOC4xMDgsODUuNjIyIEM4LjEwOCw4NS4zMTMgNy45MjMsODUuMDk4IDcuNjU4LDg1LjA5OCIgaWQ9IkZpbGwtMTciIGZpbGw9IiM4MDk3QTIiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNy4yMyw4Ni4zMjIgTDcuMTU0LDg2LjE3MyBDNy4xNTQsODUuOTM4IDcuMzMzLDg1LjYyOSA3LjUzOCw4NS41MTIgTDcuNjU4LDg1LjQ3MSBMNy43MzQsODUuNjIyIEM3LjczNCw4NS44NTYgNy41NTUsODYuMTY0IDcuMzUxLDg2LjI4MiBMNy4yMyw4Ni4zMjIgTTcuNjU4LDg1LjI4NCBDNy41OTQsODUuMjg0IDcuNTIxLDg1LjMwNSA3LjQ0NCw4NS4zNSBDNy4xODEsODUuNTAyIDYuOTY3LDg1Ljg3MSA2Ljk2Nyw4Ni4xNzMgQzYuOTY3LDg2LjM4NyA3LjA3NCw4Ni41MSA3LjIzLDg2LjUxIEM3LjI5NCw4Ni41MSA3LjM2Nyw4Ni40ODkgNy40NDQsODYuNDQ0IEM3LjcwOCw4Ni4yOTIgNy45MjEsODUuOTI1IDcuOTIxLDg1LjYyMiBDNy45MjEsODUuNDA4IDcuODE0LDg1LjI4NCA3LjY1OCw4NS4yODQiIGlkPSJGaWxsLTE4IiBmaWxsPSIjODA5N0EyIj48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTc3LjI3OCw3Ljc2OSBMNzcuMjc4LDUxLjQzNiBMMTAuMjA4LDkwLjE2IEwxMC4yMDgsNDYuNDkzIEw3Ny4yNzgsNy43NjkiIGlkPSJGaWxsLTE5IiBmaWxsPSIjNDU1QTY0Ij48L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEwLjA4Myw5MC4zNzUgTDEwLjA4Myw0Ni40MjEgTDEwLjE0Niw0Ni4zODUgTDc3LjQwMyw3LjU1NCBMNzcuNDAzLDUxLjUwOCBMNzcuMzQxLDUxLjU0NCBMMTAuMDgzLDkwLjM3NSBMMTAuMDgzLDkwLjM3NSBaIE0xMC4zMzMsNDYuNTY0IEwxMC4zMzMsODkuOTQ0IEw3Ny4xNTQsNTEuMzY1IEw3Ny4xNTQsNy45ODUgTDEwLjMzMyw0Ni41NjQgTDEwLjMzMyw0Ni41NjQgWiIgaWQ9IkZpbGwtMjAiIGZpbGw9IiM2MDdEOEIiPjwvcGF0aD4KICAgICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMjUuNzM3LDg4LjY0NyBMMTE4LjA5OCw5MS45ODEgTDExOC4wOTgsODQgTDEwNi42MzksODguNzEzIEwxMDYuNjM5LDk2Ljk4MiBMOTksMTAwLjMxNSBMMTEyLjM2OSwxMDMuOTYxIEwxMjUuNzM3LDg4LjY0NyIgaWQ9IkltcG9ydGVkLUxheWVycy1Db3B5LTIiIGZpbGw9IiM0NTVBNjQiIHNrZXRjaDp0eXBlPSJNU1NoYXBlR3JvdXAiPjwvcGF0aD4KICAgICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgIDwvZz4KPC9zdmc+");\n},i.exports=M},{"./util.js":23}],18:[function(e,i,t){function M(e){this.kFilter=e,this.currentAccelMeasurement=new s,this.currentGyroMeasurement=new s,this.previousGyroMeasurement=new s,r.isIOS()?this.filterQ=new A.Quaternion(-1,0,0,1):this.filterQ=new A.Quaternion(1,0,0,1),this.previousFilterQ=new A.Quaternion,this.previousFilterQ.copy(this.filterQ),this.accelQ=new A.Quaternion,this.isOrientationInitialized=!1,this.estimatedGravity=new A.Vector3,this.measuredGravity=new A.Vector3,this.gyroIntegralQ=new A.Quaternion}var s=e("./sensor-sample.js"),A=e("../math-util.js"),r=e("../util.js");M.prototype.addAccelMeasurement=function(e,i){this.currentAccelMeasurement.set(e,i)},M.prototype.addGyroMeasurement=function(e,i){this.currentGyroMeasurement.set(e,i);var t=i-this.previousGyroMeasurement.timestampS;r.isTimestampDeltaValid(t)&&this.run_(),this.previousGyroMeasurement.copy(this.currentGyroMeasurement)},M.prototype.run_=function(){if(!this.isOrientationInitialized)return this.accelQ=this.accelToQuaternion_(this.currentAccelMeasurement.sample),this.previousFilterQ.copy(this.accelQ),void(this.isOrientationInitialized=!0);var e=this.currentGyroMeasurement.timestampS-this.previousGyroMeasurement.timestampS,i=this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample,e);this.gyroIntegralQ.multiply(i),this.filterQ.copy(this.previousFilterQ),this.filterQ.multiply(i);var t=new A.Quaternion;t.copy(this.filterQ),t.inverse(),this.estimatedGravity.set(0,0,-1),this.estimatedGravity.applyQuaternion(t),this.estimatedGravity.normalize(),this.measuredGravity.copy(this.currentAccelMeasurement.sample),this.measuredGravity.normalize();var M=new A.Quaternion;M.setFromUnitVectors(this.estimatedGravity,this.measuredGravity),M.inverse(),r.isDebug()&&console.log("Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)",A.radToDeg*r.getQuaternionAngle(M),this.estimatedGravity.x.toFixed(1),this.estimatedGravity.y.toFixed(1),this.estimatedGravity.z.toFixed(1),this.measuredGravity.x.toFixed(1),this.measuredGravity.y.toFixed(1),this.measuredGravity.z.toFixed(1));var s=new A.Quaternion;s.copy(this.filterQ),s.multiply(M),this.filterQ.slerp(s,1-this.kFilter),this.previousFilterQ.copy(this.filterQ)},M.prototype.getOrientation=function(){return this.filterQ},M.prototype.accelToQuaternion_=function(e){var i=new A.Vector3;i.copy(e),i.normalize();var t=new A.Quaternion;return t.setFromUnitVectors(new A.Vector3(0,0,-1),i),t.inverse(),t},M.prototype.gyroToQuaternionDelta_=function(e,i){var t=new A.Quaternion,M=new A.Vector3;return M.copy(e),M.normalize(),t.setFromAxisAngle(M,e.length()*i),t},i.exports=M},{"../math-util.js":15,"../util.js":23,"./sensor-sample.js":21}],19:[function(e,i,t){function M(){this.deviceId="webvr-polyfill:fused",this.deviceName="VR Position Device (webvr-polyfill:fused)",this.accelerometer=new n.Vector3,this.gyroscope=new n.Vector3,this.start(),this.filter=new s(WebVRConfig.K_FILTER),this.posePredictor=new A(WebVRConfig.PREDICTION_TIME_S),this.touchPanner=new r,this.filterToWorldQ=new n.Quaternion,u.isIOS()?this.filterToWorldQ.setFromAxisAngle(new n.Vector3(1,0,0),Math.PI/2):this.filterToWorldQ.setFromAxisAngle(new n.Vector3(1,0,0),-Math.PI/2),this.inverseWorldToScreenQ=new n.Quaternion,this.worldToScreenQ=new n.Quaternion,this.originalPoseAdjustQ=new n.Quaternion,this.originalPoseAdjustQ.setFromAxisAngle(new n.Vector3(0,0,1),-window.orientation*Math.PI/180),this.setScreenTransform_(),u.isLandscapeMode()&&this.filterToWorldQ.multiply(this.inverseWorldToScreenQ),this.resetQ=new n.Quaternion,this.isFirefoxAndroid=u.isFirefoxAndroid(),this.isIOS=u.isIOS(),this.orientationOut_=new Float32Array(4)}var s=e("./complementary-filter.js"),A=e("./pose-predictor.js"),r=e("../touch-panner.js"),n=e("../math-util.js"),u=e("../util.js");M.prototype.getPosition=function(){return null},M.prototype.getOrientation=function(){var e=this.filter.getOrientation();this.predictedQ=this.posePredictor.getPrediction(e,this.gyroscope,this.previousTimestampS);var i=new n.Quaternion;return i.copy(this.filterToWorldQ),i.multiply(this.resetQ),WebVRConfig.TOUCH_PANNER_DISABLED||i.multiply(this.touchPanner.getOrientation()),i.multiply(this.predictedQ),i.multiply(this.worldToScreenQ),WebVRConfig.YAW_ONLY&&(i.x=0,i.z=0,i.normalize()),this.orientationOut_[0]=i.x,this.orientationOut_[1]=i.y,this.orientationOut_[2]=i.z,this.orientationOut_[3]=i.w,this.orientationOut_},M.prototype.resetPose=function(){this.resetQ.copy(this.filter.getOrientation()),this.resetQ.x=0,this.resetQ.y=0,this.resetQ.z*=-1,this.resetQ.normalize(),u.isLandscapeMode()&&this.resetQ.multiply(this.inverseWorldToScreenQ),this.resetQ.multiply(this.originalPoseAdjustQ),WebVRConfig.TOUCH_PANNER_DISABLED||this.touchPanner.resetSensor()},M.prototype.onDeviceMotion_=function(e){this.updateDeviceMotion_(e)},M.prototype.updateDeviceMotion_=function(e){var i=e.accelerationIncludingGravity,t=e.rotationRate,M=e.timeStamp/1e3;this.isFirefoxAndroid&&(M/=1e3);var s=M-this.previousTimestampS;return s<=u.MIN_TIMESTEP||s>u.MAX_TIMESTEP?(console.warn("Invalid timestamps detected. Time step between successive gyroscope sensor samples is very small or not monotonic"),void(this.previousTimestampS=M)):(this.accelerometer.set(-i.x,-i.y,-i.z),this.gyroscope.set(t.alpha,t.beta,t.gamma),(this.isIOS||this.isFirefoxAndroid)&&this.gyroscope.multiplyScalar(Math.PI/180),this.filter.addAccelMeasurement(this.accelerometer,M),this.filter.addGyroMeasurement(this.gyroscope,M),void(this.previousTimestampS=M))},M.prototype.onOrientationChange_=function(e){this.setScreenTransform_()},M.prototype.onMessage_=function(e){var i=e.data;if(i&&i.type){var t=i.type.toLowerCase();"devicemotion"===t&&this.updateDeviceMotion_(i.deviceMotionEvent)}},M.prototype.setScreenTransform_=function(){switch(this.worldToScreenQ.set(0,0,0,1),window.orientation){case 0:break;case 90:this.worldToScreenQ.setFromAxisAngle(new n.Vector3(0,0,1),-Math.PI/2);break;case-90:this.worldToScreenQ.setFromAxisAngle(new n.Vector3(0,0,1),Math.PI/2);break;case 180:}this.inverseWorldToScreenQ.copy(this.worldToScreenQ),this.inverseWorldToScreenQ.inverse()},M.prototype.start=function(){this.onDeviceMotionCallback_=this.onDeviceMotion_.bind(this),this.onOrientationChangeCallback_=this.onOrientationChange_.bind(this),this.onMessageCallback_=this.onMessage_.bind(this),u.isIOS()&&u.isInsideCrossDomainIFrame()&&window.addEventListener("message",this.onMessageCallback_),window.addEventListener("orientationchange",this.onOrientationChangeCallback_),window.addEventListener("devicemotion",this.onDeviceMotionCallback_)},M.prototype.stop=function(){window.removeEventListener("devicemotion",this.onDeviceMotionCallback_),window.removeEventListener("orientationchange",this.onOrientationChangeCallback_),window.removeEventListener("message",this.onMessageCallback_)},i.exports=M},{"../math-util.js":15,"../touch-panner.js":22,"../util.js":23,"./complementary-filter.js":18,"./pose-predictor.js":20}],20:[function(e,i,t){function M(e){this.predictionTimeS=e,this.previousQ=new s.Quaternion,this.previousTimestampS=null,this.deltaQ=new s.Quaternion,this.outQ=new s.Quaternion}var s=e("../math-util"),A=e("../util");M.prototype.getPrediction=function(e,i,t){if(!this.previousTimestampS)return this.previousQ.copy(e),this.previousTimestampS=t,e;var M=new s.Vector3;M.copy(i),M.normalize();var r=i.length();if(r<20*s.degToRad)return A.isDebug()&&console.log("Moving slowly, at %s deg/s: no prediction",(s.radToDeg*r).toFixed(1)),this.outQ.copy(e),this.previousQ.copy(e),this.outQ;var n=(t-this.previousTimestampS,r*this.predictionTimeS);return this.deltaQ.setFromAxisAngle(M,n),this.outQ.copy(this.previousQ),this.outQ.multiply(this.deltaQ),this.previousQ.copy(e),this.previousTimestampS=t,this.outQ},i.exports=M},{"../math-util":15,"../util":23}],21:[function(e,i,t){function M(e,i){this.set(e,i)}M.prototype.set=function(e,i){this.sample=e,this.timestampS=i},M.prototype.copy=function(e){this.set(e.sample,e.timestampS)},i.exports=M},{}],22:[function(e,i,t){function M(){window.addEventListener("touchstart",this.onTouchStart_.bind(this)),window.addEventListener("touchmove",this.onTouchMove_.bind(this)),window.addEventListener("touchend",this.onTouchEnd_.bind(this)),this.isTouching=!1,this.rotateStart=new s.Vector2,this.rotateEnd=new s.Vector2,this.rotateDelta=new s.Vector2,this.theta=0,this.orientation=new s.Quaternion}var s=e("./math-util.js"),A=e("./util.js"),r=.5;M.prototype.getOrientation=function(){return this.orientation.setFromEulerXYZ(0,0,this.theta),this.orientation},M.prototype.resetSensor=function(){this.theta=0},M.prototype.onTouchStart_=function(e){1==e.touches.length&&(this.rotateStart.set(e.touches[0].pageX,e.touches[0].pageY),this.isTouching=!0)},M.prototype.onTouchMove_=function(e){if(this.isTouching){this.rotateEnd.set(e.touches[0].pageX,e.touches[0].pageY),this.rotateDelta.subVectors(this.rotateEnd,this.rotateStart),this.rotateStart.copy(this.rotateEnd),A.isIOS()&&(this.rotateDelta.x*=-1);var i=document.body;this.theta+=2*Math.PI*this.rotateDelta.x/i.clientWidth*r}},M.prototype.onTouchEnd_=function(e){this.isTouching=!1},i.exports=M},{"./math-util.js":15,"./util.js":23}],23:[function(e,i,t){var M=e("object-assign"),s=window.Util||{};s.MIN_TIMESTEP=.001,s.MAX_TIMESTEP=1,s.base64=function(e,i){return"data:"+e+";base64,"+i},s.clamp=function(e,i,t){return Math.min(Math.max(i,e),t)},s.lerp=function(e,i,t){return e+(i-e)*t},s.isIOS=function(){var e=/iPad|iPhone|iPod/.test(navigator.platform);return function(){return e}}(),s.isWebViewAndroid=function(){var e=navigator.userAgent.indexOf("Version")!==-1&&navigator.userAgent.indexOf("Android")!==-1&&navigator.userAgent.indexOf("Chrome")!==-1;return function(){return e}}(),s.isSafari=function(){var e=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);return function(){return e}}(),s.isFirefoxAndroid=function(){var e=navigator.userAgent.indexOf("Firefox")!==-1&&navigator.userAgent.indexOf("Android")!==-1;return function(){return e}}(),s.isLandscapeMode=function(){return 90==window.orientation||window.orientation==-90},s.isTimestampDeltaValid=function(e){return!isNaN(e)&&(!(e<=s.MIN_TIMESTEP)&&!(e>s.MAX_TIMESTEP))},s.getScreenWidth=function(){return Math.max(window.screen.width,window.screen.height)*window.devicePixelRatio},s.getScreenHeight=function(){return Math.min(window.screen.width,window.screen.height)*window.devicePixelRatio},s.requestFullscreen=function(e){if(s.isWebViewAndroid())return!1;if(e.requestFullscreen)e.requestFullscreen();else if(e.webkitRequestFullscreen)e.webkitRequestFullscreen();else if(e.mozRequestFullScreen)e.mozRequestFullScreen();else{if(!e.msRequestFullscreen)return!1;e.msRequestFullscreen()}return!0},s.exitFullscreen=function(){if(document.exitFullscreen)document.exitFullscreen();else if(document.webkitExitFullscreen)document.webkitExitFullscreen();else if(document.mozCancelFullScreen)document.mozCancelFullScreen();else{if(!document.msExitFullscreen)return!1;document.msExitFullscreen()}return!0},s.getFullscreenElement=function(){return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement},s.linkProgram=function(e,i,t,M){var s=e.createShader(e.VERTEX_SHADER);e.shaderSource(s,i),e.compileShader(s);var A=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(A,t),e.compileShader(A);var r=e.createProgram();e.attachShader(r,s),e.attachShader(r,A);for(var n in M)e.bindAttribLocation(r,M[n],n);return e.linkProgram(r),e.deleteShader(s),e.deleteShader(A),r},s.getProgramUniforms=function(e,i){for(var t={},M=e.getProgramParameter(i,e.ACTIVE_UNIFORMS),s="",A=0;A<M;A++){var r=e.getActiveUniform(i,A);s=r.name.replace("[0]",""),t[s]=e.getUniformLocation(i,s)}return t},s.orthoMatrix=function(e,i,t,M,s,A,r){var n=1/(i-t),u=1/(M-s),N=1/(A-r);return e[0]=-2*n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*u,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*N,e[11]=0,e[12]=(i+t)*n,e[13]=(s+M)*u,e[14]=(r+A)*N,e[15]=1,e},s.isMobile=function(){var e=!1;return function(i){(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(i)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(i.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e},s.extend=M,s.safariCssSizeWorkaround=function(e){if(s.isIOS()){var i=e.style.width,t=e.style.height;e.style.width=parseInt(i)+1+"px",e.style.height=parseInt(t)+"px",setTimeout(function(){e.style.width=i,e.style.height=t},100)}window.Util=s,window.canvas=e},s.isDebug=function(){return s.getQueryParameter("debug")},s.getQueryParameter=function(e){var e=e.replace(/[\\[]/,"\\\\[").replace(/[\\]]/,"\\\\]"),i=new RegExp("[\\\\?&]"+e+"=([^&#]*)"),t=i.exec(location.search);return null===t?"":decodeURIComponent(t[1].replace(/\\+/g," "))},s.frameDataFromPose=function(){function e(e,i,t,M){var s=Math.tan(i?i.upDegrees*A:r),n=Math.tan(i?i.downDegrees*A:r),u=Math.tan(i?i.leftDegrees*A:r),N=Math.tan(i?i.rightDegrees*A:r),a=2/(u+N),D=2/(s+n);return e[0]=a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=D,e[6]=0,e[7]=0,e[8]=-((u-N)*a*.5),e[9]=(s-n)*D*.5,e[10]=M/(t-M),e[11]=-1,e[12]=0,e[13]=0,e[14]=M*t/(t-M),e[15]=0,e}function i(e,i,t){var M=i[0],s=i[1],A=i[2],r=i[3],n=M+M,u=s+s,N=A+A,a=M*n,D=M*u,o=M*N,g=s*u,j=s*N,L=A*N,c=r*n,I=r*u,T=r*N;return e[0]=1-(g+L),e[1]=D+T,e[2]=o-I,e[3]=0,e[4]=D-T,e[5]=1-(a+L),e[6]=j+c,e[7]=0,e[8]=o+I,e[9]=j-c,e[10]=1-(a+g),e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e}function t(e,i,t){var M,s,A,r,n,u,N,a,D,o,g,j,L=t[0],c=t[1],I=t[2];return i===e?(e[12]=i[0]*L+i[4]*c+i[8]*I+i[12],e[13]=i[1]*L+i[5]*c+i[9]*I+i[13],e[14]=i[2]*L+i[6]*c+i[10]*I+i[14],e[15]=i[3]*L+i[7]*c+i[11]*I+i[15]):(M=i[0],s=i[1],A=i[2],r=i[3],n=i[4],u=i[5],N=i[6],a=i[7],D=i[8],o=i[9],g=i[10],j=i[11],e[0]=M,e[1]=s,e[2]=A,e[3]=r,e[4]=n,e[5]=u,e[6]=N,e[7]=a,e[8]=D,e[9]=o,e[10]=g,e[11]=j,e[12]=M*L+n*c+D*I+i[12],e[13]=s*L+u*c+o*I+i[13],e[14]=A*L+N*c+g*I+i[14],e[15]=r*L+a*c+j*I+i[15]),e}function M(e,i){var t=i[0],M=i[1],s=i[2],A=i[3],r=i[4],n=i[5],u=i[6],N=i[7],a=i[8],D=i[9],o=i[10],g=i[11],j=i[12],L=i[13],c=i[14],I=i[15],T=t*n-M*r,w=t*u-s*r,y=t*N-A*r,E=M*u-s*n,d=M*N-A*n,l=s*N-A*u,h=a*L-D*j,z=a*c-o*j,x=a*I-g*j,O=D*c-o*L,C=D*I-g*L,S=o*I-g*c,p=T*S-w*C+y*O+E*x-d*z+l*h;return p?(p=1/p,e[0]=(n*S-u*C+N*O)*p,e[1]=(s*C-M*S-A*O)*p,e[2]=(L*l-c*d+I*E)*p,e[3]=(o*d-D*l-g*E)*p,e[4]=(u*x-r*S-N*z)*p,e[5]=(t*S-s*x+A*z)*p,e[6]=(c*y-j*l-I*w)*p,e[7]=(a*l-o*y+g*w)*p,e[8]=(r*C-n*x+N*h)*p,e[9]=(M*x-t*C-A*h)*p,e[10]=(j*d-L*y+I*T)*p,e[11]=(D*y-a*d-g*T)*p,e[12]=(n*z-r*O-u*h)*p,e[13]=(t*O-M*z+s*h)*p,e[14]=(L*w-j*E-c*T)*p,e[15]=(a*E-D*w+o*T)*p,e):null}function s(s,A,r,N,a){e(s,N?N.fieldOfView:null,a.depthNear,a.depthFar);var D=r.orientation||n,o=r.position||u;i(A,D,o),N&&t(A,A,N.offset),M(A,A)}var A=Math.PI/180,r=.25*Math.PI,n=new Float32Array([0,0,0,1]),u=new Float32Array([0,0,0]);return function(e,i,t){return!(!e||!i)&&(e.pose=i,e.timestamp=i.timestamp,s(e.leftProjectionMatrix,e.leftViewMatrix,i,t.getEyeParameters("left"),t),s(e.rightProjectionMatrix,e.rightViewMatrix,i,t.getEyeParameters("right"),t),!0)}}(),s.isInsideCrossDomainIFrame=function(){var e=window.self!==window.top,i=s.getDomainFromUrl(document.referrer),t=s.getDomainFromUrl(window.location.href);return e&&i!==t},s.getDomainFromUrl=function(e){var i;return i=e.indexOf("://")>-1?e.split("/")[2]:e.split("/")[0],i=i.split(":")[0]},i.exports=s},{"object-assign":2}],24:[function(e,i,t){function M(){try{this.selectedKey=localStorage.getItem(n)||r}catch(e){console.error("Failed to load viewer profile: %s",e)}this.dialog=this.createDialog_(s.Viewers),this.root=null}var s=e("./device-info.js"),A=e("eventemitter3"),r=(e("./util.js"),"CardboardV1"),n="WEBVR_CARDBOARD_VIEWER",u="webvr-polyfill-viewer-selector";M.prototype=new A,M.prototype.show=function(e){this.root=e,e.appendChild(this.dialog);var i=this.dialog.querySelector("#"+this.selectedKey);i.checked=!0,this.dialog.style.display="block"},M.prototype.hide=function(){this.root&&this.root.contains(this.dialog)&&this.root.removeChild(this.dialog),this.dialog.style.display="none"},M.prototype.getCurrentViewer=function(){return s.Viewers[this.selectedKey]},M.prototype.getSelectedKey_=function(){var e=this.dialog.querySelector("input[name=field]:checked");return e?e.id:null},M.prototype.onSave_=function(){if(this.selectedKey=this.getSelectedKey_(),!this.selectedKey||!s.Viewers[this.selectedKey])return void console.error("ViewerSelector.onSave_: this should never happen!");this.emit("change",s.Viewers[this.selectedKey]);try{localStorage.setItem(n,this.selectedKey)}catch(e){console.error("Failed to save viewer profile: %s",e)}this.hide()},M.prototype.createDialog_=function(e){var i=document.createElement("div");i.classList.add(u),i.style.display="none";var t=document.createElement("div"),M=t.style;M.position="fixed",M.left=0,M.top=0,M.width="100%",M.height="100%",M.background="rgba(0, 0, 0, 0.3)",t.addEventListener("click",this.hide.bind(this));var s=280,A=document.createElement("div"),M=A.style;M.boxSizing="border-box",M.position="fixed",M.top="24px",M.left="50%",M.marginLeft=-s/2+"px",M.width=s+"px",M.padding="24px",M.overflow="hidden",M.background="#fafafa",M.fontFamily="\'Roboto\', sans-serif",M.boxShadow="0px 5px 20px #666",A.appendChild(this.createH1_("Select your viewer"));for(var r in e)A.appendChild(this.createChoice_(r,e[r].label));return A.appendChild(this.createButton_("Save",this.onSave_.bind(this))),i.appendChild(t),i.appendChild(A),i},M.prototype.createH1_=function(e){var i=document.createElement("h1"),t=i.style;return t.color="black",t.fontSize="20px",t.fontWeight="bold",t.marginTop=0,t.marginBottom="24px",i.innerHTML=e,i},M.prototype.createChoice_=function(e,i){var t=document.createElement("div");t.style.marginTop="8px",t.style.color="black";var M=document.createElement("input");M.style.fontSize="30px",M.setAttribute("id",e),M.setAttribute("type","radio"),M.setAttribute("value",e),M.setAttribute("name","field");var s=document.createElement("label");return s.style.marginLeft="4px",s.setAttribute("for",e),s.innerHTML=i,t.appendChild(M),t.appendChild(s),t},M.prototype.createButton_=function(e,i){var t=document.createElement("button");t.innerHTML=e;var M=t.style;return M.float="right",M.textTransform="uppercase",M.color="#1094f7",M.fontSize="14px",M.letterSpacing=0,M.border=0,M.background="none",M.marginTop="16px",t.addEventListener("click",i),t},i.exports=M},{"./device-info.js":8,"./util.js":23,eventemitter3:1}],25:[function(e,i,t){function M(){var e=document.createElement("video");e.addEventListener("ended",function(){e.play()}),this.request=function(){e.paused&&(e.src=r.base64("video/mp4","AAAAGGZ0eXBpc29tAAAAAG1wNDFhdmMxAAAIA21vb3YAAABsbXZoZAAAAADSa9v60mvb+gABX5AAlw/gAAEAAAEAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAdkdHJhawAAAFx0a2hkAAAAAdJr2/rSa9v6AAAAAQAAAAAAlw/gAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAQAAAAHAAAAAAAJGVkdHMAAAAcZWxzdAAAAAAAAAABAJcP4AAAAAAAAQAAAAAG3G1kaWEAAAAgbWRoZAAAAADSa9v60mvb+gAPQkAGjneAFccAAAAAAC1oZGxyAAAAAAAAAAB2aWRlAAAAAAAAAAAAAAAAVmlkZW9IYW5kbGVyAAAABodtaW5mAAAAFHZtaGQAAAABAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAAZHc3RibAAAAJdzdHNkAAAAAAAAAAEAAACHYXZjMQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAMABwASAAAAEgAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABj//wAAADFhdmNDAWQAC//hABlnZAALrNlfllw4QAAAAwBAAAADAKPFCmWAAQAFaOvssiwAAAAYc3R0cwAAAAAAAAABAAAAbgAPQkAAAAAUc3RzcwAAAAAAAAABAAAAAQAAA4BjdHRzAAAAAAAAAG4AAAABAD0JAAAAAAEAehIAAAAAAQA9CQAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEATEtAAAAAAQAehIAAAAABAAAAAAAAAAEAD0JAAAAAAQBMS0AAAAABAB6EgAAAAAEAAAAAAAAAAQAPQkAAAAABAExLQAAAAAEAHoSAAAAAAQAAAAAAAAABAA9CQAAAAAEALcbAAAAAHHN0c2MAAAAAAAAAAQAAAAEAAABuAAAAAQAAAcxzdHN6AAAAAAAAAAAAAABuAAADCQAAABgAAAAOAAAADgAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABIAAAAOAAAADAAAAAwAAAASAAAADgAAAAwAAAAMAAAAEgAAAA4AAAAMAAAADAAAABMAAAAUc3RjbwAAAAAAAAABAAAIKwAAACt1ZHRhAAAAI6llbmMAFwAAdmxjIDIuMi4xIHN0cmVhbSBvdXRwdXQAAAAId2lkZQAACRRtZGF0AAACrgX//6vcRem95tlIt5Ys2CDZI+7veDI2NCAtIGNvcmUgMTQyIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDEzIG1lPWhleCBzdWJtZT03IHBzeT0xIHBzeV9yZD0xLjAwOjAuMDAgbWl4ZWRfcmVmPTEgbWVfcmFuZ2U9MTYgY2hyb21hX21lPTEgdHJlbGxpcz0xIDh4OGRjdD0xIGNxbT0wIGRlYWR6b25lPTIxLDExIGZhc3RfcHNraXA9MSBjaHJvbWFfcXBfb2Zmc2V0PS0yIHRocmVhZHM9MTIgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTEgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD00MCByYz1hYnIgbWJ0cmVlPTEgYml0cmF0ZT0xMDAgcmF0ZXRvbD0xLjAgcWNvbXA9MC42MCBxcG1pbj0xMCBxcG1heD01MSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAU2WIhAAQ/8ltlOe+cTZuGkKg+aRtuivcDZ0pBsfsEi9p/i1yU9DxS2lq4dXTinViF1URBKXgnzKBd/Uh1bkhHtMrwrRcOJslD01UB+fyaL6ef+DBAAAAFEGaJGxBD5B+v+a+4QqF3MgBXz9MAAAACkGeQniH/+94r6EAAAAKAZ5hdEN/8QytwAAAAAgBnmNqQ3/EgQAAAA5BmmhJqEFomUwIIf/+4QAAAApBnoZFESw//76BAAAACAGepXRDf8SBAAAACAGep2pDf8SAAAAADkGarEmoQWyZTAgh//7gAAAACkGeykUVLD//voEAAAAIAZ7pdEN/xIAAAAAIAZ7rakN/xIAAAAAOQZrwSahBbJlMCCH//uEAAAAKQZ8ORRUsP/++gQAAAAgBny10Q3/EgQAAAAgBny9qQ3/EgAAAAA5BmzRJqEFsmUwIIf/+4AAAAApBn1JFFSw//76BAAAACAGfcXRDf8SAAAAACAGfc2pDf8SAAAAADkGbeEmoQWyZTAgh//7hAAAACkGflkUVLD//voAAAAAIAZ+1dEN/xIEAAAAIAZ+3akN/xIEAAAAOQZu8SahBbJlMCCH//uAAAAAKQZ/aRRUsP/++gQAAAAgBn/l0Q3/EgAAAAAgBn/tqQ3/EgQAAAA5Bm+BJqEFsmUwIIf/+4QAAAApBnh5FFSw//76AAAAACAGePXRDf8SAAAAACAGeP2pDf8SBAAAADkGaJEmoQWyZTAgh//7gAAAACkGeQkUVLD//voEAAAAIAZ5hdEN/xIAAAAAIAZ5jakN/xIEAAAAOQZpoSahBbJlMCCH//uEAAAAKQZ6GRRUsP/++gQAAAAgBnqV0Q3/EgQAAAAgBnqdqQ3/EgAAAAA5BmqxJqEFsmUwIIf/+4AAAAApBnspFFSw//76BAAAACAGe6XRDf8SAAAAACAGe62pDf8SAAAAADkGa8EmoQWyZTAgh//7hAAAACkGfDkUVLD//voEAAAAIAZ8tdEN/xIEAAAAIAZ8vakN/xIAAAAAOQZs0SahBbJlMCCH//uAAAAAKQZ9SRRUsP/++gQAAAAgBn3F0Q3/EgAAAAAgBn3NqQ3/EgAAAAA5Bm3hJqEFsmUwIIf/+4QAAAApBn5ZFFSw//76AAAAACAGftXRDf8SBAAAACAGft2pDf8SBAAAADkGbvEmoQWyZTAgh//7gAAAACkGf2kUVLD//voEAAAAIAZ/5dEN/xIAAAAAIAZ/7akN/xIEAAAAOQZvgSahBbJlMCCH//uEAAAAKQZ4eRRUsP/++gAAAAAgBnj10Q3/EgAAAAAgBnj9qQ3/EgQAAAA5BmiRJqEFsmUwIIf/+4AAAAApBnkJFFSw//76BAAAACAGeYXRDf8SAAAAACAGeY2pDf8SBAAAADkGaaEmoQWyZTAgh//7hAAAACkGehkUVLD//voEAAAAIAZ6ldEN/xIEAAAAIAZ6nakN/xIAAAAAOQZqsSahBbJlMCCH//uAAAAAKQZ7KRRUsP/++gQAAAAgBnul0Q3/EgAAAAAgBnutqQ3/EgAAAAA5BmvBJqEFsmUwIIf/+4QAAAApBnw5FFSw//76BAAAACAGfLXRDf8SBAAAACAGfL2pDf8SAAAAADkGbNEmoQWyZTAgh//7gAAAACkGfUkUVLD//voEAAAAIAZ9xdEN/xIAAAAAIAZ9zakN/xIAAAAAOQZt4SahBbJlMCCH//uEAAAAKQZ+WRRUsP/++gAAAAAgBn7V0Q3/EgQAAAAgBn7dqQ3/EgQAAAA5Bm7xJqEFsmUwIIf/+4AAAAApBn9pFFSw//76BAAAACAGf+XRDf8SAAAAACAGf+2pDf8SBAAAADkGb4EmoQWyZTAgh//7hAAAACkGeHkUVLD//voAAAAAIAZ49dEN/xIAAAAAIAZ4/akN/xIEAAAAOQZokSahBbJlMCCH//uAAAAAKQZ5CRRUsP/++gQAAAAgBnmF0Q3/EgAAAAAgBnmNqQ3/EgQAAAA5BmmhJqEFsmUwIIf/+4QAAAApBnoZFFSw//76BAAAACAGepXRDf8SBAAAACAGep2pDf8SAAAAADkGarEmoQWyZTAgh//7gAAAACkGeykUVLD//voEAAAAIAZ7pdEN/xIAAAAAIAZ7rakN/xIAAAAAPQZruSahBbJlMFEw3//7B"),e.play())},this.release=function(){e.pause(),e.src=""}}function s(){var e=null;this.request=function(){e||(e=setInterval(function(){window.location=window.location,setTimeout(window.stop,0)},3e4))},this.release=function(){e&&(clearInterval(e),e=null)}}function A(){var e=navigator.userAgent||navigator.vendor||window.opera;return e.match(/iPhone/i)||e.match(/iPod/i)?s:M}var r=e("./util.js");i.exports=A()},{"./util.js":23}],26:[function(e,i,t){function M(){this.displays=[],this.devices=[],this.devicesPopulated=!1,this.nativeWebVRAvailable=this.isWebVRAvailable(),this.nativeLegacyWebVRAvailable=this.isDeprecatedWebVRAvailable(),this.nativeGetVRDisplaysFunc=this.nativeWebVRAvailable?navigator.getVRDisplays:null,this.nativeLegacyWebVRAvailable||(this.enablePolyfill(),WebVRConfig.ENABLE_DEPRECATED_API&&this.enableDeprecatedPolyfill()),s()}function s(){"VRDisplay"in window&&!("VRFrameData"in window)&&(window.VRFrameData=N,"depthNear"in window.VRDisplay.prototype||(window.VRDisplay.prototype.depthNear=.01),"depthFar"in window.VRDisplay.prototype||(window.VRDisplay.prototype.depthFar=1e4),window.VRDisplay.prototype.getFrameData=function(e){return A.frameDataFromPose(e,this.getPose(),this)})}var A=e("./util.js"),r=e("./cardboard-vr-display.js"),n=e("./mouse-keyboard-vr-display.js"),u=e("./base.js").VRDisplay,N=e("./base.js").VRFrameData,a=e("./base.js").HMDVRDevice,D=e("./base.js").PositionSensorVRDevice,o=e("./display-wrappers.js").VRDisplayHMDDevice,g=e("./display-wrappers.js").VRDisplayPositionSensorDevice;M.prototype.isWebVRAvailable=function(){return"getVRDisplays"in navigator},M.prototype.isDeprecatedWebVRAvailable=function(){return"getVRDevices"in navigator||"mozGetVRDevices"in navigator},M.prototype.populateDevices=function(){if(!this.devicesPopulated){var e=null;this.isCardboardCompatible()&&(e=new r,this.displays.push(e),WebVRConfig.ENABLE_DEPRECATED_API&&(this.devices.push(new o(e)),this.devices.push(new g(e)))),this.isMobile()||WebVRConfig.MOUSE_KEYBOARD_CONTROLS_DISABLED||(e=new n,this.displays.push(e),WebVRConfig.ENABLE_DEPRECATED_API&&(this.devices.push(new o(e)),this.devices.push(new g(e)))),this.devicesPopulated=!0}},M.prototype.enablePolyfill=function(){navigator.getVRDisplays=this.getVRDisplays.bind(this),window.VRDisplay=u;var e=this;Object.defineProperty(navigator,"vrEnabled",{get:function(){return e.isCardboardCompatible()&&(e.isFullScreenAvailable()||A.isIOS())}}),!1 in window&&(window.VRFrameData=N)},M.prototype.enableDeprecatedPolyfill=function(){navigator.getVRDevices=this.getVRDevices.bind(this),window.HMDVRDevice=a,window.PositionSensorVRDevice=D},M.prototype.getVRDisplays=function(){this.populateDevices();var e=this.displays;return this.nativeWebVRAvailable?this.nativeGetVRDisplaysFunc.call(navigator).then(function(i){return WebVRConfig.ALWAYS_APPEND_POLYFILL_DISPLAY?i.concat(e):i.length>0?i:e}):new Promise(function(i,t){try{i(e)}catch(e){t(e)}})},M.prototype.getVRDevices=function(){console.warn("getVRDevices is deprecated. Please update your code to use getVRDisplays instead.");var e=this;return new Promise(function(i,t){try{if(!e.devicesPopulated){if(e.nativeWebVRAvailable)return navigator.getVRDisplays(function(t){for(var M=0;M<t.length;++M)e.devices.push(new o(t[M])),e.devices.push(new g(t[M]));e.devicesPopulated=!0,i(e.devices)},t);if(e.nativeLegacyWebVRAvailable)return(navigator.getVRDDevices||navigator.mozGetVRDevices)(function(t){for(var M=0;M<t.length;++M)t[M]instanceof a&&e.devices.push(t[M]),t[M]instanceof D&&e.devices.push(t[M]);e.devicesPopulated=!0,i(e.devices)},t)}e.populateDevices(),i(e.devices)}catch(e){t(e)}})},M.prototype.isMobile=function(){return/Android/i.test(navigator.userAgent)||/iPhone|iPad|iPod/i.test(navigator.userAgent)},M.prototype.isCardboardCompatible=function(){return this.isMobile()||WebVRConfig.FORCE_ENABLE_VR},M.prototype.isFullScreenAvailable=function(){return document.fullscreenEnabled||document.mozFullScreenEnabled||document.webkitFullscreenEnabled||!1},i.exports.WebVRPolyfill=M},{"./base.js":3,"./cardboard-vr-display.js":6,"./display-wrappers.js":9,"./mouse-keyboard-vr-display.js":16,"./util.js":23}]},{},[14])(14)});\n}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})\n\n},{}],50:[function(_dereq_,module,exports){\nfunction idxOf(e,n,r,t){var i=e.indexOf(n,r);return i===-1||i>t?t:i}function isWhitespace(e){return whitespace.test(e)}function pre(e,n,r,t,i){for(var a=[],o=r,s=r;s<t&&s<n.length;s++){var h=n.charAt(s),u=newline.test(h);if(u||s===t-1){var f=u?s:s+1,p=e(n,o,f,i);a.push(p),o=s+1}}return a}function greedy(e,n,r,t,i,a){var o=[],s=i;for("nowrap"===a&&(s=Number.MAX_VALUE);r<t&&r<n.length;){for(var h=idxOf(n,newlineChar,r,t);r<h&&isWhitespace(n.charAt(r));)r++;var u=e(n,r,h,s),f=r+(u.end-u.start),p=f+newlineChar.length;if(f<h){for(;f>r&&!isWhitespace(n.charAt(f));)f--;if(f===r)p>r+newlineChar.length&&p--,f=p;else for(p=f;f>r&&isWhitespace(n.charAt(f-newlineChar.length));)f--}if(f>=r){var c=e(n,r,f,s);o.push(c)}r=p}return o}function monospace(e,n,r,t){var i=Math.min(t,r-n);return{start:n,end:n+i}}var newline=/\\n/,newlineChar="\\n",whitespace=/\\s/;module.exports=function(e,n){var r=module.exports.lines(e,n);return r.map(function(n){return e.substring(n.start,n.end)}).join("\\n")},module.exports.lines=function(e,n){if(n=n||{},0===n.width&&"nowrap"!==n.mode)return[];e=e||"";var r="number"==typeof n.width?n.width:Number.MAX_VALUE,t=Math.max(0,n.start||0),i="number"==typeof n.end?n.end:e.length,a=n.mode,o=n.measure||monospace;return"pre"===a?pre(o,e,t,i,r):greedy(o,e,t,i,r,a)};\n},{}],51:[function(_dereq_,module,exports){\n"use strict";function forEachArray(e,t){for(var r=0;r<e.length;r++)t(e[r])}function isEmpty(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}function initParams(e,t,r){var n=e;return isFunction(t)?(r=t,"string"==typeof e&&(n={uri:e})):n=xtend(t,{uri:e}),n.callback=r,n}function createXHR(e,t,r){return t=initParams(e,t,r),_createXHR(t)}function _createXHR(e){function t(){4===i.readyState&&o()}function r(){var e=void 0;if(e=i.response?i.response:i.responseText||getXml(i),X)try{e=JSON.parse(e)}catch(e){}return e}function n(e){return clearTimeout(d),e instanceof Error||(e=new Error(""+(e||"Unknown XMLHttpRequest Error"))),e.statusCode=0,a(e,h)}function o(){if(!c){var t;clearTimeout(d),t=e.useXDR&&void 0===i.status?200:1223===i.status?204:i.status;var n=h,o=null;return 0!==t?(n={body:r(),statusCode:t,method:l,headers:{},url:p,rawRequest:i},i.getAllResponseHeaders&&(n.headers=parseHeaders(i.getAllResponseHeaders()))):o=new Error("Internal XMLHttpRequest Error"),a(o,n,n.body)}}if("undefined"==typeof e.callback)throw new Error("callback argument missing");var s=!1,a=function(t,r,n){s||(s=!0,e.callback(t,r,n))},i=e.xhr||null;i||(i=e.cors||e.useXDR?new createXHR.XDomainRequest:new createXHR.XMLHttpRequest);var u,c,d,p=i.url=e.uri||e.url,l=i.method=e.method||"GET",f=e.body||e.data,m=i.headers=e.headers||{},R=!!e.sync,X=!1,h={body:void 0,headers:{},statusCode:0,method:l,url:p,rawRequest:i};if("json"in e&&e.json!==!1&&(X=!0,m.accept||m.Accept||(m.Accept="application/json"),"GET"!==l&&"HEAD"!==l&&(m["content-type"]||m["Content-Type"]||(m["Content-Type"]="application/json"),f=JSON.stringify(e.json===!0?f:e.json))),i.onreadystatechange=t,i.onload=o,i.onerror=n,i.onprogress=function(){},i.onabort=function(){c=!0},i.ontimeout=n,i.open(l,p,!R,e.username,e.password),R||(i.withCredentials=!!e.withCredentials),!R&&e.timeout>0&&(d=setTimeout(function(){if(!c){c=!0,i.abort("timeout");var e=new Error("XMLHttpRequest timeout");e.code="ETIMEDOUT",n(e)}},e.timeout)),i.setRequestHeader)for(u in m)m.hasOwnProperty(u)&&i.setRequestHeader(u,m[u]);else if(e.headers&&!isEmpty(e.headers))throw new Error("Headers cannot be set on an XDomainRequest object");return"responseType"in e&&(i.responseType=e.responseType),"beforeSend"in e&&"function"==typeof e.beforeSend&&e.beforeSend(i),i.send(f||null),i}function getXml(e){if("document"===e.responseType)return e.responseXML;var t=204===e.status&&e.responseXML&&"parsererror"===e.responseXML.documentElement.nodeName;return""!==e.responseType||t?null:e.responseXML}function noop(){}var window=_dereq_("global/window"),isFunction=_dereq_("is-function"),parseHeaders=_dereq_("parse-headers"),xtend=_dereq_("xtend");module.exports=createXHR,createXHR.XMLHttpRequest=window.XMLHttpRequest||noop,createXHR.XDomainRequest="withCredentials"in new createXHR.XMLHttpRequest?createXHR.XMLHttpRequest:window.XDomainRequest,forEachArray(["get","put","post","patch","head","delete"],function(e){createXHR["delete"===e?"del":e]=function(t,r,n){return r=initParams(t,r,n),r.method=e.toUpperCase(),_createXHR(r)}});\n},{"global/window":14,"is-function":19,"parse-headers":30,"xtend":53}],52:[function(_dereq_,module,exports){\nmodule.exports=function(){return"undefined"!=typeof window.DOMParser?function(e){var n=new window.DOMParser;return n.parseFromString(e,"application/xml")}:"undefined"!=typeof window.ActiveXObject&&new window.ActiveXObject("Microsoft.XMLDOM")?function(e){var n=new window.ActiveXObject("Microsoft.XMLDOM");return n.async="false",n.loadXML(e),n}:function(e){var n=document.createElement("div");return n.innerHTML=e,n}}();\n},{}],53:[function(_dereq_,module,exports){\nfunction extend(){for(var r={},e=0;e<arguments.length;e++){var t=arguments[e];for(var n in t)hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r}module.exports=extend;var hasOwnProperty=Object.prototype.hasOwnProperty;\n},{}],54:[function(_dereq_,module,exports){\nmodule.exports={"name":"aframe","version":"0.5.0","description":"A web framework for building virtual reality experiences.","homepage":"https://aframe.io/","main":"dist/aframe-master.js","scripts":{"browserify":"browserify src/index.js -s \'AFRAME\' -p browserify-derequire","build":"shx mkdir -p build/ && npm run browserify -- --debug -t [envify --INSPECTOR_VERSION dev] -o build/aframe.js","codecov":"codecov","dev":"npm run build && cross-env INSPECTOR_VERSION=dev node ./scripts/budo -t envify","dist":"node scripts/updateVersionLog.js && npm run dist:min && npm run dist:max","dist:max":"npm run browserify -s -- --debug | exorcist dist/aframe-master.js.map > dist/aframe-master.js","dist:min":"npm run browserify -s -- --debug -p [minifyify --map aframe-master.min.js.map --output dist/aframe-master.min.js.map] -o dist/aframe-master.min.js","docs":"markserv --dir docs --port 9001","preghpages":"node ./scripts/preghpages.js","ghpages":"ghpages -p gh-pages/","lint":"semistandard -v | snazzy","lint:fix":"semistandard --fix","precommit":"npm run lint","prerelease":"npm run dist && node scripts/release.js 0.4.0 0.5.0","start":"npm run dev","test":"karma start ./tests/karma.conf.js","test:docs":"node scripts/docsLint.js","test:firefox":"npm test -- --browsers Firefox","test:chrome":"npm test -- --browsers Chrome","test:node":"mocha --ui tdd tests/node"},"repository":"aframevr/aframe","license":"MIT","dependencies":{"browserify-css":"^0.8.2","debug":"ngokevin/debug#noTimestamp","deep-assign":"^2.0.0","document-register-element":"dmarcos/document-register-element#8ccc532b7","envify":"^3.4.1","load-bmfont":"^1.2.3","object-assign":"^4.0.1","present":"0.0.6","promise-polyfill":"^3.1.0","style-attr":"^1.0.2","three":"^0.84.0","three-bmfont-text":"^2.1.0","tween.js":"^15.0.0","webvr-polyfill":"dmarcos/webvr-polyfill#a02a8089b"},"devDependencies":{"browserify":"^13.1.0","browserify-derequire":"^0.9.4","browserify-istanbul":"^2.0.0","budo":"^9.2.0","chai":"^3.5.0","chai-shallow-deep-equal":"^1.4.0","chalk":"^1.1.3","codecov":"^1.0.1","cross-env":"^4.0.0","exorcist":"^0.4.0","ghpages":"0.0.8","git-rev":"^0.2.1","glob":"^7.1.1","husky":"^0.11.7","istanbul":"^0.4.5","jsdom":"^9.11.0","karma":"1.4.1","karma-browserify":"^5.1.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.1.1","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.1.1","karma-mocha-reporter":"^2.1.0","karma-sinon-chai":"^1.2.4","lolex":"^1.5.1","markserv":"0.0.20","minifyify":"^7.3.3","mocha":"^3.0.2","mozilla-download":"^1.1.1","replace":"^0.3.0","semistandard":"^9.0.0","shelljs":"^0.7.7","shx":"^0.2.2","sinon":"^1.17.5","sinon-chai":"^2.8.0","snazzy":"^5.0.0","too-wordy":"ngokevin/too-wordy","uglifyjs":"^2.4.10","write-good":"^0.9.1"},"link":true,"browserify":{"transform":["browserify-css","envify"]},"semistandard":{"ignore":["build/**","dist/**","examples/**/shaders/*.js","**/vendor/**"]},"keywords":["3d","aframe","cardboard","components","oculus","three","three.js","rift","vive","vr","web-components","webvr"],"browserify-css":{"minify":true},"engines":{"node":">= 4.6.0","npm":"^2.15.9"}}\n},{}],55:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three");module.exports.Component=registerComponent("blend-character-model",{schema:{type:"asset"},init:function(){this.model=null},update:function(){var e=this,o=this.el,t=this.data;t&&(this.remove(),this.model=new THREE.BlendCharacter,this.model.load(t,function(){o.setObject3D("mesh",e.model),o.emit("model-loaded",{format:"blend",model:e.model}),e.model.castShadow=!0,e.model.receiveShadow=!0,e.model.material.shading=THREE.FlatShading,e.model.geometry.computeBoundingBox()}))},remove:function(){this.model&&this.el.removeObject3D("mesh")}});\n},{"../core/component":102,"../lib/three":149}],56:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),bind=utils.bind,checkHasPositionalTracking=utils.device.checkHasPositionalTracking;module.exports.Component=registerComponent("camera",{schema:{active:{default:!0},far:{default:1e4},fov:{default:80,min:0},near:{default:.005,min:0},userHeight:{default:0,min:0},zoom:{default:1,min:0}},init:function(){var t,e=this.el,i=e.sceneEl;this.savedPose=null,t=this.camera=new THREE.PerspectiveCamera,e.setObject3D("camera",t),this.onEnterVR=bind(this.onEnterVR,this),this.onExitVR=bind(this.onExitVR,this),i.addEventListener("enter-vr",this.onEnterVR),i.addEventListener("exit-vr",this.onExitVR)},update:function(t){var e=this.el,i=this.data,s=this.camera,a=this.system;this.addHeightOffset(t.userHeight),s.aspect=i.aspect||window.innerWidth/window.innerHeight,s.far=i.far,s.fov=i.fov,s.near=i.near,s.zoom=i.zoom,s.updateProjectionMatrix(),t&&t.active===i.active||(i.active&&a.activeCameraEl!==e?a.setActiveCamera(e):i.active||a.activeCameraEl!==e||a.disableActiveCamera())},remove:function(){var t=this.el.sceneEl;this.el.removeObject3D("camera"),t.removeEventListener("enter-vr",this.onEnterVR),t.removeEventListener("exit-vr",this.onExitVR)},onEnterVR:function(){this.saveCameraPose(),this.removeHeightOffset()},onExitVR:function(){this.restoreCameraPose()},addHeightOffset:function(t){var e,i=this.el,s=this.data.userHeight;t=t||0,e=i.getAttribute("position")||{x:0,y:0,z:0},i.setAttribute("position",{x:e.x,y:e.y-t+s,z:e.z})},removeHeightOffset:function(){var t,e,i=this.el,s=this.data.userHeight;e=void 0!==this.hasPositionalTracking?this.hasPositionalTracking:checkHasPositionalTracking(),s&&e&&(t=i.getAttribute("position")||{x:0,y:0,z:0},i.setAttribute("position",{x:t.x,y:t.y-s,z:t.z}))},saveCameraPose:function(){var t=this.el,e=void 0!==this.hasPositionalTracking?this.hasPositionalTracking:checkHasPositionalTracking();!this.savedPose&&e&&(this.savedPose={position:t.getAttribute("position"),rotation:t.getAttribute("rotation")})},restoreCameraPose:function(){var t=this.el,e=this.savedPose,i=void 0!==this.hasPositionalTracking?this.hasPositionalTracking:checkHasPositionalTracking();e&&i&&(t.setAttribute("position",e.position),t.setAttribute("rotation",e.rotation),this.savedPose=null)}});\n},{"../core/component":102,"../lib/three":149,"../utils/":172}],57:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three");module.exports.Component=registerComponent("collada-model",{schema:{type:"asset"},init:function(){this.model=null,this.loader=new THREE.ColladaLoader,this.loader.options.convertUpAxis=!0},update:function(){var e=this,o=this.el,t=this.data;t&&(this.remove(),this.loader.load(t,function(t){e.model=t.scene,o.setObject3D("mesh",e.model),o.emit("model-loaded",{format:"collada",model:e.model})}))},remove:function(){this.model&&this.el.removeObject3D("mesh")}});\n},{"../core/component":102,"../lib/three":149}],58:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,utils=_dereq_("../utils/"),bind=utils.bind,EVENTS={CLICK:"click",FUSING:"fusing",MOUSEENTER:"mouseenter",MOUSEDOWN:"mousedown",MOUSELEAVE:"mouseleave",MOUSEUP:"mouseup"},STATES={FUSING:"cursor-fusing",HOVERING:"cursor-hovering",HOVERED:"cursor-hovered"};module.exports.Component=registerComponent("cursor",{dependencies:["raycaster"],schema:{fuse:{default:utils.device.isMobile()},fuseTimeout:{default:1500,min:0}},init:function(){var e=this.el,t=e.sceneEl.canvas;return this.fuseTimeout=void 0,this.mouseDownEl=null,this.intersection=null,this.intersectedEl=null,t?(this.onMouseDown=bind(this.onMouseDown,this),this.onMouseUp=bind(this.onMouseUp,this),this.onIntersection=bind(this.onIntersection,this),this.onIntersectionCleared=bind(this.onIntersectionCleared,this),t.addEventListener("mousedown",this.onMouseDown),t.addEventListener("mouseup",this.onMouseUp),e.addEventListener("raycaster-intersection",this.onIntersection),void e.addEventListener("raycaster-intersection-cleared",this.onIntersectionCleared)):void e.sceneEl.addEventListener("render-target-loaded",bind(this.init,this))},remove:function(){var e=this.el,t=e.sceneEl.canvas;e.removeState(STATES.HOVERING),e.removeState(STATES.FUSING),e.removeEventListener("raycaster-intersection",this.onIntersection),e.removeEventListener("raycaster-intersection-cleared",this.onIntersectionCleared),clearTimeout(this.fuseTimeout),this.intersectedEl&&this.intersectedEl.removeState(STATES.HOVERED),t&&(t.removeEventListener("mousedown",this.onMouseDown),t.removeEventListener("mouseup",this.onMouseUp))},onMouseDown:function(e){this.twoWayEmit(EVENTS.MOUSEDOWN),this.mouseDownEl=this.intersectedEl},onMouseUp:function(e){this.twoWayEmit(EVENTS.MOUSEUP),!this.data.fuse&&this.intersectedEl&&this.mouseDownEl===this.intersectedEl&&this.twoWayEmit(EVENTS.CLICK)},onIntersection:function(e){var t,i,s,n=this,o=this.el,r=this.data;if(t=e.detail.els[0]===o?1:0,s=e.detail.intersections[t],i=e.detail.els[t]){if(this.intersectedEl===i)return void(this.intersection=s);this.intersectedEl&&this.clearCurrentIntersection(),this.intersection=s,this.intersectedEl=i,o.addState(STATES.HOVERING),i.addState(STATES.HOVERED),n.twoWayEmit(EVENTS.MOUSEENTER),0!==r.fuseTimeout&&r.fuse&&(o.addState(STATES.FUSING),this.twoWayEmit(EVENTS.FUSING),this.fuseTimeout=setTimeout(function(){o.removeState(STATES.FUSING),n.twoWayEmit(EVENTS.CLICK)},r.fuseTimeout))}},onIntersectionCleared:function(e){var t=this.el,i=e.detail.el;t!==i&&i===this.intersectedEl&&this.clearCurrentIntersection()},clearCurrentIntersection:function(){var e=this.el;this.intersectedEl.removeState(STATES.HOVERED),e.removeState(STATES.HOVERING),e.removeState(STATES.FUSING),this.twoWayEmit(EVENTS.MOUSELEAVE),this.intersection=null,this.intersectedEl=null,clearTimeout(this.fuseTimeout)},twoWayEmit:function(e){var t=this.el,i=this.intersectedEl,s=this.intersection;t.emit(e,{intersectedEl:i,intersection:s}),i&&i.emit(e,{cursorEl:t,intersection:s})}});\n},{"../core/component":102,"../utils/":172}],59:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,bind=_dereq_("../utils/bind"),checkControllerPresentAndSetup=_dereq_("../utils/tracked-controls").checkControllerPresentAndSetup,emitIfAxesChanged=_dereq_("../utils/tracked-controls").emitIfAxesChanged,DAYDREAM_CONTROLLER_MODEL_BASE_URL="https://cdn.aframe.io/controllers/google/",DAYDREAM_CONTROLLER_MODEL_OBJ_URL=DAYDREAM_CONTROLLER_MODEL_BASE_URL+"vr_controller_daydream.obj",DAYDREAM_CONTROLLER_MODEL_OBJ_MTL=DAYDREAM_CONTROLLER_MODEL_BASE_URL+"vr_controller_daydream.mtl",GAMEPAD_ID_PREFIX="Daydream Controller";module.exports.Component=registerComponent("daydream-controls",{schema:{hand:{default:""},buttonColor:{type:"color",default:"#000000"},buttonTouchedColor:{type:"color",default:"#777777"},buttonHighlightColor:{type:"color",default:"#FFFFFF"},model:{default:!0},rotationOffset:{default:0}},mapping:{axes:{trackpad:[0,1]},buttons:["trackpad","menu","system"]},axisLabels:["x","y","z","w"],bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this),this.onControllersUpdate=bind(this.onControllersUpdate,this),this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this),this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this),this.onAxisMoved=bind(this.onAxisMoved,this),this.onGamepadConnectionEvent=bind(this.onGamepadConnectionEvent,this)},init:function(){var t=this;this.animationActive="pointing",this.onButtonDown=function(e){t.onButtonEvent(e.detail.id,"down")},this.onButtonUp=function(e){t.onButtonEvent(e.detail.id,"up")},this.onButtonTouchStart=function(e){t.onButtonEvent(e.detail.id,"touchstart")},this.onButtonTouchEnd=function(e){t.onButtonEvent(e.detail.id,"touchend")},this.onAxisMoved=bind(this.onAxisMoved,this),this.controllerPresent=!1,this.everGotGamepadEvent=!1,this.lastControllerCheck=0,this.bindMethods(),this.checkControllerPresentAndSetup=checkControllerPresentAndSetup,this.emitIfAxesChanged=emitIfAxesChanged},addEventListeners:function(){var t=this.el;t.addEventListener("buttondown",this.onButtonDown),t.addEventListener("buttonup",this.onButtonUp),t.addEventListener("touchstart",this.onButtonTouchStart),t.addEventListener("touchend",this.onButtonTouchEnd),t.addEventListener("model-loaded",this.onModelLoaded),t.addEventListener("axismove",this.onAxisMoved)},removeEventListeners:function(){var t=this.el;t.removeEventListener("buttondown",this.onButtonDown),t.removeEventListener("buttonup",this.onButtonUp),t.removeEventListener("touchstart",this.onButtonTouchStart),t.removeEventListener("touchend",this.onButtonTouchEnd),t.removeEventListener("model-loaded",this.onModelLoaded),t.removeEventListener("axismove",this.onAxisMoved)},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{hand:this.data.hand})},onGamepadConnectionEvent:function(t){this.everGotGamepadEvent=!0,this.checkIfControllerPresent()},play:function(){this.checkIfControllerPresent(),this.addControllersUpdateListener(),window.addEventListener("gamepadconnected",this.onGamepadConnectionEvent,!1),window.addEventListener("gamepaddisconnected",this.onGamepadConnectionEvent,!1)},pause:function(){this.removeEventListeners(),this.removeControllersUpdateListener(),window.removeEventListener("gamepadconnected",this.onGamepadConnectionEvent,!1),window.removeEventListener("gamepaddisconnected",this.onGamepadConnectionEvent,!1)},injectTrackedControls:function(){var t=this.el,e=this.data;t.setAttribute("tracked-controls",{idPrefix:GAMEPAD_ID_PREFIX,hand:e.hand,rotationOffset:e.rotationOffset}),this.data.model&&this.el.setAttribute("obj-model",{obj:DAYDREAM_CONTROLLER_MODEL_OBJ_URL,mtl:DAYDREAM_CONTROLLER_MODEL_OBJ_MTL})},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener("controllersupdated",this.onControllersUpdate,!1)},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener("controllersupdated",this.onControllersUpdate,!1)},onControllersUpdate:function(){this.everGotGamepadEvent||this.checkIfControllerPresent()},onModelLoaded:function(t){var e,n=t.detail.model;this.data.model&&(e=this.buttonMeshes={},e.menu=n.getObjectByName("AppButton_AppButton_Cylinder.004"),e.system=n.getObjectByName("HomeButton_HomeButton_Cylinder.005"),e.trackpad=n.getObjectByName("TouchPad_TouchPad_Cylinder.003"),n.position.set(0,0,-.04))},onAxisMoved:function(t){this.emitIfAxesChanged(this,this.mapping.axes,t)},onButtonEvent:function(t,e){var n,o=this.mapping.buttons[t];if(Array.isArray(o))for(n=0;n<o.length;n++)this.el.emit(o[n]+e);else this.el.emit(o+e);this.updateModel(o,e)},updateModel:function(t,e){var n;if(this.data.model)if(Array.isArray(t))for(n=0;n<t.length;n++)this.updateButtonModel(t[n],e);else this.updateButtonModel(t,e)},updateButtonModel:function(t,e){var n=this.buttonMeshes;if(n&&n[t]){var o;switch(e){case"down":o=this.data.buttonHighlightColor;break;case"touchstart":o=this.data.buttonTouchedColor;break;default:o=this.data.buttonColor}n[t].material.color.set(o)}}});\n},{"../core/component":102,"../utils/bind":166,"../utils/tracked-controls":176}],60:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,bind=_dereq_("../utils/bind"),checkControllerPresentAndSetup=_dereq_("../utils/tracked-controls").checkControllerPresentAndSetup,emitIfAxesChanged=_dereq_("../utils/tracked-controls").emitIfAxesChanged,GEARVR_CONTROLLER_MODEL_BASE_URL="https://cdn.aframe.io/controllers/samsung/",GEARVR_CONTROLLER_MODEL_OBJ_URL=GEARVR_CONTROLLER_MODEL_BASE_URL+"gear_vr_controller.obj",GEARVR_CONTROLLER_MODEL_OBJ_MTL=GEARVR_CONTROLLER_MODEL_BASE_URL+"gear_vr_controller.mtl",GAMEPAD_ID_PREFIX="Gear VR";module.exports.Component=registerComponent("gearvr-controls",{schema:{hand:{default:""},buttonColor:{type:"color",default:"#000000"},buttonTouchedColor:{type:"color",default:"#777777"},buttonHighlightColor:{type:"color",default:"#FFFFFF"},model:{default:!0},rotationOffset:{default:0}},mapping:{axes:{trackpad:[0,1]},buttons:["trackpad","trigger"]},axisLabels:["x","y","z","w"],bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this),this.onControllersUpdate=bind(this.onControllersUpdate,this),this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this),this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this),this.onAxisMoved=bind(this.onAxisMoved,this),this.onGamepadConnectionEvent=bind(this.onGamepadConnectionEvent,this)},init:function(){var t=this;this.animationActive="pointing",this.onButtonDown=function(e){t.onButtonEvent(e.detail.id,"down")},this.onButtonUp=function(e){t.onButtonEvent(e.detail.id,"up")},this.onButtonTouchStart=function(e){t.onButtonEvent(e.detail.id,"touchstart")},this.onButtonTouchEnd=function(e){t.onButtonEvent(e.detail.id,"touchend")},this.onAxisMoved=bind(this.onAxisMoved,this),this.controllerPresent=!1,this.everGotGamepadEvent=!1,this.lastControllerCheck=0,this.bindMethods(),this.checkControllerPresentAndSetup=checkControllerPresentAndSetup,this.emitIfAxesChanged=emitIfAxesChanged},addEventListeners:function(){var t=this.el;t.addEventListener("buttondown",this.onButtonDown),t.addEventListener("buttonup",this.onButtonUp),t.addEventListener("touchstart",this.onButtonTouchStart),t.addEventListener("touchend",this.onButtonTouchEnd),t.addEventListener("model-loaded",this.onModelLoaded),t.addEventListener("axismove",this.onAxisMoved),this.addControllersUpdateListener()},removeEventListeners:function(){var t=this.el;t.removeEventListener("buttondown",this.onButtonDown),t.removeEventListener("buttonup",this.onButtonUp),t.removeEventListener("touchstart",this.onButtonTouchStart),t.removeEventListener("touchend",this.onButtonTouchEnd),t.removeEventListener("model-loaded",this.onModelLoaded),t.removeEventListener("axismove",this.onAxisMoved),this.removeControllersUpdateListener()},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,this.data.hand?{hand:this.data.hand}:{})},onGamepadConnectionEvent:function(t){this.checkIfControllerPresent()},play:function(){this.checkIfControllerPresent(),window.addEventListener("gamepaddisconnected",this.checkIfControllerPresent,!1),this.addControllersUpdateListener()},pause:function(){this.removeEventListeners(),this.removeControllersUpdateListener(),window.removeEventListener("gamepaddisconnected",this.checkIfControllerPresent,!1)},injectTrackedControls:function(){var t=this.el,e=this.data;t.setAttribute("tracked-controls",{idPrefix:GAMEPAD_ID_PREFIX,rotationOffset:e.rotationOffset}),this.data.model&&this.el.setAttribute("obj-model",{obj:GEARVR_CONTROLLER_MODEL_OBJ_URL,mtl:GEARVR_CONTROLLER_MODEL_OBJ_MTL})},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener("controllersupdated",this.onControllersUpdate,!1)},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener("controllersupdated",this.onControllersUpdate,!1)},onControllersUpdate:function(){this.checkIfControllerPresent()},onModelLoaded:function(t){var e,n=t.detail.model;this.data.model&&(e=this.buttonMeshes={},e.trigger=n.getObjectByName("Trigger"),e.trackpad=n.getObjectByName("Touchpad"))},onButtonEvent:function(t,e){var n,o=this.mapping.buttons[t];if(Array.isArray(o))for(n=0;n<o.length;n++)this.el.emit(o[n]+e);else this.el.emit(o+e);this.updateModel(o,e)},onAxisMoved:function(t){this.emitIfAxesChanged(this,this.mapping.axes,t)},updateModel:function(t,e){var n;if(this.data.model)if(Array.isArray(t))for(n=0;n<t.length;n++)this.updateButtonModel(t[n],e);else this.updateButtonModel(t,e)},updateButtonModel:function(t,e){var n=this.buttonMeshes;if(n&&n[t]){var o;switch(e){case"down":o=this.data.buttonHighlightColor;break;case"touchstart":o=this.data.buttonTouchedColor;break;default:o=this.data.buttonColor}n[t].material.color.set(o)}}});\n},{"../core/component":102,"../utils/bind":166,"../utils/tracked-controls":176}],61:[function(_dereq_,module,exports){\nvar debug=_dereq_("../utils/debug"),geometries=_dereq_("../core/geometry").geometries,geometryNames=_dereq_("../core/geometry").geometryNames,registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),dummyGeometry=new THREE.Geometry,warn=debug("components:geometry:warn");module.exports.Component=registerComponent("geometry",{schema:{buffer:{default:!0},mergeTo:{type:"selector"},primitive:{default:"box",oneOf:geometryNames},skipCache:{default:!1}},init:function(){this.geometry=null},update:function(e){var t=this.data,r=this.el.getOrCreateObject3D("mesh",THREE.Mesh),o=this.system;this.geometry&&(o.unuseGeometry(e),this.geometry=null),this.geometry=r.geometry=o.getOrCreateGeometry(t),t.mergeTo&&this.mergeTo(t.mergeTo)},mergeTo:function(e){var t,r=this.el,o=r.getObject3D("mesh");return e&&e.isEntity?e===r?void warn("Source and target geometries cannot be the same for merge"):(t=e.getObject3D("mesh"))?t.geometry instanceof THREE.Geometry==!1||o.geometry instanceof THREE.Geometry==!1?void warn("Geometry merge is only available for `THREE.Geometry` types. Check that both of the merging geometry and the target geometry have `buffer` set to false"):this.data.skipCache===!1?void warn("Cached geometries are not allowed to merge. Set `skipCache` to true"):(o.parent.updateMatrixWorld(),t.geometry.merge(o.geometry,o.matrixWorld),r.emit("geometry-merged",{mergeTarget:e}),void r.parentNode.removeChild(r)):(t=e.getOrCreateObject3D("mesh",THREE.Mesh),void e.setAttribute("material",r.getAttribute("material"))):void warn("There is not a valid entity to merge the geometry to")},remove:function(){this.system.unuseGeometry(this.data),this.el.getObject3D("mesh").geometry=dummyGeometry,this.geometry=null},updateSchema:function(e){var t=e.primitive,r=this.data&&this.data.primitive,o=geometries[t]&&geometries[t].schema;if(!o)throw new Error("Unknown geometry schema `"+t+"`");r&&r===t||this.extendSchema(o)}});\n},{"../core/component":102,"../core/geometry":103,"../lib/three":149,"../utils/debug":168}],62:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three");module.exports.Component=registerComponent("gltf-model",{schema:{type:"model"},init:function(){this.model=null,this.loader=new THREE.GLTFLoader},update:function(){var e=this,o=this.el,t=this.data;t&&(this.remove(),this.loader.load(t,function(t){e.model=t.scene||t.scenes[0],e.model.animations=t.animations,e.system.registerModel(e.model),o.setObject3D("mesh",e.model),o.emit("model-loaded",{format:"gltf",model:e.model})}))},remove:function(){this.model&&(this.el.removeObject3D("mesh"),this.system.unregisterModel(this.model))}});\n},{"../core/component":102,"../lib/three":149}],63:[function(_dereq_,module,exports){\nfunction getGestureEventName(t,n){var e;if(t)return e=EVENTS[t],"grip"===e?e+(n?"close":"open"):"point"===e||"thumb"===e?e+(n?"up":"down"):"pointing"===e||"pistol"===e?e+(n?"start":"end"):void 0}function isOculusTouchController(t){var n=t&&t.controller&&t.controller.id;return n&&0===n.indexOf("Oculus Touch")}var registerComponent=_dereq_("../core/component").registerComponent,MODEL_URLS={left:"https://cdn.aframe.io/controllers/oculus-hands/v2/leftHand.json",right:"https://cdn.aframe.io/controllers/oculus-hands/v2/rightHand.json"},ANIMATIONS={open:"Open",point:"Point",pointThumb:"Point + Thumb",fist:"Fist",hold:"Hold",thumbUp:"Thumb Up"},EVENTS={};EVENTS[ANIMATIONS.fist]="grip",EVENTS[ANIMATIONS.thumbUp]="pistol",EVENTS[ANIMATIONS.point]="pointing",EVENTS[ANIMATIONS.thumb]="thumb",module.exports.Component=registerComponent("hand-controls",{schema:{default:"left"},init:function(){var t=this;this.gesture=ANIMATIONS.open,this.pressedButtons={},this.touchedButtons={},this.onGripDown=function(){t.handleButton("grip","down")},this.onGripUp=function(){t.handleButton("grip","up")},this.onTrackpadDown=function(){t.handleButton("trackpad","down")},this.onTrackpadUp=function(){t.handleButton("trackpad","up")},this.onTrackpadTouchStart=function(){t.handleButton("trackpad","touchstart")},this.onTrackpadTouchEnd=function(){t.handleButton("trackpad","touchend")},this.onTriggerDown=function(){t.handleButton("trigger","down")},this.onTriggerUp=function(){t.handleButton("trigger","up")},this.onTriggerTouchStart=function(){t.handleButton("trigger","touchstart")},this.onTriggerTouchEnd=function(){t.handleButton("trigger","touchend")},this.onGripTouchStart=function(){t.handleButton("grip","touchstart")},this.onGripTouchEnd=function(){t.handleButton("grip","touchend")},this.onThumbstickDown=function(){t.handleButton("thumbstick","down")},this.onThumbstickUp=function(){t.handleButton("thumbstick","up")},this.onAorXTouchStart=function(){t.handleButton("AorX","touchstart")},this.onAorXTouchEnd=function(){t.handleButton("AorX","touchend")},this.onBorYTouchStart=function(){t.handleButton("BorY","touchstart")},this.onBorYTouchEnd=function(){t.handleButton("BorY","touchend")},this.onSurfaceTouchStart=function(){t.handleButton("surface","touchstart")},this.onSurfaceTouchEnd=function(){t.handleButton("surface","touchend")}},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners()},addEventListeners:function(){var t=this.el;t.addEventListener("gripdown",this.onGripDown),t.addEventListener("gripup",this.onGripUp),t.addEventListener("trackpaddown",this.onTrackpadDown),t.addEventListener("trackpadup",this.onTrackpadUp),t.addEventListener("trackpadtouchstart",this.onTrackpadTouchStart),t.addEventListener("trackpadtouchend",this.onTrackpadTouchEnd),t.addEventListener("triggerdown",this.onTriggerDown),t.addEventListener("triggerup",this.onTriggerUp),t.addEventListener("triggertouchstart",this.onTriggerTouchStart),t.addEventListener("triggertouchend",this.onTriggerTouchEnd),t.addEventListener("griptouchstart",this.onGripTouchStart),t.addEventListener("griptouchend",this.onGripTouchEnd),t.addEventListener("thumbstickdown",this.onThumbstickDown),t.addEventListener("thumbstickup",this.onThumbstickUp),t.addEventListener("abuttontouchstart",this.onAorXTouchStart),t.addEventListener("abuttontouchend",this.onAorXTouchEnd),t.addEventListener("bbuttontouchstart",this.onBorYTouchStart),t.addEventListener("bbuttontouchend",this.onBorYTouchEnd),t.addEventListener("xbuttontouchstart",this.onAorXTouchStart),t.addEventListener("xbuttontouchend",this.onAorXTouchEnd),t.addEventListener("ybuttontouchstart",this.onBorYTouchStart),t.addEventListener("ybuttontouchend",this.onBorYTouchEnd),t.addEventListener("surfacetouchstart",this.onSurfaceTouchStart),t.addEventListener("surfacetouchend",this.onSurfaceTouchEnd)},removeEventListeners:function(){var t=this.el;t.removeEventListener("gripdown",this.onGripDown),t.removeEventListener("gripup",this.onGripUp),t.removeEventListener("trackpaddown",this.onTrackpadDown),t.removeEventListener("trackpadup",this.onTrackpadUp),t.removeEventListener("trackpadtouchstart",this.onTrackpadTouchStart),t.removeEventListener("trackpadtouchend",this.onTrackpadTouchEnd),t.removeEventListener("triggerdown",this.onTriggerDown),t.removeEventListener("triggerup",this.onTriggerUp),t.removeEventListener("triggertouchstart",this.onTriggerTouchStart),t.removeEventListener("triggertouchend",this.onTriggerTouchEnd),t.removeEventListener("griptouchstart",this.onGripTouchStart),t.removeEventListener("griptouchend",this.onGripTouchEnd),t.removeEventListener("thumbstickdown",this.onThumbstickDown),t.removeEventListener("thumbstickup",this.onThumbstickUp),t.removeEventListener("abuttontouchstart",this.onAorXTouchStart),t.removeEventListener("abuttontouchend",this.onAorXTouchEnd),t.removeEventListener("bbuttontouchstart",this.onBorYTouchStart),t.removeEventListener("bbuttontouchend",this.onBorYTouchEnd),t.removeEventListener("xbuttontouchstart",this.onAorXTouchStart),t.removeEventListener("xbuttontouchend",this.onAorXTouchEnd),t.removeEventListener("ybuttontouchstart",this.onBorYTouchStart),t.removeEventListener("ybuttontouchend",this.onBorYTouchEnd),t.removeEventListener("surfacetouchstart",this.onSurfaceTouchStart),t.removeEventListener("surfacetouchend",this.onSurfaceTouchEnd)},update:function(){var t,n=this.el,e=this.data;t={hand:e,model:!1,rotationOffset:"left"===e?90:-90},n.setAttribute("vive-controls",t),n.setAttribute("oculus-touch-controls",t),n.setAttribute("daydream-controls",t),n.setAttribute("gearvr-controls",t),n.setAttribute("blend-character-model",MODEL_URLS[e])},handleButton:function(t,n){var e,o="down"===n,r="touchstart"===n;if(0===n.indexOf("touch")){if(r===this.touchedButtons[t])return;this.touchedButtons[t]=r}else{if(o===this.pressedButtons[t])return;this.pressedButtons[t]=o}e=this.gesture,this.gesture=this.determineGesture(),this.gesture!==e&&(this.animateGesture(this.gesture,e),this.emitGestureEvents(this.gesture,e))},determineGesture:function(){var t,n=this.pressedButtons.grip,e=this.pressedButtons.surface||this.touchedButtons.surface,o=this.pressedButtons.trackpad||this.touchedButtons.trackpad,r=this.pressedButtons.trigger||this.touchedButtons.trigger,i=this.touchedButtons.AorX||this.touchedButtons.BorY,s=isOculusTouchController(this.el.components["tracked-controls"]);return n?t=s?e||i||o?r?ANIMATIONS.fist:ANIMATIONS.point:r?ANIMATIONS.thumbUp:ANIMATIONS.pointThumb:ANIMATIONS.fist:r?t=s?ANIMATIONS.hold:ANIMATIONS.fist:!s&&o&&(t=ANIMATIONS.point),t},animateGesture:function(t,n){return t?void this.playAnimation(t||ANIMATIONS.open,n,!1):void this.playAnimation(n,n,!0)},emitGestureEvents:function(t,n){var e,o=this.el;n!==t&&(e=getGestureEventName(n,!1),e&&o.emit(e),e=getGestureEventName(t,!0),e&&o.emit(e))},playAnimation:function(t,n,e){var o,r,i=this.el.getObject3D("mesh");if(i){if(r=i.mixer.clipAction(t),r.clampWhenFinished=!0,r.loop=THREE.PingPong,r.repetitions=0,r.timeScale=e?-1:1,!n||t===n)return i.stopAll(),void i.play(t,1);o=i.mixer.clipAction(n),i.mixer.stopAllAction(),i.play(n,.15),i.play(t,1),o.crossFadeTo(r,.15,!0)}}});\n},{"../core/component":102}],64:[function(_dereq_,module,exports){\n_dereq_("./blend-character-model"),_dereq_("./camera"),_dereq_("./collada-model"),_dereq_("./cursor"),_dereq_("./daydream-controls"),_dereq_("./gearvr-controls"),_dereq_("./geometry"),_dereq_("./gltf-model"),_dereq_("./hand-controls"),_dereq_("./light"),_dereq_("./look-controls"),_dereq_("./material"),_dereq_("./obj-model"),_dereq_("./oculus-touch-controls"),_dereq_("./position"),_dereq_("./raycaster"),_dereq_("./rotation"),_dereq_("./scale"),_dereq_("./shadow"),_dereq_("./sound"),_dereq_("./text"),_dereq_("./tracked-controls"),_dereq_("./visible"),_dereq_("./vive-controls"),_dereq_("./wasd-controls"),_dereq_("./scene/auto-enter-vr"),_dereq_("./scene/canvas"),_dereq_("./scene/debug"),_dereq_("./scene/embedded"),_dereq_("./scene/inspector"),_dereq_("./scene/fog"),_dereq_("./scene/keyboard-shortcuts"),_dereq_("./scene/pool"),_dereq_("./scene/screenshot"),_dereq_("./scene/stats"),_dereq_("./scene/vr-mode-ui");\n},{"./blend-character-model":55,"./camera":56,"./collada-model":57,"./cursor":58,"./daydream-controls":59,"./gearvr-controls":60,"./geometry":61,"./gltf-model":62,"./hand-controls":63,"./light":65,"./look-controls":66,"./material":67,"./obj-model":68,"./oculus-touch-controls":69,"./position":70,"./raycaster":71,"./rotation":72,"./scale":73,"./scene/auto-enter-vr":74,"./scene/canvas":75,"./scene/debug":76,"./scene/embedded":77,"./scene/fog":78,"./scene/inspector":79,"./scene/keyboard-shortcuts":80,"./scene/pool":81,"./scene/screenshot":82,"./scene/stats":83,"./scene/vr-mode-ui":84,"./shadow":85,"./sound":86,"./text":87,"./tracked-controls":88,"./visible":89,"./vive-controls":90,"./wasd-controls":91}],65:[function(_dereq_,module,exports){\nvar bind=_dereq_("../utils/bind"),diff=_dereq_("../utils").diff,debug=_dereq_("../utils/debug"),registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad,warn=debug("components:light:warn");module.exports.Component=registerComponent("light",{schema:{angle:{default:60,if:{type:["spot"]}},color:{type:"color"},groundColor:{type:"color",if:{type:["hemisphere"]}},decay:{default:1,if:{type:["point","spot"]}},distance:{default:0,min:0,if:{type:["point","spot"]}},intensity:{default:1,min:0,if:{type:["ambient","directional","hemisphere","point","spot"]}},penumbra:{default:0,min:0,max:1,if:{type:["spot"]}},type:{default:"directional",oneOf:["ambient","directional","hemisphere","point","spot"]},target:{type:"selector",if:{type:["spot","directional"]}},castShadow:{default:!1,if:{type:["point","spot","directional"]}},shadowBias:{default:0,if:{castShadow:!0}},shadowCameraFar:{default:500,if:{castShadow:!0}},shadowCameraFov:{default:90,if:{castShadow:!0}},shadowCameraNear:{default:.5,if:{castShadow:!0}},shadowCameraTop:{default:5,if:{castShadow:!0}},shadowCameraRight:{default:5,if:{castShadow:!0}},shadowCameraBottom:{default:-5,if:{castShadow:!0}},shadowCameraLeft:{default:-5,if:{castShadow:!0}},shadowCameraVisible:{default:!1,if:{castShadow:!0}},shadowMapHeight:{default:512,if:{castShadow:!0}},shadowMapWidth:{default:512,if:{castShadow:!0}}},init:function(){var e=this.el;this.light=null,this.defaultTarget=null,this.system.registerLight(e)},update:function(e){var a=this.data,t=diff(a,e),o=this.light,i=this;if(o&&!("type"in t)){var r=!1;return void Object.keys(t).forEach(function(e){var t=a[e];switch(e){case"color":o.color.set(t);break;case"groundColor":o.groundColor.set(t);break;case"angle":o.angle=degToRad(t);break;case"target":null===t?"spot"!==a.type&&"directional"!==a.type||(o.target=i.defaultTarget):t.hasLoaded?i.onSetTarget(t,o):t.addEventListener("loaded",bind(i.onSetTarget,i,t,o));break;case"castShadow":case"shadowBias":case"shadowCameraFar":case"shadowCameraFov":case"shadowCameraNear":case"shadowCameraTop":case"shadowCameraRight":case"shadowCameraBottom":case"shadowCameraLeft":case"shadowCameraVisible":case"shadowMapHeight":case"shadowMapWidth":r||(i.updateShadow(),r=!0);break;default:o[e]=t}})}this.setLight(this.data),this.updateShadow()},setLight:function(e){var a=this.el,t=this.getLight(e);t&&(this.light&&a.removeObject3D("light"),this.light=t,this.light.el=a,a.setObject3D("light",this.light),"spot"!==e.type&&"directional"!==e.type&&"hemisphere"!==e.type||a.getObject3D("light").translateY(-1),"spot"===e.type&&(a.setObject3D("light-target",this.defaultTarget),a.getObject3D("light-target").position.set(0,0,-1)))},updateShadow:function(){var e=this.el,a=this.data,t=this.light;t.castShadow=a.castShadow;var o=e.getObject3D("cameraHelper");return a.shadowCameraVisible&&!o?e.setObject3D("cameraHelper",new THREE.CameraHelper(t.shadow.camera)):!a.shadowCameraVisible&&o&&e.removeObject3D("cameraHelper"),a.castShadow?(t.shadow.bias=a.shadowBias,t.shadow.mapSize.height=a.shadowMapHeight,t.shadow.mapSize.width=a.shadowMapWidth,t.shadow.camera.near=a.shadowCameraNear,t.shadow.camera.far=a.shadowCameraFar,t.shadow.camera instanceof THREE.OrthographicCamera?(t.shadow.camera.top=a.shadowCameraTop,t.shadow.camera.right=a.shadowCameraRight,t.shadow.camera.bottom=a.shadowCameraBottom,t.shadow.camera.left=a.shadowCameraLeft):t.shadow.camera.fov=a.shadowCameraFov,t.shadow.camera.updateProjectionMatrix(),void(o&&o.update())):t},getLight:function(e){var a=e.angle,t=new THREE.Color(e.color).getHex(),o=e.decay,i=e.distance,r=new THREE.Color(e.groundColor).getHex(),s=e.intensity,d=e.type,h=e.target,n=null;switch(d.toLowerCase()){case"ambient":return new THREE.AmbientLight(t,s);case"directional":return n=new THREE.DirectionalLight(t,s),this.defaultTarget=n.target,h&&(h.hasLoaded?this.onSetTarget(h,n):h.addEventListener("loaded",bind(this.onSetTarget,this,h,n))),n;case"hemisphere":return new THREE.HemisphereLight(t,r,s);case"point":return new THREE.PointLight(t,s,i,o);case"spot":return n=new THREE.SpotLight(t,s,i,degToRad(a),e.penumbra,o),this.defaultTarget=n.target,h&&(h.hasLoaded?this.onSetTarget(h,n):h.addEventListener("loaded",bind(this.onSetTarget,this,h,n))),n;default:warn("%s is not a valid light type. Choose from ambient, directional, hemisphere, point, spot.",d)}},onSetTarget:function(e,a){a.target=e.object3D},remove:function(){var e=this.el;e.removeObject3D("light"),e.getObject3D("cameraHelper")&&e.removeObject3D("cameraHelper")}});\n},{"../core/component":102,"../lib/three":149,"../utils":172,"../utils/bind":166,"../utils/debug":168}],66:[function(_dereq_,module,exports){\nfunction isNullVector(t){return 0===t.x&&0===t.y&&0===t.z}var registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),isMobile=_dereq_("../utils/").device.isMobile(),bind=_dereq_("../utils/bind"),PI_2=Math.PI/2,radToDeg=THREE.Math.radToDeg;module.exports.Component=registerComponent("look-controls",{dependencies:["position","rotation"],schema:{enabled:{default:!0},hmdEnabled:{default:!0},reverseMouseDrag:{default:!1},standing:{default:!0}},init:function(){var t=this.el.sceneEl;this.previousHMDPosition=new THREE.Vector3,this.hmdQuaternion=new THREE.Quaternion,this.hmdEuler=new THREE.Euler,this.setupMouseControls(),this.setupHMDControls(),this.bindMethods(),this.setEnabled(this.data.enabled),t.addEventListener("exit-vr",this.onExitVR)},update:function(t){var e=this.data,o=e.hmdEnabled;t&&e.enabled!==t.enabled&&this.setEnabled(e.enabled),e.enabled&&(!o&&t&&o!==t.hmdEnabled&&(this.pitchObject.rotation.set(0,0,0),this.yawObject.rotation.set(0,0,0)),this.controls.standing=e.standing,this.controls.update(),this.updateOrientation(),this.updatePosition())},setEnabled:function(t){function e(){i.canvas.classList.add("a-grab-cursor")}function o(){i.canvas.classList.remove("a-grab-cursor")}var i=this.el.sceneEl;i.canvas?t?e():o():t?i.addEventListener("render-target-loaded",e):i.addEventListener("render-target-loaded",o)},play:function(){this.addEventListeners()},pause:function(){this.removeEventListeners()},tick:function(t){this.update()},remove:function(){this.pause()},bindMethods:function(){this.onMouseDown=bind(this.onMouseDown,this),this.onMouseMove=bind(this.onMouseMove,this),this.releaseMouse=bind(this.releaseMouse,this),this.onTouchStart=bind(this.onTouchStart,this),this.onTouchMove=bind(this.onTouchMove,this),this.onTouchEnd=bind(this.onTouchEnd,this),this.onExitVR=bind(this.onExitVR,this)},setupMouseControls:function(){this.mouseDown=!1,this.pitchObject=new THREE.Object3D,this.yawObject=new THREE.Object3D,this.yawObject.position.y=10,this.yawObject.add(this.pitchObject)},setupHMDControls:function(){this.dolly=new THREE.Object3D,this.euler=new THREE.Euler,this.controls=new THREE.VRControls(this.dolly),this.controls.userHeight=0},addEventListeners:function(){var t=this.el.sceneEl,e=t.canvas;return e?(e.addEventListener("mousedown",this.onMouseDown,!1),window.addEventListener("mousemove",this.onMouseMove,!1),window.addEventListener("mouseup",this.releaseMouse,!1),e.addEventListener("touchstart",this.onTouchStart),window.addEventListener("touchmove",this.onTouchMove),void window.addEventListener("touchend",this.onTouchEnd)):void t.addEventListener("render-target-loaded",bind(this.addEventListeners,this))},removeEventListeners:function(){var t=this.el.sceneEl,e=t&&t.canvas;e&&(e.removeEventListener("mousedown",this.onMouseDown),e.removeEventListener("mousemove",this.onMouseMove),e.removeEventListener("mouseup",this.releaseMouse),e.removeEventListener("mouseout",this.releaseMouse),e.removeEventListener("touchstart",this.onTouchStart),e.removeEventListener("touchmove",this.onTouchMove),e.removeEventListener("touchend",this.onTouchEnd))},updateOrientation:function(){var t,e,o,i=this.hmdEuler,n=this.pitchObject,s=this.yawObject,a=this.calculateHMDQuaternion(),r=this.el.sceneEl;i.setFromQuaternion(a,"YXZ"),isMobile?o={x:radToDeg(i.x)+radToDeg(n.rotation.x),y:radToDeg(i.y)+radToDeg(s.rotation.y),z:radToDeg(i.z)}:r.is("vr-mode")&&!isNullVector(i)&&this.data.hmdEnabled?o={x:radToDeg(i.x),y:radToDeg(i.y),z:radToDeg(i.z)}:(t=this.el.getAttribute("rotation"),e=this.calculateDeltaRotation(),o=this.data.reverseMouseDrag?{x:t.x-e.x,y:t.y-e.y,z:t.z}:{x:t.x+e.x,y:t.y+e.y,z:t.z}),this.el.setAttribute("rotation",o)},calculateDeltaRotation:function(){var t,e=radToDeg(this.pitchObject.rotation.x),o=radToDeg(this.yawObject.rotation.y);return this.previousRotationX=this.previousRotationX||e,this.previousRotationY=this.previousRotationY||o,t={x:e-this.previousRotationX,y:o-this.previousRotationY},this.previousRotationX=e,this.previousRotationY=o,t},calculateHMDQuaternion:function(){var t=this.hmdQuaternion;return t.copy(this.dolly.quaternion),t},updatePosition:function(){var t=new THREE.Vector3;return function(){var e,o=this.el,i=o.getAttribute("position"),n=this.previousHMDPosition,s=this.el.sceneEl;e=this.calculateHMDPosition(),t.copy(e).sub(n),s.is("vr-mode")&&!isNullVector(t)&&(n.copy(e),s.is("vr-mode")&&o.setAttribute("position",{x:i.x+t.x,y:i.y+t.y,z:i.z+t.z}))}}(),calculateHMDPosition:function(){var t=this.dolly,e=new THREE.Vector3;return t.updateMatrix(),e.setFromMatrixPosition(t.matrix),e},onMouseMove:function(t){var e=this.pitchObject,o=this.yawObject,i=this.previousMouseEvent;if(this.mouseDown&&this.data.enabled){var n=t.movementX||t.mozMovementX,s=t.movementY||t.mozMovementY;void 0!==n&&void 0!==s||(n=t.screenX-i.screenX,s=t.screenY-i.screenY),this.previousMouseEvent=t,o.rotation.y-=.002*n,e.rotation.x-=.002*s,e.rotation.x=Math.max(-PI_2,Math.min(PI_2,e.rotation.x))}},onMouseDown:function(t){this.data.enabled&&0===t.button&&(this.mouseDown=!0,this.previousMouseEvent=t,document.body.classList.add("a-grabbing"))},releaseMouse:function(){this.mouseDown=!1,document.body.classList.remove("a-grabbing")},onTouchStart:function(t){1===t.touches.length&&(this.touchStart={x:t.touches[0].pageX,y:t.touches[0].pageY},this.touchStarted=!0)},onTouchMove:function(t){var e,o=this.yawObject;this.touchStarted&&(e=2*Math.PI*(t.touches[0].pageX-this.touchStart.x)/this.el.sceneEl.canvas.clientWidth,o.rotation.y-=.5*e,this.touchStart={x:t.touches[0].pageX,y:t.touches[0].pageY})},onTouchEnd:function(){this.touchStarted=!1},onExitVR:function(){this.previousHMDPosition.set(0,0,0)}});\n},{"../core/component":102,"../lib/three":149,"../utils/":172,"../utils/bind":166}],67:[function(_dereq_,module,exports){\nfunction parseSide(e){switch(e){case"back":return THREE.BackSide;case"double":return THREE.DoubleSide;default:return THREE.FrontSide}}function disposeMaterial(e,t){e.dispose(),t.unregisterMaterial(e)}var utils=_dereq_("../utils/"),component=_dereq_("../core/component"),THREE=_dereq_("../lib/three"),shader=_dereq_("../core/shader"),error=utils.debug("components:material:error"),registerComponent=component.registerComponent,shaders=shader.shaders,shaderNames=shader.shaderNames;module.exports.Component=registerComponent("material",{schema:{depthTest:{default:!0},depthWrite:{default:!0},alphaTest:{default:0,min:0,max:1},flatShading:{default:!1},opacity:{default:1,min:0,max:1},shader:{default:"standard",oneOf:shaderNames},side:{default:"front",oneOf:["front","back","double"]},transparent:{default:!1},visible:{default:!0},offset:{type:"vec2",default:{x:0,y:0}},repeat:{type:"vec2",default:{x:1,y:1}},npot:{default:!1}},init:function(){this.material=null},update:function(e){var t=this.data;this.shader&&t.shader===e.shader||this.updateShader(t.shader),this.shader.update(this.data),this.updateMaterial()},updateSchema:function(e){var t=e.shader,a=this.data&&this.data.shader,i=t||a,s=shaders[i]&&shaders[i].schema;s||error("Unknown shader schema "+i),a&&t===a||(this.extendSchema(s),this.updateBehavior())},updateBehavior:function(){var e=this.schema,t=this,a=this.el.sceneEl,i={},s=function(e,a){Object.keys(i).forEach(function(t){i[t]=e}),t.shader.update(i)};this.tick=void 0,Object.keys(e).forEach(function(a){"time"===e[a].type&&(t.tick=s,i[a]=!0)}),a&&(this.tick?a.addBehavior(this):a.removeBehavior(this))},updateShader:function(e){var t,a=this.data,i=shaders[e]&&shaders[e].Shader;if(!i)throw new Error("Unknown shader "+e);t=this.shader=new i,t.el=this.el,t.init(a),this.setMaterial(t.material),this.updateSchema(a)},updateMaterial:function(){var e=this.data,t=this.material,a=!1,i=parseSide(e.side);(t.side===THREE.DoubleSide&&i!==THREE.DoubleSide||t.side!==THREE.DoubleSide&&i===THREE.DoubleSide)&&(a=!0),t.side=i,t.opacity=e.opacity,t.transparent=e.transparent!==!1||e.opacity<1,t.depthTest=e.depthTest!==!1,t.depthWrite=e.depthWrite!==!1,t.shading=e.flatShading?THREE.FlatShading:THREE.SmoothShading,t.visible=e.visible,e.alphaTest!==t.alphaTest&&(a=!0),t.alphaTest=e.alphaTest,a&&(t.needsUpdate=!0)},remove:function(){var e=new THREE.MeshBasicMaterial,t=this.material,a=this.el.getObject3D("mesh");a&&(a.material=e),disposeMaterial(t,this.system)},setMaterial:function(e){var t=this.el.getOrCreateObject3D("mesh",THREE.Mesh),a=this.system;this.material&&disposeMaterial(this.material,a),this.material=t.material=e,a.registerMaterial(e)}});\n},{"../core/component":102,"../core/shader":111,"../lib/three":149,"../utils/":172}],68:[function(_dereq_,module,exports){\nvar debug=_dereq_("../utils/debug"),registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),warn=debug("components:obj-model:warn");module.exports.Component=registerComponent("obj-model",{schema:{mtl:{type:"model"},obj:{type:"model"}},init:function(){this.model=null,this.objLoader=new THREE.OBJLoader,this.mtlLoader=new THREE.MTLLoader(this.objLoader.manager),this.mtlLoader.crossOrigin=""},update:function(){var e=this.data;e.obj&&(this.remove(),this.loadObj(e.obj,e.mtl))},remove:function(){this.model&&this.el.removeObject3D("mesh")},loadObj:function(e,o){var t=this,r=this.el,a=this.mtlLoader,i=this.objLoader;return o?(r.hasAttribute("material")&&warn("Material component properties are ignored when a .MTL is provided"),a.setTexturePath(o.substr(0,o.lastIndexOf("/")+1)),void a.load(o,function(o){o.preload(),i.setMaterials(o),i.load(e,function(e){t.model=e,r.setObject3D("mesh",e),r.emit("model-loaded",{format:"obj",model:e})})})):void i.load(e,function(e){var o=r.components.material;o&&e.traverse(function(e){e instanceof THREE.Mesh&&(e.material=o.material)}),t.model=e,r.setObject3D("mesh",e),r.emit("model-loaded",{format:"obj",model:e})})}});\n},{"../core/component":102,"../lib/three":149,"../utils/debug":168}],69:[function(_dereq_,module,exports){\nvar bind=_dereq_("../utils/bind"),registerComponent=_dereq_("../core/component").registerComponent,controllerUtils=_dereq_("../utils/tracked-controls"),TOUCH_CONTROLLER_MODEL_BASE_URL="https://cdn.aframe.io/controllers/oculus/oculus-touch-controller-",TOUCH_CONTROLLER_MODEL_OBJ_URL_L=TOUCH_CONTROLLER_MODEL_BASE_URL+"left.obj",TOUCH_CONTROLLER_MODEL_OBJ_MTL_L=TOUCH_CONTROLLER_MODEL_BASE_URL+"left.mtl",TOUCH_CONTROLLER_MODEL_OBJ_URL_R=TOUCH_CONTROLLER_MODEL_BASE_URL+"right.obj",TOUCH_CONTROLLER_MODEL_OBJ_MTL_R=TOUCH_CONTROLLER_MODEL_BASE_URL+"right.mtl",GAMEPAD_ID_PREFIX="Oculus Touch",PIVOT_OFFSET={x:0,y:-.015,z:.04};module.exports.Component=registerComponent("oculus-touch-controls",{schema:{hand:{default:"left"},buttonColor:{type:"color",default:"#999"},buttonTouchColor:{type:"color",default:"#8AB"},buttonHighlightColor:{type:"color",default:"#2DF"},model:{default:!0},rotationOffset:{default:0}},mapping:{left:{axes:{thumbstick:[0,1]},buttons:["thumbstick","trigger","grip","xbutton","ybutton","surface"]},right:{axes:{thumbstick:[0,1]},buttons:["thumbstick","trigger","grip","abutton","bbutton","surface"]}},axisLabels:["x","y","z","w"],bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this),this.onControllersUpdate=bind(this.onControllersUpdate,this),this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this),this.onAxisMoved=bind(this.onAxisMoved,this)},init:function(){var t=this;this.onButtonChanged=bind(this.onButtonChanged,this),this.onButtonDown=function(e){t.onButtonEvent(e.detail.id,"down")},this.onButtonUp=function(e){t.onButtonEvent(e.detail.id,"up")},this.onButtonTouchStart=function(e){t.onButtonEvent(e.detail.id,"touchstart")},this.onButtonTouchEnd=function(e){t.onButtonEvent(e.detail.id,"touchend")},this.controllerPresent=!1,this.lastControllerCheck=0,this.previousButtonValues={},this.bindMethods(),this.emitIfAxesChanged=controllerUtils.emitIfAxesChanged,this.checkControllerPresentAndSetup=controllerUtils.checkControllerPresentAndSetup},addEventListeners:function(){var t=this.el;t.addEventListener("buttonchanged",this.onButtonChanged),t.addEventListener("buttondown",this.onButtonDown),t.addEventListener("buttonup",this.onButtonUp),t.addEventListener("touchstart",this.onButtonTouchStart),t.addEventListener("touchend",this.onButtonTouchEnd),t.addEventListener("axismove",this.onAxisMoved),t.addEventListener("model-loaded",this.onModelLoaded)},removeEventListeners:function(){var t=this.el;t.removeEventListener("buttonchanged",this.onButtonChanged),t.removeEventListener("buttondown",this.onButtonDown),t.removeEventListener("buttonup",this.onButtonUp),t.removeEventListener("touchstart",this.onButtonTouchStart),t.removeEventListener("touchend",this.onButtonTouchEnd),t.removeEventListener("axismove",this.onAxisMoved),t.removeEventListener("model-loaded",this.onModelLoaded)},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{hand:this.data.hand})},play:function(){this.checkIfControllerPresent(),this.addControllersUpdateListener(),window.addEventListener("gamepaddisconnected",this.checkIfControllerPresent,!1)},pause:function(){this.removeEventListeners(),this.removeControllersUpdateListener(),window.removeEventListener("gamepaddisconnected",this.checkIfControllerPresent,!1)},updateControllerModel:function(){var t,e;this.data.model&&("right"===this.data.hand?(t="url("+TOUCH_CONTROLLER_MODEL_OBJ_URL_R+")",e="url("+TOUCH_CONTROLLER_MODEL_OBJ_MTL_R+")"):(t="url("+TOUCH_CONTROLLER_MODEL_OBJ_URL_L+")",e="url("+TOUCH_CONTROLLER_MODEL_OBJ_MTL_L+")"),this.el.setAttribute("obj-model",{obj:t,mtl:e}))},injectTrackedControls:function(){var t=this.data,e="right"===t.hand?-90:90;this.el.setAttribute("tracked-controls",{id:"right"===t.hand?"Oculus Touch (Right)":"Oculus Touch (Left)",controller:0,rotationOffset:t.rotationOffset!==-999?t.rotationOffset:e}),this.updateControllerModel()},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener("controllersupdated",this.onControllersUpdate,!1)},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener("controllersupdated",this.onControllersUpdate,!1)},onControllersUpdate:function(){this.checkIfControllerPresent()},onButtonChanged:function(t){var e,o=this.mapping[this.data.hand].buttons[t.detail.id],n=this.buttonMeshes;o&&("trigger"!==o&&"grip"!==o||(e=t.detail.state.value),n&&("trigger"===o&&n.trigger&&(n.trigger.rotation.x=-e*(Math.PI/24)),"grip"===o&&n.grip&&(n.grip.rotation.y=("left"===this.data.hand?-1:1)*e*(Math.PI/60))),this.el.emit(o+"changed",t.detail.state))},onModelLoaded:function(t){var e,o=t.detail.model;if(this.data.model){var n="left"===this.data.hand;e=this.buttonMeshes={},e.grip=o.getObjectByName(n?"buttonHand_oculus-touch-controller-left.004":"buttonHand_oculus-touch-controller-right.005"),e.thumbstick=o.getObjectByName(n?"stick_oculus-touch-controller-left.007":"stick_oculus-touch-controller-right.004"),e.trigger=o.getObjectByName(n?"buttonTrigger_oculus-touch-controller-left.005":"buttonTrigger_oculus-touch-controller-right.006"),e.xbutton=o.getObjectByName("buttonX_oculus-touch-controller-left.002"),e.abutton=o.getObjectByName("buttonA_oculus-touch-controller-right.002"),e.ybutton=o.getObjectByName("buttonY_oculus-touch-controller-left.001"),e.bbutton=o.getObjectByName("buttonB_oculus-touch-controller-right.003"),o.position=PIVOT_OFFSET}},onButtonEvent:function(t,e){var o,n=this.mapping[this.data.hand].buttons[t];if(Array.isArray(n))for(o=0;o<n.length;o++)this.el.emit(n[o]+e);else this.el.emit(n+e);this.updateModel(n,e)},onAxisMoved:function(t){this.emitIfAxesChanged(this,this.mapping[this.data.hand].axes,t)},updateModel:function(t,e){var o;if(Array.isArray(t))for(o=0;o<t.length;o++)this.updateButtonModel(t[o],e);else this.updateButtonModel(t,e)},updateButtonModel:function(t,e){var o="up"===e||"touchend"===e?this.data.buttonColor:"touchstart"===e?this.data.buttonTouchColor:this.data.buttonHighlightColor,n=this.buttonMeshes;this.data.model&&n&&n[t]&&n[t].material.color.set(o)}});\n},{"../core/component":102,"../utils/bind":166,"../utils/tracked-controls":176}],70:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent;module.exports.Component=registerComponent("position",{schema:{type:"vec3"},update:function(){var e=this.el.object3D,o=this.data;e.position.set(o.x,o.y,o.z)}});\n},{"../core/component":102}],71:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),bind=_dereq_("../utils/").bind,scaleDummy=new THREE.Vector3;module.exports.Component=registerComponent("raycaster",{schema:{far:{default:1/0},interval:{default:100},near:{default:0},objects:{default:""},recursive:{default:!0}},init:function(){this.direction=new THREE.Vector3,this.intersectedEls=[],this.objects=null,this.prevCheckTime=void 0,this.raycaster=new THREE.Raycaster,this.updateOriginDirection(),this.refreshObjects=bind(this.refreshObjects,this),this.refreshOnceChildLoaded=bind(this.refreshOnceChildLoaded,this)},play:function(){this.el.sceneEl.addEventListener("loaded",this.refreshObjects),this.el.sceneEl.addEventListener("child-attached",this.refreshOnceChildLoaded),this.el.sceneEl.addEventListener("child-detached",this.refreshObjects)},pause:function(){this.el.sceneEl.removeEventListener("loaded",this.refreshObjects),this.el.sceneEl.removeEventListener("child-attached",this.refreshOnceChildLoaded),this.el.sceneEl.removeEventListener("child-detached",this.refreshObjects)},update:function(){var e=this.data,t=this.raycaster;t.far=e.far,t.near=e.near,this.refreshObjects()},refreshOnceChildLoaded:function(e){var t=this,i=e.detail.el;i&&(i.hasLoaded?this.refreshObjects():i.addEventListener("loaded",function e(r){i.removeEventListener("loaded",e),t.refreshObjects()}))},refreshObjects:function(){var e,t,i,r=this.data,s=r.objects?this.el.sceneEl.querySelectorAll(r.objects):null;if(s)for(i=[],t=0;t<s.length;t++)i.push(s[t].object3D);else i=this.el.sceneEl.object3D.children;for(this.objects=[],t=0;t<i.length;t++)e=i[t].children,e&&this.objects.push.apply(this.objects,e)},tick:function(e){var t,i,r,s=this.el,n=this.data,c=this.prevCheckTime;c&&e-c<n.interval||(this.prevCheckTime=e,r=this.intersectedEls.slice(),this.updateOriginDirection(),i=this.raycaster.intersectObjects(this.objects,n.recursive),i=i.filter(function(e){return!!e.object.el}),t=this.intersectedEls=i.map(function(e){return e.object.el}),i.forEach(function(e){var t=e.object.el;t.emit("raycaster-intersected",{el:s,intersection:e})}),i.length&&s.emit("raycaster-intersection",{els:t.slice(),intersections:i}),r.forEach(function(e){t.indexOf(e)===-1&&(s.emit("raycaster-intersection-cleared",{el:e}),e.emit("raycaster-intersected-cleared",{el:s}))}))},updateOriginDirection:function(){var e=new THREE.Quaternion,t=new THREE.Vector3;return function(){var i=this.el,r=i.object3D;r.updateMatrixWorld(),r.matrixWorld.decompose(t,e,scaleDummy),this.direction.set(0,0,-1),this.direction.applyQuaternion(e),this.raycaster.set(t,this.direction)}}()});\n},{"../core/component":102,"../lib/three":149,"../utils/":172}],72:[function(_dereq_,module,exports){\nvar degToRad=_dereq_("../lib/three").Math.degToRad,registerComponent=_dereq_("../core/component").registerComponent;module.exports.Component=registerComponent("rotation",{schema:{type:"vec3"},update:function(){var e=this.data,o=this.el.object3D;o.rotation.set(degToRad(e.x),degToRad(e.y),degToRad(e.z)),o.rotation.order="YXZ"}});\n},{"../core/component":102,"../lib/three":149}],73:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,zeroScale=1e-5;module.exports.Component=registerComponent("scale",{schema:{type:"vec3",default:{x:1,y:1,z:1}},update:function(){var e=this.data,o=this.el.object3D,t=0===e.x?zeroScale:e.x,r=0===e.y?zeroScale:e.y,a=0===e.z?zeroScale:e.z;o.scale.set(t,r,a)}});\n},{"../core/component":102}],74:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../../core/component").registerComponent,utils=_dereq_("../../utils");module.exports.Component=registerComponent("auto-enter-vr",{schema:{display:{type:"string",default:"GearVR"},enabled:{type:"boolean",default:!0}},init:function(){var e=this.el,t=this;this.enterVR=e.enterVR.bind(e),this.exitVR=e.exitVR.bind(e),this.shouldAutoEnterVR=this.shouldAutoEnterVR.bind(this),"false"!==utils.getUrlParameter("auto-enter-vr")&&(window.addEventListener("vrdisplayactivate",function(){t.enterVR()},!1),window.addEventListener("vrdisplaydeactivate",function(){t.exitVR()},!1),setTimeout(function(){t.shouldAutoEnterVR()&&t.enterVR()},0))},update:function(){return this.shouldAutoEnterVR()?this.enterVR():this.exitVR()},shouldAutoEnterVR:function(){var e=this.el,t=this.data;if(!t.enabled)return!1;if(t.display&&"all"!==t.display){var i=e.effect&&e.effect.getVRDisplay&&e.effect.getVRDisplay();if(!i||!i.displayName||i.displayName.indexOf(t.display)<0)return!1}return!0}});\n},{"../../core/component":102,"../../utils":172}],75:[function(_dereq_,module,exports){\nvar bind=_dereq_("../../utils/bind"),registerComponent=_dereq_("../../core/component").registerComponent;module.exports.Component=registerComponent("canvas",{init:function(){function e(){var e=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement;e||t.exitVR(),document.activeElement.blur(),document.body.focus()}var n,t=this.el;n=document.createElement("canvas"),n.classList.add("a-canvas"),n.dataset.aframeCanvas=!0,t.appendChild(n),document.addEventListener("fullscreenchange",e),document.addEventListener("mozfullscreenchange",e),document.addEventListener("webkitfullscreenchange",e),n.addEventListener("touchmove",function(e){e.preventDefault()}),t.canvas=n,t.emit("render-target-loaded",{target:n}),setTimeout(bind(t.resize,t),0)}});\n},{"../../core/component":102,"../../utils/bind":166}],76:[function(_dereq_,module,exports){\nvar register=_dereq_("../../core/component").registerComponent;module.exports.Component=register("debug",{schema:{default:!0}});\n},{"../../core/component":102}],77:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../../core/component").registerComponent;module.exports.Component=registerComponent("embedded",{dependencies:["vr-mode-ui"],schema:{default:!0},update:function(){var e=this.el,r=e.querySelector(".a-enter-vr");this.data===!0?(r&&r.classList.add("embedded"),e.removeFullScreenStyles()):(r&&r.classList.remove("embedded"),e.addFullScreenStyles())}});\n},{"../../core/component":102}],78:[function(_dereq_,module,exports){\nfunction getFog(e){var o;return o="exponential"===e.type?new THREE.FogExp2(e.color,e.density):new THREE.Fog(e.color,e.near,e.far),o.name=e.type,o}var register=_dereq_("../../core/component").registerComponent,THREE=_dereq_("../../lib/three"),debug=_dereq_("../../utils/debug"),warn=debug("components:fog:warn");module.exports.Component=register("fog",{schema:{color:{type:"color",default:"#000"},density:{default:25e-5},far:{default:1e3,min:0},near:{default:1,min:0},type:{default:"linear",oneOf:["linear","exponential"]}},update:function(){var e=this.data,o=this.el,t=this.el.object3D.fog;return o.isScene?t&&e.type===t.name?void Object.keys(this.schema).forEach(function(o){var n=e[o];"color"===o&&(n=new THREE.Color(n)),t[o]=n}):(o.object3D.fog=getFog(e),void o.systems.material.updateMaterials()):void warn("Fog component can only be applied to <a-scene>")},remove:function(){var e=this.el.object3D.fog;e&&(e.far=0,e.near=.1)}});\n},{"../../core/component":102,"../../lib/three":149,"../../utils/debug":168}],79:[function(_dereq_,module,exports){\n(function (process){\nfunction getFuzzyPatchVersion(e){var n=e.split(".");return n[2]="x",n.join(".")}var AFRAME_INJECTED=_dereq_("../../constants").AFRAME_INJECTED,bind=_dereq_("../../utils/bind"),pkg=_dereq_("../../../package"),registerComponent=_dereq_("../../core/component").registerComponent,INSPECTOR_DEV_URL="https://aframe.io/aframe-inspector/dist/aframe-inspector.js",INSPECTOR_RELEASE_URL="https://unpkg.com/aframe-inspector@"+getFuzzyPatchVersion(pkg.version)+"/dist/aframe-inspector.min.js",INSPECTOR_URL="dev"===process.env.INSPECTOR_VERSION?INSPECTOR_DEV_URL:INSPECTOR_RELEASE_URL,LOADING_MESSAGE="Loading Inspector",LOADING_ERROR_MESSAGE="Error loading Inspector";module.exports.Component=registerComponent("inspector",{schema:{url:{default:INSPECTOR_URL}},init:function(){this.onKeydown=bind(this.onKeydown,this),this.onMessage=bind(this.onMessage,this),this.initOverlay(),window.addEventListener("keydown",this.onKeydown),window.addEventListener("message",this.onMessage)},initOverlay:function(){var e=\'<span class="dots"><span>.</span><span>.</span><span>.</span></span>\';this.loadingMessageEl=document.createElement("div"),this.loadingMessageEl.classList.add("a-inspector-loader"),this.loadingMessageEl.innerHTML=LOADING_MESSAGE+e},remove:function(){this.removeEventListeners()},onKeydown:function(e){var n=73===e.keyCode&&e.ctrlKey&&e.altKey;this.data&&n&&this.injectInspector()},showLoader:function(){document.body.appendChild(this.loadingMessageEl)},hideLoader:function(){document.body.removeChild(this.loadingMessageEl)},onMessage:function(e){"INJECT_AFRAME_INSPECTOR"===e.data&&this.injectInspector()},injectInspector:function(){var e,n=this;AFRAME.INSPECTOR||AFRAME.inspectorInjected||(this.showLoader(),e=document.createElement("script"),e.src=this.data.url,e.setAttribute("data-name","aframe-inspector"),e.setAttribute(AFRAME_INJECTED,""),e.onload=function(){AFRAME.INSPECTOR.open(),n.hideLoader(),n.removeEventListeners()},e.onerror=function(){n.loadingMessageEl.innerHTML=LOADING_ERROR_MESSAGE},document.head.appendChild(e),AFRAME.inspectorInjected=!0)},removeEventListeners:function(){window.removeEventListener("keydown",this.onKeydown),window.removeEventListener("message",this.onMessage)}});\n}).call(this,_dereq_(\'_process\'))\n\n},{"../../../package":54,"../../constants":93,"../../core/component":102,"../../utils/bind":166,"_process":33}],80:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../../core/component").registerComponent,shouldCaptureKeyEvent=_dereq_("../../utils/").shouldCaptureKeyEvent;module.exports.Component=registerComponent("keyboard-shortcuts",{schema:{enterVR:{default:!0},exitVR:{default:!0}},init:function(){var e=this,t=this.el;this.listener=window.addEventListener("keyup",function(n){shouldCaptureKeyEvent(n)&&(e.enterVREnabled&&70===n.keyCode&&t.enterVR(),e.enterVREnabled&&27===n.keyCode&&t.exitVR())},!1)},update:function(e){var t=this.data;this.enterVREnabled=t.enterVR},remove:function(){window.removeEventListener("keyup",this.listener)}});\n},{"../../core/component":102,"../../utils/":172}],81:[function(_dereq_,module,exports){\nvar debug=_dereq_("../../utils/debug"),registerComponent=_dereq_("../../core/component").registerComponent,warn=debug("components:pool:warn");module.exports.Component=registerComponent("pool",{schema:{mixin:{default:""},size:{default:0},dynamic:{default:!1}},multiple:!0,initPool:function(){var t,i=this.data.mixin;if(i)for(this.availableEls=[],this.usedEls=[],t=0;t<this.data.size;++t)this.createEntity()},update:function(t){var i=this.data;t.mixin===i.mixin&&t.size===i.size||this.initPool()},createEntity:function(){var t=document.createElement("a-entity");t.play=this.wrapPlay(t.play),t.setAttribute("mixin",this.data.mixin),t.setAttribute("visible",!1),this.el.appendChild(t),this.availableEls.push(t)},wrapPlay:function(t){var i=this.usedEls;return function(){i.indexOf(this)!==-1&&t.call(this)}},requestEntity:function(){var t;if(0===this.availableEls.length){if(this.data.dynamic===!1)return void warn("Requested entity from empty pool "+this.name);warn("Requested entity from empty pool. This pool is dynamicand will resize automatically. You might want to increase its initial size"+this.name),this.createEntity()}return t=this.availableEls.shift(),this.usedEls.push(t),t.setAttribute("visible",!0),t},returnEntity:function(t){var i=this.usedEls.indexOf(t);return i===-1?void warn("The returned entity was not previously pooled from "+this.name):(this.usedEls.splice(i,1),this.availableEls.push(t),t.setAttribute("visible",!1),void t.pause())}});\n},{"../../core/component":102,"../../utils/debug":168}],82:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../../core/component").registerComponent,THREE=_dereq_("../../lib/three"),VERTEX_SHADER=["attribute vec3 position;","attribute vec2 uv;","uniform mat4 projectionMatrix;","uniform mat4 modelViewMatrix;","varying vec2 vUv;","void main()  {","  vUv = vec2( 1.- uv.x, uv.y );","  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\\n"),FRAGMENT_SHADER=["precision mediump float;","uniform samplerCube map;","varying vec2 vUv;","#define M_PI 3.141592653589793238462643383279","void main() {","  vec2 uv = vUv;","  float longitude = uv.x * 2. * M_PI - M_PI + M_PI / 2.;","  float latitude = uv.y * M_PI;","  vec3 dir = vec3(","    - sin( longitude ) * sin( latitude ),","    cos( latitude ),","    - cos( longitude ) * sin( latitude )","  );","  normalize( dir );","  gl_FragColor = vec4( textureCube( map, dir ).rgb, 1.0 );","}"].join("\\n");module.exports.Component=registerComponent("screenshot",{schema:{width:{default:4096},height:{default:2048}},init:function(){function e(){var e=t.renderer.getContext();a.cubeMapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),a.material=new THREE.RawShaderMaterial({uniforms:{map:{type:"t",value:null}},vertexShader:VERTEX_SHADER,fragmentShader:FRAGMENT_SHADER,side:THREE.DoubleSide}),a.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),a.material),a.quad.visible=!1,a.camera=new THREE.OrthographicCamera(-.5,.5,.5,-.5,-1e4,1e4),a.canvas=document.createElement("canvas"),a.ctx=a.canvas.getContext("2d"),t.camera&&t.camera.add(a.quad),a.onKeyDown=a.onKeyDown.bind(a),a.onCameraActive=a.onCameraActive.bind(a),t.addEventListener("camera-set-active",a.onCameraActive)}var t=this.el,a=this;t.renderer?e():t.addEventListener("render-target-loaded",e)},getRenderTarget:function(e,t){return new THREE.WebGLRenderTarget(e,t,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,format:THREE.RGBAFormat,type:THREE.UnsignedByteType})},resize:function(e,t){this.quad.scale.set(e,t,1),this.camera.left=-1*e/2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=-1*t/2,this.camera.updateProjectionMatrix(),this.canvas.width=e,this.canvas.height=t},play:function(){window.addEventListener("keydown",this.onKeyDown)},onCameraActive:function(e){var t=this.quad.parent;t&&t.remove(this.quad),e.detail.cameraEl.getObject3D("camera").add(this.quad)},onKeyDown:function(e){var t=83===e.keyCode&&e.ctrlKey&&e.altKey;if(this.data&&t){var a=e.shiftKey?"equirectangular":"perspective";this.capture(a)}},setCapture:function(e){var t,a,i,r=this.el;return"perspective"===e?(this.quad.visible=!1,a=r.camera,t={width:this.data.width,height:this.data.height}):(a=this.camera,a.position.copy(r.camera.getWorldPosition()),a.rotation.copy(r.camera.getWorldRotation()),i=new THREE.CubeCamera(r.camera.near,r.camera.far,Math.min(this.cubeMapSize,2048)),i.position.copy(r.camera.getWorldPosition()),i.rotation.copy(r.camera.getWorldRotation()),i.updateCubeMap(r.renderer,r.object3D),this.quad.material.uniforms.map.value=i.renderTarget.texture,t={width:this.data.width,height:this.data.height},this.quad.visible=!0),{camera:a,size:t,projection:e}},capture:function(e){var t=this.setCapture(e);this.renderCapture(t.camera,t.size,t.projection),this.saveCapture()},getCanvas:function(e){var t=this.setCapture(e);return this.renderCapture(t.camera,t.size,t.projection),this.canvas},renderCapture:function(e,t,a){var i,r,n,o=this.el.renderer.autoClear,d=this.el,s=this.el.renderer;r=this.getRenderTarget(t.width,t.height),n=new Uint8Array(4*t.width*t.height),this.resize(t.width,t.height),s.autoClear=!0,s.render(d.object3D,e,r,!0),s.autoClear=o,s.readRenderTargetPixels(r,0,0,t.width,t.height,n),"perspective"===a&&(n=this.flipPixelsVertically(n,t.width,t.height)),i=new ImageData(new Uint8ClampedArray(n),t.width,t.height),this.quad.visible=!1,this.ctx.putImageData(i,0,0)},flipPixelsVertically:function(e,t,a){for(var i=e.slice(0),r=0;r<t;++r)for(var n=0;n<a;++n)i[4*r+n*t*4]=e[4*r+(a-n)*t*4],i[4*r+1+n*t*4]=e[4*r+1+(a-n)*t*4],i[4*r+2+n*t*4]=e[4*r+2+(a-n)*t*4],i[4*r+3+n*t*4]=e[4*r+3+(a-n)*t*4];return i},saveCapture:function(){this.canvas.toBlob(function(e){var t="screenshot-"+document.title.toLowerCase()+"-"+Date.now()+".png",a=document.createElement("a"),i=URL.createObjectURL(e);a.href=i,a.setAttribute("download",t),a.innerHTML="downloading...",a.style.display="none",document.body.appendChild(a),setTimeout(function(){a.click(),document.body.removeChild(a)},1)},"image/png")}});\n},{"../../core/component":102,"../../lib/three":149}],83:[function(_dereq_,module,exports){\nfunction createStats(t){var e=new ThreeStats(t.renderer),s=new AFrameStats(t),i=t.isMobile?[]:[e,s];return new RStats({css:[],values:{fps:{caption:"fps",below:30}},groups:[{caption:"Framerate",values:["fps","raf"]}],plugins:i})}var registerComponent=_dereq_("../../core/component").registerComponent,RStats=_dereq_("../../../vendor/rStats"),utils=_dereq_("../../utils");_dereq_("../../../vendor/rStats.extras"),_dereq_("../../lib/rStatsAframe");var AFrameStats=window.aframeStats,bind=utils.bind,HIDDEN_CLASS="a-hidden",ThreeStats=window.threeStats;module.exports.Component=registerComponent("stats",{schema:{default:!0},init:function(){var t=this.el;"false"!==utils.getUrlParameter("stats")&&(this.stats=createStats(t),this.statsEl=document.querySelector(".rs-base"),this.hideBound=bind(this.hide,this),this.showBound=bind(this.show,this),t.addEventListener("enter-vr",this.hideBound),t.addEventListener("exit-vr",this.showBound))},update:function(){if(this.stats)return this.data?this.show():this.hide()},remove:function(){this.el.removeEventListener("enter-vr",this.hideBound),this.el.removeEventListener("exit-vr",this.showBound),this.statsEl&&this.statsEl.parentNode.removeChild(this.statsEl)},tick:function(){var t=this.stats;t&&(t("rAF").tick(),t("FPS").frame(),t().update())},hide:function(){this.statsEl.classList.add(HIDDEN_CLASS)},show:function(){this.statsEl.classList.remove(HIDDEN_CLASS)}});\n},{"../../../vendor/rStats":180,"../../../vendor/rStats.extras":179,"../../core/component":102,"../../lib/rStatsAframe":148,"../../utils":172}],84:[function(_dereq_,module,exports){\nfunction createEnterVRButton(e){var t,n;return n=document.createElement("div"),n.classList.add(ENTER_VR_CLASS),n.setAttribute(constants.AFRAME_INJECTED,""),t=document.createElement("button"),t.className=ENTER_VR_BTN_CLASS,t.setAttribute(constants.AFRAME_INJECTED,""),n.appendChild(t),t.addEventListener("click",e),n}function createOrientationModal(e){var t=document.createElement("div");t.className=ORIENTATION_MODAL_CLASS,t.classList.add(HIDDEN_CLASS),t.setAttribute(constants.AFRAME_INJECTED,"");var n=document.createElement("button");return n.setAttribute(constants.AFRAME_INJECTED,""),n.innerHTML="Exit VR",n.addEventListener("click",e),t.appendChild(n),t}var registerComponent=_dereq_("../../core/component").registerComponent,constants=_dereq_("../../constants/"),utils=_dereq_("../../utils/"),bind=utils.bind,ENTER_VR_CLASS="a-enter-vr",ENTER_VR_BTN_CLASS="a-enter-vr-button",HIDDEN_CLASS="a-hidden",ORIENTATION_MODAL_CLASS="a-orientation-modal";module.exports.Component=registerComponent("vr-mode-ui",{dependencies:["canvas"],schema:{enabled:{default:!0}},init:function(){var e=this,t=this.el;"false"!==utils.getUrlParameter("ui")&&(this.enterVR=bind(t.enterVR,t),this.exitVR=bind(t.exitVR,t),this.insideLoader=!1,this.enterVREl=null,this.orientationModalEl=null,t.addEventListener("enter-vr",bind(this.updateEnterVRInterface,this)),t.addEventListener("exit-vr",bind(this.updateEnterVRInterface,this)),window.addEventListener("message",function(t){"loaderReady"===t.data.type&&(e.insideLoader=!0,e.remove())}),window.addEventListener("orientationchange",bind(this.toggleOrientationModalIfNeeded,this)))},update:function(){var e=this.el;return!this.data.enabled||this.insideLoader||"false"===utils.getUrlParameter("ui")?this.remove():void(this.enterVREl||this.orientationModalEl||(this.enterVREl=createEnterVRButton(this.enterVR),e.appendChild(this.enterVREl),this.orientationModalEl=createOrientationModal(this.exitVR),e.appendChild(this.orientationModalEl),this.updateEnterVRInterface()))},remove:function(){[this.enterVREl,this.orientationModalEl].forEach(function(e){e&&e.parentNode.removeChild(e)})},updateEnterVRInterface:function(){this.toggleEnterVRButtonIfNeeded(),this.toggleOrientationModalIfNeeded()},toggleEnterVRButtonIfNeeded:function(){var e=this.el;this.enterVREl&&(e.is("vr-mode")?this.enterVREl.classList.add(HIDDEN_CLASS):this.enterVREl.classList.remove(HIDDEN_CLASS))},toggleOrientationModalIfNeeded:function(){var e=this.el,t=this.orientationModalEl;t&&e.isMobile&&(!utils.device.isLandscape()&&e.is("vr-mode")?t.classList.remove(HIDDEN_CLASS):t.classList.add(HIDDEN_CLASS))}});\n},{"../../constants/":93,"../../core/component":102,"../../utils/":172}],85:[function(_dereq_,module,exports){\nvar component=_dereq_("../core/component"),THREE=_dereq_("../lib/three"),bind=_dereq_("../utils/bind"),registerComponent=component.registerComponent;module.exports.Component=registerComponent("shadow",{schema:{cast:{default:!0},receive:{default:!0}},init:function(){this.onMeshChanged=bind(this.update,this),this.el.addEventListener("object3dset",this.onMeshChanged),this.system.setShadowMapEnabled(!0)},update:function(){var e=this.data;this.updateDescendants(e.cast,e.receive)},remove:function(){var e=this.el;e.removeEventListener("object3dset",this.onMeshChanged),this.updateDescendants(!1,!1)},updateDescendants:function(e,t){var n=this.el.sceneEl;this.el.object3D.traverse(function(s){if(s instanceof THREE.Mesh&&(s.castShadow=e,s.receiveShadow=t,n.hasLoaded&&s.material))for(var a=s.material.materials||[s.material],i=0;i<a.length;i++)a[i].needsUpdate=!0})}});\n},{"../core/component":102,"../lib/three":149,"../utils/bind":166}],86:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,debug=_dereq_("../utils/debug"),bind=_dereq_("../utils/bind"),THREE=_dereq_("../lib/three"),warn=debug("components:sound:warn");module.exports.Component=registerComponent("sound",{schema:{autoplay:{default:!1},distanceModel:{default:"inverse",oneOf:["linear","inverse","exponential"]},loop:{default:!1},maxDistance:{default:1e4},on:{default:""},poolSize:{default:1},positional:{default:!0},refDistance:{default:1},rolloffFactor:{default:1},src:{type:"audio"},volume:{default:1}},multiple:!0,init:function(){this.listener=null,this.audioLoader=new THREE.AudioLoader,this.pool=new THREE.Group,this.loaded=!1,this.mustPlay=!1,this.playSound=bind(this.playSound,this)},update:function(e){var t=this.data,o=t.src!==e.src;if(o){if(!t.src)return void warn("Audio source was not specified with `src`");this.setupSound()}if(this.pool.children.forEach(function(e){t.positional&&(e.setDistanceModel(t.distanceModel),e.setMaxDistance(t.maxDistance),e.setRefDistance(t.refDistance),e.setRolloffFactor(t.rolloffFactor)),e.setLoop(t.loop),e.setVolume(t.volume),e.isPaused=!1}),t.on!==e.on&&this.updateEventListener(e.on),o){var i=this;this.loaded=!1,this.audioLoader.load(t.src,function(e){i.pool.children.forEach(function(t){t.setBuffer(e)}),i.loaded=!0,THREE.Cache.remove(t.src),(i.data.autoplay||i.mustPlay)&&i.playSound(),i.el.emit("sound-loaded")})}},pause:function(){this.stopSound(),this.removeEventListener()},play:function(){this.data.autoplay&&this.playSound(),this.updateEventListener()},remove:function(){this.removeEventListener(),this.el.removeObject3D(this.attrName);try{this.pool.children.forEach(function(e){e.disconnect()})}catch(e){warn("Audio source not properly disconnected")}},updateEventListener:function(e){var t=this.el;e&&t.removeEventListener(e,this.playSound),t.addEventListener(this.data.on,this.playSound)},removeEventListener:function(){this.el.removeEventListener(this.data.on,this.playSound)},setupSound:function(){var e=this.el,t=e.sceneEl;this.pool.children.length>0&&(this.stopSound(),e.removeObject3D("sound"));var o=this.listener=t.audioListener||new THREE.AudioListener;t.audioListener=o,t.camera&&t.camera.add(o),t.addEventListener("camera-set-active",function(e){e.detail.cameraEl.getObject3D("camera").add(o)}),this.pool=new THREE.Group;for(var i=0;i<this.data.poolSize;i++){var n=this.data.positional?new THREE.PositionalAudio(o):new THREE.Audio(o);this.pool.add(n)}e.setObject3D(this.attrName,this.pool),this.pool.children.forEach(function(t){t.onEnded=function(){t.isPlaying=!1,e.emit("sound-ended",{index:i})}})},pauseSound:function(){this.isPlaying=!1,this.pool.children.forEach(function(e){e.source&&e.source.buffer&&e.isPlaying&&!e.isPaused&&(e.isPaused=!0,e.pause())})},playSound:function(){if(!this.loaded)return warn("Sound not loaded yet. It will be played once it finished loading"),void(this.mustPlay=!0);var e=!1;return this.isPlaying=!0,this.pool.children.forEach(function(t){if(!t.isPlaying&&t.buffer&&!e)return t.play(),t.isPaused=!1,void(e=!0)}),e?void(this.mustPlay=!1):void warn("All the sounds are playing. If you need to play more sounds simultaneously consider increasing the size of pool with the `poolSize` attribute.",this.el)},stopSound:function(){this.isPlaying=!1,this.pool.children.forEach(function(e){e.source&&e.source.buffer&&e.stop()})}});\n},{"../core/component":102,"../lib/three":149,"../utils/bind":166,"../utils/debug":168}],87:[function(_dereq_,module,exports){\nfunction parseSide(e){switch(e){case"back":return THREE.BackSide;case"double":return THREE.DoubleSide;default:return THREE.FrontSide}}function coerceData(e){return e=utils.clone(e),void 0!==e.lineHeight&&(e.lineHeight=parseFloat(e.lineHeight),isFinite(e.lineHeight)||(e.lineHeight=void 0)),void 0!==e.width&&(e.width=parseFloat(e.width),isFinite(e.width)||(e.width=void 0)),e}function loadFont(e,t){return new Promise(function(r,o){loadBMFont(e,function(n,i){return n?(error("Error loading font",e),void o(n)):(e.indexOf("/Roboto-msdf.json")>=0&&(t=30),t&&i.chars.map(function(e){e.yoffset+=t}),void r(i))})})}function loadTexture(e){return new Promise(function(t,r){(new THREE.ImageLoader).load(e,function(e){t(e)},void 0,function(){error("Error loading font image",e),r(null)})})}function createShader(e,t,r){var o,n;return n=new shaders[t].Shader,n.el=e,n.init(r),n.update(r),o=n.material,o.transparent=r.transparent,{material:o,shader:n}}function updateBaseMaterial(e,t){e.side=t.side}function updateGeometry(e,t,r){e.update(utils.extend({},t,{font:r,width:computeWidth(t.wrapPixels,t.wrapCount,r.widthFactor),text:t.value.replace(/\\\\n/g,"\\n").replace(/\\\\t/g,"\\t"),lineHeight:t.lineHeight||r.common.lineHeight}))}function computeWidth(e,t,r){return e||(.5+t)*r}function computeFontWidthFactor(e){var t=0,r=0,o=0;return e.chars.map(function(e){t+=e.xadvance,e.id>=48&&e.id<=57&&(o++,r+=e.xadvance)}),o?r/o:t/e.chars.length}function PromiseCache(){var e=this.cache={};this.get=function(t,r){return t in e?e[t]:(e[t]=r(),e[t])}}var createTextGeometry=_dereq_("three-bmfont-text"),loadBMFont=_dereq_("load-bmfont"),path=_dereq_("path"),registerComponent=_dereq_("../core/component").registerComponent,coreShader=_dereq_("../core/shader"),THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),error=utils.debug("components:text:error"),shaders=coreShader.shaders,warn=utils.debug("components:text:warn"),DEFAULT_WIDTH=1,MAX_ANISOTROPY=16,FONT_BASE_URL="https://cdn.aframe.io/fonts/",FONTS={aileronsemibold:FONT_BASE_URL+"Aileron-Semibold.fnt",dejavu:FONT_BASE_URL+"DejaVu-sdf.fnt",exo2bold:FONT_BASE_URL+"Exo2Bold.fnt",exo2semibold:FONT_BASE_URL+"Exo2SemiBold.fnt",kelsonsans:FONT_BASE_URL+"KelsonSans.fnt",monoid:FONT_BASE_URL+"Monoid.fnt",mozillavr:FONT_BASE_URL+"mozillavr.fnt",roboto:FONT_BASE_URL+"Roboto-msdf.json",sourcecodepro:FONT_BASE_URL+"SourceCodePro.fnt"},MSDF_FONTS=["roboto"],DEFAULT_FONT="roboto";module.exports.FONTS=FONTS;var cache=new PromiseCache,fontWidthFactors={};module.exports.Component=registerComponent("text",{multiple:!0,schema:{align:{type:"string",default:"left",oneOf:["left","right","center"]},alphaTest:{default:.5},anchor:{default:"center",oneOf:["left","right","center","align"]},baseline:{default:"center",oneOf:["top","center","bottom"]},color:{type:"color",default:"#FFF"},font:{type:"string",default:DEFAULT_FONT},fontImage:{type:"string"},height:{type:"number"},letterSpacing:{type:"number",default:0},lineHeight:{type:"number"},opacity:{type:"number",default:1},shader:{default:"sdf",oneOf:shaders},side:{default:"front",oneOf:["front","back","double"]},tabSize:{default:4},transparent:{default:!0},value:{type:"string"},whiteSpace:{default:"normal",oneOf:["normal","pre","nowrap"]},width:{type:"number"},wrapCount:{type:"number",default:40},wrapPixels:{type:"number"},yOffset:{type:"number",default:0},zOffset:{type:"number",default:.001}},init:function(){this.texture=new THREE.Texture,this.texture.anisotropy=MAX_ANISOTROPY,this.geometry=createTextGeometry(),this.createOrUpdateMaterial(),this.mesh=new THREE.Mesh(this.geometry,this.material),this.el.setObject3D(this.attrName,this.mesh)},update:function(e){var t=coerceData(this.data),r=this.currentFont;return this.createOrUpdateMaterial(),e.font!==t.font?void this.updateFont():void(r&&(updateGeometry(this.geometry,t,r),this.updateLayout(t)))},remove:function(){this.geometry.dispose(),this.geometry=null,this.el.removeObject3D(this.attrName),this.material.dispose(),this.material=null,this.texture.dispose(),this.texture=null,this.shaderObject&&delete this.shaderObject},createOrUpdateMaterial:function(){var e,t,r,o,n=this.data,i=this.material;return o=n.shader,MSDF_FONTS.indexOf(n.font)!==-1||n.font.indexOf("-msdf.")>=0?o="msdf":n.font in FONTS&&MSDF_FONTS.indexOf(n.font)===-1&&(o="sdf"),e=(this.shaderObject&&this.shaderObject.name)!==o,r={alphaTest:n.alphaTest,color:n.color,map:this.texture,opacity:n.opacity,side:parseSide(n.side),transparent:n.transparent},e?(t=createShader(this.el,o,r),this.material=t.material,this.shaderObject=t.shader,updateBaseMaterial(this.material,r),void(this.mesh&&(this.mesh.material=this.material))):(this.shaderObject.update(r),i.transparent=r.transparent,void updateBaseMaterial(i,r))},updateFont:function(){var e,t=this.data,r=this.el,o=this.geometry,n=this;t.font||warn("No font specified. Using the default font."),this.mesh.visible=!1,e=this.lookupFont(t.font||DEFAULT_FONT)||t.font,cache.get(e,function(){return loadFont(e,t.yOffset)}).then(function(i){var a,s;if(1!==i.pages.length)throw new Error("Currently only single-page bitmap fonts are supported.");fontWidthFactors[e]||(i.widthFactor=fontWidthFactors[i]=computeFontWidthFactor(i)),a=coerceData(t),updateGeometry(o,t,i),n.currentFont=i,n.updateLayout(a),s=t.fontImage||e.replace(/(\\.fnt)|(\\.json)/,".png")||path.dirname(t.font)+"/"+i.pages[0],cache.get(s,function(){return loadTexture(s)}).then(function(e){n.mesh.visible=!0,n.texture.image=e,n.texture.needsUpdate=!0,r.emit("textfontset",{font:t.font,fontObj:i})}).catch(function(e){throw error(e),e})}).catch(function(e){throw error(e),e})},updateLayout:function(e){var t,r,o,n,i,a,s,h,d=this.el,u=this.geometry,l=d.getAttribute("geometry"),c=u.layout,f=this.mesh;if(l=d.getAttribute("geometry"),a=e.width||l&&l.width||DEFAULT_WIDTH,n=computeWidth(e.wrapPixels,e.wrapCount,this.currentFont.widthFactor),i=a/n,o=i*(c.height+c.descender),l&&(l.width||d.setAttribute("geometry","width",a),l.height||d.setAttribute("geometry","height",o)),t="align"===e.anchor?e.align:e.anchor,"left"===t)s=0;else if("right"===t)s=-1*c.width;else{if("center"!==t)throw new TypeError("Invalid text.anchor property value",t);s=-1*c.width/2}if(r=e.baseline,"bottom"===r)h=0;else if("top"===r)h=-1*c.height+c.ascender;else{if("center"!==r)throw new TypeError("Invalid text.baseline property value",r);h=-1*c.height/2}f.position.x=s*i,f.position.y=h*i,f.position.z=e.zOffset,f.scale.set(i,-1*i,i),this.geometry.computeBoundingSphere()},lookupFont:function(e){return FONTS[e]}});\n},{"../core/component":102,"../core/shader":111,"../lib/three":149,"../utils/":172,"load-bmfont":23,"path":31,"three-bmfont-text":37}],88:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),DEFAULT_USER_HEIGHT=_dereq_("../constants").DEFAULT_USER_HEIGHT,DEFAULT_HANDEDNESS=_dereq_("../constants").DEFAULT_HANDEDNESS,EYES_TO_ELBOW={x:.175,y:-.3,z:-.03},FOREARM={x:0,y:0,z:-.175};module.exports.Component=registerComponent("tracked-controls",{schema:{controller:{default:0},id:{type:"string",default:""},idPrefix:{type:"string",default:""},rotationOffset:{default:0},headElement:{type:"selector"}},init:function(){this.axis=[0,0,0],this.buttonStates={},this.dolly=new THREE.Object3D,this.controllerEuler=new THREE.Euler,this.controllerEuler.order="YXZ",this.controllerPosition=new THREE.Vector3,this.controllerQuaternion=new THREE.Quaternion,this.deltaControllerPosition=new THREE.Vector3,this.standingMatrix=new THREE.Matrix4,this.previousControllerPosition=new THREE.Vector3,this.updateGamepad()},tick:function(t,e){var o=this.el.getObject3D("mesh");o&&o.update&&o.update(e/1e3),this.updateGamepad(),this.updatePose(),this.updateButtons()},defaultUserHeight:function(){return DEFAULT_USER_HEIGHT},getHeadElement:function(){return this.data.headElement||this.el.sceneEl.camera.el},updateGamepad:function(){var t,e=this.system.controllers,o=this.data;t=e.filter(function(t){return o.idPrefix?0===t.id.indexOf(o.idPrefix):t.id===o.id}),this.controller=t[o.controller]},applyArmModel:function(t){var e=this.controller,o=e.pose,i=this.controllerQuaternion,r=this.controllerEuler,n=this.deltaControllerPosition,s=(e?e.hand:void 0)||DEFAULT_HANDEDNESS,a=this.getHeadElement(),l=a.object3D,u=a.components.camera,h=(u?u.data.userHeight:0)||this.defaultUserHeight();t.copy(l.position),n.set(EYES_TO_ELBOW.x*("left"===s?-1:"right"===s?1:0),EYES_TO_ELBOW.y,EYES_TO_ELBOW.z),n.multiplyScalar(h),n.applyAxisAngle(l.up,l.rotation.y),t.add(n),n.set(FOREARM.x,FOREARM.y,FOREARM.z),n.multiplyScalar(h),o.orientation?i.fromArray(o.orientation):i.copy(l.quaternion),r.setFromQuaternion(i),r.set(r.x,r.y,0),n.applyEuler(r),t.add(n)},updatePose:function(){var t,e,o=this.controller,i=this.controllerEuler,r=this.controllerPosition,n=this.deltaControllerPosition,s=this.dolly,a=this.el,l=this.standingMatrix,u=this.system.vrDisplay,h=this.getHeadElement(),d=h.object3D,c=h.components.camera,E=(c?c.data.userHeight:0)||this.defaultUserHeight();o&&(e=o.pose,e.orientation?s.quaternion.fromArray(e.orientation):s.quaternion.copy(d.quaternion),e.position?s.position.fromArray(e.position):(this.applyArmModel(r),s.position.copy(r)),s.updateMatrix(),e.position&&u&&(u.stageParameters?(l.fromArray(u.stageParameters.sittingToStandingTransform),s.applyMatrix(l)):(s.position.y+=E,s.updateMatrix())),i.setFromRotationMatrix(s.matrix),r.setFromMatrixPosition(s.matrix),a.setAttribute("rotation",{x:THREE.Math.radToDeg(i.x),y:THREE.Math.radToDeg(i.y),z:THREE.Math.radToDeg(i.z)+this.data.rotationOffset}),n.copy(r).sub(this.previousControllerPosition),this.previousControllerPosition.copy(r),t=a.getAttribute("position"),a.setAttribute("position",{x:t.x+n.x,y:t.y+n.y,z:t.z+n.z}))},updateButtons:function(){var t,e,o=this.controller;if(o){for(e=0;e<o.buttons.length;++e)this.buttonStates[e]||(this.buttonStates[e]={pressed:!1,touched:!1,value:0}),t=o.buttons[e],this.handleButton(e,t);this.handleAxes()}},handleButton:function(t,e){var o=this.handlePress(t,e)||this.handleTouch(t,e)||this.handleValue(t,e);return!!o&&(this.el.emit("buttonchanged",{id:t,state:e}),!0)},handleAxes:function(){var t,e=!1,o=this.controller.axes,i=this.axis,r=[];for(t=0;t<o.length;++t)r.push(i[t]!==o[t]),r[t]&&(e=!0);return!!e&&(this.axis=o.slice(),this.el.emit("axismove",{axis:this.axis,changed:r}),!0)},handlePress:function(t,e){var o,i=this.buttonStates[t];return e.pressed!==i.pressed&&(o=e.pressed?"down":"up",this.el.emit("button"+o,{id:t,state:e}),i.pressed=e.pressed,!0)},handleTouch:function(t,e){var o,i=this.buttonStates[t];return e.touched!==i.touched&&(o=e.touched?"start":"end",this.el.emit("touch"+o,{id:t,state:e},!0,{touches:[]}),i.touched=e.touched,!0)},handleValue:function(t,e){var o=this.buttonStates[t];return e.value!==o.value&&(o.value=e.value,!0)}});\n},{"../constants":93,"../core/component":102,"../lib/three":149}],89:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent;module.exports.Component=registerComponent("visible",{schema:{default:!0},update:function(){this.el.object3D.visible=this.data}});\n},{"../core/component":102}],90:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../core/component").registerComponent,bind=_dereq_("../utils/bind"),checkControllerPresentAndSetup=_dereq_("../utils/tracked-controls").checkControllerPresentAndSetup,emitIfAxesChanged=_dereq_("../utils/tracked-controls").emitIfAxesChanged,VIVE_CONTROLLER_MODEL_OBJ_URL="https://cdn.aframe.io/controllers/vive/vr_controller_vive.obj",VIVE_CONTROLLER_MODEL_OBJ_MTL="https://cdn.aframe.io/controllers/vive/vr_controller_vive.mtl",GAMEPAD_ID_PREFIX="OpenVR ";module.exports.Component=registerComponent("vive-controls",{schema:{hand:{default:"left"},buttonColor:{type:"color",default:"#FAFAFA"},buttonHighlightColor:{type:"color",default:"#22D1EE"},model:{default:!0},rotationOffset:{default:0}},mapping:{axes:{trackpad:[0,1]},buttons:["trackpad","trigger","grip","menu","system"]},axisLabels:["x","y","z","w"],bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this),this.onControllersUpdate=bind(this.onControllersUpdate,this),this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this),this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this),this.onAxisMoved=bind(this.onAxisMoved,this)},init:function(){var t=this;this.animationActive="pointing",this.onButtonChanged=bind(this.onButtonChanged,this),this.onButtonDown=function(e){t.onButtonEvent(e.detail.id,"down")},this.onButtonUp=function(e){t.onButtonEvent(e.detail.id,"up")},this.onButtonTouchStart=function(e){t.onButtonEvent(e.detail.id,"touchstart")},this.onButtonTouchEnd=function(e){t.onButtonEvent(e.detail.id,"touchend")},this.onAxisMoved=bind(this.onAxisMoved,this),this.controllerPresent=!1,this.lastControllerCheck=0,this.previousButtonValues={},this.bindMethods(),this.checkControllerPresentAndSetup=checkControllerPresentAndSetup,this.emitIfAxesChanged=emitIfAxesChanged},addEventListeners:function(){var t=this.el;t.addEventListener("buttonchanged",this.onButtonChanged),t.addEventListener("buttondown",this.onButtonDown),t.addEventListener("buttonup",this.onButtonUp),t.addEventListener("touchstart",this.onButtonTouchStart),t.addEventListener("touchend",this.onButtonTouchEnd),t.addEventListener("model-loaded",this.onModelLoaded),t.addEventListener("axismove",this.onAxisMoved)},removeEventListeners:function(){var t=this.el;t.removeEventListener("buttonchanged",this.onButtonChanged),t.removeEventListener("buttondown",this.onButtonDown),t.removeEventListener("buttonup",this.onButtonUp),t.removeEventListener("touchstart",this.onButtonTouchStart),t.removeEventListener("touchend",this.onButtonTouchEnd),t.removeEventListener("model-loaded",this.onModelLoaded),t.removeEventListener("axismove",this.onAxisMoved)},checkIfControllerPresent:function(){var t=this.data,e="right"===t.hand?0:"left"===t.hand?1:2;this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{index:e})},play:function(){this.checkIfControllerPresent(),this.addControllersUpdateListener(),window.addEventListener("gamepaddisconnected",this.checkIfControllerPresent,!1)},pause:function(){this.removeEventListeners(),this.removeControllersUpdateListener(),window.removeEventListener("gamepaddisconnected",this.checkIfControllerPresent,!1)},injectTrackedControls:function(){var t=this.el,e=this.data,n="right"===e.hand?0:"left"===e.hand?1:2;t.setAttribute("tracked-controls",{idPrefix:GAMEPAD_ID_PREFIX,controller:n,rotationOffset:e.rotationOffset}),this.data.model&&this.el.setAttribute("obj-model",{obj:VIVE_CONTROLLER_MODEL_OBJ_URL,mtl:VIVE_CONTROLLER_MODEL_OBJ_MTL})},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener("controllersupdated",this.onControllersUpdate,!1)},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener("controllersupdated",this.onControllersUpdate,!1)},onControllersUpdate:function(){this.checkIfControllerPresent()},onButtonChanged:function(t){var e,n=this.mapping.buttons[t.detail.id],o=this.buttonMeshes;n&&("trigger"===n&&(e=t.detail.state.value,o&&o.trigger&&(o.trigger.rotation.x=-e*(Math.PI/12))),this.el.emit(n+"changed",t.detail.state))},onModelLoaded:function(t){var e,n=t.detail.model;this.data.model&&(e=this.buttonMeshes={},e.grip={left:n.getObjectByName("leftgrip"),right:n.getObjectByName("rightgrip")},e.menu=n.getObjectByName("menubutton"),e.system=n.getObjectByName("systembutton"),e.trackpad=n.getObjectByName("touchpad"),e.trigger=n.getObjectByName("trigger"),n.position.set(0,-.015,.04))},onAxisMoved:function(t){this.emitIfAxesChanged(this,this.mapping.axes,t)},onButtonEvent:function(t,e){var n,o=this.mapping.buttons[t];if(Array.isArray(o))for(n=0;n<o.length;n++)this.el.emit(o[n]+e);else this.el.emit(o+e);this.updateModel(o,e)},updateModel:function(t,e){var n;if(this.data.model)if(Array.isArray(t))for(n=0;n<t.length;n++)this.updateButtonModel(t[n],e);else this.updateButtonModel(t,e)},updateButtonModel:function(t,e){var n="up"===e?this.data.buttonColor:this.data.buttonHighlightColor,o=this.buttonMeshes;if(o)return"grip"===t?(o.grip.left.material.color.set(n),void o.grip.right.material.color.set(n)):void o[t].material.color.set(n)}});\n},{"../core/component":102,"../utils/bind":166,"../utils/tracked-controls":176}],91:[function(_dereq_,module,exports){\nvar KEYCODE_TO_CODE=_dereq_("../constants").keyboardevent.KEYCODE_TO_CODE,registerComponent=_dereq_("../core/component").registerComponent,THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),bind=utils.bind,shouldCaptureKeyEvent=utils.shouldCaptureKeyEvent,CLAMP_VELOCITY=1e-5,MAX_DELTA=.2;module.exports.Component=registerComponent("wasd-controls",{schema:{acceleration:{default:65},adAxis:{default:"x",oneOf:["x","y","z"]},adEnabled:{default:!0},adInverted:{default:!1},easing:{default:20},enabled:{default:!0},fly:{default:!1},wsAxis:{default:"z",oneOf:["x","y","z"]},wsEnabled:{default:!0},wsInverted:{default:!1}},init:function(){this.keys={},this.velocity=new THREE.Vector3,this.onBlur=bind(this.onBlur,this),this.onFocus=bind(this.onFocus,this),this.onKeyDown=bind(this.onKeyDown,this),this.onKeyUp=bind(this.onKeyUp,this),this.onVisibilityChange=bind(this.onVisibilityChange,this),this.attachVisibilityEventListeners()},tick:function(e,t){var i,n,s=this.data,o=this.el,r=this.velocity;t/=1e3,this.updateVelocity(t),(r[s.adAxis]||r[s.wsAxis])&&(i=this.getMovementVector(t),n=o.getAttribute("position"),o.setAttribute("position",{x:n.x+i.x,y:n.y+i.y,z:n.z+i.z}))},remove:function(){this.removeKeyEventListeners(),this.removeVisibilityEventListeners()},play:function(){this.attachKeyEventListeners()},pause:function(){this.keys={},this.removeKeyEventListeners()},updateVelocity:function(e){var t,i,n,s,o,r=this.data,a=this.keys,d=this.velocity;return i=r.adAxis,s=r.wsAxis,e>MAX_DELTA?(d[i]=0,void(d[s]=0)):(0!==d[i]&&(d[i]-=d[i]*r.easing*e),0!==d[s]&&(d[s]-=d[s]*r.easing*e),Math.abs(d[i])<CLAMP_VELOCITY&&(d[i]=0),Math.abs(d[s])<CLAMP_VELOCITY&&(d[s]=0),void(r.enabled&&(t=r.acceleration,r.adEnabled&&(n=r.adInverted?-1:1,(a.KeyA||a.ArrowLeft)&&(d[i]-=n*t*e),(a.KeyD||a.ArrowRight)&&(d[i]+=n*t*e)),r.wsEnabled&&(o=r.wsInverted?-1:1,(a.KeyW||a.ArrowUp)&&(d[s]-=o*t*e),(a.KeyS||a.ArrowDown)&&(d[s]+=o*t*e)))))},getMovementVector:function(){var e=new THREE.Vector3(0,0,0),t=new THREE.Euler(0,0,0,"YXZ");return function(i){var n,s=this.el.getAttribute("rotation"),o=this.velocity;return e.copy(o),e.multiplyScalar(i),s?(n=this.data.fly?s.x:0,t.set(THREE.Math.degToRad(n),THREE.Math.degToRad(s.y),0),e.applyEuler(t),e):e}}(),attachVisibilityEventListeners:function(){window.addEventListener("blur",this.onBlur),window.addEventListener("focus",this.onFocus),document.addEventListener("visibilitychange",this.onVisibilityChange)},removeVisibilityEventListeners:function(){window.removeEventListener("blur",this.onBlur),window.removeEventListener("focus",this.onFocus),document.removeEventListener("visibilitychange",this.onVisibilityChange)},attachKeyEventListeners:function(){window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)},removeKeyEventListeners:function(){window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)},onBlur:function(){this.pause()},onFocus:function(){this.play()},onVisibilityChange:function(){document.hidden?this.onBlur():this.onFocus()},onKeyDown:function(e){var t;shouldCaptureKeyEvent(e)&&(t=e.code||KEYCODE_TO_CODE[e.keyCode],this.keys[t]=!0)},onKeyUp:function(e){var t;t=e.code||KEYCODE_TO_CODE[e.keyCode],this.keys[t]=!1}});\n},{"../constants":93,"../core/component":102,"../lib/three":149,"../utils/":172}],92:[function(_dereq_,module,exports){\nvar TWEEN=_dereq_("tween.js"),DIRECTIONS={alternate:"alternate",alternateReverse:"alternate-reverse",normal:"normal",reverse:"reverse"},EASING_FUNCTIONS={linear:TWEEN.Easing.Linear.None,ease:TWEEN.Easing.Cubic.InOut,"ease-in":TWEEN.Easing.Cubic.In,"ease-out":TWEEN.Easing.Cubic.Out,"ease-in-out":TWEEN.Easing.Cubic.InOut,"ease-cubic":TWEEN.Easing.Cubic.In,"ease-in-cubic":TWEEN.Easing.Cubic.In,"ease-out-cubic":TWEEN.Easing.Cubic.Out,"ease-in-out-cubic":TWEEN.Easing.Cubic.InOut,"ease-quad":TWEEN.Easing.Quadratic.InOut,"ease-in-quad":TWEEN.Easing.Quadratic.In,"ease-out-quad":TWEEN.Easing.Quadratic.Out,"ease-in-out-quad":TWEEN.Easing.Quadratic.InOut,"ease-quart":TWEEN.Easing.Quartic.InOut,"ease-in-quart":TWEEN.Easing.Quartic.In,"ease-out-quart":TWEEN.Easing.Quartic.Out,"ease-in-out-quart":TWEEN.Easing.Quartic.InOut,"ease-quint":TWEEN.Easing.Quintic.InOut,"ease-in-quint":TWEEN.Easing.Quintic.In,"ease-out-quint":TWEEN.Easing.Quintic.Out,"ease-in-out-quint":TWEEN.Easing.Quintic.InOut,"ease-sine":TWEEN.Easing.Sinusoidal.InOut,"ease-in-sine":TWEEN.Easing.Sinusoidal.In,"ease-out-sine":TWEEN.Easing.Sinusoidal.Out,"ease-in-out-sine":TWEEN.Easing.Sinusoidal.InOut,"ease-expo":TWEEN.Easing.Exponential.InOut,"ease-in-expo":TWEEN.Easing.Exponential.In,"ease-out-expo":TWEEN.Easing.Exponential.Out,"ease-in-out-expo":TWEEN.Easing.Exponential.InOut,"ease-circ":TWEEN.Easing.Circular.InOut,"ease-in-circ":TWEEN.Easing.Circular.In,"ease-out-circ":TWEEN.Easing.Circular.Out,"ease-in-out-circ":TWEEN.Easing.Circular.InOut,"ease-elastic":TWEEN.Easing.Elastic.InOut,"ease-in-elastic":TWEEN.Easing.Elastic.In,"ease-out-elastic":TWEEN.Easing.Elastic.Out,"ease-in-out-elastic":TWEEN.Easing.Elastic.InOut,"ease-back":TWEEN.Easing.Back.InOut,"ease-in-back":TWEEN.Easing.Back.In,"ease-out-back":TWEEN.Easing.Back.Out,"ease-in-out-back":TWEEN.Easing.Back.InOut,"ease-bounce":TWEEN.Easing.Bounce.InOut,"ease-in-bounce":TWEEN.Easing.Bounce.In,"ease-out-bounce":TWEEN.Easing.Bounce.Out,"ease-in-out-bounce":TWEEN.Easing.Bounce.InOut},FILLS={backwards:"backwards",both:"both",forwards:"forwards",none:"none"},REPEATS={indefinite:"indefinite"},DEFAULTS={attribute:"rotation",begin:"",end:"",delay:0,dur:1e3,easing:"ease",direction:DIRECTIONS.normal,fill:FILLS.forwards,from:void 0,repeat:0,to:void 0};module.exports.defaults=DEFAULTS,module.exports.directions=DIRECTIONS,module.exports.easingFunctions=EASING_FUNCTIONS,module.exports.fills=FILLS,module.exports.repeats=REPEATS;\n},{"tween.js":48}],93:[function(_dereq_,module,exports){\nmodule.exports={AFRAME_INJECTED:"aframe-injected",DEFAULT_CAMERA_HEIGHT:1.6,DEFAULT_HANDEDNESS:"right",animation:_dereq_("./animation"),keyboardevent:_dereq_("./keyboardevent")};\n},{"./animation":92,"./keyboardevent":94}],94:[function(_dereq_,module,exports){\nmodule.exports={KEYCODE_TO_CODE:{38:"ArrowUp",37:"ArrowLeft",40:"ArrowDown",39:"ArrowRight",87:"KeyW",65:"KeyA",83:"KeyS",68:"KeyD"}};\n},{}],95:[function(_dereq_,module,exports){\nfunction cloneValue(t){return utils.extend({},t)}function getAnimationValues(t,e,i,n,a){function o(){var e=m[0],i=m[1],n=t.components[e],a=n&&n.schema;return a&&a[i]&&"color"===a[i].type}function s(){v=m[0],p=m[1],c=t.components[v],c||(t.setAttribute(v,""),c=t.components[v]),h=c.schema,void 0===i?b[e]=getComponentProperty(t,e):b[e]=i,b[e]=parseProperty(b[e],h[p]),g[e]=parseProperty(n,h[p]),f=function(i){e in i&&t.setAttribute(v,p,i[e])}}function r(){b=i?coordinates.parse(i):a,g=coordinates.parse(n),f=function(i){t.setAttribute(e,i)}}function u(){void 0===i?b[e]=!1:b[e]=strToBool(i),b[e]=boolToNum(b[e]),g[e]=boolToNum(strToBool(n)),f=function(i){t.setAttribute(e,!!i[e])}}function l(){b=new THREE.Color(i),g=new THREE.Color(n),f=function(i){m.length>1&&t.setAttribute(m[0],m[1],rgbVectorToHex(i)),t.setAttribute(e,rgbVectorToHex(i))}}function d(){void 0===i?b[e]=parseFloat(t.getAttribute(e)):b[e]=parseFloat(i),g[e]=parseFloat(n),f=function(i){t.setAttribute(e,i[e])}}var h,c,p,v,f,m=e.split("."),b={},g={};return 2===m.length?o()?l():s():n&&isCoordinates(n)?r():["true","false"].indexOf(n)!==-1?u():isNaN(n)?l():d(),{from:b,partialSetAttribute:f,to:g}}function strToBool(t){return"true"===t}function boolToNum(t){return t?1:0}function componentToHex(t){var e=t.toString(16);return 1===e.length?"0"+e:e}function convertToIntegerColor(t){return Math.floor(255*Math.min(Math.abs(t),1))}function rgbVectorToHex(t){return"#"+["r","g","b"].map(function(e){return componentToHex(convertToIntegerColor(t[e]))}).join("")}var ANode=_dereq_("./a-node"),animationConstants=_dereq_("../constants/animation"),coordinates=_dereq_("../utils/").coordinates,parseProperty=_dereq_("./schema").parseProperty,registerElement=_dereq_("./a-register-element").registerElement,TWEEN=_dereq_("tween.js"),THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),bind=utils.bind,getComponentProperty=utils.entity.getComponentProperty,DEFAULTS=animationConstants.defaults,DIRECTIONS=animationConstants.directions,EASING_FUNCTIONS=animationConstants.easingFunctions,FILLS=animationConstants.fills,REPEATS=animationConstants.repeats,isCoordinates=coordinates.isCoordinates;module.exports.AAnimation=registerElement("a-animation",{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.bindMethods(),this.isRunning=!1,this.partialSetAttribute=function(){},this.tween=null}},attachedCallback:{value:function(){this.el=this.parentNode,this.handleMixinUpdate(),this.update(),this.load()}},attributeChangedCallback:{value:function(t,e,i){this.hasLoaded&&this.isRunning&&(this.stop(),this.handleMixinUpdate(),this.update())}},detachedCallback:{value:function(){this.isRunning&&this.stop()}},getTween:{value:function(){var t,e,i,n,a=this,o=a.data,s=a.el,r=o.attribute,u=parseInt(o.delay,10),l=getComponentProperty(s,r),d=a.getDirection(o.direction),h=EASING_FUNCTIONS[o.easing],c=o.fill,p=o.repeat===REPEATS.indefinite?1/0:0,v=!1;return t=getAnimationValues(s,r,o.from||a.initialValue,o.to,l),e=t.from,i=t.to,a.partialSetAttribute=t.partialSetAttribute,void 0===a.count&&(a.count=p===1/0?0:parseInt(o.repeat,10)),isNaN(u)&&(u=0),a.initialValue=a.initialValue||cloneValue(l),p===1/0&&c===FILLS.forwards&&[DIRECTIONS.alternate,DIRECTIONS.alternateReverse].indexOf(o.direction)!==-1&&(v=!0),d===DIRECTIONS.reverse&&(n=i,i=cloneValue(e),e=cloneValue(n)),[FILLS.backwards,FILLS.both].indexOf(c)!==-1&&a.partialSetAttribute(e),new TWEEN.Tween(cloneValue(e)).to(i,o.dur).delay(u).easing(h).repeat(p).yoyo(v).onUpdate(function(){a.partialSetAttribute(this)}).onComplete(bind(a.onCompleted,a))}},update:{value:function(){var t=this.data;"infinite"===t.repeat&&console.warn("Using \'infinite\' as \'repeat\' value is invalid.  Use \'indefinite\' instead."),""===t.begin||isNaN(t.begin)||(console.warn("Using \'begin\' to specify a delay is deprecated. Use \'delay\' instead."),t.delay=t.begin,t.begin="");var e=t.begin,i=t.end;this.evt&&this.removeEventListeners(this.evt),this.evt={begin:e,end:i},this.addEventListeners(this.evt),""===e&&(this.stop(),this.start())},writable:window.debug},onCompleted:{value:function(){var t=this.data;return this.isRunning=!1,[FILLS.backwards,FILLS.none].indexOf(t.fill)!==-1&&this.partialSetAttribute(this.initialValue),0===this.count?(this.count=void 0,void this.emit("animationend")):(this.isRunning=!1,this.count--,void this.start())}},start:{value:function(){var t=this;return this.el.hasLoaded?void(!this.isRunning&&this.el.isPlaying&&(this.tween=this.getTween(),this.isRunning=!0,this.tween.start(),this.emit("animationstart"))):void this.el.addEventListener("loaded",function(){t.start()})},writable:!0},stop:{value:function(){var t=this.tween;t&&(t.stop(),this.isRunning=!1,[FILLS.backwards,FILLS.none].indexOf(this.data.fill)!==-1&&this.partialSetAttribute(this.initialValue),this.emit("animationstop"))},writable:!0},getDirection:{value:function(t){return t===DIRECTIONS.alternate?(this.prevDirection=this.prevDirection===DIRECTIONS.normal?DIRECTIONS.reverse:DIRECTIONS.normal,this.prevDirection):t===DIRECTIONS.alternateReverse?(this.prevDirection=this.prevDirection===DIRECTIONS.reverse?DIRECTIONS.normal:DIRECTIONS.reverse,this.prevDirection):t}},bindMethods:{value:function(){this.start=bind(this.start,this),this.stop=bind(this.stop,this),this.onStateAdded=bind(this.onStateAdded,this),this.onStateRemoved=bind(this.onStateRemoved,this)}},addEventListeners:{value:function(t){var e=this.el,i=this;utils.splitString(t.begin).forEach(function(t){e.addEventListener(t,i.start)}),utils.splitString(t.end).forEach(function(t){e.addEventListener(t,i.stop)}),""===t.begin&&e.addEventListener("play",this.start),e.addEventListener("pause",this.stop),e.addEventListener("stateadded",this.onStateAdded),e.addEventListener("stateremoved",this.onStateRemoved)}},removeEventListeners:{value:function(t){var e=this.el,i=this.start,n=this.stop;utils.splitString(t.begin).forEach(function(t){e.removeEventListener(t,i)}),utils.splitString(t.end).forEach(function(t){e.removeEventListener(t,n)}),e.removeEventListener("stateadded",this.onStateAdded),e.removeEventListener("stateremoved",this.onStateRemoved)}},onStateAdded:{value:function(t){t.detail.state===this.data.begin&&this.start()},writable:!0},onStateRemoved:{value:function(t){t.detail.state===this.data.begin&&this.stop()},writable:!0},handleMixinUpdate:{value:function(){var t,e,i,n={};i=document.querySelector("#"+this.getAttribute("mixin")),e=i?utils.getElData(i,DEFAULTS):{},t=utils.getElData(this,DEFAULTS),utils.extend(n,DEFAULTS,e,t),this.data=n}}})}),module.exports.getAnimationValues=getAnimationValues;\n},{"../constants/animation":92,"../lib/three":149,"../utils/":172,"./a-node":100,"./a-register-element":101,"./schema":110,"tween.js":48}],96:[function(_dereq_,module,exports){\nfunction mediaElementLoaded(e){if(e.hasAttribute("autoplay")||"auto"===e.getAttribute("preload"))return new Promise(function(t,r){function i(){for(var r=0,i=0;i<e.buffered.length;i++)r+=e.buffered.end(i)-e.buffered.start(i);r>=e.duration&&(THREE.Cache.files[e.getAttribute("src")]=e,t())}return 4===e.readyState?t():e.error?r():(e.addEventListener("loadeddata",i,!1),e.addEventListener("progress",i,!1),void e.addEventListener("error",r,!1))})}function fixUpMediaElement(e){var t=setCrossOrigin(e);return t.tagName&&"video"===t.tagName.toLowerCase()&&(t.setAttribute("playsinline",""),t.setAttribute("webkit-playsinline","")),t!==e&&(e.parentNode.appendChild(t),e.parentNode.removeChild(e)),t}function setCrossOrigin(e){var t,r;if(e.hasAttribute("crossorigin"))return e;if(r=e.getAttribute("src"),null!==r){if(r.indexOf("://")===-1)return e;if(extractDomain(r)===window.location.host)return e}return warn(\'Cross-origin element (e.g., <img>) was requested without `crossorigin` set. A-Frame will re-request the asset with `crossorigin` attribute set. Please set `crossorigin` on the element (e.g., <img crossorigin="anonymous">)\',r),e.crossOrigin="anonymous",t=e.cloneNode(!0)}function extractDomain(e){var t=e.indexOf("://")>-1?e.split("/")[2]:e.split("/")[0];return t.split(":")[0]}function inferResponseType(e){var t=e.lastIndexOf(".");if(t>=0){var r=e.slice(t,e.length);if(".gltf"===r||".glb"===r)return"arraybuffer"}return"text"}var ANode=_dereq_("./a-node"),bind=_dereq_("../utils/bind"),debug=_dereq_("../utils/debug"),registerElement=_dereq_("./a-register-element").registerElement,THREE=_dereq_("../lib/three"),fileLoader=new THREE.FileLoader,warn=debug("core:a-assets:warn");module.exports=registerElement("a-assets",{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.isAssets=!0,this.fileLoader=fileLoader,this.timeout=null}},attachedCallback:{value:function(){var e,t,r,i,o,n,s=this,a=[];if(!this.parentNode.isScene)throw new Error("<a-assets> must be a child of a <a-scene>.");for(o=this.querySelectorAll("img"),e=0;e<o.length;e++)i=fixUpMediaElement(o[e]),a.push(new Promise(function(t,r){THREE.Cache.files[o[e].getAttribute("src")]=i,i.onload=t,i.onerror=r}));for(r=this.querySelectorAll("audio, video"),e=0;e<r.length;e++)t=fixUpMediaElement(r[e]),a.push(mediaElementLoaded(t));Promise.all(a).then(bind(this.load,this)),n=parseInt(this.getAttribute("timeout"),10)||3e3,this.timeout=setTimeout(function(){s.hasLoaded||(warn("Asset loading timed out in ",n,"ms"),s.emit("timeout"),s.load())},n)}},detachedCallback:{value:function(){this.timeout&&clearTimeout(this.timeout)}},load:{value:function(){ANode.prototype.load.call(this,null,function(e){return e.isAssetItem&&e.hasAttribute("src")})}}})}),registerElement("a-asset-item",{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.data=null,this.isAssetItem=!0}},attachedCallback:{value:function(){var e=this,t=this.getAttribute("src");fileLoader.setResponseType(this.getAttribute("response-type")||inferResponseType(t)),fileLoader.load(t,function(t){e.data=t,setTimeout(function(){ANode.prototype.load.call(e)})},function(t){e.emit("progress",{loadedBytes:t.loaded,totalBytes:t.total,xhr:t})},function(t){e.emit("error",{xhr:t})})}}})}),module.exports.inferResponseType=inferResponseType;\n},{"../lib/three":149,"../utils/bind":166,"../utils/debug":168,"./a-node":100,"./a-register-element":101}],97:[function(_dereq_,module,exports){\nvar debug=_dereq_("../utils/debug"),registerElement=_dereq_("./a-register-element").registerElement,warn=debug("core:cubemap:warn");module.exports=registerElement("a-cubemap",{prototype:Object.create(HTMLElement.prototype,{attachedCallback:{value:function(){this.srcs=this.validate()},writable:window.debug},validate:{value:function(){var e,t=this.querySelectorAll("[src]"),r=[];if(6===t.length){for(e=0;e<t.length;e++)r.push(t[e].getAttribute("src"));return r}warn("<a-cubemap> did not contain exactly six elements each with a `src` attribute.")},writable:window.debug}})});\n},{"../utils/debug":168,"./a-register-element":101}],98:[function(_dereq_,module,exports){\nfunction checkComponentDefined(t,e){return void 0!==t.defaultComponents[e]||(!(!t.components[e]||!t.components[e].attrValue)||isComponentMixedIn(e,t.mixinEls))}function getMixedInComponents(t){var e=[];return t.mixinEls.forEach(function(t){function i(t){e.push(t)}Object.keys(t.componentCache).forEach(i)}),e}function isComponentMixedIn(t,e){var i,n=!1;for(i=0;i<e.length&&!(n=e[i].hasAttribute(t));++i);return n}function mergeComponentData(t,e){return e?e.constructor===Object?utils.extend(e,utils.styleParser.parse(t||{})):t||e:t}var ANode=_dereq_("./a-node"),COMPONENTS=_dereq_("./component").components,registerElement=_dereq_("./a-register-element").registerElement,THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),AEntity,bind=utils.bind,debug=utils.debug("core:a-entity:debug"),warn=utils.debug("core:a-entity:warn"),MULTIPLE_COMPONENT_DELIMITER="__",proto=Object.create(ANode.prototype,{defaultComponents:{value:{position:"",rotation:"",scale:"",visible:""}},createdCallback:{value:function(){this.components={},this.initializingComponents={},this.isEntity=!0,this.isPlaying=!1,this.object3D=new THREE.Group,this.object3D.el=this,this.object3DMap={},this.parentEl=null,this.states=[]}},attributeChangedCallback:{value:function(t,e,i){var n=this.components[t];return n&&n.justInitialized&&""===i?void delete n.justInitialized:void((n||null!==i)&&this.setEntityAttribute(t,e,i))}},attachedCallback:{value:function(){var t,e=this.sceneEl,i=this;if(this.addToParent(),!this.isScene)return e?(t=e.querySelector("a-assets"),t&&!t.hasLoaded?void t.addEventListener("loaded",function(){i.load()}):void this.load()):void this.load()}},detachedCallback:{value:function(){this.parentEl&&(Object.keys(this.components).forEach(bind(this.removeComponent,this)),this.isScene||(this.removeFromParent(),ANode.prototype.detachedCallback.call(this)))}},handleMixinUpdate:{value:function(t){return t?void this.updateComponent(t,this.getDOMAttribute(t)):void this.updateComponents()}},mapStateMixins:{value:function(t,e){var i,n=this.getAttribute("mixin");n&&(i=n.split(" "),i.forEach(function(i){var n=i+"-"+t;e(n)}),this.updateComponents())}},updateStateMixins:{value:function(t,e){var i,n=t.split(" "),o=e?e.split(" "):[],s=this;i=o.filter(function(t){return n.indexOf(t)<0}),i.forEach(function(t){var e=document.querySelectorAll("[id^="+t+"-]");Array.prototype.forEach.call(e,function(t){s.unregisterMixin(t.id)})}),this.states.forEach(function(t){n.forEach(function(e){var i=e+"-"+t;s.registerMixin(i)})})}},getObject3D:{value:function(t){return this.object3DMap[t]}},setObject3D:{value:function(t,e){var i,n=this;if(!(e instanceof THREE.Object3D))throw new Error("`Entity.setObject3D` was called with an object that was not an instance of THREE.Object3D.");i=this.getObject3D(t),i&&this.object3D.remove(i),e.el=this,e.children.length&&e.traverse(function(t){t.el=n}),this.object3D.add(e),this.object3DMap[t]=e,this.emit("object3dset",{object:e,type:t})}},removeObject3D:{value:function(t){var e=this.getObject3D(t);return e?(this.object3D.remove(e),delete this.object3DMap[t],void this.emit("object3dremove",{type:t})):void warn("Tried to remove `Object3D` of type:",t,"which was not defined.")}},getOrCreateObject3D:{value:function(t,e){var i=this.getObject3D(t);return!i&&e&&(i=new e,this.setObject3D(t,i)),i}},add:{value:function(t){if(!t.object3D)throw new Error("Trying to add an element that doesn\'t have an `object3D`");this.object3D.add(t.object3D),this.emit("child-attached",{el:t})}},addToParent:{value:function(){var t=this.parentEl=this.parentNode;t&&t.add&&!this.attachedToParent&&(t.add(this),this.attachedToParent=!0)}},removeFromParent:{value:function(){var t=this.parentEl;this.parentEl.remove(this),this.attachedToParent=!1,this.parentEl=this.parentNode=null,t.emit("child-detached",{el:this})}},load:{value:function(){var t=this;!this.hasLoaded&&this.parentEl&&ANode.prototype.load.call(this,function(){t.parentEl&&(t.updateComponents(),(t.isScene||t.parentEl.isPlaying)&&t.play())})},writable:window.debug},remove:{value:function(t){this.object3D.remove(t.object3D)}},getChildEntities:{value:function(){for(var t=this.children,e=[],i=0;i<t.length;i++){var n=t[i];n instanceof AEntity&&e.push(n)}return e}},initComponent:{value:function(t,e,i){var n,o=t.split(MULTIPLE_COMPONENT_DELIMITER),s=o[1],a=o[0],r=checkComponentDefined(this,t)||void 0!==e;if(COMPONENTS[a]&&(r||i)&&!(t in this.components)){if(this.initComponentDependencies(a),s&&!COMPONENTS[a].multiple)throw new Error("Trying to initialize multiple components of type `"+a+"`. There can only be one component of this type per entity.");n=new COMPONENTS[a].Component(this,e,s),this.isPlaying&&n.play(),this.hasAttribute(t)||(n.justInitialized=!0,HTMLElement.prototype.setAttribute.call(this,t,"")),debug("Component initialized: %s",t)}},writable:window.debug},initComponentDependencies:{value:function(t){var e,i=this,n=COMPONENTS[t];n&&(e=COMPONENTS[t].dependencies,e&&e.forEach(function(t){i.initComponent(t,HTMLElement.prototype.getAttribute.call(i,t)||void 0,!0)}))}},removeComponent:{value:function(t){var e,i,n;i=t in this.defaultComponents,n=isComponentMixedIn(t,this.mixinEls),i||n||(e=this.components[t],e.pause(),e.remove(),delete this.components[t],this.emit("componentremoved",{id:e.id,name:t}))}},updateComponents:{value:function(){function t(t){var e=t.split(MULTIPLE_COMPONENT_DELIMITER)[0];COMPONENTS[e]&&(n[t]=!0)}function e(t){var e=mergeComponentData(s.getDOMAttribute(t),o[t]);delete n[t],s.updateComponent(t,e)}var i,n={},o={},s=this;if(this.hasLoaded){for(getMixedInComponents(this).forEach(t),this.getExtraComponents&&(o=this.getExtraComponents(),Object.keys(o).forEach(t)),i=0;i<this.attributes.length;++i)t(this.attributes[i].name);Object.keys(this.defaultComponents).forEach(e),Object.keys(n).forEach(e)}},writable:window.debug},updateComponent:{value:function(t,e,i){var n=this.components[t],o=t in this.defaultComponents;return n?null!==e||o?void n.updateProperties(e,i):void this.removeComponent(t):void this.initComponent(t,e,!1)}},updateComponentProperty:{value:function(t,e,i){var n=this.components[t],o=n&&n.attrValue,s=o?utils.extend({},o):{};s[e]=i,this.updateComponent(t,s)}},removeAttribute:{value:function(t,e){var i=this.components[t];if(!i||void 0!==e||(this.setEntityAttribute(t,void 0,null),!this.components[t])){if(i&&void 0!==e)return void i.resetProperty(e);"mixin"===t&&this.mixinUpdate(""),HTMLElement.prototype.removeAttribute.call(this,t)}}},play:{value:function(){var t=this.components,e=Object.keys(t);!this.isPlaying&&this.hasLoaded&&(this.isPlaying=!0,e.forEach(function(e){t[e].play()}),this.getChildEntities().forEach(function(t){t.play()}),this.emit("play"))},writable:!0},pause:{value:function(){var t=this.components,e=Object.keys(t);this.isPlaying&&(this.isPlaying=!1,e.forEach(function(e){t[e].pause()}),this.getChildEntities().forEach(function(t){t.pause()}),this.emit("pause"))},writable:!0},setEntityAttribute:{value:function(t,e,i){return COMPONENTS[t]||this.components[t]?void this.updateComponent(t,i):"mixin"===t?void this.mixinUpdate(i,e):void 0}},mixinUpdate:{value:function(t,e){e=e||this.getAttribute("mixin"),this.updateMixins(t,e),this.updateStateMixins(t,e),this.updateComponents()}},setAttribute:{value:function(t,e,i){function n(t,e,i,n){t.updateComponentProperty(e,i,n)}function o(t,e,i){ANode.prototype.setAttribute.call(t,e,i),"mixin"===e&&t.mixinUpdate(i)}var s,a,r,u=typeof e,h=t.indexOf(MULTIPLE_COMPONENT_DELIMITER);return a=h>0?t.substring(0,h):t,COMPONENTS[a]?("string"===u&&"undefined"!=typeof i?n(this,t,e,i):(s="object"!==u||"object"===u&&i===!0,this.updateComponent(t,e,s)),r=this.sceneEl&&this.sceneEl.getAttribute("debug"),void(r&&this.components[t].flushToDOM())):void o(this,t,e)},writable:window.debug},flushToDOM:{value:function(t){var e,i,n=this.components,o=this.defaultComponents,s=this.children;if(Object.keys(n).forEach(function(t){n[t].flushToDOM(t in o)}),t)for(i=0;i<s.length;++i)e=s[i],e.flushToDOM&&e.flushToDOM(t)}},getAttribute:{value:function(t){var e=this.components[t];return e?e.data:HTMLElement.prototype.getAttribute.call(this,t)},writable:window.debug},getComputedAttribute:{value:function(t){return warn("`getComputedAttribute` is deprecated. Use `getAttribute` instead."),this.getAttribute(t)}},getDOMAttribute:{value:function(t){var e=this.components[t];return e?e.attrValue:HTMLElement.prototype.getAttribute.call(this,t)},writable:window.debug},addState:{value:function(t){this.is(t)||(this.states.push(t),this.mapStateMixins(t,bind(this.registerMixin,this)),this.emit("stateadded",{state:t}))}},removeState:{value:function(t){var e=this.states.indexOf(t);e!==-1&&(this.states.splice(e,1),this.mapStateMixins(t,bind(this.unregisterMixin,this)),this.emit("stateremoved",{state:t}))}},is:{value:function(t){return this.states.indexOf(t)!==-1}}});AEntity=registerElement("a-entity",{prototype:proto}),module.exports=AEntity;\n},{"../lib/three":149,"../utils/":172,"./a-node":100,"./a-register-element":101,"./component":102}],99:[function(_dereq_,module,exports){\nvar ANode=_dereq_("./a-node"),registerElement=_dereq_("./a-register-element").registerElement,components=_dereq_("./component").components,MULTIPLE_COMPONENT_DELIMITER="__";module.exports=registerElement("a-mixin",{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.componentCache={},this.id=this.getAttribute("id")}},attributeChangedCallback:{value:function(t,e,i){this.cacheAttribute(t,i)}},attachedCallback:{value:function(){this.sceneEl=this.closestScene(),this.cacheAttributes(),this.updateEntities(),this.load()}},setAttribute:{value:function(t,e){this.cacheAttribute(t,e),HTMLElement.prototype.setAttribute.call(this,t,e)}},cacheAttribute:{value:function(t,e){var i=t.split(MULTIPLE_COMPONENT_DELIMITER)[0],n=components[i];n&&(void 0===e&&(e=HTMLElement.prototype.getAttribute.call(this,t)),this.componentCache[t]=n.parseAttrValueForCache(e))}},getAttribute:{value:function(t){return this.componentCache[t]||HTMLElement.prototype.getAttribute.call(this,t)}},cacheAttributes:{value:function(){var t,e,i=this.attributes;for(e=0;e<i.length;e++)t=i[e].name,this.cacheAttribute(t)}},updateEntities:{value:function(){if(this.sceneEl)for(var t=this.sceneEl.querySelectorAll("[mixin~="+this.id+"]"),e=0;e<t.length;e++){var i=t[e];i.hasLoaded&&(i.registerMixin(this.id),Object.keys(this.componentCache).forEach(function(t){i.updateComponent(t)}))}}}})});\n},{"./a-node":100,"./a-register-element":101,"./component":102}],100:[function(_dereq_,module,exports){\nvar registerElement=_dereq_("./a-register-element").registerElement,utils=_dereq_("../utils/"),bind=utils.bind,warn=utils.debug("core:a-node:warn");module.exports=registerElement("a-node",{prototype:Object.create(HTMLElement.prototype,{createdCallback:{value:function(){this.hasLoaded=!1,this.isNode=!0,this.mixinEls=[],this.mixinObservers={}},writable:window.debug},attachedCallback:{value:function(){var e;this.sceneEl=this.closestScene(),this.sceneEl||warn("You are attempting to attach <"+this.tagName+"> outside of an A-Frame scene. Append this element to `<a-scene>` instead."),this.hasLoaded=!1,this.emit("nodeready",{},!1),e=this.getAttribute("mixin"),e&&this.updateMixins(e)},writable:window.debug},attributeChangedCallback:{value:function(e,t,i){"mixin"===e&&this.updateMixins(i,t)}},closestScene:{value:function(){for(var e=this;e&&!e.isScene;)e=e.parentElement;return e}},closest:{value:function(e){for(var t=this.matches||this.mozMatchesSelector||this.msMatchesSelector||this.oMatchesSelector||this.webkitMatchesSelector,i=this;i&&!t.call(i,e);)i=i.parentElement;return i}},detachedCallback:{value:function(){this.hasLoaded=!1}},load:{value:function(e,t){var i,n,s=this;this.hasLoaded||(t=t||function(e){return e.isNode},i=this.getChildren(),n=i.filter(t).map(function(e){return new Promise(function(t){return e.hasLoaded?t():void e.addEventListener("loaded",t)})}),Promise.all(n).then(function(){s.hasLoaded=!0,e&&e(),s.emit("loaded",{},!1)}))},writable:!0},getChildren:{value:function(){return Array.prototype.slice.call(this.children,0)}},updateMixins:{value:function(e,t){var i=e?e.trim().split(/\\s+/):[],n=t?t.trim().split(/\\s+/):[];n.filter(function(e){return i.indexOf(e)<0}).forEach(bind(this.unregisterMixin,this)),this.mixinEls=[],i.forEach(bind(this.registerMixin,this))}},registerMixin:{value:function(e){if(this.sceneEl){var t=this.sceneEl.querySelector("a-mixin#"+e);t&&(this.attachMixinListener(t),this.mixinEls.push(t))}}},setAttribute:{value:function(e,t){"mixin"===e&&this.updateMixins(t),HTMLElement.prototype.setAttribute.call(this,e,t)}},unregisterMixin:{value:function(e){var t,i,n=this.mixinEls;for(i=0;i<n.length;++i)if(t=n[i],e===t.id){n.splice(i,1);break}this.removeMixinListener(e)}},removeMixinListener:{value:function(e){var t=this.mixinObservers[e];t&&(t.disconnect(),this.mixinObservers[e]=null)}},attachMixinListener:{value:function(e){var t=this,i=e.id,n=this.mixinObservers[i];if(e&&!n){var s=new MutationObserver(function(e){var i=e[0].attributeName;t.handleMixinUpdate(i)}),r={attributes:!0};s.observe(e,r),this.mixinObservers[i]=s}}},handleMixinUpdate:{value:function(){}},emit:{value:function(e,t,i,n){var s=this;t=t||{},void 0===i&&(i=!0);var r={bubbles:!!i,detail:t};return n&&utils.extend(r,n),e.split(" ").map(function(e){return utils.fireEvent(s,e,r)})},writable:window.debug},emitter:{value:function(e,t,i){var n=this;return function(){n.emit(e,t,i)}}}})});\n},{"../utils/":172,"./a-register-element":101}],101:[function(_dereq_,module,exports){\nfunction addTagName(e){knownTags[e.toLowerCase()]=!0}function wrapANodeMethods(e){var t={},o=["attachedCallback","attributeChangedCallback","createdCallback"];return wrapMethods(t,o,e,ANode.prototype),copyProperties(e,t),t}function wrapAEntityMethods(e){var t={},o=["attachedCallback","attributeChangedCallback","createdCallback"],a=["attachedCallback","attributeChangedCallback","createdCallback","detachedCallback"];return wrapMethods(t,o,e,ANode.prototype),wrapMethods(t,a,e,AEntity.prototype),copyProperties(e,t),t}function wrapMethods(e,t,o,a){t.forEach(function(t){wrapMethod(e,t,o,a)})}function wrapMethod(e,t,o,a){var r=o[t],n=a[t];r&&n&&r!==n&&(e[t]={value:function(){return n.apply(this,arguments),r.apply(this,arguments)},writable:window.debug})}function copyProperties(e,t){var o=Object.getOwnPropertyNames(e);o.forEach(function(o){var a;t[o]||(a=Object.getOwnPropertyDescriptor(e,o),t[o]={value:e[o],writable:a.writable})})}_dereq_("document-register-element");var ANode,AEntity,knownTags=module.exports.knownTags={};module.exports.isNode=function(e){return e.tagName.toLowerCase()in knownTags||e.isNode},module.exports.registerElement=function(e,t){var o=Object.getPrototypeOf(t.prototype),a=t,r=ANode&&o===ANode.prototype,n=AEntity&&o===AEntity.prototype;return(r||n)&&addTagName(e),r&&(a=wrapANodeMethods(t.prototype),a={prototype:Object.create(o,a)}),n&&(a=wrapAEntityMethods(t.prototype),a={prototype:Object.create(o,a)}),document.registerElement(e,a)},module.exports.wrapMethods=wrapMethods,ANode=_dereq_("./a-node"),AEntity=_dereq_("./a-entity");\n},{"./a-entity":98,"./a-node":100,"document-register-element":10}],102:[function(_dereq_,module,exports){\nfunction extendProperties(e,t,i){return i?t:utils.extend(e,t)}function hasBehavior(e){return e.tick||e.tock}function wrapPause(e){return function(){var t=this.el.sceneEl;this.isPlaying&&(e.call(this),this.isPlaying=!1,hasBehavior(this)&&t.removeBehavior(this))}}function wrapPlay(e){return function(){var t=this.el.sceneEl,i=this.el.isPlaying&&!this.isPlaying;this.initialized&&i&&(e.call(this),this.isPlaying=!0,hasBehavior(this)&&t.addBehavior(this))}}var schema=_dereq_("./schema"),scenes=_dereq_("./scene/scenes"),systems=_dereq_("./system"),utils=_dereq_("../utils/"),components=module.exports.components={},parseProperties=schema.parseProperties,parseProperty=schema.parseProperty,processSchema=schema.process,isSingleProp=schema.isSingleProperty,stringifyProperties=schema.stringifyProperties,stringifyProperty=schema.stringifyProperty,styleParser=utils.styleParser,warn=utils.debug("core:component:warn"),aframeScript=document.currentScript,upperCaseRegExp=new RegExp("[A-Z]+"),Component=module.exports.Component=function(e,t,i){var r=this;this.el=e,this.id=i,this.attrName=this.name+(i?"__"+i:""),this.el.components[this.attrName]=this,this.previousAttrValue=void 0,this.updateProperties(t),this.throttledEmitComponentChanged=utils.throttle(function(t){e.emit("componentchanged",{id:r.id,name:r.name,newData:r.data,oldData:t},!1)},200)};if(Component.prototype={schema:{},init:function(){},update:function(e){},updateSchema:void 0,tick:void 0,tock:void 0,play:function(){},pause:function(){},remove:function(){},parse:function(e,t){var i=this.schema;return isSingleProp(i)?parseProperty(e,i):parseProperties(styleParser.parse(e),i,!0,this.name,t)},stringify:function(e){var t=this.schema;return"string"==typeof e?e:isSingleProp(t)?stringifyProperty(e,t):(e=stringifyProperties(e,t),styleParser.stringify(e))},getData:function(){var e=this.data;return"object"!=typeof e?e:utils.extend({},e)},updateCachedAttrValue:function(e,t){var i,r=this.parseAttrValueForCache(e),s=isSingleProp(this.schema);if(void 0!==e){if(!s&&!t&&this.attrValue)for(i in this.attrValue)i in r||(r[i]=this.attrValue[i]);this.attrValue=extendProperties({},r,s)}},parseAttrValueForCache:function(e){var t;return"string"!=typeof e?e:(isSingleProp(this.schema)?(t=this.schema.parse(e),"string"==typeof t&&(t=e)):t=styleParser.parse(e),t)},flushToDOM:function(e){var t=e?this.data:this.attrValue;t&&HTMLElement.prototype.setAttribute.call(this.el,this.attrName,this.stringify(t))},updateProperties:function(e,t){var i,r,s,a=this.el;if(!a.hasLoaded)return void this.updateCachedAttrValue(e);if(i=isSingleProp(this.schema),r=extendProperties({},this.data,i),s="object"==typeof this.previousAttrValue&&e===this.previousAttrValue,this.previousAttrValue=e,e=this.parseAttrValueForCache(e),this.updateSchema&&this.updateSchema(this.buildData(e,!1,!0)),this.data=this.buildData(e,t,!1,s),this.updateCachedAttrValue(e,t),this.initialized){if(!s&&utils.deepEqual(r,this.data))return;this.update(r),this.throttledEmitComponentChanged(r)}else{if(a.initializingComponents[this.name])return;a.initializingComponents[this.name]=!0,this.init(),this.initialized=!0,delete a.initializingComponents[this.name],this.update(r),a.isPlaying&&this.play(),a.emit("componentinitialized",{id:this.id,name:this.name,data:this.getData()},!1)}},resetProperty:function(e){if(isSingleProp(this.schema))this.attrValue=void 0;else{if(!(e in this.attrValue))return;delete this.attrValue[e]}this.updateProperties(this.attrValue)},extendSchema:function(e){var t=utils.extend({},components[this.name].schema);utils.extend(t,e),this.schema=processSchema(t),this.el.emit("schemachanged",{component:this.name})},buildData:function(e,t,i,r){var s,a,n=this,o=void 0!==e&&null!==e,p=this.schema,h=isSingleProp(p),c=this.el.mixinEls;if(h?s=p.default:(a=!t&&this.attrValue,s="object"==typeof a?utils.extend({},a):{},Object.keys(p).forEach(function(e){var t=p[e].default;s[e]||(s[e]=t&&t.constructor===Object?utils.extend({},t):t)})),c.forEach(function(e){var t=e.getAttribute(n.attrName);t&&(s=extendProperties(s,t,h))}),o){if(h)return r===!0?e:parseProperty(e,p);s=extendProperties(s,e,h)}else{if(r===!0)return s;if(h)return parseProperty(s,p)}return r===!0?s:parseProperties(s,p,void 0,this.name,i)}},window.debug)var registrationOrderWarnings=module.exports.registrationOrderWarnings={};module.exports.registerComponent=function(e,t){var i,r={};if(document.currentScript&&document.currentScript!==aframeScript&&scenes.forEach(function(t){t.hasLoaded||document.currentScript.compareDocumentPosition(t)!==Node.DOCUMENT_POSITION_FOLLOWING&&(warn("The component `"+e+"` was registered in a <script> tag after the scene. Component <script> tags in an HTML file should be declared *before* the scene such that the component is available to entities during scene initialization."),window.debug&&(registrationOrderWarnings[e]=!0))}),upperCaseRegExp.test(e)===!0&&warn("The component name `"+e+"` contains uppercase characters, but HTML will ignore the capitalization of attribute names. Change the name to be lowercase: `"+e.toLowerCase()+"`"),e.indexOf("__")!==-1)throw new Error("The component name `"+e+"` is not allowed. The sequence __ (double underscore) is reserved to specify an id for multiple components of the same type");if(Object.keys(t).forEach(function(e){r[e]={value:t[e],writable:!0}}),components[e])throw new Error("The component `"+e+"` has been already registered. Check that you are not loading two versions of the same component or two different components of the same name.");return i=function(e,t,i){Component.call(this,e,t,i)},i.prototype=Object.create(Component.prototype,r),i.prototype.name=e,i.prototype.constructor=i,i.prototype.system=systems&&systems.systems[e],i.prototype.play=wrapPlay(i.prototype.play),i.prototype.pause=wrapPause(i.prototype.pause),components[e]={Component:i,dependencies:i.prototype.dependencies,isSingleProp:isSingleProp(i.prototype.schema),multiple:i.prototype.multiple,parse:i.prototype.parse,parseAttrValueForCache:i.prototype.parseAttrValueForCache,schema:utils.extend(processSchema(i.prototype.schema,i.prototype.name)),stringify:i.prototype.stringify,type:i.prototype.type},i};\n},{"../utils/":172,"./scene/scenes":108,"./schema":110,"./system":112}],103:[function(_dereq_,module,exports){\nvar schema=_dereq_("./schema"),processSchema=schema.process,geometries=module.exports.geometries={},geometryNames=module.exports.geometryNames=[],THREE=_dereq_("../lib/three"),Geometry=module.exports.Geometry=function(){};Geometry.prototype={schema:{},init:function(e){return this.geometry=new THREE.Geometry,this.geometry},update:function(e){}},module.exports.registerGeometry=function(e,t){var r,o={};if(Object.keys(t).forEach(function(e){o[e]={value:t[e],writable:!0}}),geometries[e])throw new Error("The geometry `"+e+"` has been already registered");return r=function(){Geometry.call(this)},r.prototype=Object.create(Geometry.prototype,o),r.prototype.name=e,r.prototype.constructor=r,geometries[e]={Geometry:r,schema:processSchema(r.prototype.schema)},geometryNames.push(e),r};\n},{"../lib/three":149,"./schema":110}],104:[function(_dereq_,module,exports){\nfunction registerPropertyType(e,r,t,i){return"type"in propertyTypes?void error("Property type "+e+" is already registered."):void(propertyTypes[e]={default:r,parse:t||defaultParse,stringify:i||defaultStringify})}function arrayParse(e){function r(e){return e.trim()}return Array.isArray(e)?e:e&&"string"==typeof e?e.split(",").map(r):[]}function arrayStringify(e){return e.join(", ")}function assetParse(e){var r,t;return"string"!=typeof e?e:(t=e.match(/\\url\\((.+)\\)/),t?t[1]:"#"===e.charAt(0)?(r=document.getElementById(e.substring(1)))?"CANVAS"===r.tagName||"VIDEO"===r.tagName||"IMG"===r.tagName?r:r.getAttribute("src"):void warn(\'"\'+e+\'" asset not found.\'):e)}function defaultParse(e){return e}function defaultStringify(e){return null===e?"null":e.toString()}function boolParse(e){return"false"!==e&&e!==!1}function intParse(e){return parseInt(e,10)}function numberParse(e){return parseFloat(e,10)}function selectorParse(e){return e?"string"!=typeof e?e:document.querySelector(e):null}function selectorAllParse(e){return e?"string"!=typeof e?e:Array.prototype.slice.call(document.querySelectorAll(e),0):null}function selectorStringify(e){return e.getAttribute?"#"+e.getAttribute("id"):defaultStringify(e)}function selectorAllStringify(e){return e instanceof Array?e.map(function(e){return"#"+e.getAttribute("id")}).join(", "):defaultStringify(e)}function srcParse(e){return warn("`src` property type is deprecated. Use `asset` instead."),assetParse(e)}function vecParse(e){return coordinates.parse(e,this.default)}function isValidDefaultValue(e,r){return("audio"!==e||"string"==typeof r)&&(!("array"===e&&!Array.isArray(r))&&(("asset"!==e||"string"==typeof r)&&(("boolean"!==e||"boolean"==typeof r)&&(("color"!==e||"string"==typeof r)&&(("int"!==e||"number"==typeof r)&&(("number"!==e||"number"==typeof r)&&(("map"!==e||"string"==typeof r)&&(("model"!==e||"string"==typeof r)&&(("selector"!==e||"string"==typeof r)&&(("selectorAll"!==e||"string"==typeof r)&&(("src"!==e||"string"==typeof r)&&(("string"!==e||"string"==typeof r)&&(("time"!==e||"number"==typeof r)&&("vec2"===e?isValidDefaultCoordinate(r,2):"vec3"===e?isValidDefaultCoordinate(r,3):"vec4"!==e||isValidDefaultCoordinate(r,4)))))))))))))))}function isValidDefaultCoordinate(e,r){if(null===e)return!0;if("object"!=typeof e)return!1;if(Object.keys(e).length!==r)return!1;var t=e.x,i=e.y,o=e.z,s=e.w;return"number"==typeof t&&"number"==typeof i&&(!(r>2&&"number"!=typeof o)&&!(r>3&&"number"!=typeof s))}var coordinates=_dereq_("../utils/coordinates"),debug=_dereq_("debug"),error=debug("core:propertyTypes:warn"),warn=debug("core:propertyTypes:warn"),propertyTypes=module.exports.propertyTypes={};registerPropertyType("audio","",assetParse),registerPropertyType("array",[],arrayParse,arrayStringify),registerPropertyType("asset","",assetParse),registerPropertyType("boolean",!1,boolParse),registerPropertyType("color","#FFF",defaultParse,defaultStringify),registerPropertyType("int",0,intParse),registerPropertyType("number",0,numberParse),registerPropertyType("map","",assetParse),registerPropertyType("model","",assetParse),registerPropertyType("selector","",selectorParse,selectorStringify),registerPropertyType("selectorAll","",selectorAllParse,selectorAllStringify),registerPropertyType("src","",srcParse),registerPropertyType("string","",defaultParse,defaultStringify),registerPropertyType("time",0,intParse),registerPropertyType("vec2",{x:0,y:0},vecParse,coordinates.stringify),registerPropertyType("vec3",{x:0,y:0,z:0},vecParse,coordinates.stringify),registerPropertyType("vec4",{x:0,y:0,z:0,w:0},vecParse,coordinates.stringify),module.exports.registerPropertyType=registerPropertyType,module.exports.isValidDefaultValue=isValidDefaultValue,module.exports.isValidDefaultCoordinate=isValidDefaultCoordinate;\n},{"../utils/coordinates":167,"debug":7}],105:[function(_dereq_,module,exports){\nfunction getCanvasSize(e,t){return t?{height:e.parentElement.offsetHeight,width:e.parentElement.offsetWidth}:{height:window.innerHeight,width:window.innerWidth}}function requestFullscreen(e){var t=e.requestFullscreen||e.webkitRequestFullscreen||e.mozRequestFullScreen||e.msRequestFullscreen;t.apply(e)}function exitFullscreen(){document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()}function shouldAntiAlias(e){return null!==e.getAttribute("antialias")?"true"===e.getAttribute("antialias"):!e.isMobile}var initMetaTags=_dereq_("./metaTags").inject,initWakelock=_dereq_("./wakelock"),re=_dereq_("../a-register-element"),scenes=_dereq_("./scenes"),systems=_dereq_("../system").systems,THREE=_dereq_("../../lib/three"),TWEEN=_dereq_("tween.js"),utils=_dereq_("../../utils/"),AEntity=_dereq_("../a-entity"),ANode=_dereq_("../a-node"),initPostMessageAPI=_dereq_("./postMessage"),bind=utils.bind,isIOS=utils.device.isIOS(),isMobile=utils.device.isMobile(),registerElement=re.registerElement,warn=utils.debug("core:a-scene:warn");module.exports.AScene=registerElement("a-scene",{prototype:Object.create(AEntity.prototype,{defaultComponents:{value:{canvas:"",inspector:"","keyboard-shortcuts":"",screenshot:"","vr-mode-ui":"","auto-enter-vr":""}},createdCallback:{value:function(){this.isIOS=isIOS,this.isMobile=isMobile,this.isScene=!0,this.object3D=new THREE.Scene,this.render=bind(this.render,this),this.systems={},this.time=0,this.init()}},init:{value:function(){this.behaviors={tick:[],tock:[]},this.hasLoaded=!1,this.isPlaying=!1,this.renderTarget=null,this.originalHTML=this.innerHTML,this.addEventListener("render-target-loaded",function(){this.setupRenderer(),this.resize()}),this.addFullScreenStyles(),initPostMessageAPI(this)},writable:!0},addFullScreenStyles:{value:function(){var e=document.documentElement;e.classList.add("a-html"),document.body.classList.add("a-body"),this.classList.add("fullscreen")}},removeFullScreenStyles:{value:function(){var e=document.documentElement;e.classList.remove("a-html"),document.body.classList.remove("a-body"),this.classList.remove("fullscreen")}},attachedCallback:{value:function(){var e=bind(this.resize,this);initMetaTags(this),initWakelock(this),this.initSystems(),window.addEventListener("load",e),window.addEventListener("resize",e),this.play(),scenes.push(this)},writable:window.debug},initSystems:{value:function(){Object.keys(systems).forEach(bind(this.initSystem,this))}},initSystem:{value:function(e){this.systems[e]||(this.systems[e]=new systems[e](this))}},detachedCallback:{value:function(){this.effect&&this.effect.cancelAnimationFrame?this.effect.cancelAnimationFrame(this.animationFrameID):window.cancelAnimationFrame(this.animationFrameID);var e;this.animationFrameID=null,e=scenes.indexOf(this),scenes.splice(e,1)}},addBehavior:{value:function(e){var t=this,i=this.behaviors;Object.keys(i).forEach(function(i){if(e[i]){var s=t.behaviors[i];s.indexOf(e)===-1&&s.push(e)}})}},checkHeadsetConnected:{value:utils.device.checkHeadsetConnected,writable:window.debug},enterVR:{value:function(e){function t(){s.addState("vr-mode"),s.emit("enter-vr",e),s.isMobile&&screen.orientation&&screen.orientation.lock&&screen.orientation.lock("landscape"),s.addFullScreenStyles(),s.isMobile||s.checkHeadsetConnected()||requestFullscreen(s.canvas),s.resize()}function i(e){throw e&&e.message?new Error("Failed to enter VR mode (`requestPresent`): "+e.message):new Error("Failed to enter VR mode (`requestPresent`).")}var s=this;return this.is("vr-mode")?Promise.resolve("Already in VR."):this.checkHeadsetConnected()||this.isMobile?this.effect.requestPresent().then(t,i):(t(),Promise.resolve())}},exitVR:{value:function(){function e(){i.removeState("vr-mode"),i.isMobile&&screen.orientation&&screen.orientation.unlock&&screen.orientation.unlock(),i.hasAttribute("embedded")&&i.removeFullScreenStyles(),i.resize(),i.isIOS&&utils.forceCanvasResizeSafariMobile(this.canvas),i.emit("exit-vr",{target:i})}function t(e){throw e&&e.message?new Error("Failed to exit VR mode (`exitPresent`): "+e.message):new Error("Failed to exit VR mode (`exitPresent`).")}var i=this;return this.is("vr-mode")?(exitFullscreen(),this.checkHeadsetConnected()||this.isMobile?this.effect.exitPresent().then(e,t):(e(),Promise.resolve())):Promise.resolve("Not in VR.")}},getAttribute:{value:function(e){var t=this.systems[e];return t?t.data:AEntity.prototype.getAttribute.call(this,e)}},getComputedAttribute:{value:function(e){warn("`getComputedAttribute` is deprecated. Use `getAttribute` instead."),this.getAttribute(e)}},getDOMAttribute:{value:function(e){var t=this.systems[e];return t?t.data:AEntity.prototype.getDOMAttribute.call(this,e)}},setAttribute:{value:function(e,t,i){var s=this.systems[e];return s?(ANode.prototype.setAttribute.call(this,e,t),void s.updateProperties(t)):void AEntity.prototype.setAttribute.call(this,e,t,i)}},removeBehavior:{value:function(e){var t=this,i=this.behaviors;Object.keys(i).forEach(function(i){if(e[i]){var s=t.behaviors[i],n=s.indexOf(e);n!==-1&&s.splice(n,1)}})}},resize:{value:function(){var e,t=this.camera,i=this.canvas,s=this.getAttribute("embedded")&&!this.is("vr-mode");!t||!i||this.is("vr-mode")&&isMobile||(e=getCanvasSize(i,s),t.aspect=e.width/e.height,t.updateProjectionMatrix(),this.renderer.setSize(e.width,e.height))},writable:window.debug},setupRenderer:{value:function(){var e=this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:shouldAntiAlias(this),alpha:!0});e.setPixelRatio(window.devicePixelRatio),e.sortObjects=!1,this.effect=new THREE.VREffect(e),this.effect.autoSubmitFrame=!1},writable:window.debug},play:{value:function(){var e=this;return this.renderStarted?void AEntity.prototype.play.call(this):(this.addEventListener("loaded",function(){function e(e){e.renderStarted||(e.resize(),e.renderer&&(window.performance&&window.performance.mark("render-started"),e.clock=new THREE.Clock,e.render(),e.renderStarted=!0,e.emit("renderstart")))}return AEntity.prototype.play.call(this),this.camera?void e(this):void this.addEventListener("camera-set-active",function(){e(this)})}),void setTimeout(function(){AEntity.prototype.load.call(e)}))}},reload:{value:function(e){function t(){i.isPlaying&&AEntity.prototype.play.call(i)}var i=this;e&&this.pause(),this.innerHTML=this.originalHTML,this.init(),ANode.prototype.load.call(this,t)}},updateComponent:{value:function(e){e in systems||AEntity.prototype.updateComponent.apply(this,arguments)}},tick:{value:function(e,t){var i=this.systems;TWEEN.update(),this.behaviors.tick.forEach(function(i){i.el.isPlaying&&i.tick(e,t)}),Object.keys(i).forEach(function(s){i[s].tick&&i[s].tick(e,t)})}},tock:{value:function(e,t){var i=this.systems;this.behaviors.tock.forEach(function(i){i.el.isPlaying&&i.tock(e,t)}),Object.keys(i).forEach(function(s){i[s].tock&&i[s].tock(e,t)})}},render:{value:function(){var e=this.effect,t=1e3*this.clock.getDelta();this.time=1e3*this.clock.elapsedTime,this.isPlaying&&this.tick(this.time,t),this.animationFrameID=e.requestAnimationFrame(this.render),e.render(this.object3D,this.camera,this.renderTarget),this.isPlaying&&this.tock(this.time,t),this.effect.submitFrame()},writable:!0}})}),module.exports.shouldAntiAlias=shouldAntiAlias;\n},{"../../lib/three":149,"../../utils/":172,"../a-entity":98,"../a-node":100,"../a-register-element":101,"../system":112,"./metaTags":106,"./postMessage":107,"./scenes":108,"./wakelock":109,"tween.js":48}],106:[function(_dereq_,module,exports){\nfunction Meta(e){return{tagName:"meta",attributes:e,exists:function(){return document.querySelector(\'meta[name="\'+e.name+\'"]\')}}}function Link(e){return{tagName:"link",attributes:e,exists:function(){return document.querySelector(\'link[rel="\'+e.rel+\'"]\')}}}function createTag(e){if(e&&e.tagName){var t=document.createElement(e.tagName);return t.setAttribute(constants.AFRAME_INJECTED,""),extend(t,e.attributes)}}var constants=_dereq_("../../constants/"),extend=_dereq_("../../utils").extend,MOBILE_HEAD_TAGS=module.exports.MOBILE_HEAD_TAGS=[Meta({name:"viewport",content:"width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui"}),Meta({name:"mobile-web-app-capable",content:"yes"}),Meta({name:"theme-color",content:"black"})],MOBILE_IOS_HEAD_TAGS=[Meta({name:"apple-mobile-web-app-capable",content:"yes"}),Meta({name:"apple-mobile-web-app-status-bar-style",content:"black"}),Link({rel:"apple-touch-icon",href:"https://aframe.io/images/aframe-logo-152.png"})];module.exports.inject=function(e){function t(e){e&&!e.exists()&&(a=createTag(e),a&&(r?r.parentNode.insertBefore(a,r):n.appendChild(a),i.push(a)))}var a,n=document.head,r=n.querySelector("script"),i=[];return MOBILE_HEAD_TAGS.forEach(t),e.isIOS&&MOBILE_IOS_HEAD_TAGS.forEach(t),i};\n},{"../../constants/":93,"../../utils":172}],107:[function(_dereq_,module,exports){\nfunction postMessageAPIHandler(e){var a=this;if(e.data)switch(e.data.type){case"vr":switch(e.data.data){case"enter":a.enterVR();break;case"exit":a.exitVR()}}}var bind=_dereq_("../../utils/bind"),isIframed=_dereq_("../../utils/").isIframed;module.exports=function(e){isIframed()&&window.addEventListener("message",bind(postMessageAPIHandler,e))};\n},{"../../utils/":172,"../../utils/bind":166}],108:[function(_dereq_,module,exports){\nmodule.exports=[];\n},{}],109:[function(_dereq_,module,exports){\nvar Wakelock=_dereq_("../../../vendor/wakelock/wakelock");module.exports=function(e){if(e.isMobile){var n=e.wakelock=new Wakelock;e.addEventListener("enter-vr",function(){n.request()}),e.addEventListener("exit-vr",function(){n.release()})}};\n},{"../../../vendor/wakelock/wakelock":182}],110:[function(_dereq_,module,exports){\nfunction isSingleProperty(e){return"type"in e?"string"==typeof e.type:"default"in e}function processPropertyDefinition(e,r){var t,o=e.default,n=e.type;return e.type?"bool"===e.type?n="boolean":"float"===e.type&&(n="number"):n=void 0!==o&&["boolean","number"].indexOf(typeof o)!==-1?typeof o:Array.isArray(o)?"array":"string",t=propertyTypes[n],t||warn("Unknown property type for component `"+r+"`: "+n),e.parse=e.parse||t.parse,e.stringify=e.stringify||t.stringify,e.type=n,"default"in e?isValidDefaultValue(n,o)||warn("Default value `"+o+"` does not match type `"+n+"` in component `"+r+"`"):e.default=t.default,e}function parseProperty(e,r){return void 0!==e&&null!==e&&""!==e||(e=r.default,Array.isArray(e)&&(e=e.slice())),r.parse(e,r.default)}function stringifyProperty(e,r){return"object"!=typeof e?e:r&&null!==e?r.stringify(e):JSON.stringify(e)}var utils=_dereq_("../utils/"),PropertyTypes=_dereq_("./propertyTypes"),debug=utils.debug,isValidDefaultValue=PropertyTypes.isValidDefaultValue,propertyTypes=PropertyTypes.propertyTypes,warn=debug("core:schema:warn");module.exports.isSingleProperty=isSingleProperty,module.exports.process=function(e,r){return isSingleProperty(e)?processPropertyDefinition(e,r):(Object.keys(e).forEach(function(t){e[t]=processPropertyDefinition(e[t],r)}),e)},module.exports.processPropertyDefinition=processPropertyDefinition,module.exports.parseProperties=function(e,r,t,o,n){var p=Object.keys(t?e:r);return null===e||"object"!=typeof e?e:(Object.keys(e).forEach(function(e){r[e]||n||warn("Unknown property `"+e+"` for component/system `"+o+"`.")}),p.forEach(function(t){var o=r[t],n=e[t];r[t]&&(e[t]=parseProperty(n,o))}),e)},module.exports.parseProperty=parseProperty,module.exports.stringifyProperties=function(e,r){var t={};return Object.keys(e).forEach(function(o){var n=r[o],p=e[o],i=p;"object"==typeof i&&(i=stringifyProperty(p,n),n||warn("Unknown component property: "+o)),t[o]=i}),t},module.exports.stringifyProperty=stringifyProperty;\n},{"../utils/":172,"./propertyTypes":104}],111:[function(_dereq_,module,exports){\nvar schema=_dereq_("./schema"),processSchema=schema.process,shaders=module.exports.shaders={},shaderNames=module.exports.shaderNames=[],THREE=_dereq_("../lib/three"),utils=_dereq_("../utils"),propertyToThreeMapping={array:"v3",color:"v3",int:"i",number:"f",map:"t",time:"f",vec2:"v2",vec3:"v3",vec4:"v4"},Shader=module.exports.Shader=function(){};Shader.prototype={schema:{},vertexShader:"void main() {gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);}",fragmentShader:"void main() {gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);}",init:function(e){return this.attributes=this.initVariables(e,"attribute"),this.uniforms=this.initVariables(e,"uniform"),this.material=new(this.raw?THREE.RawShaderMaterial:THREE.ShaderMaterial)({uniforms:this.uniforms,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader}),this.material},initVariables:function(e,r){var t={},a=this.schema;return Object.keys(a).forEach(function(e){if(a[e].is===r){var i=propertyToThreeMapping[a[e].type];t[e]={type:i,value:void 0}}}),t},update:function(e){this.updateVariables(e,"attribute"),this.updateVariables(e,"uniform")},updateVariables:function(e,r){var t=this,a="uniform"===r?this.uniforms:this.attributes,i=this.schema;Object.keys(e).forEach(function(s){var o;if(i[s]&&i[s].is===r){if("map"===i[s].type){if(!a[s]||a[s].value===e[s])return;return o="_texture_"+s,t.el.addEventListener("materialtextureloaded",function(){a[s].value=t.material[o],a[s].needsUpdate=!0}),void utils.material.updateMapMaterialFromData(o,s,t,e)}a[s].value=t.parseValue(i[s].type,e[s]),a[s].needsUpdate=!0}})},parseValue:function(e,r){var t;switch(e){case"vec2":return new THREE.Vector2(r.x,r.y);case"vec3":return new THREE.Vector3(r.x,r.y,r.z);case"vec4":return new THREE.Vector4(r.x,r.y,r.z,r.w);case"color":return t=new THREE.Color(r),new THREE.Vector3(t.r,t.g,t.b);default:return r}}},module.exports.registerShader=function(e,r){var t,a={};if(Object.keys(r).forEach(function(e){a[e]={value:r[e],writable:!0}}),shaders[e])throw new Error("The shader "+e+" has been already registered");return t=function(){Shader.call(this)},t.prototype=Object.create(Shader.prototype,a),t.prototype.name=e,t.prototype.constructor=t,shaders[e]={Shader:t,schema:processSchema(t.prototype.schema)},shaderNames.push(e),t};\n},{"../lib/three":149,"../utils":172,"./schema":110}],112:[function(_dereq_,module,exports){\nvar components=_dereq_("./component"),schema=_dereq_("./schema"),utils=_dereq_("../utils/"),parseProperties=schema.parseProperties,parseProperty=schema.parseProperty,processSchema=schema.process,isSingleProp=schema.isSingleProperty,styleParser=utils.styleParser,systems=module.exports.systems={},System=module.exports.System=function(e){var t=components&&components.components[this.name];this.el=e,this.sceneEl=e,t&&(t.Component.prototype.system=this),this.buildData(),this.init(),this.update({})};System.prototype={schema:{},init:function(){},update:function(e){},updateProperties:function(e){var t=this.data;Object.keys(schema).length&&(this.buildData(e),this.update(t))},buildData:function(e){var t=this.schema;Object.keys(t).length&&(e=e||HTMLElement.prototype.getAttribute.call(this.sceneEl,this.name),isSingleProp(t)?this.data=parseProperty(e,t):this.data=parseProperties(styleParser.parse(e)||{},t))},tick:void 0,tock:void 0,play:function(){},pause:function(){}},module.exports.registerSystem=function(e,t){var s,o,r={},i=utils.findAllScenes(document);if(Object.keys(t).forEach(function(e){r[e]={value:t[e],writable:!0}}),systems[e])throw new Error("The system `"+e+"` has been already registered. Check that you are not loading two versions of the same system or two different systems of the same name.");for(o=function(e){System.call(this,e)},o.prototype=Object.create(System.prototype,r),o.prototype.name=e,o.prototype.constructor=o,o.prototype.schema=utils.extend(processSchema(o.prototype.schema)),systems[e]=o,s=0;s<i.length;s++)i[s].initSystem(e)};\n},{"../utils/":172,"./component":102,"./schema":110}],113:[function(_dereq_,module,exports){\n_dereq_("./pivot");\n},{"./pivot":114}],114:[function(_dereq_,module,exports){\nvar registerComponent=_dereq_("../../core/component").registerComponent,THREE=_dereq_("../../lib/three"),originalPosition=new THREE.Vector3,originalRotation=new THREE.Vector3;registerComponent("pivot",{dependencies:["position"],schema:{type:"vec3"},init:function(){var o=this.data,i=this.el,t=i.object3D.parent,e=i.object3D,n=new THREE.Group;originalPosition.copy(e.position),originalRotation.copy(e.rotation),t.remove(e),n.add(e),t.add(n),i.object3D=n,e.position.set(-1*o.x,-1*o.y,-1*o.z),n.position.set(o.x+originalPosition.x,o.y+originalPosition.y,o.z+originalPosition.z),n.rotation.copy(e.rotation),e.rotation.set(0,0,0)}});\n},{"../../core/component":102,"../../lib/three":149}],115:[function(_dereq_,module,exports){\nfunction addMapping(e){var a=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();"fog"===e&&(a="material-fog"),"visible"===e&&(a="material-visible"),materialMappings[a]="material."+e}var components=_dereq_("../../core/component").components,shaders=_dereq_("../../core/shader").shaders,utils=_dereq_("../../utils/"),materialMappings={};Object.keys(components.material.schema).forEach(addMapping),Object.keys(shaders.standard.schema).forEach(addMapping),module.exports=function(){return{defaultComponents:{material:{}},mappings:utils.extend({},materialMappings)}};\n},{"../../core/component":102,"../../core/shader":111,"../../utils/":172}],116:[function(_dereq_,module,exports){\n_dereq_("./primitives/a-camera"),_dereq_("./primitives/a-collada-model"),_dereq_("./primitives/a-cursor"),_dereq_("./primitives/a-curvedimage"),_dereq_("./primitives/a-gltf-model"),_dereq_("./primitives/a-image"),_dereq_("./primitives/a-light"),_dereq_("./primitives/a-obj-model"),_dereq_("./primitives/a-sky"),_dereq_("./primitives/a-sound"),_dereq_("./primitives/a-text"),_dereq_("./primitives/a-video"),_dereq_("./primitives/a-videosphere"),_dereq_("./primitives/meshPrimitives");\n},{"./primitives/a-camera":118,"./primitives/a-collada-model":119,"./primitives/a-cursor":120,"./primitives/a-curvedimage":121,"./primitives/a-gltf-model":122,"./primitives/a-image":123,"./primitives/a-light":124,"./primitives/a-obj-model":125,"./primitives/a-sky":126,"./primitives/a-sound":127,"./primitives/a-text":128,"./primitives/a-video":129,"./primitives/a-videosphere":130,"./primitives/meshPrimitives":131}],117:[function(_dereq_,module,exports){\nfunction addComponentMapping(e,t){var i=components[e].schema;Object.keys(i).map(function(i){var n=i.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();void 0!==t[n]&&(n=e+"-"+i),t[n]=e+"."+i})}function definePrimitive(e,t,i){i=i||{},Object.keys(t).map(function(e){addComponentMapping(e,i)}),module.exports.registerPrimitive(e,utils.extendDeep({},null,{defaultComponents:t,mappings:i}))}var AEntity=_dereq_("../../core/a-entity"),components=_dereq_("../../core/component").components,registerElement=_dereq_("../../core/a-register-element").registerElement,utils=_dereq_("../../utils/"),debug=utils.debug,setComponentProperty=utils.entity.setComponentProperty,log=debug("extras:primitives:debug"),warn=debug("extras:primitives:warn"),primitives=module.exports.primitives={};module.exports.registerPrimitive=function(e,t){e=e.toLowerCase(),log("Registering <%s>",e),t.defaultAttributes&&warn("The \'defaultAttributes\' object is deprecated. Use \'defaultComponents\' instead.");var i=registerElement(e,{prototype:Object.create(AEntity.prototype,{defaultComponentsFromPrimitive:{value:t.defaultComponents||t.defaultAttributes||{}},deprecated:{value:t.deprecated||null},deprecatedMappings:{value:t.deprecatedMappings||{}},mappings:{value:t.mappings||{}},createdCallback:{value:function(){t.deprecated&&console.warn(t.deprecated),this.resolveMappingCollisions()}},resolveMappingCollisions:{value:function(){var e=this.mappings,t=this;Object.keys(e).forEach(function(i){var n;i!==i.toLowerCase()&&warn("Mapping keys should be specified in lower case. The mapping key "+i+" may not be recognized"),components[i]&&(n=e[i].replace(".","-"),e[n]=e[i],delete e[i],console.warn("The primitive "+t.tagName.toLowerCase()+" has a mapping collision. The attribute "+i+" has the same name as a registered component and has been renamed to "+n))})}},getExtraComponents:{value:function(){var e,t,i,n,r,a,o=this;for(t=utils.clone(this.defaultComponentsFromPrimitive),r=this.getAttribute("mixin"),r&&(r=r.trim().split(" "),r.forEach(function(e){var i=o.sceneEl.querySelector("#"+e).componentCache;Object.keys(i).forEach(function(e){t[e]=utils.extendDeep(t[e]||{},i[e])})})),i=0;i<this.attributes.length;i++)e=this.attributes[i],n=this.mappings[e.name],n&&(a=utils.entity.getComponentPropertyPath(n),a.constructor===Array?t[a[0]][a[1]]=e.value:t[a]=e.value);return t}},attributeChangedCallback:{value:function(e,t,i){var n=this.mappings[e];e in this.deprecatedMappings&&console.warn(this.deprecatedMappings[e]),e&&n&&setComponentProperty(this,n,i)}}})});return primitives[e]=i,i},module.exports.definePrimitive=definePrimitive;\n},{"../../core/a-entity":98,"../../core/a-register-element":101,"../../core/component":102,"../../utils/":172}],118:[function(_dereq_,module,exports){\nvar DEFAULT_CAMERA_HEIGHT=_dereq_("../../../constants/").DEFAULT_CAMERA_HEIGHT,registerPrimitive=_dereq_("../primitives").registerPrimitive;registerPrimitive("a-camera",{defaultComponents:{camera:{userHeight:DEFAULT_CAMERA_HEIGHT},"look-controls":{},"wasd-controls":{}},mappings:{active:"camera.active",far:"camera.far",fov:"camera.fov","look-controls-enabled":"look-controls.enabled",near:"camera.near","wasd-controls-enabled":"wasd-controls.enabled","reverse-mouse-drag":"look-controls.reverseMouseDrag","user-height":"camera.userHeight",zoom:"camera.zoom"},deprecatedMappings:{"cursor-color":"a-camera[cursor-color] has been removed. Use a-cursor[color] instead.","cursor-maxdistance":"a-camera[cursor-maxdistance] has been removed. Use a-cursor[max-distance] instead.","cursor-offset":"a-camera[cursor-offset] has been removed. Use a-cursor[position] instead.","cursor-opacity":"a-camera[cursor-offset] has been removed. Use a-cursor[opacity] instead.","cursor-scale":"a-camera[cursor-scale] has been removed. Use a-cursor[scale] instead.","cursor-visible":"a-camera[cursor-visible] has been removed. Use a-cursor[visible] instead."}});\n},{"../../../constants/":93,"../primitives":117}],119:[function(_dereq_,module,exports){\nvar registerPrimitive=_dereq_("../primitives").registerPrimitive;registerPrimitive("a-collada-model",{mappings:{src:"collada-model"}});\n},{"../primitives":117}],120:[function(_dereq_,module,exports){\nvar getMeshMixin=_dereq_("../getMeshMixin"),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/");registerPrimitive("a-cursor",utils.extendDeep({},getMeshMixin(),{defaultComponents:{cursor:{},geometry:{primitive:"ring",radiusOuter:.016,radiusInner:.01,segmentsTheta:64},material:{color:"#000",shader:"flat",opacity:.8},position:{x:0,y:0,z:-1},raycaster:{far:1e3}},mappings:{far:"raycaster.far",fuse:"cursor.fuse",interval:"raycaster.interval",objects:"raycaster.objects","fuse-timeout":"cursor.fuseTimeout"}}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],121:[function(_dereq_,module,exports){\nvar getMeshMixin=_dereq_("../getMeshMixin"),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/");registerPrimitive("a-curvedimage",utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{height:1,primitive:"cylinder",radius:2,segmentsRadial:48,thetaLength:270,openEnded:!0,thetaStart:0},material:{color:"#FFF",shader:"flat",side:"double",transparent:!0,repeat:"-1 1"}},mappings:{height:"geometry.height","open-ended":"geometry.openEnded",radius:"geometry.radius",segments:"geometry.segmentsRadial",start:"geometry.thetaStart","theta-length":"geometry.thetaLength","theta-start":"geometry.thetaStart",width:"geometry.thetaLength"}}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],122:[function(_dereq_,module,exports){\nvar registerPrimitive=_dereq_("../primitives").registerPrimitive;registerPrimitive("a-gltf-model",{mappings:{src:"gltf-model"}});\n},{"../primitives":117}],123:[function(_dereq_,module,exports){\nvar getMeshMixin=_dereq_("../getMeshMixin"),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/");registerPrimitive("a-image",utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:"plane"},material:{color:"#FFF",shader:"flat",side:"double",transparent:!0}},mappings:{height:"geometry.height",width:"geometry.width"}}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],124:[function(_dereq_,module,exports){\nvar registerPrimitive=_dereq_("../primitives").registerPrimitive;registerPrimitive("a-light",{defaultComponents:{light:{}},mappings:{angle:"light.angle",color:"light.color","ground-color":"light.groundColor",decay:"light.decay",distance:"light.distance",intensity:"light.intensity",penumbra:"light.penumbra",type:"light.type",target:"light.target"}});\n},{"../primitives":117}],125:[function(_dereq_,module,exports){\nvar meshMixin=_dereq_("../getMeshMixin")(),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/");registerPrimitive("a-obj-model",utils.extendDeep({},meshMixin,{defaultComponents:{"obj-model":{}},mappings:{src:"obj-model.obj",mtl:"obj-model.mtl"}}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],126:[function(_dereq_,module,exports){\nvar getMeshMixin=_dereq_("../getMeshMixin"),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/"),meshPrimitives=_dereq_("./meshPrimitives");registerPrimitive("a-sky",utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:"sphere",radius:5e3,segmentsWidth:64,segmentsHeight:32},material:{color:"#FFF",shader:"flat",npot:!0},scale:"-1 1 1"},mappings:utils.extendDeep({},meshPrimitives["a-sphere"].prototype.mappings)}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117,"./meshPrimitives":131}],127:[function(_dereq_,module,exports){\nvar registerPrimitive=_dereq_("../primitives").registerPrimitive;registerPrimitive("a-sound",{defaultComponents:{sound:{}},mappings:{src:"sound.src",on:"sound.on",autoplay:"sound.autoplay",loop:"sound.loop",volume:"sound.volume"}});\n},{"../primitives":117}],128:[function(_dereq_,module,exports){\nvar definePrimitive=_dereq_("../primitives").definePrimitive;definePrimitive("a-text",{text:{anchor:"align",width:5}});\n},{"../primitives":117}],129:[function(_dereq_,module,exports){\nvar getMeshMixin=_dereq_("../getMeshMixin"),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/");registerPrimitive("a-video",utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:"plane"},material:{color:"#FFF",shader:"flat",side:"double",transparent:!0}},mappings:{height:"geometry.height",width:"geometry.width"}}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],130:[function(_dereq_,module,exports){\nvar getMeshMixin=_dereq_("../getMeshMixin"),registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/");registerPrimitive("a-videosphere",utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:"sphere",radius:5e3,segmentsWidth:64,segmentsHeight:32},material:{color:"#FFF",shader:"flat",npot:!0},scale:"-1 1 1"},mappings:{radius:"geometry.radius","segments-height":"geometry.segmentsHeight","segments-width":"geometry.segmentsWidth"}}));\n},{"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],131:[function(_dereq_,module,exports){\nfunction unCamelCase(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}var getMeshMixin=_dereq_("../getMeshMixin"),geometries=_dereq_("../../../core/geometry").geometries,geometryNames=_dereq_("../../../core/geometry").geometryNames,registerPrimitive=_dereq_("../primitives").registerPrimitive,utils=_dereq_("../../../utils/"),meshPrimitives=module.exports={};geometryNames.forEach(function(e){var i=geometries[e],r=unCamelCase(e),t={};Object.keys(i.schema).forEach(function(e){t[unCamelCase(e)]="geometry."+e});var m="a-"+r,s=registerPrimitive(m,utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:e}},mappings:t}));meshPrimitives[m]=s});\n},{"../../../core/geometry":103,"../../../utils/":172,"../getMeshMixin":115,"../primitives":117}],132:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("box",{schema:{depth:{default:1,min:0},height:{default:1,min:0},width:{default:1,min:0},segmentsHeight:{default:1,min:1,max:20,type:"int"},segmentsWidth:{default:1,min:1,max:20,type:"int"},segmentsDepth:{default:1,min:1,max:20,type:"int"}},init:function(e){this.geometry=new THREE.BoxGeometry(e.width,e.height,e.depth)}});\n},{"../core/geometry":103,"../lib/three":149}],133:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad;registerGeometry("circle",{schema:{radius:{default:1,min:0},segments:{default:32,min:3,type:"int"},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(e){this.geometry=new THREE.CircleGeometry(e.radius,e.segments,degToRad(e.thetaStart),degToRad(e.thetaLength))}});\n},{"../core/geometry":103,"../lib/three":149}],134:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad;registerGeometry("cone",{schema:{height:{default:1,min:0},openEnded:{default:!1},radiusBottom:{default:1,min:0},radiusTop:{default:.01,min:0},segmentsHeight:{default:18,min:1,type:"int"},segmentsRadial:{default:36,min:3,type:"int"},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(e){this.geometry=new THREE.CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.segmentsRadial,e.segmentsHeight,e.openEnded,degToRad(e.thetaStart),degToRad(e.thetaLength))}});\n},{"../core/geometry":103,"../lib/three":149}],135:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad;registerGeometry("cylinder",{schema:{height:{default:1,min:0},openEnded:{default:!1},radius:{default:1,min:0},segmentsHeight:{default:18,min:1,type:"int"},segmentsRadial:{default:36,min:3,type:"int"},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(e){this.geometry=new THREE.CylinderGeometry(e.radius,e.radius,e.height,e.segmentsRadial,e.segmentsHeight,e.openEnded,degToRad(e.thetaStart),degToRad(e.thetaLength))}});\n},{"../core/geometry":103,"../lib/three":149}],136:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("dodecahedron",{schema:{detail:{default:0,min:0,max:5,type:"int"},radius:{default:1,min:0}},init:function(e){this.geometry=new THREE.DodecahedronGeometry(e.radius,e.detail)}});\n},{"../core/geometry":103,"../lib/three":149}],137:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("icosahedron",{schema:{detail:{default:0,min:0,max:5,type:"int"},radius:{default:1,min:0}},init:function(e){this.geometry=new THREE.IcosahedronGeometry(e.radius,e.detail)}});\n},{"../core/geometry":103,"../lib/three":149}],138:[function(_dereq_,module,exports){\n_dereq_("./box.js"),_dereq_("./circle.js"),_dereq_("./cone.js"),_dereq_("./cylinder.js"),_dereq_("./dodecahedron.js"),_dereq_("./icosahedron.js"),_dereq_("./octahedron.js"),_dereq_("./plane.js"),_dereq_("./ring.js"),_dereq_("./sphere.js"),_dereq_("./tetrahedron.js"),_dereq_("./torus.js"),_dereq_("./torusKnot.js"),_dereq_("./triangle.js");\n},{"./box.js":132,"./circle.js":133,"./cone.js":134,"./cylinder.js":135,"./dodecahedron.js":136,"./icosahedron.js":137,"./octahedron.js":139,"./plane.js":140,"./ring.js":141,"./sphere.js":142,"./tetrahedron.js":143,"./torus.js":144,"./torusKnot.js":145,"./triangle.js":146}],139:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("octahedron",{schema:{detail:{default:0,min:0,max:5,type:"int"},radius:{default:1,min:0}},init:function(e){this.geometry=new THREE.OctahedronGeometry(e.radius,e.detail)}});\n},{"../core/geometry":103,"../lib/three":149}],140:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("plane",{schema:{height:{default:1,min:0},width:{default:1,min:0},segmentsHeight:{default:1,min:1,max:20,type:"int"},segmentsWidth:{default:1,min:1,max:20,type:"int"}},init:function(e){this.geometry=new THREE.PlaneGeometry(e.width,e.height,e.segmentsWidth,e.segmentsHeight)}});\n},{"../core/geometry":103,"../lib/three":149}],141:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad;registerGeometry("ring",{schema:{radiusInner:{default:.8,min:0},radiusOuter:{default:1.2,min:0},segmentsPhi:{default:10,min:1,type:"int"},segmentsTheta:{default:32,min:3,type:"int"},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(e){this.geometry=new THREE.RingGeometry(e.radiusInner,e.radiusOuter,e.segmentsTheta,e.segmentsPhi,degToRad(e.thetaStart),degToRad(e.thetaLength))}});\n},{"../core/geometry":103,"../lib/three":149}],142:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad;registerGeometry("sphere",{schema:{radius:{default:1,min:0},phiLength:{default:360},phiStart:{default:0,min:0},thetaLength:{default:180,min:0},thetaStart:{default:0},segmentsHeight:{default:18,min:2,type:"int"},segmentsWidth:{default:36,min:3,type:"int"}},init:function(e){this.geometry=new THREE.SphereGeometry(e.radius,e.segmentsWidth,e.segmentsHeight,degToRad(e.phiStart),degToRad(e.phiLength),degToRad(e.thetaStart),degToRad(e.thetaLength))}});\n},{"../core/geometry":103,"../lib/three":149}],143:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("tetrahedron",{schema:{detail:{default:0,min:0,max:5,type:"int"},radius:{default:1,min:0}},init:function(e){this.geometry=new THREE.TetrahedronGeometry(e.radius,e.detail)}});\n},{"../core/geometry":103,"../lib/three":149}],144:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),degToRad=THREE.Math.degToRad;registerGeometry("torus",{schema:{arc:{default:360},radius:{default:1,min:0},radiusTubular:{default:.2,min:0},segmentsRadial:{default:36,min:2,type:"int"},segmentsTubular:{default:32,min:3,type:"int"}},init:function(e){this.geometry=new THREE.TorusGeometry(e.radius,2*e.radiusTubular,e.segmentsRadial,e.segmentsTubular,degToRad(e.arc))}});\n},{"../core/geometry":103,"../lib/three":149}],145:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three");registerGeometry("torusKnot",{schema:{p:{default:2,min:1},q:{default:3,min:1},radius:{default:1,min:0},radiusTubular:{default:.2,min:0},segmentsRadial:{default:8,min:3,type:"int"},segmentsTubular:{default:100,min:3,type:"int"}},init:function(e){this.geometry=new THREE.TorusKnotGeometry(e.radius,2*e.radiusTubular,e.segmentsTubular,e.segmentsRadial,e.p,e.q)}});\n},{"../core/geometry":103,"../lib/three":149}],146:[function(_dereq_,module,exports){\nvar registerGeometry=_dereq_("../core/geometry").registerGeometry,THREE=_dereq_("../lib/three"),quaternion=new THREE.Quaternion,rotateVector=new THREE.Vector3(0,0,1),uvMinVector=new THREE.Vector2,uvMaxVector=new THREE.Vector2,uvScaleVector=new THREE.Vector2;registerGeometry("triangle",{schema:{vertexA:{type:"vec3",default:{x:0,y:.5,z:0}},vertexB:{type:"vec3",default:{x:-.5,y:-.5,z:0}},vertexC:{type:"vec3",default:{x:.5,y:-.5,z:0}}},init:function(e){var t,r,o,c,n,a;o=new THREE.Triangle,o.a.set(e.vertexA.x,e.vertexA.y,e.vertexA.z),o.b.set(e.vertexB.x,e.vertexB.y,e.vertexB.z),o.c.set(e.vertexC.x,e.vertexC.y,e.vertexC.z),r=o.normal(),quaternion.setFromUnitVectors(r,rotateVector),c=o.a.clone().applyQuaternion(quaternion),n=o.b.clone().applyQuaternion(quaternion),a=o.c.clone().applyQuaternion(quaternion),uvMinVector.set(Math.min(c.x,n.x,a.x),Math.min(c.y,n.y,a.y)),uvMaxVector.set(Math.max(c.x,n.x,a.x),Math.max(c.y,n.y,a.y)),uvScaleVector.set(0,0).subVectors(uvMaxVector,uvMinVector),c=(new THREE.Vector2).subVectors(c,uvMinVector).divide(uvScaleVector),n=(new THREE.Vector2).subVectors(n,uvMinVector).divide(uvScaleVector),a=(new THREE.Vector2).subVectors(a,uvMinVector).divide(uvScaleVector),t=this.geometry=new THREE.Geometry,t.vertices.push(o.a),t.vertices.push(o.b),t.vertices.push(o.c),t.faces.push(new THREE.Face3(0,1,2,r)),t.faceVertexUvs[0]=[[c,n,a]]}});\n},{"../core/geometry":103,"../lib/three":149}],147:[function(_dereq_,module,exports){\nvar utils=_dereq_("./utils/"),debug=utils.debug,error=debug("A-Frame:error"),warn=debug("A-Frame:warn");document.currentScript&&document.currentScript.parentNode!==document.head&&!window.debug&&warn("Put the A-Frame <script> tag in the <head> of the HTML *before* the scene to ensure everything for A-Frame is properly registered before they are used from HTML."),"file:"===window.location.protocol&&error("This HTML file is currently being served via the file:// protocol. Assets, textures, and models WILL NOT WORK due to cross-origin policy! Please use a local or hosted server: https://aframe.io/docs/0.5.0/introduction/getting-started.html#using-a-local-server."),window.Promise=window.Promise||_dereq_("promise-polyfill"),window.hasNativeWebVRImplementation=!!navigator.getVRDisplays||!!navigator.getVRDevices,window.WebVRConfig=window.WebVRConfig||{BUFFER_SCALE:1,CARDBOARD_UI_DISABLED:!0,ROTATE_INSTRUCTIONS_DISABLED:!0,TOUCH_PANNER_DISABLED:!0,MOUSE_KEYBOARD_CONTROLS_DISABLED:!0},utils.device.isIOSOlderThan10(navigator.userAgent)&&(window.WebVRConfig.BUFFER_SCALE=1/window.devicePixelRatio),_dereq_("webvr-polyfill"),_dereq_("present"),utils.device.isBrowserEnvironment&&(_dereq_("./style/aframe.css"),_dereq_("./style/rStats.css"));var AScene=_dereq_("./core/scene/a-scene").AScene,components=_dereq_("./core/component").components,registerComponent=_dereq_("./core/component").registerComponent,registerGeometry=_dereq_("./core/geometry").registerGeometry,registerPrimitive=_dereq_("./extras/primitives/primitives").registerPrimitive,registerShader=_dereq_("./core/shader").registerShader,registerSystem=_dereq_("./core/system").registerSystem,shaders=_dereq_("./core/shader").shaders,systems=_dereq_("./core/system").systems,THREE=window.THREE=_dereq_("./lib/three"),TWEEN=window.TWEEN=_dereq_("tween.js"),pkg=_dereq_("../package");_dereq_("./components/index"),_dereq_("./geometries/index"),_dereq_("./shaders/index"),_dereq_("./systems/index");var ANode=_dereq_("./core/a-node"),AEntity=_dereq_("./core/a-entity");_dereq_("./core/a-animation"),_dereq_("./core/a-assets"),_dereq_("./core/a-cubemap"),_dereq_("./core/a-mixin"),_dereq_("./extras/components/"),_dereq_("./extras/primitives/"),console.log("A-Frame Version: 0.5.0 (Date 06-06-2017, Commit #410424f)"),console.log("three Version:",pkg.dependencies.three),console.log("WebVR Polyfill Version:",pkg.dependencies["webvr-polyfill"]),module.exports=window.AFRAME={AComponent:_dereq_("./core/component").Component,AEntity:AEntity,ANode:ANode,AScene:AScene,components:components,geometries:_dereq_("./core/geometry").geometries,registerComponent:registerComponent,registerElement:_dereq_("./core/a-register-element").registerElement,registerGeometry:registerGeometry,registerPrimitive:registerPrimitive,registerShader:registerShader,registerSystem:registerSystem,primitives:{getMeshMixin:_dereq_("./extras/primitives/getMeshMixin"),primitives:_dereq_("./extras/primitives/primitives").primitives},scenes:_dereq_("./core/scene/scenes"),schema:_dereq_("./core/schema"),shaders:shaders,systems:systems,THREE:THREE,TWEEN:TWEEN,utils:utils,version:pkg.version};\n},{"../package":54,"./components/index":64,"./core/a-animation":95,"./core/a-assets":96,"./core/a-cubemap":97,"./core/a-entity":98,"./core/a-mixin":99,"./core/a-node":100,"./core/a-register-element":101,"./core/component":102,"./core/geometry":103,"./core/scene/a-scene":105,"./core/scene/scenes":108,"./core/schema":110,"./core/shader":111,"./core/system":112,"./extras/components/":113,"./extras/primitives/":116,"./extras/primitives/getMeshMixin":115,"./extras/primitives/primitives":117,"./geometries/index":138,"./lib/three":149,"./shaders/index":151,"./style/aframe.css":156,"./style/rStats.css":157,"./systems/index":161,"./utils/":172,"present":32,"promise-polyfill":34,"tween.js":48,"webvr-polyfill":49}],148:[function(_dereq_,module,exports){\nwindow.aframeStats=function(t){function e(){i("te").set(n()),window.performance.getEntriesByName&&i("lt").set(window.performance.getEntriesByName("render-started")[0].startTime.toFixed(0))}function n(){var t=c.querySelectorAll("*");return Array.prototype.slice.call(t).filter(function(t){return t.isEntity}),t.length}function r(){}function a(){}function o(t){i=t}var i=null,c=t,s={te:{caption:"Entities"},lt:{caption:"Load Time"}},u=[{caption:"A-Frame",values:["te","lt"]}];return{update:e,start:r,end:a,attach:o,values:s,groups:u,fractions:[]}},"object"==typeof module&&(module.exports={aframeStats:window.aframeStats});\n},{}],149:[function(_dereq_,module,exports){\n(function (global){\nvar THREE=global.THREE=_dereq_("three");THREE.TextureLoader&&(THREE.TextureLoader.prototype.crossOrigin="anonymous"),THREE.ImageLoader&&(THREE.ImageLoader.prototype.crossOrigin="anonymous"),THREE.Cache&&(THREE.Cache.enabled=!0),_dereq_("three/examples/js/loaders/GLTFLoader"),_dereq_("three/examples/js/loaders/OBJLoader"),_dereq_("three/examples/js/loaders/MTLLoader"),_dereq_("three/examples/js/BlendCharacter"),_dereq_("three/examples/js/loaders/ColladaLoader"),_dereq_("../../vendor/VRControls"),_dereq_("../../vendor/VREffect"),THREE.ColladaLoader.prototype.crossOrigin="anonymous",THREE.GLTFLoader.prototype.crossOrigin="anonymous",THREE.MTLLoader.prototype.crossOrigin="anonymous",THREE.OBJLoader.prototype.crossOrigin="anonymous",module.exports=THREE;\n}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})\n\n},{"../../vendor/VRControls":177,"../../vendor/VREffect":178,"three":41,"three/examples/js/BlendCharacter":42,"three/examples/js/loaders/ColladaLoader":43,"three/examples/js/loaders/GLTFLoader":44,"three/examples/js/loaders/MTLLoader":45,"three/examples/js/loaders/OBJLoader":46}],150:[function(_dereq_,module,exports){\nfunction getMaterialData(e){return{fog:e.fog,color:new THREE.Color(e.color),wireframe:e.wireframe,wireframeLinewidth:e.wireframeLinewidth}}var registerShader=_dereq_("../core/shader").registerShader,THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/");module.exports.Shader=registerShader("flat",{schema:{color:{type:"color"},fog:{default:!0},height:{default:256},offset:{type:"vec2",default:{x:0,y:0}},repeat:{type:"vec2",default:{x:1,y:1}},src:{type:"map"},width:{default:512},wireframe:{default:!1},wireframeLinewidth:{default:2}},init:function(e){this.textureSrc=null,this.material=new THREE.MeshBasicMaterial(getMaterialData(e)),utils.material.updateMap(this,e)},update:function(e){this.updateMaterial(e),utils.material.updateMap(this,e)},updateMaterial:function(e){var t=this.material;e=getMaterialData(e),Object.keys(e).forEach(function(a){t[a]=e[a]})}});\n},{"../core/shader":111,"../lib/three":149,"../utils/":172}],151:[function(_dereq_,module,exports){\n_dereq_("./flat"),_dereq_("./standard"),_dereq_("./sdf"),_dereq_("./msdf"),_dereq_("./ios10hls");\n},{"./flat":150,"./ios10hls":152,"./msdf":153,"./sdf":154,"./standard":155}],152:[function(_dereq_,module,exports){\nvar registerShader=_dereq_("../core/shader").registerShader;module.exports.Shader=registerShader("ios10hls",{schema:{src:{type:"map",is:"uniform"},opacity:{type:"number",is:"uniform",default:1}},vertexShader:["varying vec2 vUV;","void main(void) {","  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","  vUV = uv;","}"].join("\\n"),fragmentShader:["uniform sampler2D src;","uniform float opacity;","varying vec2 vUV;","void main() {","  vec2 offset = vec2(0, 0);","  vec2 repeat = vec2(1, 1);","  vec4 color = texture2D(src, vec2(vUV.x / repeat.x + offset.x, (1.0 - vUV.y) / repeat.y + offset.y)).bgra;","  gl_FragColor = vec4(color.rgb, opacity);","}"].join("\\n")});\n},{"../core/shader":111}],153:[function(_dereq_,module,exports){\nvar registerShader=_dereq_("../core/shader").registerShader;module.exports.Shader=registerShader("msdf",{schema:{alphaTest:{type:"number",is:"uniform",default:.5},color:{type:"color",is:"uniform",default:"white"},map:{type:"map",is:"uniform"},opacity:{type:"number",is:"uniform",default:1}},raw:!0,vertexShader:["attribute vec2 uv;","attribute vec3 position;","uniform mat4 projectionMatrix;","uniform mat4 modelViewMatrix;","varying vec2 vUV;","void main(void) {","  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","  vUV = uv;","}"].join("\\n"),fragmentShader:["#ifdef GL_OES_standard_derivatives","#extension GL_OES_standard_derivatives: enable","#endif","precision highp float;","#define BIG_ENOUGH 0.001","#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)","#define ALL_SMOOTH 0.4","#define ALL_ROUGH 0.02","#define DISCARD_ALPHA (alphaTest / (2.2 - 1.2 * ratio))","uniform sampler2D map;","uniform vec3 color;","uniform float opacity;","uniform float alphaTest;","varying vec2 vUV;","float median(float r, float g, float b) {","  return max(min(r, g), min(max(r, g), b));","}","void main() {","  vec3 sample = 1.0 - texture2D(map, vUV).rgb;","  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;","  float alpha = clamp(sigDist/fwidth(sigDist) + 0.5, 0.0, 1.0);","  float dscale = 0.353505;","  vec2 duv = dscale * (dFdx(vUV) + dFdy(vUV));","  float isBigEnough = max(abs(duv.x), abs(duv.y));","  if (isBigEnough > BIG_ENOUGH) {","    float ratio = BIG_ENOUGH / isBigEnough;","    alpha = ratio * alpha + (1.0 - ratio) * (sigDist + 0.5);","  }","  if (isBigEnough <= BIG_ENOUGH && alpha < alphaTest) { discard; return; }","  if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }","  gl_FragColor = vec4(color.xyz, alpha * opacity);","}"].join("\\n")});\n},{"../core/shader":111}],154:[function(_dereq_,module,exports){\nvar registerShader=_dereq_("../core/shader").registerShader;module.exports.Shader=registerShader("sdf",{schema:{alphaTest:{type:"number",is:"uniform",default:.5},color:{type:"color",is:"uniform",default:"white"},map:{type:"map",is:"uniform"},opacity:{type:"number",is:"uniform",default:1}},raw:!0,vertexShader:["attribute vec2 uv;","attribute vec3 position;","uniform mat4 projectionMatrix;","uniform mat4 modelViewMatrix;","varying vec2 vUV;","void main(void) {","  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);","  vUV = uv;","}"].join("\\n"),fragmentShader:["#ifdef GL_OES_standard_derivatives","#extension GL_OES_standard_derivatives: enable","#endif","precision highp float;","#define BIG_ENOUGH 0.001","#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)","#define ALL_SMOOTH 0.4","#define ALL_ROUGH 0.02","#define DISCARD_ALPHA (alphaTest / (2.2 - 1.2 * ratio))","uniform sampler2D map;","uniform vec3 color;","uniform float opacity;","uniform float alphaTest;","varying vec2 vUV;","#ifdef GL_OES_standard_derivatives","float contour(float width, float value) {","  return smoothstep(0.5 - value, 0.5 + value, width);","}","#else","float aastep(float value, float afwidth) {","  return smoothstep(0.5 - afwidth, 0.5 + afwidth, value);","}","#endif","void main() {","#ifdef GL_OES_standard_derivatives","  vec2 uv = vUV;","  vec4 texColor = texture2D(map, uv);","  float dist = texColor.a;","  float width = fwidth(dist);","  float alpha = contour(dist, width);","  float dscale = 0.353505;","  vec2 duv = dscale * (dFdx(uv) + dFdy(uv));","  float isBigEnough = max(abs(duv.x), abs(duv.y));","  if (isBigEnough > BIG_ENOUGH) {","    float ratio = BIG_ENOUGH / isBigEnough;","    alpha = ratio * alpha + (1.0 - ratio) * dist;","  }","  else if (isBigEnough <= BIG_ENOUGH) {","    vec4 box = vec4 (uv - duv, uv + duv);","    alpha = (alpha + 0.5 * (","      contour(texture2D(map, box.xy).a, width)","      + contour(texture2D(map, box.zw).a, width)","      + contour(texture2D(map, box.xw).a, width)","      + contour(texture2D(map, box.zy).a, width)","    )) / 3.0;","  }","  if (isBigEnough <= BIG_ENOUGH && alpha < alphaTest) { discard; return; }","  if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }","#else","  vec4 texColor = texture2D(map, vUV);","  float value = texColor.a;","  float afwidth = (1.0 / 32.0) * (1.4142135623730951 / (2.0 * gl_FragCoord.w));","  float alpha = aastep(value, afwidth);","  float ratio = (gl_FragCoord.w >= ALL_SMOOTH) ? 1.0 : (gl_FragCoord.w < ALL_ROUGH) ? 0.0 : (gl_FragCoord.w - ALL_ROUGH) / (ALL_SMOOTH - ALL_ROUGH);","  if (alpha < alphaTest) { if (ratio >= 1.0) { discard; return; } alpha = 0.0; }","  alpha = alpha * ratio + (1.0 - ratio) * value;","  if (ratio < 1.0)","    if (alpha <= DISCARD_ALPHA) { discard; return; }","#endif","  gl_FragColor = vec4(color, opacity * alpha);","}"].join("\\n")});\n},{"../core/shader":111}],155:[function(_dereq_,module,exports){\nfunction getMaterialData(e){var a={color:new THREE.Color(e.color),fog:e.fog,metalness:e.metalness,roughness:e.roughness,wireframe:e.wireframe,wireframeLinewidth:e.wireframeLinewidth};return e.normalMap&&(a.normalScale=e.normalScale),e.ambientOcclusionMap&&(a.aoMapIntensity=e.ambientOcclusionMapIntensity),e.displacementMap&&(a.displacementScale=e.displacementScale,a.displacementBias=e.displacementBias),a}var registerShader=_dereq_("../core/shader").registerShader,THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),CubeLoader=new THREE.CubeTextureLoader,texturePromises={};module.exports.Shader=registerShader("standard",{schema:{ambientOcclusionMap:{type:"map"},ambientOcclusionMapIntensity:{default:1},ambientOcclusionTextureOffset:{type:"vec2"},ambientOcclusionTextureRepeat:{type:"vec2",default:{x:1,y:1}},color:{type:"color"},displacementMap:{type:"map"},displacementScale:{default:1},displacementBias:{default:.5},displacementTextureOffset:{type:"vec2"},displacementTextureRepeat:{type:"vec2",default:{x:1,y:1}},envMap:{default:""},fog:{default:!0},height:{default:256},metalness:{default:0,min:0,max:1},normalMap:{type:"map"},normalScale:{type:"vec2",default:{x:1,y:1}},normalTextureOffset:{type:"vec2"},normalTextureRepeat:{type:"vec2",default:{x:1,y:1}},offset:{type:"vec2",default:{x:0,y:0}},repeat:{type:"vec2",default:{x:1,y:1}},roughness:{default:.5,min:0,max:1},sphericalEnvMap:{type:"map"},src:{type:"map"},width:{default:512},wireframe:{default:!1},wireframeLinewidth:{default:2}},init:function(e){this.material=new THREE.MeshStandardMaterial(getMaterialData(e)),utils.material.updateMap(this,e),e.normalMap&&utils.material.updateDistortionMap("normal",this,e),e.displacementMap&&utils.material.updateDistortionMap("displacement",this,e),e.ambientOcclusionMap&&utils.material.updateDistortionMap("ambientOcclusion",this,e),this.updateEnvMap(e)},update:function(e){this.updateMaterial(e),utils.material.updateMap(this,e),e.normalMap&&utils.material.updateDistortionMap("normal",this,e),e.displacementMap&&utils.material.updateDistortionMap("displacement",this,e),e.ambientOcclusionMap&&utils.material.updateDistortionMap("ambientOcclusion",this,e),this.updateEnvMap(e)},updateMaterial:function(e){var a=this.material;e=getMaterialData(e),Object.keys(e).forEach(function(t){a[t]=e[t]})},updateEnvMap:function(e){var a=this,t=this.material,i=e.envMap,n=e.sphericalEnvMap;return!i&&!n||this.isLoadingEnvMap?(t.envMap=null,void(t.needsUpdate=!0)):(this.isLoadingEnvMap=!0,n?void this.el.sceneEl.systems.material.loadTexture(n,{src:n},function(e){a.isLoadingEnvMap=!1,e.mapping=THREE.SphericalReflectionMapping,t.envMap=e,utils.material.handleTextureEvents(a.el,e),t.needsUpdate=!0}):texturePromises[i]?void texturePromises[i].then(function(e){a.isLoadingEnvMap=!1,t.envMap=e,utils.material.handleTextureEvents(a.el,e),t.needsUpdate=!0}):void(texturePromises[i]=new Promise(function(e){utils.srcLoader.validateCubemapSrc(i,function(i){CubeLoader.load(i,function(i){a.isLoadingEnvMap=!1,t.envMap=i,utils.material.handleTextureEvents(a.el,i),e(i)})})})))}});\n},{"../core/shader":111,"../lib/three":149,"../utils/":172}],156:[function(_dereq_,module,exports){\nvar css = ".a-html{bottom:0;left:0;position:fixed;right:0;top:0}.a-body{height:100%;margin:0;overflow:hidden;padding:0;width:100%}:-webkit-full-screen{background-color:transparent}.a-hidden{display:none!important}.a-canvas{height:100%;left:0;position:absolute;top:0;width:100%}.a-canvas.a-grab-cursor:hover{cursor:grab;cursor:-moz-grab;cursor:-webkit-grab}.a-canvas.a-grab-cursor:active,.a-grabbing{cursor:grabbing;cursor:-moz-grabbing;cursor:-webkit-grabbing}// Class is removed when doing <a-scene embedded>. a-scene.fullscreen .a-canvas{width:100%!important;height:100%!important;top:0!important;left:0!important;right:0!important;bottom:0!important;z-index:999999!important;position:fixed!important}.a-inspector-loader{background-color:#ed3160;position:fixed;left:3px;top:3px;padding:6px 10px;color:#fff;text-decoration:none;font-size:12px;font-family:Roboto,sans-serif;text-align:center;z-index:99999;width:204px}@keyframes dots-1{from{opacity:0}25%{opacity:1}}@keyframes dots-2{from{opacity:0}50%{opacity:1}}@keyframes dots-3{from{opacity:0}75%{opacity:1}}@-webkit-keyframes dots-1{from{opacity:0}25%{opacity:1}}@-webkit-keyframes dots-2{from{opacity:0}50%{opacity:1}}@-webkit-keyframes dots-3{from{opacity:0}75%{opacity:1}}.a-inspector-loader .dots span{animation:dots-1 2s infinite steps(1);-webkit-animation:dots-1 2s infinite steps(1)}.a-inspector-loader .dots span:first-child+span{animation-name:dots-2;-webkit-animation-name:dots-2}.a-inspector-loader .dots span:first-child+span+span{animation-name:dots-3;-webkit-animation-name:dots-3}a-scene{display:block;position:relative;height:100%;width:100%}a-assets,a-scene audio,a-scene img,a-scene video{display:none}.a-enter-vr-modal,.a-orientation-modal{font-family:Consolas,Andale Mono,Courier New,monospace}.a-enter-vr-modal a{border-bottom:1px solid #fff;padding:2px 0;text-decoration:none;transition:.1s color ease-in}.a-enter-vr-modal a:hover{background-color:#fff;color:#111;padding:2px 4px;position:relative;left:-4px}.a-enter-vr{font-family:sans-serif,monospace;font-size:13px;width:100%;font-weight:200;line-height:16px;position:absolute;right:20px;bottom:20px}.a-enter-vr.embedded{right:5px;bottom:5px}.a-enter-vr-button,.a-enter-vr-modal,.a-enter-vr-modal a{color:#fff}.a-enter-vr-button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20245.82%20141.73%22%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill%3A%23fff%3Bfill-rule%3Aevenodd%3B%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Ctitle%3Emask%3C%2Ftitle%3E%3Cpath%20class%3D%22a%22%20d%3D%22M175.56%2C111.37c-22.52%2C0-40.77-18.84-40.77-42.07S153%2C27.24%2C175.56%2C27.24s40.77%2C18.84%2C40.77%2C42.07S198.08%2C111.37%2C175.56%2C111.37ZM26.84%2C69.31c0-23.23%2C18.25-42.07%2C40.77-42.07s40.77%2C18.84%2C40.77%2C42.07-18.26%2C42.07-40.77%2C42.07S26.84%2C92.54%2C26.84%2C69.31ZM27.27%2C0C11.54%2C0%2C0%2C12.34%2C0%2C28.58V110.9c0%2C16.24%2C11.54%2C30.83%2C27.27%2C30.83H99.57c2.17%2C0%2C4.19-1.83%2C5.4-3.7L116.47%2C118a8%2C8%2C0%2C0%2C1%2C12.52-.18l11.51%2C20.34c1.2%2C1.86%2C3.22%2C3.61%2C5.39%2C3.61h72.29c15.74%2C0%2C27.63-14.6%2C27.63-30.83V28.58C245.82%2C12.34%2C233.93%2C0%2C218.19%2C0H27.27Z%22%2F%3E%3C%2Fsvg%3E) 50% 50%/70% 70% no-repeat rgba(0,0,0,.35);border:0;bottom:0;cursor:pointer;min-width:50px;min-height:30px;padding-right:5%;padding-top:4%;position:absolute;right:0;transition:background-color .05s ease;-webkit-transition:background-color .05s ease;z-index:9999}.a-enter-vr-button:active,.a-enter-vr-button:hover{background-color:#666}[data-a-enter-vr-no-webvr] .a-enter-vr-button{border-color:#666;opacity:.65}[data-a-enter-vr-no-webvr] .a-enter-vr-button:active,[data-a-enter-vr-no-webvr] .a-enter-vr-button:hover{background-color:rgba(0,0,0,.35);cursor:not-allowed}.a-enter-vr-modal{background-color:#666;border-radius:0;display:none;min-height:32px;margin-right:70px;padding:9px;width:280px;right:2%;position:absolute}.a-enter-vr-modal:after{border-bottom:10px solid transparent;border-left:10px solid #666;border-top:10px solid transparent;display:inline-block;content:\'\';position:absolute;right:-5px;top:5px;width:0;height:0}.a-enter-vr-modal a,.a-enter-vr-modal p{display:inline}.a-enter-vr-modal p{margin:0}.a-enter-vr-modal p:after{content:\' \'}[data-a-enter-vr-no-headset].a-enter-vr:hover .a-enter-vr-modal,[data-a-enter-vr-no-webvr].a-enter-vr:hover .a-enter-vr-modal{display:block}.a-orientation-modal{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%2090%2090%22%20enable-background%3D%22new%200%200%2090%2090%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpolygon%20points%3D%220%2C0%200%2C0%200%2C0%20%22%3E%3C/polygon%3E%3Cg%3E%3Cpath%20d%3D%22M71.545%2C48.145h-31.98V20.743c0-2.627-2.138-4.765-4.765-4.765H18.456c-2.628%2C0-4.767%2C2.138-4.767%2C4.765v42.789%20%20%20c0%2C2.628%2C2.138%2C4.766%2C4.767%2C4.766h5.535v0.959c0%2C2.628%2C2.138%2C4.765%2C4.766%2C4.765h42.788c2.628%2C0%2C4.766-2.137%2C4.766-4.765V52.914%20%20%20C76.311%2C50.284%2C74.173%2C48.145%2C71.545%2C48.145z%20M18.455%2C16.935h16.344c2.1%2C0%2C3.808%2C1.708%2C3.808%2C3.808v27.401H37.25V22.636%20%20%20c0-0.264-0.215-0.478-0.479-0.478H16.482c-0.264%2C0-0.479%2C0.214-0.479%2C0.478v36.585c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h7.507v7.644%20%20%20h-5.534c-2.101%2C0-3.81-1.709-3.81-3.81V20.743C14.645%2C18.643%2C16.354%2C16.935%2C18.455%2C16.935z%20M16.96%2C23.116h19.331v25.031h-7.535%20%20%20c-2.628%2C0-4.766%2C2.139-4.766%2C4.768v5.828h-7.03V23.116z%20M71.545%2C73.064H28.757c-2.101%2C0-3.81-1.708-3.81-3.808V52.914%20%20%20c0-2.102%2C1.709-3.812%2C3.81-3.812h42.788c2.1%2C0%2C3.809%2C1.71%2C3.809%2C3.812v16.343C75.354%2C71.356%2C73.645%2C73.064%2C71.545%2C73.064z%22%3E%3C/path%3E%3Cpath%20d%3D%22M28.919%2C58.424c-1.466%2C0-2.659%2C1.193-2.659%2C2.66c0%2C1.466%2C1.193%2C2.658%2C2.659%2C2.658c1.468%2C0%2C2.662-1.192%2C2.662-2.658%20%20%20C31.581%2C59.617%2C30.387%2C58.424%2C28.919%2C58.424z%20M28.919%2C62.786c-0.939%2C0-1.703-0.764-1.703-1.702c0-0.939%2C0.764-1.704%2C1.703-1.704%20%20%20c0.94%2C0%2C1.705%2C0.765%2C1.705%2C1.704C30.623%2C62.022%2C29.858%2C62.786%2C28.919%2C62.786z%22%3E%3C/path%3E%3Cpath%20d%3D%22M69.654%2C50.461H33.069c-0.264%2C0-0.479%2C0.215-0.479%2C0.479v20.288c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h36.585%20%20%20c0.263%2C0%2C0.477-0.214%2C0.477-0.478V50.939C70.131%2C50.676%2C69.917%2C50.461%2C69.654%2C50.461z%20M69.174%2C51.417V70.75H33.548V51.417H69.174z%22%3E%3C/path%3E%3Cpath%20d%3D%22M45.201%2C30.296c6.651%2C0%2C12.233%2C5.351%2C12.551%2C11.977l-3.033-2.638c-0.193-0.165-0.507-0.142-0.675%2C0.048%20%20%20c-0.174%2C0.198-0.153%2C0.501%2C0.045%2C0.676l3.883%2C3.375c0.09%2C0.075%2C0.198%2C0.115%2C0.312%2C0.115c0.141%2C0%2C0.273-0.061%2C0.362-0.166%20%20%20l3.371-3.877c0.173-0.2%2C0.151-0.502-0.047-0.675c-0.194-0.166-0.508-0.144-0.676%2C0.048l-2.592%2C2.979%20%20%20c-0.18-3.417-1.629-6.605-4.099-9.001c-2.538-2.461-5.877-3.817-9.404-3.817c-0.264%2C0-0.479%2C0.215-0.479%2C0.479%20%20%20C44.72%2C30.083%2C44.936%2C30.296%2C45.201%2C30.296z%22%3E%3C/path%3E%3C/g%3E%3C/svg%3E) center/50% 50% no-repeat rgba(244,244,244,1);bottom:0;font-size:14px;font-weight:600;left:0;line-height:20px;right:0;position:fixed;top:0;z-index:9999999}.a-orientation-modal:after{color:#666;content:\\"Insert phone into Cardboard holder.\\";display:block;position:absolute;text-align:center;top:70%;transform:translateY(-70%);width:100%}.a-orientation-modal button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%20100%20100%22%20enable-background%3D%22new%200%200%20100%20100%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpath%20fill%3D%22%23000000%22%20d%3D%22M55.209%2C50l17.803-17.803c1.416-1.416%2C1.416-3.713%2C0-5.129c-1.416-1.417-3.713-1.417-5.129%2C0L50.08%2C44.872%20%20L32.278%2C27.069c-1.416-1.417-3.714-1.417-5.129%2C0c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129L44.951%2C50L27.149%2C67.803%20%20c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129c0.708%2C0.708%2C1.636%2C1.062%2C2.564%2C1.062c0.928%2C0%2C1.856-0.354%2C2.564-1.062L50.08%2C55.13l17.803%2C17.802%20%20c0.708%2C0.708%2C1.637%2C1.062%2C2.564%2C1.062s1.856-0.354%2C2.564-1.062c1.416-1.416%2C1.416-3.713%2C0-5.129L55.209%2C50z%22%3E%3C/path%3E%3C/svg%3E) no-repeat;border:none;height:50px;text-indent:-9999px;width:50px}"; (_dereq_("browserify-css").createStyle(css, { "href": "src/style/aframe.css"})); module.exports = css;\n},{"browserify-css":4}],157:[function(_dereq_,module,exports){\nvar css = ".rs-base{background-color:#333;color:#fafafa;border-radius:0;font:10px monospace;left:5px;line-height:1em;opacity:.85;overflow:hidden;padding:10px;position:fixed;top:5px;width:300px;z-index:10000}.rs-base div.hidden{display:none}.rs-base h1{color:#fff;cursor:pointer;font-size:1.4em;font-weight:300;margin:0 0 5px;padding:0}.rs-group{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;margin-bottom:5px}.rs-group:last-child{margin-bottom:0}.rs-counter-base{align-items:center;display:-webkit-box;display:-webkit-flex;display:flex;height:10px;-webkit-justify-content:space-between;justify-content:space-between;margin:2px 0}.rs-counter-base.alarm{color:#b70000;text-shadow:0 0 0 #b70000,0 0 1px #fff,0 0 1px #fff,0 0 2px #fff,0 0 2px #fff,0 0 3px #fff,0 0 3px #fff,0 0 4px #fff,0 0 4px #fff}.rs-counter-id{font-weight:300;-webkit-box-ordinal-group:0;-webkit-order:0;order:0;width:54px}.rs-counter-value{font-weight:300;-webkit-box-ordinal-group:1;-webkit-order:1;order:1;text-align:right;width:35px}.rs-canvas{-webkit-box-ordinal-group:2;-webkit-order:2;order:2}@media (min-width:480px){.rs-base{left:20px;top:20px}}"; (_dereq_("browserify-css").createStyle(css, { "href": "src/style/rStats.css"})); module.exports = css;\n},{"browserify-css":4}],158:[function(_dereq_,module,exports){\nfunction removeDefaultCamera(e){var t,a=e.camera;a&&(t=e.querySelector("["+DEFAULT_CAMERA_ATTR+"]"),t&&e.removeChild(t))}var bind=_dereq_("../utils/bind"),constants=_dereq_("../constants/"),registerSystem=_dereq_("../core/system").registerSystem,DEFAULT_CAMERA_ATTR="data-aframe-default-camera";module.exports.System=registerSystem("camera",{init:function(){this.activeCameraEl=null,this.sceneEl.addEventListener("loaded",bind(this.setupDefaultCamera,this))},setupDefaultCamera:function(){var e,t=this.sceneEl;return t.camera?void t.emit("camera-ready",{cameraEl:t.camera.el}):(e=document.createElement("a-entity"),e.setAttribute("position","0 0 0"),e.setAttribute(DEFAULT_CAMERA_ATTR,""),e.setAttribute("camera",{active:!0,userHeight:constants.DEFAULT_CAMERA_HEIGHT}),e.setAttribute("wasd-controls",""),e.setAttribute("look-controls",""),e.setAttribute(constants.AFRAME_INJECTED,""),t.appendChild(e),t.addEventListener("enter-vr",this.removeDefaultOffset),t.addEventListener("exit-vr",this.addDefaultOffset),void t.emit("camera-ready",{cameraEl:e}))},disableActiveCamera:function(){var e=this.sceneEl.querySelectorAll("[camera]"),t=e[e.length-1];t.setAttribute("camera","active",!0)},setActiveCamera:function(e){var t,a,r,i,s=this.activeCameraEl,c=this.sceneEl;if(i=e.getObject3D("camera"),i&&e!==this.activeCameraEl){var m=c.querySelector("["+DEFAULT_CAMERA_ATTR+"]"),l=m&&m.querySelector("[camera]");for(e!==l&&removeDefaultCamera(c),this.activeCameraEl=e,this.activeCameraEl.play(),c.camera=i,s&&s.setAttribute("camera","active",!1),a=c.querySelectorAll("[camera]"),r=0;r<a.length;r++)t=a[r],e!==t&&(t.setAttribute("camera","active",!1),t.pause());c.emit("camera-set-active",{cameraEl:e})}}});\n},{"../constants/":93,"../core/system":112,"../utils/bind":166}],159:[function(_dereq_,module,exports){\nfunction createGeometry(e){var t=e.primitive,r=geometries[t]&&geometries[t].Geometry,o=new r;if(!r)throw new Error("Unknown geometry `"+t+"`");return o.init(e),toBufferGeometry(o.geometry,e.buffer)}function decrementCacheCount(e,t){e[t]--}function incrementCacheCount(e,t){e[t]=void 0===e[t]?1:e[t]+1}function toBufferGeometry(e,t){var r;return t?(r=(new THREE.BufferGeometry).fromGeometry(e),r.metadata={type:e.type,parameters:e.parameters||{}},e.dispose(),r):e}var geometries=_dereq_("../core/geometry").geometries,registerSystem=_dereq_("../core/system").registerSystem,THREE=_dereq_("../lib/three");module.exports.System=registerSystem("geometry",{init:function(){this.cache={},this.cacheCount={}},clearCache:function(){this.cache={},this.cacheCount={}},getOrCreateGeometry:function(e){var t,r,o=this.cache;return e.skipCache||e.mergeTo?createGeometry(e):(r=this.hash(e),t=o[r],incrementCacheCount(this.cacheCount,r),t?t:(t=createGeometry(e),o[r]=t,t))},unuseGeometry:function(e){var t,r,o=this.cache,i=this.cacheCount;e.skipCache||e.mergeTo||(r=this.hash(e),o[r]&&(decrementCacheCount(i,r),i[r]>0||(t=o[r],t.dispose(),delete o[r],delete i[r])))},hash:function(e){return JSON.stringify(e)}});\n},{"../core/geometry":103,"../core/system":112,"../lib/three":149}],160:[function(_dereq_,module,exports){\nvar registerSystem=_dereq_("../core/system").registerSystem,THREE=_dereq_("../lib/three");module.exports.System=registerSystem("gltf-model",{init:function(){this.models=[]},tick:function(){var e=this.sceneEl;e.hasLoaded&&this.models.length&&THREE.GLTFLoader.Shaders.update(e.object3D,e.camera)},registerModel:function(e){this.models.push(e)},unregisterModel:function(e){var t=this.models,s=t.indexOf(e);s>=0&&t.splice(s,1)}});\n},{"../core/system":112,"../lib/three":149}],161:[function(_dereq_,module,exports){\n_dereq_("./camera"),_dereq_("./geometry"),_dereq_("./gltf-model"),_dereq_("./light"),_dereq_("./material"),_dereq_("./shadow"),_dereq_("./tracked-controls");\n},{"./camera":158,"./geometry":159,"./gltf-model":160,"./light":162,"./material":163,"./shadow":164,"./tracked-controls":165}],162:[function(_dereq_,module,exports){\nvar registerSystem=_dereq_("../core/system").registerSystem,bind=_dereq_("../utils/bind"),constants=_dereq_("../constants/"),DEFAULT_LIGHT_ATTR="data-aframe-default-light";module.exports.System=registerSystem("light",{schema:{defaultLightsEnabled:{default:!0}},init:function(){this.defaultLights=!1,this.userDefinedLights=!1,this.sceneEl.addEventListener("loaded",bind(this.setupDefaultLights,this))},registerLight:function(t){t.hasAttribute(DEFAULT_LIGHT_ATTR)||(this.removeDefaultLights(),this.userDefinedLights=!0)},removeDefaultLights:function(){var t,e=this.sceneEl;if(this.defaultLights){t=document.querySelectorAll("["+DEFAULT_LIGHT_ATTR+"]");for(var i=0;i<t.length;i++)e.removeChild(t[i]);this.defaultLights=!1}},setupDefaultLights:function(){var t,e,i=this.sceneEl;this.userDefinedLights||this.defaultLights||!this.data.defaultLightsEnabled||(t=document.createElement("a-entity"),e=document.createElement("a-entity"),t.setAttribute("light",{color:"#BBB",type:"ambient"}),t.setAttribute(DEFAULT_LIGHT_ATTR,""),t.setAttribute(constants.AFRAME_INJECTED,""),i.appendChild(t),e.setAttribute("light",{color:"#FFF",intensity:.6}),e.setAttribute("position",{x:-.5,y:1,z:1}),e.setAttribute(DEFAULT_LIGHT_ATTR,""),e.setAttribute(constants.AFRAME_INJECTED,""),i.appendChild(e),this.defaultLights=!0)}});\n},{"../constants/":93,"../core/system":112,"../utils/bind":166}],163:[function(_dereq_,module,exports){\nfunction calculateVideoCacheHash(e,t){var r,i,a,n=t.getAttribute("id");if(n)return n;for(i="",a=e||{},r=0;r<t.attributes.length;r++)a[t.attributes[r].name]=t.attributes[r].value;return Object.keys(a).sort().forEach(function(e){i+=e+":"+a[e]+";"}),i}function loadImageTexture(e,t){function r(r,i){function a(e){setTextureProperties(e,t),e.needsUpdate=!0,r(e)}var n="string"!=typeof e;return n?void a(new THREE.Texture(e)):void TextureLoader.load(e,a,function(){},function(e){error("`$s` could not be fetched (Error code: %s; Response: %s)",e.status,e.statusText)})}return new Promise(r)}function setTextureProperties(e,t){var r=t.offset||{x:0,y:0},i=t.repeat||{x:1,y:1},a=t.npot||!1;a&&(e.wrapS=THREE.ClampToEdgeWrapping,e.wrapT=THREE.ClampToEdgeWrapping,e.magFilter=THREE.LinearFilter,e.minFilter=THREE.LinearFilter),1===i.x&&1===i.y||(e.wrapS=THREE.RepeatWrapping,e.wrapT=THREE.RepeatWrapping,e.repeat.set(i.x,i.y)),0===r.x&&0===r.y||e.offset.set(r.x,r.y)}function createVideoEl(e,t,r){var i=document.createElement("video");return i.width=t,i.height=r,i.setAttribute("playsinline",""),i.setAttribute("webkit-playsinline",""),i.autoplay=!0,i.loop=!0,i.crossOrigin="anonymous",i.addEventListener("error",function(){warn("`$s` is not a valid video",e)},!0),i.src=e,i}function fixVideoAttributes(e){return e.autoplay=e.hasAttribute("autoplay")&&"false"!==e.getAttribute("autoplay"),e.controls=e.hasAttribute("controls")&&"false"!==e.getAttribute("controls"),"false"===e.getAttribute("loop")&&e.removeAttribute("loop"),"false"===e.getAttribute("preload")&&(e.preload="none"),e.crossOrigin=e.crossOrigin||"anonymous",e.setAttribute("playsinline",""),e.setAttribute("webkit-playsinline",""),e}var registerSystem=_dereq_("../core/system").registerSystem,THREE=_dereq_("../lib/three"),utils=_dereq_("../utils/"),isHLS=_dereq_("../utils/material").isHLS,bind=utils.bind,debug=utils.debug,error=debug("components:texture:error"),TextureLoader=new THREE.TextureLoader,warn=debug("components:texture:warn");TextureLoader.setCrossOrigin("anonymous"),module.exports.System=registerSystem("material",{init:function(){this.materials={},this.textureCounts={},this.textureCache={},this.sceneEl.addEventListener("materialtextureloaded",bind(this.onMaterialTextureLoaded,this))},clearTextureCache:function(){this.textureCache={}},loadTexture:function(e,t,r){function i(e){n.loadImage(e,t,r)}function a(e){n.loadVideo(e,t,r)}var n=this;return"CANVAS"===e.tagName?void this.loadCanvas(e,t,r):"VIDEO"===e.tagName?(e.hasAttribute("src")||e.hasAttribute("srcObject")||warn("Video element was defined without `src` nor `srcObject` attributes."),void this.loadVideo(e,t,r)):void utils.srcLoader.validateSrc(e,i,a)},loadImage:function(e,t,r){var i=this.hash(t),a=this.textureCache;return a[i]?void a[i].then(r):(a[i]=loadImageTexture(e,t),void a[i].then(r))},loadCanvas:function(e,t,r){e.readyState=2,e.HAVE_CURRENT_DATA=2,this.loadVideo(e,t,r)},loadVideo:function(e,t,r){function i(e){e.texture.needsUpdate=!0,r(e.texture,e.videoEl)}var a,n,s,o,u=this.textureCache;if("string"!=typeof e){if(s=e,a=this.hashVideo(t,s),u[a])return void u[a].then(i);fixVideoAttributes(s)}return s=s||createVideoEl(e,t.width,t.height),a=this.hashVideo(t,s),u[a]?void u[a].then(i):(n=new THREE.VideoTexture(s),n.minFilter=THREE.LinearFilter,setTextureProperties(n,t),this.sceneEl.isIOS&&isHLS(s.src||s.getAttribute("src"),s.type||s.getAttribute("type"))&&(n.format=THREE.RGBAFormat,n.needsCorrectionBGRA=!0,n.flipY=!1,n.needsCorrectionFlipY=!0),o={texture:n,videoEl:s},u[a]=Promise.resolve(o),void i(o))},hash:function(e){return e.src.tagName&&(e=utils.extendDeep({},e),e.src=e.src.getAttribute("src")),JSON.stringify(e)},hashVideo:function(e,t){return calculateVideoCacheHash(e,t)},registerMaterial:function(e){this.materials[e.uuid]=e},unregisterMaterial:function(e){delete this.materials[e.uuid];var t=this.textureCounts;Object.keys(e).filter(function(t){return e[t]&&e[t].isTexture}).forEach(function(r){t[e[r].uuid]--,t[e[r].uuid]<=0&&e[r].dispose()})},updateMaterials:function(e){var t=this.materials;Object.keys(t).forEach(function(e){t[e].needsUpdate=!0})},onMaterialTextureLoaded:function(e){this.textureCounts[e.detail.texture.uuid]||(this.textureCounts[e.detail.texture.uuid]=0),this.textureCounts[e.detail.texture.uuid]++}});\n},{"../core/system":112,"../lib/three":149,"../utils/":172,"../utils/material":173}],164:[function(_dereq_,module,exports){\nvar registerSystem=_dereq_("../core/system").registerSystem,bind=_dereq_("../utils/bind"),THREE=_dereq_("../lib/three"),SHADOW_MAP_TYPE_MAP={basic:THREE.BasicShadowMap,pcf:THREE.PCFShadowMap,pcfsoft:THREE.PCFSoftShadowMap};module.exports.System=registerSystem("shadow",{schema:{type:{default:"pcf",oneOf:["basic","pcf","pcfsoft"]},renderReverseSided:{default:!0},renderSingleSided:{default:!0}},init:function(){var e=this.sceneEl,d=this.data;this.shadowMapEnabled=!1,e.addEventListener("render-target-loaded",bind(function(){e.renderer&&(e.renderer.shadowMap.type=SHADOW_MAP_TYPE_MAP[d.type],e.renderer.shadowMap.renderReverseSided=d.renderReverseSided,e.renderer.shadowMap.renderSingleSided=d.renderSingleSided,this.setShadowMapEnabled(this.shadowMapEnabled))},this))},setShadowMapEnabled:function(e){var d=this.sceneEl.renderer;this.shadowMapEnabled=e,d&&(d.shadowMap.enabled=e)}});\n},{"../core/system":112,"../lib/three":149,"../utils/bind":166}],165:[function(_dereq_,module,exports){\nvar registerSystem=_dereq_("../core/system").registerSystem,trackedControlsUtils=_dereq_("../utils/tracked-controls"),utils=_dereq_("../utils");module.exports.System=registerSystem("tracked-controls",{init:function(){var t=this;this.controllers=[],this.lastControllersUpdate=0,this.tick=utils.throttle(this.throttledTick,10,this),navigator.getVRDisplays&&this.sceneEl.addEventListener("enter-vr",function(){navigator.getVRDisplays().then(function(e){e.length&&(t.vrDisplay=e[0])})})},updateControllerList:function(){for(var t=this.controllers=[],e=trackedControlsUtils.getGamepadsByPrefix(""),r=0;r<e.length;r++){var s=e[r];s&&s.pose&&t.push(s)}},throttledTick:function(){this.updateControllerList(),this.sceneEl.emit("controllersupdated",{controllers:this.controllers})}});\n},{"../core/system":112,"../utils":172,"../utils/tracked-controls":176}],166:[function(_dereq_,module,exports){\nmodule.exports=function(r,t){return function(n){return function(){var o=n.concat(Array.prototype.slice.call(arguments,0));return r.apply(t,o)}}(Array.prototype.slice.call(arguments,2))};\n},{}],167:[function(_dereq_,module,exports){\nfunction parse(e,t){var r,o={};return e&&"object"==typeof e?vecParseFloat({x:void 0!==e.x?e.x:t&&t.x,y:void 0!==e.y?e.y:t&&t.y,z:void 0!==e.z?e.z:t&&t.z,w:void 0!==e.w?e.w:t&&t.w}):"string"!=typeof e||null===e?"object"==typeof t?extend({},t):t:(r=e.trim().replace(/\\s+/g," ").split(" "),o.x=r[0]||t&&t.x,o.y=r[1]||t&&t.y,o.z=r[2]||t&&t.z,o.w=r[3]||t&&t.w,vecParseFloat(o))}function stringify(e){return"object"!=typeof e?e:[e.x,e.y,e.z,e.w].join(" ").trim()}function vecParseFloat(e){return Object.keys(e).forEach(function(t){return void 0===e[t]?void delete e[t]:void(e[t]=parseFloat(e[t],10))}),e}var extend=_dereq_("object-assign"),regex=/^\\s*((-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s+){2,3}(-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s*$/;module.exports.regex=regex,module.exports.parse=parse,module.exports.stringify=stringify,module.exports.isCoordinates=function(e){return regex.test(e)},module.exports.toVector3=function(e){return new THREE.Vector3(e.x,e.y,e.z)};\n},{"object-assign":25}],168:[function(_dereq_,module,exports){\n(function (process){\nfunction getDebugNamespaceType(e){var r=e.split(":");return r[r.length-1]}function getDebugNamespaceColor(e){var r=getDebugNamespaceType(e),o=settings.colors&&settings.colors[r];return o||null}function storage(){try{return window.localStorage}catch(e){}}var debugLib=_dereq_("debug"),extend=_dereq_("object-assign"),settings={colors:{debug:"gray",error:"red",info:"gray",warn:"orange"}},debug=function(e){var r=debugLib(e);return r.color=getDebugNamespaceColor(e),r};extend(debug,debugLib);var ls=storage();ls&&(parseInt(ls.logs,10)||"true"===ls.logs)?debug.enable("*"):debug.enable("*:error,*:info,*:warn"),process.browser&&(window.logs=debug),module.exports=debug;\n}).call(this,_dereq_(\'_process\'))\n\n},{"_process":33,"debug":7,"object-assign":25}],169:[function(_dereq_,module,exports){\n(function (process){\nfunction checkHeadsetConnected(){var e,o=controls.getVRDisplay();return o&&"isConnected"in o?o.isConnected:(controls.update(),e=dolly.quaternion,0!==e._x||0!==e._y||0!==e._z)}function checkHasPositionalTracking(){var e=controls.getVRDisplay();return!isMobile()&&!isGearVR()&&(e&&e.capabilities.hasPosition)}function isTablet(e){var o=e||navigator.userAgent;return/ipad|Nexus (7|9)|xoom|sch-i800|playbook|tablet|kindle/i.test(o)}function isIOS(){return/iPad|iPhone|iPod/.test(navigator.platform)}function isGearVR(){return/SamsungBrowser.+Mobile VR/i.test(navigator.userAgent)}var THREE=_dereq_("../lib/three"),dolly=new THREE.Object3D,controls=new THREE.VRControls(dolly);module.exports.checkHeadsetConnected=checkHeadsetConnected,module.exports.checkHasPositionalTracking=checkHasPositionalTracking;var isMobile=function(){var e=!1;return function(o){(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(o)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(o.substr(0,4)))&&(e=!0),(isIOS()||isTablet())&&(e=!0),isGearVR()&&(e=!1)}(navigator.userAgent||navigator.vendor||window.opera),function(){return e}}();module.exports.isMobile=isMobile,module.exports.isTablet=isTablet,module.exports.isIOS=isIOS,module.exports.isGearVR=isGearVR,module.exports.isLandscape=function(){return 90===window.orientation||window.orientation===-90},module.exports.isIOSOlderThan10=function(e){return/(iphone|ipod|ipad).*os.(7|8|9)/i.test(e)},module.exports.isBrowserEnvironment=!(process&&!process.browser),module.exports.isNodeEnvironment=!module.exports.isBrowserEnvironment;\n}).call(this,_dereq_(\'_process\'))\n\n},{"../lib/three":149,"_process":33}],170:[function(_dereq_,module,exports){\nmodule.exports.getComponentPropertyPath=function(t,e){return e=e||".",t.indexOf(e)===-1?t:t.split(e)},module.exports.getComponentProperty=function(t,e,r){var o;return r=r||".",e.indexOf(r)!==-1?(o=e.split(r),t.getAttribute(o[0])[o[1]]):t.getAttribute(e)},module.exports.setComponentProperty=function(t,e,r,o){var n,i={};return o=o||".",e.indexOf(o)!==-1?(n=e.split(o),i[n[1]]=r,void t.setAttribute(n[0],i)):void t.setAttribute(e,r)};\n},{}],171:[function(_dereq_,module,exports){\nmodule.exports=function(t){var e=t.style.width,s=t.style.height;t.style.width=parseInt(e,10)+1+"px",t.style.height=parseInt(s,10)+1+"px",setTimeout(function(){t.style.width=e,t.style.height=s},200)};\n},{}],172:[function(_dereq_,module,exports){\nfunction deepEqual(e,t){var r,o,n,i,u;if(null===e||null===t||!(e&&t&&e.constructor===Object&&t.constructor===Object||e.constructor===Array&&t.constructor===Array))return e===t;if(o=Object.keys(e),n=Object.keys(t),o.length!==n.length)return!1;for(r=0;r<o.length;++r)if(i=e[o[r]],u=t[o[r]],"object"==typeof i||"object"==typeof u||Array.isArray(i)&&Array.isArray(u)){if(i===u)continue;if(!deepEqual(i,u))return!1}else if(i!==u)return!1;return!0}var debug=_dereq_("./debug"),deepAssign=_dereq_("deep-assign"),device=_dereq_("./device"),objectAssign=_dereq_("object-assign"),warn=debug("utils:warn");module.exports.bind=_dereq_("./bind"),module.exports.coordinates=_dereq_("./coordinates"),module.exports.debug=debug,module.exports.device=device,module.exports.entity=_dereq_("./entity"),module.exports.forceCanvasResizeSafariMobile=_dereq_("./forceCanvasResizeSafariMobile"),module.exports.material=_dereq_("./material"),module.exports.styleParser=_dereq_("./styleParser"),module.exports.trackedControls=_dereq_("./tracked-controls"),module.exports.checkHeadsetConnected=function(){return warn("`utils.checkHeadsetConnected` has moved to `utils.device.checkHeadsetConnected`"),device.checkHeadsetConnected(arguments)},module.exports.isGearVR=function(){return warn("`utils.isGearVR` has moved to `utils.device.isGearVR`"),device.isGearVR(arguments)},module.exports.isIOS=function(){return warn("`utils.isIOS` has moved to `utils.device.isIOS`"),device.isIOS(arguments)},module.exports.isMobile=function(){return warn("`utils.isMobile has moved to `utils.device.isMobile`"),device.isMobile(arguments)},module.exports.throttle=function(e,t,r){var o;return r&&(e=module.exports.bind(e,r)),function(){var r=Date.now(),n="undefined"==typeof o?t:r-o;("undefined"==typeof o||n>=t)&&(o=r,e.apply(null,arguments))}},module.exports.throttleTick=function(e,t,r){var o;return r&&(e=module.exports.bind(e,r)),function(r,n){var i="undefined"==typeof o?n:r-o;("undefined"==typeof o||i>=t)&&(o=r,e(r,i))}},module.exports.fireEvent=function(e,t,r){r=r||{},r.detail=r.detail||{},r.detail.target=r.detail.target||e;var o=new CustomEvent(t,r);e.dispatchEvent(o)},module.exports.extend=objectAssign,module.exports.extendDeep=deepAssign,module.exports.clone=function(e){return JSON.parse(JSON.stringify(e))},module.exports.deepEqual=deepEqual,module.exports.diff=function(e,t){var r={},o=Object.keys(e);return Object.keys(t).forEach(function(e){o.indexOf(e)===-1&&o.push(e)}),o.forEach(function(o){var n=e[o],i=t[o],u=n&&i&&n.constructor===Object&&i.constructor===Object;(u&&!deepEqual(n,i)||!u&&n!==i)&&(r[o]=i)}),r},module.exports.shouldCaptureKeyEvent=function(e){return!e.metaKey&&document.activeElement===document.body},module.exports.splitString=function(e,t){"undefined"==typeof t&&(t=" ");var r=new RegExp(t,"g");return e=(e||"").replace(r,t),e.split(t)},module.exports.getElData=function(e,t){function r(t){e.hasAttribute(t)&&(o[t]=e.getAttribute(t))}t=t||{};var o={};return Object.keys(t).forEach(r),o},module.exports.getUrlParameter=function(e){e=e.replace(/[\\[]/,"\\\\[").replace(/[\\]]/,"\\\\]");var t=new RegExp("[\\\\?&]"+e+"=([^&#]*)"),r=t.exec(location.search);return null===r?"":decodeURIComponent(r[1].replace(/\\+/g," "))},module.exports.isIframed=function(){return window.top!==window.self},module.exports.findAllScenes=function(e){for(var t=[],r=e.getElementsByTagName("*"),o=0,n=r.length;o<n;o++)r[o].isScene&&t.push(r[o]);return t},module.exports.srcLoader=_dereq_("./src-loader");\n},{"./bind":166,"./coordinates":167,"./debug":168,"./device":169,"./entity":170,"./forceCanvasResizeSafariMobile":171,"./material":173,"./src-loader":174,"./styleParser":175,"./tracked-controls":176,"deep-assign":9,"object-assign":25}],173:[function(_dereq_,module,exports){\nfunction handleTextureEvents(e,t){t&&(e.emit("materialtextureloaded",{src:t.image,texture:t}),t.image&&"VIDEO"===t.image.tagName&&(t.image.addEventListener("loadeddata",function(){e.components&&e.components.material&&(t.needsCorrectionBGRA&&t.needsCorrectionFlipY&&["standard","flat"].indexOf(e.components.material.data.shader)!==-1&&e.setAttribute("material","shader","ios10hls"),e.emit("materialvideoloadeddata",{src:t.image,texture:t}))}),t.image.addEventListener("ended",function(){e.emit("materialvideoended",{src:t.image,texture:t})})))}var THREE=_dereq_("../lib/three"),HLS_MIMETYPES=["application/x-mpegurl","application/vnd.apple.mpegurl"];module.exports.updateMapMaterialFromData=function(e,t,a,r){function n(t){a.materialSrcs[e]===d&&i(t)}function i(t){s[e]=t,s.needsUpdate=!0,handleTextureEvents(o,t)}var o=a.el,s=a.material,d=r[t];return a.materialSrcs||(a.materialSrcs={}),d?void(d!==a.materialSrcs[e]&&(a.materialSrcs[e]=d,d instanceof THREE.Texture?i(d):o.sceneEl.systems.material.loadTexture(d,{src:d,repeat:r.repeat,offset:r.offset,npot:r.npot},n))):(delete a.materialSrcs[e],void i(null))},module.exports.updateMap=function(e,t){return module.exports.updateMapMaterialFromData("map","src",e,t)},module.exports.updateDistortionMap=function(e,t,a){function r(e){o[n+"Map"]=e,o.needsUpdate=!0,handleTextureEvents(i,e)}var n=e;"ambientOcclusion"===e&&(n="ao");var i=t.el,o=t.material,s=a[e+"Map"],d={};if(d.src=s,d.offset=a[e+"TextureOffset"],d.repeat=a[e+"TextureRepeat"],d.wrap=a[e+"TextureWrap"],s){if(s===t[e+"TextureSrc"])return;return t[e+"TextureSrc"]=s,void i.sceneEl.systems.material.loadTexture(s,d,r)}o.map&&r(null)},module.exports.handleTextureEvents=handleTextureEvents,module.exports.isHLS=function(e,t){return!(!t||!HLS_MIMETYPES.includes(t.toLowerCase()))||!!(e&&e.toLowerCase().indexOf(".m3u8")>0)};\n},{"../lib/three":149}],174:[function(_dereq_,module,exports){\nfunction validateSrc(e,r,a){checkIsImage(e,function(t){return t?void r(e):void a(e)})}function validateCubemapSrc(e,r){function a(e){o.push(e),6===o.length&&r(o)}var t,n,c,i="",o=[];for(n=0;n<5;n++)i+="(url\\\\((?:[^\\\\)]+)\\\\),\\\\s*)";if(i+="(url\\\\((?:[^\\\\)]+)\\\\)\\\\s*)",c=e.match(new RegExp(i)))for(n=1;n<7;n++)validateSrc(parseUrl(c[n]),a);else if(t=validateAndGetQuerySelector(e))return"A-CUBEMAP"===t.tagName&&t.srcs?r(t.srcs):void warn(\'Selector "%s" does not point to <a-cubemap>\',e)}function parseUrl(e){var r=e.match(/\\url\\((.+)\\)/);if(r)return r[1]}function checkIsImage(e,r){function a(){r(!0)}function t(){r(!1)}if(e.tagName)return void r("IMG"===e.tagName);var n=new Image;n.addEventListener("load",a),n.addEventListener("error",t),n.src=e}function validateAndGetQuerySelector(e){try{var r=document.querySelector(e);return r||warn(\'No element was found matching the selector: "%s"\',e),r}catch(r){return void warn(\'"%s" is not a valid selector\',e)}}var debug=_dereq_("./debug"),warn=debug("utils:src-loader:warn");module.exports={parseUrl:parseUrl,validateSrc:validateSrc,validateCubemapSrc:validateCubemapSrc};\n},{"./debug":168}],175:[function(_dereq_,module,exports){\nfunction toCamelCase(e){function r(e){return e[1].toUpperCase()}return e.replace(/-([a-z])/g,r)}function transformKeysToCamelCase(e){var r=Object.keys(e),t={};return r.forEach(function(r){var s=toCamelCase(r);t[s]=e[r]}),t}var styleParser=_dereq_("style-attr");module.exports.parse=function(e){var r;return"string"!=typeof e?e:(r=styleParser.parse(e),r[""]?e:transformKeysToCamelCase(r))},module.exports.stringify=function(e){return"string"==typeof e?e:styleParser.stringify(e)},module.exports.toCamelCase=toCamelCase,module.exports.transformKeysToCamelCase=transformKeysToCamelCase;\n},{"style-attr":36}],176:[function(_dereq_,module,exports){\nfunction isControllerPresent(e,n,r){var t,o,l,i=!1,s=0,a=e.el.sceneEl,c=a&&a.systems["tracked-controls"];if(!c)return i;if(l=c.controllers,l&&0!==l.length||(c.updateControllerList(),l=c.controllers),!l)return i;for(var d=0;d<l.length&&(t=l[d],o=!n||""===n||0===t.id.indexOf(n),i=o,i&&r.hand&&(i=(t.hand||DEFAULT_HANDEDNESS)===r.hand),i&&r.index&&(i=s===r.index),!i);++d)o&&s++;return i}var DEFAULT_HANDEDNESS=_dereq_("../constants").DEFAULT_HANDEDNESS,AXIS_LABELS=["x","y","z","w"];module.exports.getGamepadsByPrefix=function(e){var n,r=[],t=navigator.getGamepads&&navigator.getGamepads();if(!t)return r;for(var o=0;o<t.length;++o)n=t[o],n&&(e&&0!==n.id.indexOf(e)||r.push(n));return r},module.exports.checkControllerPresentAndSetup=function(e,n,r){var t=e.el,o=isControllerPresent(e,n,r);return o===e.controllerPresent?o:(e.controllerPresent=o,void(o?(e.injectTrackedControls(),e.addEventListeners(),t.emit("controllerconnected",{name:e.name,component:e})):(e.removeEventListeners(),t.emit("controllerdisconnected",{name:e.name,component:e}))))},module.exports.isControllerPresent=isControllerPresent,module.exports.emitIfAxesChanged=function(e,n,r){Object.keys(n).forEach(function(t){var o=n[t],l=r.detail.changed;if(o.reduce(function(e,n){return e||l[n]},!l)){var i={};o.forEach(function(e){i[AXIS_LABELS[e]]=r.detail.axis[e]}),e.el.emit(t+"moved",i)}})};\n},{"../constants":93}],177:[function(_dereq_,module,exports){\nTHREE.VRControls=function(t,n){function s(t){i=t,t.length>0?e=t[0]:n&&n("VR input not available.")}var e,i,o=this,a=new THREE.Matrix4,r=null;"VRFrameData"in window&&(r=new window.VRFrameData),navigator.getVRDisplays&&navigator.getVRDisplays().then(s).catch(function(){console.warn("THREE.VRControls: Unable to get VR Displays")}),this.scale=1,this.standing=!1,this.userHeight=1.6,this.getVRDisplay=function(){return e},this.setVRDisplay=function(t){e=t},this.getVRDisplays=function(){return console.warn("THREE.VRControls: getVRDisplays() is being deprecated."),i},this.getStandingMatrix=function(){return a},this.update=function(){if(e){var n;e.getFrameData?(e.getFrameData(r),n=r.pose):e.getPose&&(n=e.getPose()),null!==n.orientation&&t.quaternion.fromArray(n.orientation),null!==n.position?t.position.fromArray(n.position):t.position.set(0,0,0),this.standing&&(e.stageParameters?(t.updateMatrix(),a.fromArray(e.stageParameters.sittingToStandingTransform),t.applyMatrix(a)):t.position.setY(t.position.y+this.userHeight)),t.position.multiplyScalar(o.scale)}},this.resetPose=function(){e&&e.resetPose()},this.resetSensor=function(){console.warn("THREE.VRControls: .resetSensor() is now .resetPose()."),this.resetPose()},this.zeroSensor=function(){console.warn("THREE.VRControls: .zeroSensor() is now .resetPose()."),this.resetPose()},this.dispose=function(){e=null}};\n},{}],178:[function(_dereq_,module,exports){\nTHREE.VREffect=function(e,t){function i(e){h=e,e.length>0?o=e[0]:t&&t("HMD not available")}function r(){var t=f.isPresenting;if(f.isPresenting=void 0!==o&&o.isPresenting,f.isPresenting){var i=o.getEyeParameters("left"),r=i.renderWidth,n=i.renderHeight;t||(m=e.getPixelRatio(),w=e.getSize(),e.setPixelRatio(1),e.setSize(2*r,n,!1))}else t&&(e.setPixelRatio(m),e.setSize(w.width,w.height,p))}function n(e){var t=2/(e.leftTan+e.rightTan),i=(e.leftTan-e.rightTan)*t*.5,r=2/(e.upTan+e.downTan),n=(e.upTan-e.downTan)*r*.5;return{scale:[t,r],offset:[i,n]}}function a(e,t,i,r){t=void 0===t||t,i=void 0===i?.01:i,r=void 0===r?1e4:r;var a=t?-1:1,s=new THREE.Matrix4,o=s.elements,h=n(e);return o[0]=h.scale[0],o[1]=0,o[2]=h.offset[0]*a,o[3]=0,o[4]=0,o[5]=h.scale[1],o[6]=-h.offset[1]*a,o[7]=0,o[8]=0,o[9]=0,o[10]=r/(i-r)*-a,o[11]=r*i/(i-r),o[12]=0,o[13]=0,o[14]=a,o[15]=0,s.transpose(),s}function s(e,t,i,r){var n=Math.PI/180,s={upTan:Math.tan(e.upDegrees*n),downTan:Math.tan(e.downDegrees*n),leftTan:Math.tan(e.leftDegrees*n),rightTan:Math.tan(e.rightDegrees*n)};return a(s,t,i,r)}var o,h,d,l,u=new THREE.Vector3,c=new THREE.Vector3,g=null;"VRFrameData"in window&&(g=new window.VRFrameData),navigator.getVRDisplays&&navigator.getVRDisplays().then(i).catch(function(){console.warn("THREE.VREffect: Unable to get VR Displays")}),this.isPresenting=!1;var f=this,w=e.getSize(),p=!1,m=e.getPixelRatio();this.getVRDisplay=function(){return o},this.setVRDisplay=function(e){o=e},this.getVRDisplays=function(){return console.warn("THREE.VREffect: getVRDisplays() is being deprecated."),h},this.setSize=function(t,i,r){if(w={width:t,height:i},p=r,f.isPresenting){var n=o.getEyeParameters("left");e.setPixelRatio(1),e.setSize(2*n.renderWidth,n.renderHeight,!1)}else e.setPixelRatio(m),e.setSize(t,i,r)};var v=e.domElement,y=[0,0,.5,1],x=[.5,0,.5,1];window.addEventListener("vrdisplaypresentchange",r,!1),this.setFullScreen=function(e){return new Promise(function(t,i){return void 0===o?void i(new Error("No VR hardware found.")):f.isPresenting===e?void t():void t(e?o.requestPresent([{source:v}]):o.exitPresent())})},this.requestPresent=function(){return this.setFullScreen(!0)},this.exitPresent=function(){return this.setFullScreen(!1)},this.requestAnimationFrame=function(e){return void 0!==o?o.requestAnimationFrame(e):window.requestAnimationFrame(e)},this.cancelAnimationFrame=function(e){void 0!==o?o.cancelAnimationFrame(e):window.cancelAnimationFrame(e)},this.submitFrame=function(){void 0!==o&&f.isPresenting&&o.submitFrame()},this.autoSubmitFrame=!0;var R=new THREE.PerspectiveCamera;R.layers.enable(1);var E=new THREE.PerspectiveCamera;E.layers.enable(2),this.render=function(t,i,r,n){if(o&&f.isPresenting){var a=t.autoUpdate;a&&(t.updateMatrixWorld(),t.autoUpdate=!1);var h=o.getEyeParameters("left"),w=o.getEyeParameters("right");u.fromArray(h.offset),c.fromArray(w.offset),Array.isArray(t)&&(console.warn("THREE.VREffect.render() no longer supports arrays. Use object.layers instead."),t=t[0]);var p,m,v=e.getSize(),P=o.getLayers();if(P.length){var T=P[0];p=null!==T.leftBounds&&4===T.leftBounds.length?T.leftBounds:y,m=null!==T.rightBounds&&4===T.rightBounds.length?T.rightBounds:x}else p=y,m=x;return d={x:Math.round(v.width*p[0]),y:Math.round(v.height*p[1]),width:Math.round(v.width*p[2]),height:Math.round(v.height*p[3])},l={x:Math.round(v.width*m[0]),y:Math.round(v.height*m[1]),width:Math.round(v.width*m[2]),height:Math.round(v.height*m[3])},r?(e.setRenderTarget(r),r.scissorTest=!0):(e.setRenderTarget(null),e.setScissorTest(!0)),(e.autoClear||n)&&e.clear(),null===i.parent&&i.updateMatrixWorld(),i.matrixWorld.decompose(R.position,R.quaternion,R.scale),E.position.copy(R.position),E.quaternion.copy(R.quaternion),E.scale.copy(R.scale),R.translateOnAxis(u,R.scale.x),E.translateOnAxis(c,E.scale.x),o.getFrameData?(o.depthNear=i.near,o.depthFar=i.far,o.getFrameData(g),R.projectionMatrix.elements=g.leftProjectionMatrix,E.projectionMatrix.elements=g.rightProjectionMatrix):(R.projectionMatrix=s(h.fieldOfView,!0,i.near,i.far),E.projectionMatrix=s(w.fieldOfView,!0,i.near,i.far)),r?(r.viewport.set(d.x,d.y,d.width,d.height),r.scissor.set(d.x,d.y,d.width,d.height)):(e.setViewport(d.x,d.y,d.width,d.height),e.setScissor(d.x,d.y,d.width,d.height)),e.render(t,R,r,n),r?(r.viewport.set(l.x,l.y,l.width,l.height),r.scissor.set(l.x,l.y,l.width,l.height)):(e.setViewport(l.x,l.y,l.width,l.height),e.setScissor(l.x,l.y,l.width,l.height)),e.render(t,E,r,n),r?(r.viewport.set(0,0,v.width,v.height),r.scissor.set(0,0,v.width,v.height),r.scissorTest=!1,e.setRenderTarget(null)):(e.setViewport(0,0,v.width,v.height),e.setScissorTest(!1)),a&&(t.autoUpdate=!0),void(f.autoSubmitFrame&&f.submitFrame())}e.render(t,i,r,n)},this.dispose=function(){window.removeEventListener("vrdisplaypresentchange",r,!1)}};\n},{}],179:[function(_dereq_,module,exports){\nwindow.glStats=function(){function e(e,r){return function(){r.apply(this,arguments),e.apply(this,arguments)}}function r(){a("allcalls").set(s+i),a("drawElements").set(i),a("drawArrays").set(s),a("bindTexture").set(m),a("useProgram").set(d),a("glfaces").set(l),a("glvertices").set(c),a("glpoints").set(p)}function n(){s=0,i=0,d=0,l=0,c=0,p=0,m=0}function t(){}function o(e){a=e}var a=null,s=0,i=0,d=0,l=0,c=0,p=0,m=0;WebGLRenderingContext.prototype.drawArrays=e(WebGLRenderingContext.prototype.drawArrays,function(){s++,arguments[0]==this.POINTS?p+=arguments[2]:c+=arguments[2]}),WebGLRenderingContext.prototype.drawElements=e(WebGLRenderingContext.prototype.drawElements,function(){i++,l+=arguments[1]/3,c+=arguments[1]}),WebGLRenderingContext.prototype.useProgram=e(WebGLRenderingContext.prototype.useProgram,function(){d++}),WebGLRenderingContext.prototype.bindTexture=e(WebGLRenderingContext.prototype.bindTexture,function(){m++});var f={allcalls:{over:3e3,caption:"Calls (hook)"},drawelements:{caption:"drawElements (hook)"},drawarrays:{caption:"drawArrays (hook)"}},u=[{caption:"WebGL",values:["allcalls","drawelements","drawarrays","useprogram","bindtexture","glfaces","glvertices","glpoints"]}],y=[{base:"allcalls",steps:["drawelements","drawarrays"]}];return{update:r,start:n,end:t,attach:o,values:f,groups:u,fractions:y}},window.threeStats=function(e){function r(){a("renderer.info.memory.geometries").set(e.info.memory.geometries),a("renderer.info.programs").set(e.info.programs.length),a("renderer.info.memory.textures").set(e.info.memory.textures),a("renderer.info.render.calls").set(e.info.render.calls),a("renderer.info.render.faces").set(e.info.render.faces),a("renderer.info.render.points").set(e.info.render.points),a("renderer.info.render.vertices").set(e.info.render.vertices)}function n(){}function t(){}function o(e){a=e}var a=null,s={"renderer.info.memory.geometries":{caption:"Geometries"},"renderer.info.memory.textures":{caption:"Textures"},"renderer.info.programs":{caption:"Programs"},"renderer.info.render.calls":{caption:"Calls"},"renderer.info.render.faces":{caption:"Faces",over:1e3},"renderer.info.render.points":{caption:"Points"},"renderer.info.render.vertices":{caption:"Vertices"}},i=[{caption:"Three.js - Memory",values:["renderer.info.memory.geometries","renderer.info.programs","renderer.info.memory.textures"]},{caption:"Three.js - Render",values:["renderer.info.render.calls","renderer.info.render.faces","renderer.info.render.points","renderer.info.render.vertices"]}],d=[];return{update:r,start:n,end:t,attach:o,values:s,groups:i,fractions:d}},window.BrowserStats=function(){function e(e){var r=100,n=Math.floor(Math.log(e)/p);return Math.round(e*r/Math.pow(1024,n))/r}function r(){s=e(performance.memory.usedJSHeapSize),i=e(performance.memory.totalJSHeapSize),a("memory").set(s),a("total").set(i)}function n(){s=0}function t(){}function o(e){a=e}var a=null,s=0,i=0;window.performance&&!performance.memory&&(performance.memory={usedJSHeapSize:0,totalJSHeapSize:0}),0===performance.memory.totalJSHeapSize&&console.warn("totalJSHeapSize === 0... performance.memory is only available in Chrome .");var d={memory:{caption:"Used Memory",average:!0,avgMs:1e3,over:22},total:{caption:"Total Memory"}},l=[{caption:"Browser",values:["memory","total"]}],c=[{base:"total",steps:["memory"]}],p=Math.log(1024);return{update:r,start:n,end:t,attach:o,values:d,groups:l,fractions:c}},"object"==typeof module&&(module.exports={glStats:window.glStats,threeStats:window.threeStats,BrowserStats:window.BrowserStats});\n},{}],180:[function(_dereq_,module,exports){\n"use strict";!function(){"performance"in window==0&&(window.performance={});var e=window.performance;if("now"in e==0){var t=Date.now();e.timing&&e.timing.navigationStart&&(t=e.timing.navigationStart),e.now=function(){return Date.now()-t}}e.mark||(e.mark=function(){}),e.measure||(e.measure=function(){})}(),window.rStats=function(e){function t(e,t){for(var n=Object.keys(e),a=0,r=n.length;a<r;a++)t(n[a])}function n(e){var t=document.createElement("link");t.href=e,t.rel="stylesheet",t.type="text/css",document.getElementsByTagName("head")[0].appendChild(t)}function a(e,t,n){function a(){o.width=v,o.height=g,o.style.width=o.width+"px",o.style.height=o.height+"px",o.className="rs-canvas",e.appendChild(o),c.fillStyle="#444444",c.fillRect(0,0,o.width,o.height)}function r(e,t){s+=.1*(e-s),l*=.99,s>l&&(l=s),c.drawImage(o,1,0,o.width-1,o.height,0,0,o.width-1,o.height),t?c.drawImage(p,o.width-1,o.height-s*o.height/l-g):c.drawImage(d,o.width-1,o.height-s*o.height/l-g)}var i=n||{},o=document.createElement("canvas"),c=o.getContext("2d"),l=0,s=0,u=i.color?i.color:"#666666",d=document.createElement("canvas"),f=d.getContext("2d");d.width=1,d.height=2*g,f.fillStyle="#444444",f.fillRect(0,0,1,2*g),f.fillStyle=u,f.fillRect(0,g,1,g),f.fillStyle="#ffffff",f.globalAlpha=.5,f.fillRect(0,g,1,1),f.globalAlpha=1;var p=document.createElement("canvas"),h=p.getContext("2d");return p.width=1,p.height=2*g,h.fillStyle="#444444",h.fillRect(0,0,1,2*g),h.fillStyle="#b70000",h.fillRect(0,g,1,g),h.globalAlpha=.5,h.fillStyle="#ffffff",h.fillRect(0,g,1,1),h.globalAlpha=1,a(),{draw:r}}function r(e,n){function a(){i.width=v,i.height=g*n,i.style.width=i.width+"px",i.style.height=i.height+"px",i.className="rs-canvas",e.appendChild(i),o.fillStyle="#444444",o.fillRect(0,0,i.width,i.height)}function r(e){o.drawImage(i,1,0,i.width-1,i.height,0,0,i.width-1,i.height);var n=0;t(e,function(t){var a=e[t]*i.height;o.fillStyle=u[t],o.fillRect(i.width-1,n,1,a),n+=a})}var i=document.createElement("canvas"),o=i.getContext("2d");return a(),{draw:r}}function i(e,t){function n(e){if(x&&x.average){v+=e,C++;var t=performance.now();t-w>=(x.avgMs||1e3)&&(g=v/C,v=0,w=t,C=0)}}function r(){d=performance.now(),s.userTimingAPI&&performance.mark(f+"-start"),I=!0}function i(){p=performance.now()-d,s.userTimingAPI&&(performance.mark(f+"-end"),I&&performance.measure(f,f+"-start",f+"-end")),n(p)}function o(){i(),r()}function c(){var e=x&&x.average?g:p;b.nodeValue=Math.round(100*e)/100;var t=x&&(x.below&&p<x.below||x.over&&p>x.over);N.draw(p,t),y.className=t?"rs-counter-base alarm":"rs-counter-base"}function l(){var e=performance.now(),t=e-d;h++,t>1e3&&(p=x&&x.interpolate===!1?h:1e3*h/t,h=0,d=e,n(p))}function u(e){p=e,n(p)}var d,f=e,p=0,h=0,g=0,v=0,w=performance.now(),C=0,y=document.createElement("div"),E=document.createElement("span"),S=document.createElement("div"),b=document.createTextNode(""),x=s?s.values[f.toLowerCase()]:null,N=new a(y,f,x),I=!1;return E.className="rs-counter-id",E.textContent=x&&x.caption?x.caption:f,S.className="rs-counter-value",S.appendChild(b),y.appendChild(E),y.appendChild(S),t?t.div.appendChild(y):m.appendChild(y),d=performance.now(),{set:u,start:r,tick:o,end:i,frame:l,value:function(){return p},draw:c}}function o(e){var n=e.toLowerCase();if(void 0===n&&(n="default"),w[n])return w[n];var a=null;s&&s.groups&&t(s.groups,function(e){var t=s.groups[parseInt(e,10)];a||t.values.indexOf(n.toLowerCase())===-1||(a=t)});var r=new i(n,a);return w[n]=r,r}function c(){if(s.plugins){s.values||(s.values={}),s.groups||(s.groups=[]),s.fractions||(s.fractions=[]);for(var e=0;e<s.plugins.length;e++)s.plugins[e].attach(o),t(s.plugins[e].values,function(t){s.values[t]=s.plugins[e].values[t]}),s.groups=s.groups.concat(s.plugins[e].groups),s.fractions=s.fractions.concat(s.plugins[e].fractions)}else s.plugins={};h=document.createElement("div"),h.className="rs-base",m=document.createElement("div"),m.className="rs-container",m.style.height="auto",h.appendChild(m),document.body.appendChild(h),s&&(s.groups&&t(s.groups,function(e){var t=s.groups[parseInt(e,10)],n=document.createElement("div");n.className="rs-group",t.div=n;var a=document.createElement("h1");a.textContent=t.caption,a.addEventListener("click",function(e){this.classList.toggle("hidden"),e.preventDefault()}.bind(n)),m.appendChild(a),m.appendChild(n)}),s.fractions&&t(s.fractions,function(e){var n=s.fractions[parseInt(e,10)],a=document.createElement("div");a.className="rs-fraction";var i=document.createElement("div");i.className="rs-legend";var o=0;t(s.fractions[e].steps,function(t){var n=document.createElement("p");n.textContent=s.fractions[e].steps[t],n.style.color=u[o],i.appendChild(n),o++}),a.appendChild(i),a.style.height=o*g+"px",n.div=a;var c=new r(a,o);n.graph=c,m.appendChild(a)}))}function l(){t(s.plugins,function(e){s.plugins[e].update()}),t(w,function(e){w[e].draw()}),s&&s.fractions&&t(s.fractions,function(e){var n=s.fractions[parseInt(e,10)],a=[],r=w[n.base.toLowerCase()];r&&(r=r.value(),t(s.fractions[e].steps,function(t){var n=s.fractions[e].steps[parseInt(t,10)].toLowerCase(),i=w[n];i&&a.push(i.value()/r)})),n.graph.draw(a)})}var s=e||{},u=s.colours||["#850700","#c74900","#fcb300","#284280","#4c7c0c"],d="https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300",f=(s.CSSPath?s.CSSPath:"")+"rStats.css",p=s.css||[d,f];p.forEach(function(e){n(e)}),s.values||(s.values={});var h,m,g=10,v=200,w={};return c(),function(e){return e?o(e):{element:h,update:l}}},"object"==typeof module&&(module.exports=window.rStats);\n},{}],181:[function(_dereq_,module,exports){\nvar Util={};Util.base64=function(e,i){return"data:"+e+";base64,"+i},Util.isMobile=function(){var e=!1;return function(i){(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(i)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(i.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e},Util.isIOS=function(){return/(iPad|iPhone|iPod)/g.test(navigator.userAgent)},Util.isIFrame=function(){try{return window.self!==window.top}catch(e){return!0}},Util.appendQueryParameter=function(e,i,t){var a=e.indexOf("?")<0?"?":"&";return e+=a+i+"="+t},Util.getQueryParameter=function(e){e=e.replace(/[\\[]/,"\\\\[").replace(/[\\]]/,"\\\\]");var i=new RegExp("[\\\\?&]"+e+"=([^&#]*)"),t=i.exec(location.search);return null===t?"":decodeURIComponent(t[1].replace(/\\+/g," "))},Util.isLandscapeMode=function(){return 90==window.orientation||window.orientation==-90},module.exports=Util;\n},{}],182:[function(_dereq_,module,exports){\nfunction AndroidWakeLock(){var A=document.createElement("video");A.addEventListener("ended",function(){A.play()}),this.request=function(){A.paused&&(A.src=Util.base64("video/webm","GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4ECQoWBAhhTgGcBAAAAAAAH4xFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsggfG7AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU2LjQwLjEwMVdBjUxhdmY1Ni40MC4xMDFzpJAGSJTMbsLpDt/ySkipgX1fRImIQO1MAAAAAAAWVK5rAQAAAAAAADuuAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDmDgQEj44OEO5rKAOABAAAAAAAABrCBsLqBkB9DtnUBAAAAAAAAo+eBAKOmgQAAgKJJg0IAAV4BHsAHBIODCoAACmH2MAAAZxgz4dPSTFi5JACjloED6ACmAECSnABMQAADYAAAWi0quoCjloEH0ACmAECSnABNwAADYAAAWi0quoCjloELuACmAECSnABNgAADYAAAWi0quoCjloEPoACmAECSnABNYAADYAAAWi0quoCjloETiACmAECSnABNIAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTnghdwo5aBAAAApgBAkpwATOAAA2AAAFotKrqAo5aBA+gApgBAkpwATMAAA2AAAFotKrqAo5aBB9AApgBAkpwATIAAA2AAAFotKrqAo5aBC7gApgBAkpwATEAAA2AAAFotKrqAo5aBD6AApgDAkpwAQ2AAA2AAAFotKrqAo5aBE4gApgBAkpwATCAAA2AAAFotKrqAH0O2dQEAAAAAAACU54Iu4KOWgQAAAKYAQJKcAEvAAANgAABaLSq6gKOWgQPoAKYAQJKcAEtgAANgAABaLSq6gKOWgQfQAKYAQJKcAEsAAANgAABaLSq6gKOWgQu4AKYAQJKcAEqAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEogAANgAABaLSq6gKOWgROIAKYAQJKcAEnAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCRlCjloEAAACmAECSnABJgAADYAAAWi0quoCjloED6ACmAECSnABJIAADYAAAWi0quoCjloEH0ACmAMCSnABDYAADYAAAWi0quoCjloELuACmAECSnABI4AADYAAAWi0quoCjloEPoACmAECSnABIoAADYAAAWi0quoCjloETiACmAECSnABIYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngl3Ao5aBAAAApgBAkpwASCAAA2AAAFotKrqAo5aBA+gApgBAkpwASAAAA2AAAFotKrqAo5aBB9AApgBAkpwAR8AAA2AAAFotKrqAo5aBC7gApgBAkpwAR4AAA2AAAFotKrqAo5aBD6AApgBAkpwAR2AAA2AAAFotKrqAo5aBE4gApgBAkpwARyAAA2AAAFotKrqAH0O2dQEAAAAAAACU54J1MKOWgQAAAKYAwJKcAENgAANgAABaLSq6gKOWgQPoAKYAQJKcAEbgAANgAABaLSq6gKOWgQfQAKYAQJKcAEagAANgAABaLSq6gKOWgQu4AKYAQJKcAEaAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEZAAANgAABaLSq6gKOWgROIAKYAQJKcAEYAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCjKCjloEAAACmAECSnABF4AADYAAAWi0quoCjloED6ACmAECSnABFwAADYAAAWi0quoCjloEH0ACmAECSnABFoAADYAAAWi0quoCjloELuACmAECSnABFgAADYAAAWi0quoCjloEPoACmAMCSnABDYAADYAAAWi0quoCjloETiACmAECSnABFYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngqQQo5aBAAAApgBAkpwARUAAA2AAAFotKrqAo5aBA+gApgBAkpwARSAAA2AAAFotKrqAo5aBB9AApgBAkpwARQAAA2AAAFotKrqAo5aBC7gApgBAkpwARQAAA2AAAFotKrqAo5aBD6AApgBAkpwAROAAA2AAAFotKrqAo5aBE4gApgBAkpwARMAAA2AAAFotKrqAH0O2dQEAAAAAAACU54K7gKOWgQAAAKYAQJKcAESgAANgAABaLSq6gKOWgQPoAKYAQJKcAESAAANgAABaLSq6gKOWgQfQAKYAwJKcAENgAANgAABaLSq6gKOWgQu4AKYAQJKcAERgAANgAABaLSq6gKOWgQ+gAKYAQJKcAERAAANgAABaLSq6gKOWgROIAKYAQJKcAEQgAANgAABaLSq6gB9DtnUBAAAAAAAAlOeC0vCjloEAAACmAECSnABEIAADYAAAWi0quoCjloED6ACmAECSnABEAAADYAAAWi0quoCjloEH0ACmAECSnABD4AADYAAAWi0quoCjloELuACmAECSnABDwAADYAAAWi0quoCjloEPoACmAECSnABDoAADYAAAWi0quoCjloETiACmAECSnABDgAADYAAAWi0quoAcU7trAQAAAAAAABG7j7OBALeK94EB8YIBd/CBAw=="),A.play())},this.release=function(){A.pause(),A.src=""}}function iOSWakeLock(){var A=null;this.request=function(){A||(A=setInterval(function(){window.location=window.location,setTimeout(window.stop,0)},3e4))},this.release=function(){A&&(clearInterval(A),A=null)}}function getWakeLock(){var A=navigator.userAgent||navigator.vendor||window.opera;return A.match(/iPhone/i)||A.match(/iPod/i)?iOSWakeLock:AndroidWakeLock}var Util=_dereq_("./util.js");module.exports=getWakeLock();\n},{"./util.js":181}]},{},[147])(147)\n});\n\n\n//# sourceMappingURL=aframe-master.min.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(23).setImmediate))//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports){eval('(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:false};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.loaded=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p="";return __webpack_require__(0)})([function(module,exports){var Clubber=function(config){if(!config)config={};this.context=config.context||new(window.AudioContext||window.webkitAudioContext);var analyser=config.analyser||this.context.createAnalyser();analyser.fftSize=config.analyser?config.analyser.fftSize:config.size||2048;config.mute=config.analyser?true:config.mute;Object.defineProperty(this,"smoothing",{get:function(){return analyser.smoothingTimeConstant},set:function(value){analyser.smoothingTimeConstant=value}});Object.defineProperty(this,"muted",{get:function(){return this._muted},set:function(value){if(!this.analyser)return true;if(this._muted){if(value===false){this.analyser.connect(this.context.destination);this._muted=false}}else if(value===true){this.analyser.disconnect(this.context.destination);this._muted=true}}});this.analyser=analyser;this.bufferLength=this.analyser.frequencyBinCount;if(!config.mute){this.analyser.connect(this.context.destination)}this.muted=config.mute;this.data=new Uint8Array(this.bufferLength);this.keys=new Uint8Array(this.bufferLength);this.noteSums=new Uint16Array(128);this.notes=new Uint8Array(128);this.weights=new Uint8Array(128);this.maxBin=0;var lastkey=0,idx=0;for(var i=0,inc=this.context.sampleRate/2/this.bufferLength;i<this.bufferLength;i++){var freq=(i+.5)*inc;this.maxBin=i;if(freq>13280){break}var key=Math.floor(17.3123405046*Math.log(.12231220585*freq));this.keys[i]=key;this.weights[key]++}var holeIndex=0;for(i=0;i<128;i++){if(!this.weights[i])holeIndex=i}this.holeIndex=holeIndex+1};Clubber.prototype.listen=function(obj){if(this.source){this.source.disconnect(this.analyser)}if(obj instanceof AudioNode){this.el=null;this.source=obj}else{this.el=obj;if(obj._mediaElementSource){this.source=obj._mediaElementSource}else{this.source=obj._mediaElementSource=this.context.createMediaElementSource(obj)}}this.source.connect(this.analyser)};Clubber.prototype.band=function(config){var scope=this;var parseConfig=function(config){var defaults={from:1,to:128,low:64,high:128,smooth:[.1,.1,.1,.1],adapt:[1,1,1,1],snap:.33,step:1e3/60,template:[0,1,2,3]};if(config){for(var k in defaults){if(!config[k])config[k]=defaults[k]}if(typeof config.template==="string"){var t=[];for(var i=0;i<config.template.length;i++)t.push(parseInt(config.template[i]));config.template=t}var rect={from:config.from,to:config.to,low:this.rect?this.rect.low:config.low,high:this.rect?this.rect.high:config.high};this.rect=rect;var data=new Float32Array(config.template.length);if(this.data)data.set(this.data);this.config=config;this.data=data}return this};var obj=parseConfig.call({},config);return function(output,offset){function fill(arr,output,offset){if(output){if(output instanceof Float32Array){output.set(arr,offset)}else if(Array.isArray(output)){for(var i=0;i<4;i++)output[offset+i]=arr[i]}else if(output.fromArray){output.fromArray(arr)}}}var config=obj.config,data=obj.data,rect=obj.rect;if(typeof offset==="object"){parseConfig.call(obj,offset);offset=arguments[2]}offset=offset||0;if(obj.time>scope.time){fill(data,output,offset);return rect}var s=config.smooth,snap=config.snap,idx=0,val=0,midx=0,mval=128,vsum=0,nsum=0,xsum=0,psum=0,osum=0,cnt=0;for(var i=config.from;i<config.to;i++){var V=scope.notes[i]/2;var v=Math.min(rect.high,V);if(v>=rect.low){v-=rect.low;var x=i-config.from;osum+=Math.floor(i/12)*v;nsum+=i%12*v;psum+=x*v;vsum+=v;xsum+=x;cnt++;if(V>val){idx=i;val=V}else if(v<mval){midx=i;mval=v}}}if(cnt){obj.midx=midx%12/12;obj.idx=idx%12/12;obj.avg=nsum/vsum/12}function smoothFn(v,o,f,snap){v=!v?0:v;f=f===undefined?.1:f;f=Math.min(f,snap);if(f<0){f=v>o?Math.abs(snap):-f}return f*v+(1-f)*o}var width=config.to-config.from,av=cnt?vsum/cnt:0;var height=rect.high-rect.low,_height=config.high-config.low,area=width*height;var ah=Math.min(config.high,config.low+av+config.adapt[2]*_height);var al=Math.max(config.low,config.low+av-config.adapt[0]*_height);var of=Math.floor(config.from/12),ot=Math.floor(config.to/12);val=height?Math.min(rect.high,Math.max(0,val-rect.low))/height:0;if(obj.time===undefined)obj.time=scope.time;for(var t=obj.time,step=obj.config.step,tmax=scope.time+step;t<=tmax;t+=step){config.template.forEach(function(k,i){switch(k){default:data[i]=smoothFn(obj.idx,data[i],s[i],snap);break;case 1:data[i]=smoothFn(obj.midx,data[i],s[i],snap);break;case 2:data[i]=smoothFn(obj.avg,data[i],s[i],snap);break;case 3:data[i]=smoothFn(val,data[i],s[i],snap);break;case 4:data[i]=smoothFn(cnt&&height?av/height:0,data[i],s[i],snap);break;case 5:data[i]=smoothFn(vsum?psum/vsum/width:0,data[i],s[i],snap);break;case 6:data[i]=smoothFn(vsum?(osum/vsum-of)/(ot-of):0,data[i],s[i],snap);break;case 7:data[i]=smoothFn(area?vsum/area:0,data[i],s[i],snap);break;case 8:data[i]=smoothFn((rect.high-config.low)/_height,data[i],s[i],snap);break;case 9:data[i]=smoothFn((rect.low-config.low)/_height,data[i],s[i],snap);break}});rect.high=smoothFn(ah,rect.high,config.adapt[3],snap);rect.low=smoothFn(al,rect.low,config.adapt[1],snap)}obj.time=t;fill(data,output,offset);return rect}};Clubber.prototype.update=function(time,data,isProcessed){var c=this.cache,self=this;if(!data){this.analyser.getByteFrequencyData(this.data);isProcessed=false;data=this.data}if(isProcessed){this.notes.set(data)}else{for(var i=0;i<this.notes.length;i++){this.noteSums[i]=0}for(i=0;i<this.maxBin;i++){this.noteSums[this.keys[i]]+=data[i]}var lastIndex=0,lastVal=0;for(i=0;i<this.notes.length;i++){var w=this.weights[i];if(!w)continue;var v=this.noteSums[i]/w;this.notes[i]=v;if(i>this.holeIndex)continue;var di=i-lastIndex;var dv=v-lastVal;for(var j=lastIndex?1:0;j<di;j++){this.notes[lastIndex+j]=lastVal+j*dv/di}lastVal=v;lastIndex=i}}this.time=!isNaN(parseFloat(time))?parseFloat(time):window.performance.now()};Clubber.prototype.descriptions=["Most powerful note index","Least powerfull note index","Power weighted note average","Power of the strongest note","Average power of active notes","Power weighted average midi index","Power weighted average octave index","Ratio of spectrum window area covered","Adaptive low threshold relative to bounds","Adaptive high threshold relative to bounds"];module.exports=window.Clubber=Clubber}]);\n//# sourceMappingURL=dist/clubber.min.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){eval("var require;var require;(function(f){if(true){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adapter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return require(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      default: // Unknown extensions are silently ignored.\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress); // was: relAddr\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort); // was: relPort\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  // was: channels\n  parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n       ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      params.push(param + '=' + codec.parameters[param]);\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n}\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var fpLine = lines.filter(function(line) {\n    return line.indexOf('a=fingerprint:') === 0;\n  })[0].substr(14);\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  var dtlsParameters = {\n    role: 'auto',\n    fingerprints: [{\n      algorithm: fpLine.split(' ')[0].toLowerCase(),\n      value: fpLine.split(' ')[1]\n    }]\n  };\n  return dtlsParameters;\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  caps.headerExtensions.forEach(function(extension) {\n    sdp += SDPUtils.writeExtmap(extension);\n  });\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.split(' ');\n    parts.shift();\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n        rtx: {\n          ssrc: secondarySsrc\n        }\n      };\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: secondarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(5), 10);\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  var cname;\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines an returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\nSDPUtils.writeSessionBoilerplate = function() {\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\n// Expose public methods.\nmodule.exports = SDPUtils;\n\n},{}],2:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\n// Shimming starts here.\n(function() {\n  // Utils.\n  var utils = require('./utils');\n  var logging = utils.log;\n  var browserDetails = utils.browserDetails;\n  // Export to the adapter global object visible in the browser.\n  module.exports.browserDetails = browserDetails;\n  module.exports.extractVersion = utils.extractVersion;\n  module.exports.disableLog = utils.disableLog;\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection) {\n        logging('Chrome shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia();\n      chromeShim.shimMediaStream();\n      utils.shimCreateObjectURL();\n      chromeShim.shimSourceObject();\n      chromeShim.shimPeerConnection();\n      chromeShim.shimOnTrack();\n      chromeShim.shimGetSendersWithDtmf();\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection) {\n        logging('Firefox shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia();\n      utils.shimCreateObjectURL();\n      firefoxShim.shimSourceObject();\n      firefoxShim.shimPeerConnection();\n      firefoxShim.shimOnTrack();\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection) {\n        logging('MS edge shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia();\n      utils.shimCreateObjectURL();\n      edgeShim.shimPeerConnection();\n      edgeShim.shimReplaceTrack();\n      break;\n    case 'safari':\n      if (!safariShim) {\n        logging('Safari shim is not included in this adapter release.');\n        return;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      module.exports.browserShim = safariShim;\n\n      safariShim.shimOnAddStream();\n      safariShim.shimGetUserMedia();\n      break;\n    default:\n      logging('Unsupported browser!');\n  }\n})();\n\n},{\"./chrome/chrome_shim\":3,\"./edge/edge_shim\":5,\"./firefox/firefox_shim\":8,\"./safari/safari_shim\":10,\"./utils\":11}],3:[function(require,module,exports){\n\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar logging = require('../utils.js').log;\nvar browserDetails = require('../utils.js').browserDetails;\n\nvar chromeShim = {\n  shimMediaStream: function() {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function() {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          var self = this;\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = {track: te.track};\n              event.streams = [e.stream];\n              self.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n  },\n\n  shimGetSendersWithDtmf: function() {\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in RTCPeerConnection.prototype) &&\n        'createDTMFSender' in RTCPeerConnection.prototype) {\n      RTCPeerConnection.prototype.getSenders = function() {\n        return this._senders;\n      };\n      var origAddStream = RTCPeerConnection.prototype.addStream;\n      var origRemoveStream = RTCPeerConnection.prototype.removeStream;\n\n      RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push({\n            track: track,\n            get dtmf() {\n              if (this._dtmf === undefined) {\n                if (track.kind === 'audio') {\n                  this._dtmf = pc.createDTMFSender(track);\n                } else {\n                  this._dtmf = null;\n                }\n              }\n              return this._dtmf;\n            }\n          });\n        });\n      };\n\n      RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    }\n  },\n\n  shimSourceObject: function() {\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function() {\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    } else {\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n      var OrigPeerConnection = RTCPeerConnection;\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (pcConfig && pcConfig.iceServers) {\n          var newIceServers = [];\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\n            var server = pcConfig.iceServers[i];\n            if (!server.hasOwnProperty('urls') &&\n                server.hasOwnProperty('url')) {\n              console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n              server = JSON.parse(JSON.stringify(server));\n              server.urls = server.url;\n              newIceServers.push(server);\n            } else {\n              newIceServers.push(pcConfig.iceServers[i]);\n            }\n          }\n          pcConfig.iceServers = newIceServers;\n        }\n        return new OrigPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n\n    var origGetStats = RTCPeerConnection.prototype.getStats;\n    RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return[key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n            arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(self, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = RTCPeerConnection.prototype[method];\n            RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var self = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(self, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = RTCPeerConnection.prototype[method];\n        RTCPeerConnection.prototype[method] = function() {\n          var self = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(self, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = RTCPeerConnection.prototype[method];\n          RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                RTCIceCandidate : RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        RTCPeerConnection.prototype.addIceCandidate;\n    RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n};\n\n\n// Expose public methods.\nmodule.exports = {\n  shimMediaStream: chromeShim.shimMediaStream,\n  shimOnTrack: chromeShim.shimOnTrack,\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\n  shimSourceObject: chromeShim.shimSourceObject,\n  shimPeerConnection: chromeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n\n},{\"../utils.js\":11,\"./getusermedia\":4}],4:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar logging = require('../utils.js').log;\nvar browserDetails = require('../utils.js').browserDetails;\n\n// Expose public methods.\nmodule.exports = function() {\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && constraints.audio) {\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 61;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        onError(shimError_(e));\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                      kind: kinds[device.kind],\n                      deviceId: device.id,\n                      groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n\n},{\"../utils.js\":11}],5:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar browserDetails = require('../utils').browserDetails;\nvar shimRTCPeerConnection = require('./rtcpeerconnection_shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function() {\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n    window.RTCPeerConnection = shimRTCPeerConnection(browserDetails.version);\n  },\n  shimReplaceTrack: function() {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender && !('replaceTrack' in RTCRtpSender.prototype)) {\n      RTCRtpSender.prototype.replaceTrack = RTCRtpSender.prototype.setTrack;\n    }\n  }\n};\n\n},{\"../utils\":11,\"./getusermedia\":6,\"./rtcpeerconnection_shim\":7}],6:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function() {\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n\n},{}],7:[function(require,module,exports){\n/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\n// sort tracks such that they follow an a-v-a-v...\n// pattern.\nfunction sortTracks(tracks) {\n  var audioTracks = tracks.filter(function(track) {\n    return track.kind === 'audio';\n  });\n  var videoTracks = tracks.filter(function(track) {\n    return track.kind === 'video';\n  });\n  tracks = [];\n  while (audioTracks.length || videoTracks.length) {\n    if (audioTracks.length) {\n      tracks.push(audioTracks.shift());\n    }\n    if (videoTracks.length) {\n      tracks.push(videoTracks.shift());\n    }\n  }\n  return tracks;\n}\n\n// Edge does not like\n// 1) stun:\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n    return false;\n  });\n}\n\nmodule.exports = function(edgeVersion) {\n  var RTCPeerConnection = function(config) {\n    var self = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          self[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.onicecandidate = null;\n    this.onaddstream = null;\n    this.ontrack = null;\n    this.onremovestream = null;\n    this.onsignalingstatechange = null;\n    this.oniceconnectionstatechange = null;\n    this.onicegatheringstatechange = null;\n    this.onnegotiationneeded = null;\n    this.ondatachannel = null;\n    this.canTrickleIceCandidates = null;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this.getLocalStreams = function() {\n      return self.localStreams;\n    };\n    this.getRemoteStreams = function() {\n      return self.remoteStreams;\n    };\n\n    this.localDescription = new RTCSessionDescription({\n      type: '',\n      sdp: ''\n    });\n    this.remoteDescription = new RTCSessionDescription({\n      type: '',\n      sdp: ''\n    });\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    this.iceOptions = {\n      gatherPolicy: 'all',\n      iceServers: []\n    };\n    if (config && config.iceTransportPolicy) {\n      switch (config.iceTransportPolicy) {\n        case 'all':\n        case 'relay':\n          this.iceOptions.gatherPolicy = config.iceTransportPolicy;\n          break;\n        default:\n          // don't set iceTransportPolicy.\n          break;\n      }\n    }\n    this.usingBundle = config && config.bundlePolicy === 'max-bundle';\n\n    if (config && config.iceServers) {\n      this.iceOptions.iceServers = filterIceServers(config.iceServers,\n          edgeVersion);\n    }\n    this._config = config || {};\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    // since the iceGatherer is currently created in createOffer but we\n    // must not emit candidates until after setLocalDescription we buffer\n    // them in this array.\n    this._localIceCandidatesBuffer = [];\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this.dispatchEvent(event);\n    if (this.onicegatheringstatechange !== null) {\n      this.onicegatheringstatechange(event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitBufferedCandidates = function() {\n    var self = this;\n    var sections = SDPUtils.splitSections(self.localDescription.sdp);\n    // FIXME: need to apply ice candidates in a way which is async but\n    // in-order\n    this._localIceCandidatesBuffer.forEach(function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      if (end) {\n        for (var j = 1; j < sections.length; j++) {\n          if (sections[j].indexOf('\\r\\na=end-of-candidates\\r\\n') === -1) {\n            sections[j] += 'a=end-of-candidates\\r\\n';\n          }\n        }\n      } else {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      }\n      self.localDescription.sdp = sections.join('');\n      self.dispatchEvent(event);\n      if (self.onicecandidate !== null) {\n        self.onicecandidate(event);\n      }\n      if (!event.candidate && self.iceGatheringState !== 'complete') {\n        var complete = self.transceivers.every(function(transceiver) {\n          return transceiver.iceGatherer &&\n              transceiver.iceGatherer.state === 'completed';\n        });\n        if (complete && self.iceGatheringStateChange !== 'complete') {\n          self.iceGatheringState = 'complete';\n          self._emitGatheringStateChange();\n        }\n      }\n    });\n    this._localIceCandidatesBuffer = [];\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    if (edgeVersion >= 15025) {\n      this.localStreams.push(stream);\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      this.localStreams.push(clonedStream);\n    }\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var idx = this.localStreams.indexOf(stream);\n    if (idx > -1) {\n      this.localStreams.splice(idx, 1);\n      this._maybeFireNegotiationNeeded();\n    }\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n  // Determines the intersection of local and remote capabilities.\n  RTCPeerConnection.prototype._getCommonCapabilities = function(\n      localCapabilities, remoteCapabilities) {\n    var commonCapabilities = {\n      codecs: [],\n      headerExtensions: [],\n      fecMechanisms: []\n    };\n\n    var findCodecByPayloadType = function(pt, codecs) {\n      pt = parseInt(pt, 10);\n      for (var i = 0; i < codecs.length; i++) {\n        if (codecs[i].payloadType === pt ||\n            codecs[i].preferredPayloadType === pt) {\n          return codecs[i];\n        }\n      }\n    };\n\n    var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n      var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n      var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n      return lCodec && rCodec &&\n          lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n    };\n\n    localCapabilities.codecs.forEach(function(lCodec) {\n      for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n        var rCodec = remoteCapabilities.codecs[i];\n        if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n            lCodec.clockRate === rCodec.clockRate) {\n          if (lCodec.name.toLowerCase() === 'rtx' &&\n              lCodec.parameters && rCodec.parameters.apt) {\n            // for RTX we need to find the local rtx that has a apt\n            // which points to the same local codec as the remote one.\n            if (!rtxCapabilityMatches(lCodec, rCodec,\n                localCapabilities.codecs, remoteCapabilities.codecs)) {\n              continue;\n            }\n          }\n          rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n          // number of channels is the highest common number of channels\n          rCodec.numChannels = Math.min(lCodec.numChannels,\n              rCodec.numChannels);\n          // push rCodec so we reply with offerer payload type\n          commonCapabilities.codecs.push(rCodec);\n\n          // determine common feedback mechanisms\n          rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n            for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n              if (lCodec.rtcpFeedback[j].type === fb.type &&\n                  lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n                return true;\n              }\n            }\n            return false;\n          });\n          // FIXME: also need to determine .parameters\n          //  see https://github.com/openpeer/ortc/issues/569\n          break;\n        }\n      }\n    });\n\n    localCapabilities.headerExtensions\n        .forEach(function(lHeaderExtension) {\n          for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n               i++) {\n            var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n            if (lHeaderExtension.uri === rHeaderExtension.uri) {\n              commonCapabilities.headerExtensions.push(rHeaderExtension);\n              break;\n            }\n          }\n        });\n\n    // FIXME: fecMechanisms\n    return commonCapabilities;\n  };\n\n  // Create ICE gatherer, ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function(mid,\n      sdpMLineIndex) {\n    var self = this;\n    var iceGatherer = new RTCIceGatherer(self.iceOptions);\n    var iceTransport = new RTCIceTransport(iceGatherer);\n    iceGatherer.onlocalcandidate = function(evt) {\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      var end = !cand || Object.keys(cand).length === 0;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === undefined) {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = iceTransport.component === 'RTCP' ? 2 : 1;\n        event.candidate.candidate = SDPUtils.writeCandidate(cand);\n      }\n\n      // update local description.\n      var sections = SDPUtils.splitSections(self.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      self.localDescription.sdp = sections.join('');\n      var transceivers = self._pendingOffer ? self._pendingOffer :\n          self.transceivers;\n      var complete = transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      // Emit candidate if localDescription is set.\n      // Also emits null candidate when all gatherers are complete.\n      switch (self.iceGatheringState) {\n        case 'new':\n          if (!end) {\n            self._localIceCandidatesBuffer.push(event);\n          }\n          if (end && complete) {\n            self._localIceCandidatesBuffer.push(\n                new Event('icecandidate'));\n          }\n          break;\n        case 'gathering':\n          self._emitBufferedCandidates();\n          if (!end) {\n            self.dispatchEvent(event);\n            if (self.onicecandidate !== null) {\n              self.onicecandidate(event);\n            }\n          }\n          if (complete) {\n            self.dispatchEvent(new Event('icecandidate'));\n            if (self.onicecandidate !== null) {\n              self.onicecandidate(new Event('icecandidate'));\n            }\n            self.iceGatheringState = 'complete';\n            self._emitGatheringStateChange();\n          }\n          break;\n        case 'complete':\n          // should not happen... currently!\n          break;\n        default: // no-op.\n          break;\n      }\n    };\n    iceTransport.onicestatechange = function() {\n      self._updateConnectionState();\n    };\n\n    var dtlsTransport = new RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      self._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      dtlsTransport.state = 'failed';\n      self._updateConnectionState();\n    };\n\n    return {\n      iceGatherer: iceGatherer,\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlssttatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = this._getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      params.encodings = transceiver.recvEncodingParameters;\n      params.rtcp = {\n        cname: transceiver.rtcpParameters.cname,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var self = this;\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // FIXME: What was the purpose of this empty if statement?\n      // if (!this._pendingOffer) {\n      // } else {\n      if (this._pendingOffer) {\n        // VERY limited support for SDP munging. Limited to:\n        // * changing the order of codecs\n        sections = SDPUtils.splitSections(description.sdp);\n        sessionpart = sections.shift();\n        sections.forEach(function(mediaSection, sdpMLineIndex) {\n          var caps = SDPUtils.parseRtpParameters(mediaSection);\n          self._pendingOffer[sdpMLineIndex].localCapabilities = caps;\n        });\n        this.transceivers = this._pendingOffer;\n        delete this._pendingOffer;\n      }\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(self.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = self.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        var rejected = SDPUtils.isRejected(mediaSection);\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!self.usingBundle || sdpMLineIndex === 0) {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                isIceLite ? 'controlling' : 'controlled');\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n\n          // Calculate intersection of capabilities.\n          var params = self._getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          self._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    this.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    switch (description.type) {\n      case 'offer':\n        this._updateSignalingState('have-local-offer');\n        break;\n      case 'answer':\n        this._updateSignalingState('stable');\n        break;\n      default:\n        throw new TypeError('unsupported type \"' + description.type +\n            '\"');\n    }\n\n    // If a success callback was provided, emit ICE candidates after it\n    // has been executed. Otherwise, emit callback after the Promise is\n    // resolved.\n    var hasCallback = arguments.length > 1 &&\n      typeof arguments[1] === 'function';\n    if (hasCallback) {\n      var cb = arguments[1];\n      window.setTimeout(function() {\n        cb();\n        if (self.iceGatheringState === 'new') {\n          self.iceGatheringState = 'gathering';\n          self._emitGatheringStateChange();\n        }\n        self._emitBufferedCandidates();\n      }, 0);\n    }\n    var p = Promise.resolve();\n    p.then(function() {\n      if (!hasCallback) {\n        if (self.iceGatheringState === 'new') {\n          self.iceGatheringState = 'gathering';\n          self._emitGatheringStateChange();\n        }\n        // Usually candidates will be emitted earlier.\n        window.setTimeout(self._emitBufferedCandidates.bind(self), 500);\n      }\n    });\n    return p;\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var self = this;\n    var streams = {};\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      this.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      this.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      var rejected = SDPUtils.isRejected(mediaSection);\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        self.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpSender;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === '1';\n          });\n      if (description.type === 'offer' && !rejected) {\n        var transports = usingBundle && sdpMLineIndex > 0 ? {\n          iceGatherer: self.transceivers[0].iceGatherer,\n          iceTransport: self.transceivers[0].iceTransport,\n          dtlsTransport: self.transceivers[0].dtlsTransport\n        } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n        if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n          transports.iceTransport.setRemoteCandidates(cands);\n        }\n\n        localCapabilities = RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport,\n              kind);\n\n          track = rtpReceiver.track;\n          // FIXME: does not work with Plan B.\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new MediaStream();\n              Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                get: function() {\n                  return remoteMsid.stream;\n                }\n              });\n            }\n            Object.defineProperty(track, 'id', {\n              get: function() {\n                return remoteMsid.track;\n              }\n            });\n            streams[remoteMsid.stream].addTrack(track);\n            receiverList.push([track, rtpReceiver,\n                streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new MediaStream();\n            }\n            streams.default.addTrack(track);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        }\n\n        self.transceivers[sdpMLineIndex] = {\n          iceGatherer: transports.iceGatherer,\n          iceTransport: transports.iceTransport,\n          dtlsTransport: transports.dtlsTransport,\n          localCapabilities: localCapabilities,\n          remoteCapabilities: remoteCapabilities,\n          rtpSender: rtpSender,\n          rtpReceiver: rtpReceiver,\n          kind: kind,\n          mid: mid,\n          rtcpParameters: rtcpParameters,\n          sendEncodingParameters: sendEncodingParameters,\n          recvEncodingParameters: recvEncodingParameters\n        };\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        self._transceive(self.transceivers[sdpMLineIndex],\n            false,\n            direction === 'sendrecv' || direction === 'sendonly');\n      } else if (description.type === 'answer' && !rejected) {\n        if (usingBundle && sdpMLineIndex > 0) {\n          self._disposeIceAndDtlsTransports(sdpMLineIndex);\n          self.transceivers[sdpMLineIndex].iceGatherer =\n              self.transceivers[0].iceGatherer;\n          self.transceivers[sdpMLineIndex].iceTransport =\n              self.transceivers[0].iceTransport;\n          self.transceivers[sdpMLineIndex].dtlsTransport =\n              self.transceivers[0].dtlsTransport;\n          if (self.transceivers[sdpMLineIndex].rtpSender) {\n            self.transceivers[sdpMLineIndex].rtpSender.setTransport(\n                self.transceivers[0].dtlsTransport);\n          }\n          if (self.transceivers[sdpMLineIndex].rtpReceiver) {\n            self.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n                self.transceivers[0].dtlsTransport);\n          }\n        }\n        transceiver = self.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpSender = transceiver.rtpSender;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        self.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        self.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        self.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if ((isIceLite || isComplete) && cands.length) {\n          iceTransport.setRemoteCandidates(cands);\n        }\n        if (!usingBundle || sdpMLineIndex === 0) {\n          iceTransport.start(iceGatherer, remoteIceParameters,\n              'controlling');\n          dtlsTransport.start(remoteDtlsParameters);\n        }\n\n        self._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new MediaStream();\n            }\n            streams[remoteMsid.stream].addTrack(track);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new MediaStream();\n            }\n            streams.default.addTrack(track);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n    this.usingBundle = usingBundle;\n\n    this.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    switch (description.type) {\n      case 'offer':\n        this._updateSignalingState('have-remote-offer');\n        break;\n      case 'answer':\n        this._updateSignalingState('stable');\n        break;\n      default:\n        throw new TypeError('unsupported type \"' + description.type +\n            '\"');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        self.remoteStreams.push(stream);\n        var event = new Event('addstream');\n        event.stream = stream;\n        self.dispatchEvent(event);\n        if (self.onaddstream !== null) {\n          window.setTimeout(function() {\n            self.onaddstream(event);\n          }, 0);\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          var trackEvent = new Event('track');\n          trackEvent.track = track;\n          trackEvent.receiver = receiver;\n          trackEvent.streams = [stream];\n          self.dispatchEvent(trackEvent);\n          if (self.ontrack !== null) {\n            window.setTimeout(function() {\n              self.ontrack(trackEvent);\n            }, 0);\n          }\n        });\n      }\n    });\n    if (arguments.length > 1 && typeof arguments[1] === 'function') {\n      window.setTimeout(arguments[1], 0);\n    }\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this.dispatchEvent(event);\n    if (this.onsignalingstatechange !== null) {\n      this.onsignalingstatechange(event);\n    }\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    // Fire away (for now).\n    var event = new Event('negotiationneeded');\n    this.dispatchEvent(event);\n    if (this.onnegotiationneeded !== null) {\n      this.onnegotiationneeded(event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var self = this;\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== self.iceConnectionState) {\n      self.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this.dispatchEvent(event);\n      if (this.oniceconnectionstatechange !== null) {\n        this.oniceconnectionstatechange(event);\n      }\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var self = this;\n    if (this._pendingOffer) {\n      throw new Error('createOffer called while there is a pending offer.');\n    }\n    var offerOptions;\n    if (arguments.length === 1 && typeof arguments[0] !== 'function') {\n      offerOptions = arguments[0];\n    } else if (arguments.length === 3) {\n      offerOptions = arguments[2];\n    }\n\n    var tracks = [];\n    var numAudioTracks = 0;\n    var numVideoTracks = 0;\n    // Default to sendrecv.\n    if (this.localStreams.length) {\n      numAudioTracks = this.localStreams.reduce(function(numTracks, stream) {\n        return numTracks + stream.getAudioTracks().length;\n      }, 0);\n      numVideoTracks = this.localStreams.reduce(function(numTracks, stream) {\n        return numTracks + stream.getVideoTracks().length;\n      }, 0);\n    }\n    // Determine number of audio and video tracks we need to send/recv.\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    // Push local streams.\n    this.localStreams.forEach(function(localStream) {\n      localStream.getTracks().forEach(function(track) {\n        tracks.push({\n          kind: track.kind,\n          track: track,\n          stream: localStream,\n          wantReceive: track.kind === 'audio' ?\n              numAudioTracks > 0 : numVideoTracks > 0\n        });\n        if (track.kind === 'audio') {\n          numAudioTracks--;\n        } else if (track.kind === 'video') {\n          numVideoTracks--;\n        }\n      });\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        tracks.push({\n          kind: 'audio',\n          wantReceive: true\n        });\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        tracks.push({\n          kind: 'video',\n          wantReceive: true\n        });\n        numVideoTracks--;\n      }\n    }\n    // reorder tracks\n    tracks = sortTracks(tracks);\n\n    var sdp = SDPUtils.writeSessionBoilerplate();\n    var transceivers = [];\n    tracks.forEach(function(mline, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = mline.track;\n      var kind = mline.kind;\n      var mid = SDPUtils.generateIdentifier();\n\n      var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n        iceGatherer: transceivers[0].iceGatherer,\n        iceTransport: transceivers[0].iceTransport,\n        dtlsTransport: transceivers[0].dtlsTransport\n      } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n      var localCapabilities = RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n      });\n\n      var rtpSender;\n      var rtpReceiver;\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video') {\n          sendEncodingParameters[0].rtx = {\n            ssrc: (2 * sdpMLineIndex + 1) * 1001 + 1\n          };\n        }\n        rtpSender = new RTCRtpSender(track, transports.dtlsTransport);\n      }\n\n      if (mline.wantReceive) {\n        rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n      }\n\n      transceivers[sdpMLineIndex] = {\n        iceGatherer: transports.iceGatherer,\n        iceTransport: transports.iceTransport,\n        dtlsTransport: transports.dtlsTransport,\n        localCapabilities: localCapabilities,\n        remoteCapabilities: null,\n        rtpSender: rtpSender,\n        rtpReceiver: rtpReceiver,\n        kind: kind,\n        mid: mid,\n        sendEncodingParameters: sendEncodingParameters,\n        recvEncodingParameters: null\n      };\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (this._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    tracks.forEach(function(mline, sdpMLineIndex) {\n      var transceiver = transceivers[sdpMLineIndex];\n      sdp += SDPUtils.writeMediaSection(transceiver,\n          transceiver.localCapabilities, 'offer', mline.stream);\n      sdp += 'a=rtcp-rsize\\r\\n';\n    });\n\n    this._pendingOffer = transceivers;\n    var desc = new RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    if (arguments.length && typeof arguments[0] === 'function') {\n      window.setTimeout(arguments[0], 0, desc);\n    }\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var self = this;\n\n    var sdp = SDPUtils.writeSessionBoilerplate();\n    if (this.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (self.localStreams.length > 0 &&\n          self.localStreams[0].getTracks().length >= sdpMLineIndex) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = self.localStreams[0].getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = self.localStreams[0].getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video') {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: (2 * sdpMLineIndex + 2) * 1001 + 1\n            };\n          }\n          transceiver.rtpSender = new RTCRtpSender(localTrack,\n              transceiver.dtlsTransport);\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = self._getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += SDPUtils.writeMediaSection(transceiver, commonCapabilities,\n          'answer', self.localStreams[0]);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    if (arguments.length && typeof arguments[0] === 'function') {\n      window.setTimeout(arguments[0], 0, desc);\n    }\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    if (!candidate) {\n      for (var j = 0; j < this.transceivers.length; j++) {\n        this.transceivers[j].iceTransport.addRemoteCandidate({});\n        if (this.usingBundle) {\n          return Promise.resolve();\n        }\n      }\n    } else {\n      var mLineIndex = candidate.sdpMLineIndex;\n      if (candidate.sdpMid) {\n        for (var i = 0; i < this.transceivers.length; i++) {\n          if (this.transceivers[i].mid === candidate.sdpMid) {\n            mLineIndex = i;\n            break;\n          }\n        }\n      }\n      var transceiver = this.transceivers[mLineIndex];\n      if (transceiver) {\n        var cand = Object.keys(candidate.candidate).length > 0 ?\n            SDPUtils.parseCandidate(candidate.candidate) : {};\n        // Ignore Chrome's invalid candidates since Edge does not like them.\n        if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n          return Promise.resolve();\n        }\n        // Ignore RTCP candidates, we assume RTCP-MUX.\n        if (cand.component !== '1') {\n          return Promise.resolve();\n        }\n        transceiver.iceTransport.addRemoteCandidate(cand);\n\n        // update the remoteDescription.\n        var sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n        sections[mLineIndex + 1] += (cand.type ? candidate.candidate.trim()\n            : 'a=end-of-candidates') + '\\r\\n';\n        this.remoteDescription.sdp = sections.join('');\n      }\n    }\n    if (arguments.length > 1 && typeof arguments[1] === 'function') {\n      window.setTimeout(arguments[1], 0);\n    }\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\n        arguments[1];\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        if (cb) {\n          window.setTimeout(cb, 0, results);\n        }\n        resolve(results);\n      });\n    });\n  };\n  return RTCPeerConnection;\n};\n\n},{\"sdp\":1}],8:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar browserDetails = require('../utils').browserDetails;\n\nvar firefoxShim = {\n  shimOnTrack: function() {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function() {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function() {\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = mozRTCSessionDescription;\n      window.RTCIceCandidate = mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = RTCPeerConnection.prototype[method];\n          RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                RTCIceCandidate : RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        RTCPeerConnection.prototype.addIceCandidate;\n    RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = RTCPeerConnection.prototype.getStats;\n    RTCPeerConnection.prototype.getStats = function(selector, onSucc, onErr) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimOnTrack: firefoxShim.shimOnTrack,\n  shimSourceObject: firefoxShim.shimSourceObject,\n  shimPeerConnection: firefoxShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n\n},{\"../utils\":11,\"./getusermedia\":9}],9:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logging = require('../utils').log;\nvar browserDetails = require('../utils').browserDetails;\n\n// Expose public methods.\nmodule.exports = function() {\n  var shimError_ = function(e) {\n    return {\n      name: {\n        NotSupportedError: 'TypeError',\n        SecurityError: 'NotAllowedError',\n        PermissionDeniedError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    console.warn('navigator.getUserMedia has been replaced by ' +\n                 'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n\n},{\"../utils\":11}],10:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar safariShim = {\n  // TODO: DrAlex, should be here, double check against LayoutTests\n\n  // TODO: once the back-end for the mac port is done, add.\n  // TODO: check for webkitGTK+\n  // shimPeerConnection: function() { },\n\n  shimOnAddStream: function() {\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n            this.removeEventListener('track', this._onaddstreampoly);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            var stream = e.streams[0];\n            if (!this._streams) {\n              this._streams = [];\n            }\n            if (this._streams.indexOf(stream) >= 0) {\n              return;\n            }\n            this._streams.push(stream);\n            var event = new Event('addstream');\n            event.stream = e.streams[0];\n            this.dispatchEvent(event);\n          }.bind(this));\n        }\n      });\n    }\n  },\n\n  shimGetUserMedia: function() {\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimOnAddStream: safariShim.shimOnAddStream,\n  shimGetUserMedia: safariShim.shimGetUserMedia\n  // TODO\n  // shimPeerConnection: safariShim.shimPeerConnection\n};\n\n},{}],11:[function(require,module,exports){\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\n\n// Utility methods.\nvar utils = {\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Extract browser version out of the provided user agent string.\n   *\n   * @param {!string} uastring userAgent string.\n   * @param {!string} expr Regular expression used as match criteria.\n   * @param {!number} pos position in the version string to be returned.\n   * @return {!number} browser version.\n   */\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function() {\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    // Firefox.\n    if (navigator.mozGetUserMedia) {\n      result.browser = 'firefox';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n      if (window.webkitRTCPeerConnection) {\n        result.browser = 'chrome';\n        result.version = this.extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\n        if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n          result.browser = 'safari';\n          result.version = this.extractVersion(navigator.userAgent,\n            /AppleWebKit\\/(\\d+)\\./, 1);\n        } else { // unknown webkit-based browser.\n          result.browser = 'Unsupported webkit-based browser ' +\n              'with GUM support but no WebRTC support.';\n          return result;\n        }\n      }\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n        // Safari, with webkitGetUserMedia removed.\n      result.browser = 'safari';\n      result.version = this.extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function() {\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        console.log('URL.createObjectURL(stream) is deprecated! ' +\n                    'Use elem.srcObject = stream instead!');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = HTMLMediaElement.prototype.setAttribute;\n    HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  }\n};\n\n// Export.\nmodule.exports = {\n  log: utils.log,\n  disableLog: utils.disableLog,\n  browserDetails: utils.detectBrowser(),\n  extractVersion: utils.extractVersion,\n  shimCreateObjectURL: utils.shimCreateObjectURL,\n  detectBrowser: utils.detectBrowser.bind(utils)\n};\n\n},{}]},{},[2])(2)\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    "use strict";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== "function") {\n        callback = new Function("" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."\n        // So if we\'re currently running a task, we\'ll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // "too much recursion" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can\'t be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage("", "*");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = "setImmediate$" + Math.random() + "$";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === "string" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener("message", onGlobalMessage, false);\n        } else {\n            global.attachEvent("onmessage", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, "*");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\'s been called.\n            var script = doc.createElement("script");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don\'t get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === "[object process]") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && "onreadystatechange" in doc.createElement("script")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(17)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports){eval('module.exports = "\\n  #ifdef GL_ES\\n    precision mediump float;\\n  #endif\\n\\n  //uniforms\\n\\n  uniform float time;\\n  uniform sampler2D map;\\n  uniform vec2 resolution;\\n\\n  //clubber\\n  uniform vec4 iMusic1;\\n  uniform vec4 iMusic2;\\n  uniform vec4 iMusic3;\\n\\n  varying vec2 vUv;\\n\\n  //constants\\n\\n  #define GAMMA 1.0\\n\\n  #define PI 3.14159265358979\\n\\n  #define BASE_COL vec3(1., 1., 1.)\\n\\n  #define BLACK vec3(0., 0., 0.)\\n\\n  #define WHITE vec3(1., 1., 1.)\\n\\n  //get texel\\n  #define tx( map, uv, lod) (texture2D( map, uv, lod) )\\n\\n  //get luma from texel\\n  #define luma( t ) ( 0.2126*t.x + 0.7152*t.y + 0.0722*t.z )\\n\\n  //short for vec2 resolution\\n  #define res resolution.xy\\n\\n  //iq random stuff\\n\\n  mat2 rot2d(float angle){\\n      return mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\\n  }\\n\\n  float r(float a, float b){return fract(sin(dot(vec2(a,b),vec2(12.9898,78.233)))*43758.5453);}\\n\\n  float h(float a){return fract(sin(dot(a,dot(12.9898,78.233)))*43758.5453);}\\n\\n  float noise(vec3 x){\\n      vec3 p  = floor(x);\\n      vec3 f  = fract(x);\\n      f       = f*f*(3.0-2.0*f);\\n      float n = p.x + p.y*57.0 + 113.0*p.z;\\n      return mix(mix(mix( h(n+0.0), h(n+1.0),f.x),\\n                     mix( h(n+57.0), h(n+58.0),f.x),f.y),\\n                 mix(mix( h(n+113.0), h(n+114.0),f.x),\\n                     mix( h(n+170.0), h(n+171.0),f.x),f.y),f.z);\\n  }\\n\\n  // http://www.iquilezles.org/www/articles/morenoise/morenoise.htm\\n  // http://www.pouet.net/topic.php?post=401468\\n\\n  vec3 dnoise2f(vec2 p){\\n      float i = floor(p.x), j = floor(p.y);\\n      float u = p.x-i, v = p.y-j;\\n      float du = 30.*u*u*(u*(u-2.)+1.);\\n      float dv = 30.*v*v*(v*(v-2.)+1.);\\n      u=u*u*u*(u*(u*6.-15.)+10.);\\n      v=v*v*v*(v*(v*6.-15.)+10.);\\n      float a = r(i,     j    );\\n      float b = r(i+1.0, j    );\\n      float c = r(i,     j+1.0);\\n      float d = r(i+1.0, j+1.0);\\n      float k0 = a;\\n      float k1 = b-a;\\n      float k2 = c-a;\\n      float k3 = a-b-c+d;\\n      return vec3(k0 + k1*u + k2*v + k3*u*v,\\n                  du*(k1 + k3*v),\\n                  dv*(k2 + k3*u));\\n  }\\n\\n  float fbm(vec2 uv, float time){\\n      vec2 p = uv;\\n      float f, dx, dz, w = 0.5;\\n      f = dx = dz = 0.0;\\n      for(int i = 0; i < 28; ++i){\\n          vec3 n = dnoise2f(uv);\\n          dx += n.y;\\n          dz += n.z;\\n          f += w * n.x / (1.0 + dx*dx + dz*dz);\\n          w *= 0.86;\\n          uv *= vec2(1.16);\\n          uv *= rot2d(1.25*noise(vec3(p*0.1, 0.12*time))+\\n                      0.75*noise(vec3(p*0.1, 0.20*time)));\\n      }\\n      return f;\\n  }\\n\\n  float fbmLow(vec2 uv){\\n      float f, dx, dz, w = 0.5;\\n      f = dx = dz = 0.0;\\n      for(int i = 0; i < 4; ++i){\\n          vec3 n = dnoise2f(uv);\\n          dx += n.y;\\n          dz += n.z;\\n          f += w * n.x / (1.0 + dx*dx + dz*dz);\\n          w *= 0.75;\\n          uv *= vec2(1.5);\\n      }\\n      return f;\\n  }\\n\\n  //end iq\\n\\n  float aastep(float threshold, float value) {\\n      float afwidth = 0.95 * length( vec2(dFdx(value), dFdy(value)) );\\n      return smoothstep( threshold-afwidth, threshold+afwidth, value);\\n  }\\n\\n  //get texel\\n  vec4 tex(sampler2D map, vec2 uv, float lod)\\n  {\\n      vec4 e= smoothstep( vec4(-0.15), vec4(.15), vec4(uv, vec2(1)-uv) ) ;\\n      float mask=e.x*e.y*e.z*e.w;\\n      return tx(map, uv, lod) * mask;\\n  }\\n\\n  //rotation\\n  vec2 rot(vec2 vec, float angle) {\\n      float c, s ;\\n      s = sin(angle);\\n      c = cos(angle);\\n      return mat2(c, s, -s, c) * vec;\\n  }\\n\\n  // MAIN\\n\\n  void main(){\\n\\n     vec2 uv = vUv;\\n     vec3 col;\\n     float t = time * .005;\\n\\n    //get px\\n     vec4 texel = tex(map, uv, 10.);\\n\\n     //get luma\\n     float lum = luma( texel );\\n\\n      //0 * Most powerful note index\\n      //1   Least powerfull note index\\n      //2   Power weighted note average\\n      //3 * Power of the strongest note\\n      //4   Average power of active notes\\n      //5   Power weighted average midi index\\n      //6 * Power weighted average octave index\\n      //7   Ratio of spectrum window area covered\\n      //8   Adaptive low threshold relative to bounds\\n      //9   Adaptive high threshold relative to bounds\\n\\n     //iMusic1: 1-32hz, templ.4560  - xyzw\\n     //iMusic2: 32-48hz, templ.4560 - xyzw\\n     //iMusic3: 48-96hz, templ.0124 - xyzw\\n\\n     //clubber mods\\n     float m0 = 1.0 * mix( iMusic1.w*iMusic2.y, iMusic3.z, iMusic3.w);\\n     float m1 = mix( iMusic1.x, iMusic1.y, time * .05);\\n     float m2 = mix( iMusic1.x, iMusic2.y, time * .15);\\n\\n     //noise\\n     //float n = fbm( uv*vec2( .35, m1*m0 ), time * .05);\\n     float n =  .05 * fbmLow( vec2( uv.x, uv.y*m2) );\\n     //n += .05 * fbmLow( vec2(uv.x, uv.y*m2) );\\n\\n     //nb: radiants (90° =  PI/2 = 1.57)\\n     float mm =  PI * cos( t*t ) ;\\n     vec2 dith = rot( gl_FragCoord.xy, mm );\\n\\n     //amplitude\\n     float amp= mix( 5., 1., (1. + n*n)*cos(time * 0.055) );\\n\\n     //density\\n     float density = (30. + 15. * sin( exp(cos( time* .0015 )) * 2.) );\\n     float k= (dith.y + n + dith.y*n) / density;\\n\\n     float line = aastep( mod( k, amp ), lum ) * lum;\\n\\n     //out\\n     float c =  1. - pow( line , GAMMA );\\n\\n     gl_FragColor = vec4( vec3(c), 1.0);\\n\\n  }\\n"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hhZGVycy9zaGVwYXJkLWZzLmdsc2w/YTUyNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnRUFBZ0UsbURBQW1ELDBCQUEwQiw0QkFBNEIsd0NBQXdDLHlCQUF5Qix5QkFBeUIsdUJBQXVCLDhjQUE4YyxrRUFBa0UsS0FBSyxnQ0FBZ0MsbUVBQW1FLHVCQUF1QiwwREFBMEQsMEJBQTBCLDJCQUEyQiwyQkFBMkIsa0NBQWtDLDZDQUE2Qyx5T0FBeU8sS0FBSyxvSkFBb0osNkNBQTZDLG1DQUFtQyx5Q0FBeUMseUNBQXlDLG1DQUFtQyxtQ0FBbUMsa0NBQWtDLGtDQUFrQyxrQ0FBa0Msa0NBQWtDLHFCQUFxQix1QkFBdUIsdUJBQXVCLDJCQUEyQixxSEFBcUgsS0FBSyxxQ0FBcUMsb0JBQW9CLGlDQUFpQywwQkFBMEIsc0JBQXNCLFFBQVEsTUFBTSxrQ0FBa0Msc0JBQXNCLHNCQUFzQixpREFBaUQsc0JBQXNCLDZCQUE2Qix1SEFBdUgsU0FBUyxpQkFBaUIsS0FBSyw0QkFBNEIsaUNBQWlDLDBCQUEwQixzQkFBc0IsT0FBTyxNQUFNLGtDQUFrQyxzQkFBc0Isc0JBQXNCLGlEQUFpRCxzQkFBc0IsNEJBQTRCLFNBQVMsaUJBQWlCLEtBQUssZ0VBQWdFLHdFQUF3RSx3RUFBd0UsS0FBSyxxRUFBcUUsNEVBQTRFLG1DQUFtQyx1Q0FBdUMsS0FBSyxxREFBcUQsb0JBQW9CLHVCQUF1Qix1QkFBdUIsdUNBQXVDLEtBQUssK0JBQStCLHVCQUF1QixnQkFBZ0IsNkJBQTZCLHNEQUFzRCxvREFBb0Qsb3JCQUFvckIseURBQXlELHlEQUF5RCwyRUFBMkUsdURBQXVELGtEQUFrRCxnRkFBZ0YsOENBQThDLGtGQUFrRiwyRkFBMkYsa0RBQWtELHlEQUF5RCx5REFBeUQsNENBQTRDLE9BQU8iLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiXFxuICAjaWZkZWYgR0xfRVNcXG4gICAgcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XFxuICAjZW5kaWZcXG5cXG4gIC8vdW5pZm9ybXNcXG5cXG4gIHVuaWZvcm0gZmxvYXQgdGltZTtcXG4gIHVuaWZvcm0gc2FtcGxlcjJEIG1hcDtcXG4gIHVuaWZvcm0gdmVjMiByZXNvbHV0aW9uO1xcblxcbiAgLy9jbHViYmVyXFxuICB1bmlmb3JtIHZlYzQgaU11c2ljMTtcXG4gIHVuaWZvcm0gdmVjNCBpTXVzaWMyO1xcbiAgdW5pZm9ybSB2ZWM0IGlNdXNpYzM7XFxuXFxuICB2YXJ5aW5nIHZlYzIgdlV2O1xcblxcbiAgLy9jb25zdGFudHNcXG5cXG4gICNkZWZpbmUgR0FNTUEgMS4wXFxuXFxuICAjZGVmaW5lIFBJIDMuMTQxNTkyNjUzNTg5NzlcXG5cXG4gICNkZWZpbmUgQkFTRV9DT0wgdmVjMygxLiwgMS4sIDEuKVxcblxcbiAgI2RlZmluZSBCTEFDSyB2ZWMzKDAuLCAwLiwgMC4pXFxuXFxuICAjZGVmaW5lIFdISVRFIHZlYzMoMS4sIDEuLCAxLilcXG5cXG4gIC8vZ2V0IHRleGVsXFxuICAjZGVmaW5lIHR4KCBtYXAsIHV2LCBsb2QpICh0ZXh0dXJlMkQoIG1hcCwgdXYsIGxvZCkgKVxcblxcbiAgLy9nZXQgbHVtYSBmcm9tIHRleGVsXFxuICAjZGVmaW5lIGx1bWEoIHQgKSAoIDAuMjEyNip0LnggKyAwLjcxNTIqdC55ICsgMC4wNzIyKnQueiApXFxuXFxuICAvL3Nob3J0IGZvciB2ZWMyIHJlc29sdXRpb25cXG4gICNkZWZpbmUgcmVzIHJlc29sdXRpb24ueHlcXG5cXG4gIC8vaXEgcmFuZG9tIHN0dWZmXFxuXFxuICBtYXQyIHJvdDJkKGZsb2F0IGFuZ2xlKXtcXG4gICAgICByZXR1cm4gbWF0Mihjb3MoYW5nbGUpLC1zaW4oYW5nbGUpLHNpbihhbmdsZSksY29zKGFuZ2xlKSk7XFxuICB9XFxuXFxuICBmbG9hdCByKGZsb2F0IGEsIGZsb2F0IGIpe3JldHVybiBmcmFjdChzaW4oZG90KHZlYzIoYSxiKSx2ZWMyKDEyLjk4OTgsNzguMjMzKSkpKjQzNzU4LjU0NTMpO31cXG5cXG4gIGZsb2F0IGgoZmxvYXQgYSl7cmV0dXJuIGZyYWN0KHNpbihkb3QoYSxkb3QoMTIuOTg5OCw3OC4yMzMpKSkqNDM3NTguNTQ1Myk7fVxcblxcbiAgZmxvYXQgbm9pc2UodmVjMyB4KXtcXG4gICAgICB2ZWMzIHAgID0gZmxvb3IoeCk7XFxuICAgICAgdmVjMyBmICA9IGZyYWN0KHgpO1xcbiAgICAgIGYgICAgICAgPSBmKmYqKDMuMC0yLjAqZik7XFxuICAgICAgZmxvYXQgbiA9IHAueCArIHAueSo1Ny4wICsgMTEzLjAqcC56O1xcbiAgICAgIHJldHVybiBtaXgobWl4KG1peCggaChuKzAuMCksIGgobisxLjApLGYueCksXFxuICAgICAgICAgICAgICAgICAgICAgbWl4KCBoKG4rNTcuMCksIGgobis1OC4wKSxmLngpLGYueSksXFxuICAgICAgICAgICAgICAgICBtaXgobWl4KCBoKG4rMTEzLjApLCBoKG4rMTE0LjApLGYueCksXFxuICAgICAgICAgICAgICAgICAgICAgbWl4KCBoKG4rMTcwLjApLCBoKG4rMTcxLjApLGYueCksZi55KSxmLnopO1xcbiAgfVxcblxcbiAgLy8gaHR0cDovL3d3dy5pcXVpbGV6bGVzLm9yZy93d3cvYXJ0aWNsZXMvbW9yZW5vaXNlL21vcmVub2lzZS5odG1cXG4gIC8vIGh0dHA6Ly93d3cucG91ZXQubmV0L3RvcGljLnBocD9wb3N0PTQwMTQ2OFxcblxcbiAgdmVjMyBkbm9pc2UyZih2ZWMyIHApe1xcbiAgICAgIGZsb2F0IGkgPSBmbG9vcihwLngpLCBqID0gZmxvb3IocC55KTtcXG4gICAgICBmbG9hdCB1ID0gcC54LWksIHYgPSBwLnktajtcXG4gICAgICBmbG9hdCBkdSA9IDMwLip1KnUqKHUqKHUtMi4pKzEuKTtcXG4gICAgICBmbG9hdCBkdiA9IDMwLip2KnYqKHYqKHYtMi4pKzEuKTtcXG4gICAgICB1PXUqdSp1Kih1Kih1KjYuLTE1LikrMTAuKTtcXG4gICAgICB2PXYqdip2Kih2Kih2KjYuLTE1LikrMTAuKTtcXG4gICAgICBmbG9hdCBhID0gcihpLCAgICAgaiAgICApO1xcbiAgICAgIGZsb2F0IGIgPSByKGkrMS4wLCBqICAgICk7XFxuICAgICAgZmxvYXQgYyA9IHIoaSwgICAgIGorMS4wKTtcXG4gICAgICBmbG9hdCBkID0gcihpKzEuMCwgaisxLjApO1xcbiAgICAgIGZsb2F0IGswID0gYTtcXG4gICAgICBmbG9hdCBrMSA9IGItYTtcXG4gICAgICBmbG9hdCBrMiA9IGMtYTtcXG4gICAgICBmbG9hdCBrMyA9IGEtYi1jK2Q7XFxuICAgICAgcmV0dXJuIHZlYzMoazAgKyBrMSp1ICsgazIqdiArIGszKnUqdixcXG4gICAgICAgICAgICAgICAgICBkdSooazEgKyBrMyp2KSxcXG4gICAgICAgICAgICAgICAgICBkdiooazIgKyBrMyp1KSk7XFxuICB9XFxuXFxuICBmbG9hdCBmYm0odmVjMiB1diwgZmxvYXQgdGltZSl7XFxuICAgICAgdmVjMiBwID0gdXY7XFxuICAgICAgZmxvYXQgZiwgZHgsIGR6LCB3ID0gMC41O1xcbiAgICAgIGYgPSBkeCA9IGR6ID0gMC4wO1xcbiAgICAgIGZvcihpbnQgaSA9IDA7IGkgPCAyODsgKytpKXtcXG4gICAgICAgICAgdmVjMyBuID0gZG5vaXNlMmYodXYpO1xcbiAgICAgICAgICBkeCArPSBuLnk7XFxuICAgICAgICAgIGR6ICs9IG4uejtcXG4gICAgICAgICAgZiArPSB3ICogbi54IC8gKDEuMCArIGR4KmR4ICsgZHoqZHopO1xcbiAgICAgICAgICB3ICo9IDAuODY7XFxuICAgICAgICAgIHV2ICo9IHZlYzIoMS4xNik7XFxuICAgICAgICAgIHV2ICo9IHJvdDJkKDEuMjUqbm9pc2UodmVjMyhwKjAuMSwgMC4xMip0aW1lKSkrXFxuICAgICAgICAgICAgICAgICAgICAgIDAuNzUqbm9pc2UodmVjMyhwKjAuMSwgMC4yMCp0aW1lKSkpO1xcbiAgICAgIH1cXG4gICAgICByZXR1cm4gZjtcXG4gIH1cXG5cXG4gIGZsb2F0IGZibUxvdyh2ZWMyIHV2KXtcXG4gICAgICBmbG9hdCBmLCBkeCwgZHosIHcgPSAwLjU7XFxuICAgICAgZiA9IGR4ID0gZHogPSAwLjA7XFxuICAgICAgZm9yKGludCBpID0gMDsgaSA8IDQ7ICsraSl7XFxuICAgICAgICAgIHZlYzMgbiA9IGRub2lzZTJmKHV2KTtcXG4gICAgICAgICAgZHggKz0gbi55O1xcbiAgICAgICAgICBkeiArPSBuLno7XFxuICAgICAgICAgIGYgKz0gdyAqIG4ueCAvICgxLjAgKyBkeCpkeCArIGR6KmR6KTtcXG4gICAgICAgICAgdyAqPSAwLjc1O1xcbiAgICAgICAgICB1diAqPSB2ZWMyKDEuNSk7XFxuICAgICAgfVxcbiAgICAgIHJldHVybiBmO1xcbiAgfVxcblxcbiAgLy9lbmQgaXFcXG5cXG4gIGZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQsIGZsb2F0IHZhbHVlKSB7XFxuICAgICAgZmxvYXQgYWZ3aWR0aCA9IDAuOTUgKiBsZW5ndGgoIHZlYzIoZEZkeCh2YWx1ZSksIGRGZHkodmFsdWUpKSApO1xcbiAgICAgIHJldHVybiBzbW9vdGhzdGVwKCB0aHJlc2hvbGQtYWZ3aWR0aCwgdGhyZXNob2xkK2Fmd2lkdGgsIHZhbHVlKTtcXG4gIH1cXG5cXG4gIC8vZ2V0IHRleGVsXFxuICB2ZWM0IHRleChzYW1wbGVyMkQgbWFwLCB2ZWMyIHV2LCBmbG9hdCBsb2QpXFxuICB7XFxuICAgICAgdmVjNCBlPSBzbW9vdGhzdGVwKCB2ZWM0KC0wLjE1KSwgdmVjNCguMTUpLCB2ZWM0KHV2LCB2ZWMyKDEpLXV2KSApIDtcXG4gICAgICBmbG9hdCBtYXNrPWUueCplLnkqZS56KmUudztcXG4gICAgICByZXR1cm4gdHgobWFwLCB1diwgbG9kKSAqIG1hc2s7XFxuICB9XFxuXFxuICAvL3JvdGF0aW9uXFxuICB2ZWMyIHJvdCh2ZWMyIHZlYywgZmxvYXQgYW5nbGUpIHtcXG4gICAgICBmbG9hdCBjLCBzIDtcXG4gICAgICBzID0gc2luKGFuZ2xlKTtcXG4gICAgICBjID0gY29zKGFuZ2xlKTtcXG4gICAgICByZXR1cm4gbWF0MihjLCBzLCAtcywgYykgKiB2ZWM7XFxuICB9XFxuXFxuICAvLyBNQUlOXFxuXFxuICB2b2lkIG1haW4oKXtcXG5cXG4gICAgIHZlYzIgdXYgPSB2VXY7XFxuICAgICB2ZWMzIGNvbDtcXG4gICAgIGZsb2F0IHQgPSB0aW1lICogLjAwNTtcXG5cXG4gICAgLy9nZXQgcHhcXG4gICAgIHZlYzQgdGV4ZWwgPSB0ZXgobWFwLCB1diwgMTAuKTtcXG5cXG4gICAgIC8vZ2V0IGx1bWFcXG4gICAgIGZsb2F0IGx1bSA9IGx1bWEoIHRleGVsICk7XFxuXFxuICAgICAgLy8wICogTW9zdCBwb3dlcmZ1bCBub3RlIGluZGV4XFxuICAgICAgLy8xICAgTGVhc3QgcG93ZXJmdWxsIG5vdGUgaW5kZXhcXG4gICAgICAvLzIgICBQb3dlciB3ZWlnaHRlZCBub3RlIGF2ZXJhZ2VcXG4gICAgICAvLzMgKiBQb3dlciBvZiB0aGUgc3Ryb25nZXN0IG5vdGVcXG4gICAgICAvLzQgICBBdmVyYWdlIHBvd2VyIG9mIGFjdGl2ZSBub3Rlc1xcbiAgICAgIC8vNSAgIFBvd2VyIHdlaWdodGVkIGF2ZXJhZ2UgbWlkaSBpbmRleFxcbiAgICAgIC8vNiAqIFBvd2VyIHdlaWdodGVkIGF2ZXJhZ2Ugb2N0YXZlIGluZGV4XFxuICAgICAgLy83ICAgUmF0aW8gb2Ygc3BlY3RydW0gd2luZG93IGFyZWEgY292ZXJlZFxcbiAgICAgIC8vOCAgIEFkYXB0aXZlIGxvdyB0aHJlc2hvbGQgcmVsYXRpdmUgdG8gYm91bmRzXFxuICAgICAgLy85ICAgQWRhcHRpdmUgaGlnaCB0aHJlc2hvbGQgcmVsYXRpdmUgdG8gYm91bmRzXFxuXFxuICAgICAvL2lNdXNpYzE6IDEtMzJoeiwgdGVtcGwuNDU2MCAgLSB4eXp3XFxuICAgICAvL2lNdXNpYzI6IDMyLTQ4aHosIHRlbXBsLjQ1NjAgLSB4eXp3XFxuICAgICAvL2lNdXNpYzM6IDQ4LTk2aHosIHRlbXBsLjAxMjQgLSB4eXp3XFxuXFxuICAgICAvL2NsdWJiZXIgbW9kc1xcbiAgICAgZmxvYXQgbTAgPSAxLjAgKiBtaXgoIGlNdXNpYzEudyppTXVzaWMyLnksIGlNdXNpYzMueiwgaU11c2ljMy53KTtcXG4gICAgIGZsb2F0IG0xID0gbWl4KCBpTXVzaWMxLngsIGlNdXNpYzEueSwgdGltZSAqIC4wNSk7XFxuICAgICBmbG9hdCBtMiA9IG1peCggaU11c2ljMS54LCBpTXVzaWMyLnksIHRpbWUgKiAuMTUpO1xcblxcbiAgICAgLy9ub2lzZVxcbiAgICAgLy9mbG9hdCBuID0gZmJtKCB1dip2ZWMyKCAuMzUsIG0xKm0wICksIHRpbWUgKiAuMDUpO1xcbiAgICAgZmxvYXQgbiA9ICAuMDUgKiBmYm1Mb3coIHZlYzIoIHV2LngsIHV2LnkqbTIpICk7XFxuICAgICAvL24gKz0gLjA1ICogZmJtTG93KCB2ZWMyKHV2LngsIHV2LnkqbTIpICk7XFxuXFxuICAgICAvL25iOiByYWRpYW50cyAoOTDCsCA9ICBQSS8yID0gMS41NylcXG4gICAgIGZsb2F0IG1tID0gIFBJICogY29zKCB0KnQgKSA7XFxuICAgICB2ZWMyIGRpdGggPSByb3QoIGdsX0ZyYWdDb29yZC54eSwgbW0gKTtcXG5cXG4gICAgIC8vYW1wbGl0dWRlXFxuICAgICBmbG9hdCBhbXA9IG1peCggNS4sIDEuLCAoMS4gKyBuKm4pKmNvcyh0aW1lICogMC4wNTUpICk7XFxuXFxuICAgICAvL2RlbnNpdHlcXG4gICAgIGZsb2F0IGRlbnNpdHkgPSAoMzAuICsgMTUuICogc2luKCBleHAoY29zKCB0aW1lKiAuMDAxNSApKSAqIDIuKSApO1xcbiAgICAgZmxvYXQgaz0gKGRpdGgueSArIG4gKyBkaXRoLnkqbikgLyBkZW5zaXR5O1xcblxcbiAgICAgZmxvYXQgbGluZSA9IGFhc3RlcCggbW9kKCBrLCBhbXAgKSwgbHVtICkgKiBsdW07XFxuXFxuICAgICAvL291dFxcbiAgICAgZmxvYXQgYyA9ICAxLiAtIHBvdyggbGluZSAsIEdBTU1BICk7XFxuXFxuICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KCB2ZWMzKGMpLCAxLjApO1xcblxcbiAgfVxcblwiXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc2hhZGVycy9zaGVwYXJkLWZzLmdsc2xcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=')},function(module,exports){eval('module.exports = "varying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n    vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\\n"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hhZGVycy9zaGVwYXJkLXZzLmdsc2w/YjJmZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtQ0FBbUMsaUJBQWlCLGVBQWUsK0RBQStELCtFQUErRSxHQUFHIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcInZhcnlpbmcgdmVjMiB2VXY7XFxuXFxudm9pZCBtYWluKCkge1xcbiAgICB2VXYgPSB1djtcXG4gICAgdmVjNCB3b3JsZFBvc2l0aW9uID0gbW9kZWxNYXRyaXggKiB2ZWM0KCBwb3NpdGlvbiwgMS4wICk7XFxuICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld01hdHJpeCAqIHZlYzQoIHBvc2l0aW9uLCAxLjAgKTtcXG59XFxuXCJcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9zaGFkZXJzL3NoZXBhcmQtdnMuZ2xzbFxuLy8gbW9kdWxlIGlkID0gMjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==')},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === "undefined") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName("head")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== "undefined" && DEBUG) {\n\t\tif(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === "undefined") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === "undefined") options.insertAt = "bottom";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === "top") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === "bottom") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error("Invalid value for parameter \'insertAt\'. Must be \'top\' or \'bottom\'.");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement("style");\n\tstyleElement.type = "text/css";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement("link");\n\tlinkElement.rel = "stylesheet";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === "function" &&\n\t\ttypeof URL.createObjectURL === "function" &&\n\t\ttypeof URL.revokeObjectURL === "function" &&\n\t\ttypeof Blob === "function" &&\n\t\ttypeof btoa === "function") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join(\'\\n\');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? "" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute("media", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";\n\t}\n\n\tvar blob = new Blob([css], { type: "text/css" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(3);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(21)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL3N0eWxlLmNzcz8yMWFhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3N0eWxlLmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9zdHlsZS5jc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Nzcy9zdHlsZS5jc3Ncbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval("var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(18);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3RpbWVycy1icm93c2VyaWZ5L21haW4uanM/YjA4OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbCh3aW5kb3csIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuZXhwb3J0cy5zZXRJbW1lZGlhdGUgPSBzZXRJbW1lZGlhdGU7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gY2xlYXJJbW1lZGlhdGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(t,e,l){l(1),t.exports=l(2)}]);